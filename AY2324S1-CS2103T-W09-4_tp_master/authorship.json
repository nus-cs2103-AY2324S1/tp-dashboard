[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W09-4/tp/actions)","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"# JABPro","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"![ui image](https://raw.githubusercontent.com/ScarletBlanks/tp/master/docs/images/Ui.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"# Table of Contents","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"## Features","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"Search Job Applicants","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"Add Contact Information","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"Add Optional Comments","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"List All Candidate Information","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"Delete an Entry","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"Set Applicant Status","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"Add GitHub/LinkedIn Username for a Candidate","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"Open User LinkedIn or Github Account","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"### Applicant Management","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"JABPro allows you to efficiently search and manage job applicants based on various criteria. You can search for applicants by name, email, phone number, and status. Additionally, you can combine multiple search categories to narrow down your results.","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"### Command Types","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"Search Job Applicants : Use Search categories to narrow down results","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"Add Contact Information : You can add contact information for job applicants, including their name, email, and phone number. This feature helps you keep track of applicant details.","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"Add Optional Comments : allows you to add optional comments or notes to a candidate\u0027s profile. These comments can be tagged with the candidate\u0027s details and provide additional information or insights about the applicant.","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"List All Candidate Information : You can retrieve a comprehensive list of all job applicants and their relevant information, such as name, email, and phone number. This feature makes it easy to review and manage candidate profiles.","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"Delete an Entry : If needed, you can remove a candidate\u0027s profile from the system. This feature helps you maintain an up-to-date database of applicants","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"Set Applicant Status : You can set the application status for each candidate, including options like \"Preliminary,\" \"Interviewed,\" \"Rejected,\" and \"Offered.\" This feature helps you track the progress of each applicant.","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"Add Github/LinkedIn Username for a Candidate : JASMS allows you to add the candidate\u0027s social profile usernames (Github or LinkedIn) to their existing contact details. This feature helps you link to their online profiles for further evaluation.","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"Open User LinkedIn or Github Account : You can quickly access a candidate\u0027s LinkedIn or Github profile directly from JABPro. This feature provides easy access to additional information about the applicant.","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"Visit our website for more details!","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"(https://github.com/AY2324S1-CS2103T-W09-4/tp)","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ScarletBlanks":52}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"run {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"    archiveFileName \u003d \u0027jabpro.jar\u0027","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AriellaCallista":4,"MadLamprey":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"You can reach us at the email `e0958427[at]comp.nus.edu.sg`","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"### Sean Koh Hak Guan","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"\u003cimg src\u003d\"images/sk2001git.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"[[github](https://github.com/sk2001git)]","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"* Role: Developer","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"* Responsibilities: Deliverables \u0026 Deadlines, Integration","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"* In charge of: Storage","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"### Ariella Thirza Callista","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"\u003cimg src\u003d\"images/ariellacallista.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"[[github](http://github.com/AriellaCallista)]","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"* In charge of: Model, UI","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"### Misra Aditya","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"\u003cimg src\u003d\"images/madlamprey.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"[[github](http://github.com/MadLamprey)]","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"* In charge of: Test cases and coverage","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"### Catherine Liang","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"\u003cimg src\u003d\"images/ketweeen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"[[github](http://github.com/ketweeen)]","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"* In charge of: Commons","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"### Goh Peng Tat","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"\u003cimg src\u003d\"images/scarletblanks.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"[[github](http://github.com/ScarletBlanks)]","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"* In charge of: Logic","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"sk2001git":31,"-":39}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"# JABPro Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"This is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org). ","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"MadLamprey"},"content":"### LinkedIn/Github feature","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"The LinkedIn/Github feature consists of two parts - adding the linkedin/github username to the candidate\u0027s data, and viewing the profile. ","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"The addition is performed by the `AddLCommand` and `AddGCommand` classes. They extend `Command` and override the `execute()` method to add the username to the candidate\u0027s existing details. ","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"It involves the command `AddLCommand` and `AddGCommand` classes, and their corresponding parsers `AddLCommandParser` and `AddGCommandParser`, that take in user input and return either `AddLCommand` or `AddGCommand` objects.","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"MadLamprey"},"content":"When executed, `AddLCommand` and `AddGCommand` find the person at the specified index in the list, and adds either their linkedin or github username to the `LinkedIn` or `Github` class associated with that `Person`. The list is then updated, and a `CommandResult` object is returned.","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"The viewing is performed by the `LinkedInCommand` and `GithubCommand` classes. They extend `Command` and override the `execute()` method to redirect the user to the candidate\u0027s LinkedIn or Github profile on the browser.","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"It involves the command `LinkedInCommand` and `GithubCommand` classes, and their corresponding parsers `LinkedInCommandParser` and `GithubCommandParser`, that take in user input and return either `LinkedInCommand` or `GithubCommand` objects.","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"When executed, `LinkedInCommand` and `GithubCommand` append the username of the person to the base URLs for LinkedIn and Github, and open the URL in the browser.","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"Given below is an example usage scenario and how the linkedin and github feature behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"Step 1. The user launches the application. `JABPro` will be initialized with the current saved state","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"MadLamprey"},"content":"User should see the UI as shown below.","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"MadLamprey"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"Step 2. The user wants to add the LinkedIn username to the first person in the list. The user enters the command `addL 1 u/alexyeoh` to add the username to the candidate\u0027s existing details.","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"The following sequence diagram shows how the AddL and AddG operations work:","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"\u003cpuml src\u003d\"diagrams/AddLSequenceDiagram.puml\" alt\u003d\"AddLSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"\u003cpuml src\u003d\"diagram/AddGSequenceDiagram.puml\" alt\u003d\"AddGSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"MadLamprey"},"content":"User should see the UI as shown below after entering `addL 1 u/alexyeoh`","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"MadLamprey"},"content":"![AddL](images/addLState.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"MadLamprey"},"content":"Step 3. The user can then view the linkedin profile for the candidate at index 1. The user enters the command `linkedin 1`.","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"MadLamprey"},"content":"User should see the UI asa shown below after entering `linkedin 1`","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"MadLamprey"},"content":"![LinkedIn](images/linkedinState.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"MadLamprey"},"content":"Alternatives considered","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"MadLamprey"},"content":"Alternative 1 (Chosen): ","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"MadLamprey"},"content":"`LinkedIn` and `Github` are attributes of a `Person` that can be added using the `AddLCommand` and `AddGCommand` and are initially provided with default string values when a Person is initialised.","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"MadLamprey"},"content":"Pros: There may be candidates who do not provide their LinkedIn or Github profiles as part of their application.","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"MadLamprey"},"content":"Cons: Person is always initialised with empty values for LinkedIn and Github, and those values would have to be manually set using the commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"MadLamprey"},"content":"Alternative 2:","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"MadLamprey"},"content":"`LinkedIn` and `Github`, like all other attributes of `Person`, are required to be non null.","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"MadLamprey"},"content":"Pros: These details will be provided at the time of addition of a new Person, without having to add them later separately.","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"Cons: It limits the scope for candidates that do not possess a LinkedIn or Github account.","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"MadLamprey"},"content":"Alternative 3:","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"MadLamprey"},"content":"`LinkedIn` and `Github` are attributes of `Person` but are allowed to be null.","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"MadLamprey"},"content":"Pros: This accounts for candidates that do not have those social profiles, and allows for their addition at the time of Person creation","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"MadLamprey"},"content":"Cons: With defensive programming in mind, not the best approach having to deal with null values.","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"AriellaCallista"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"sk2001git"},"content":"### View feature","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"sk2001git"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"sk2001git"},"content":"The view feature is implemented using the `ViewCommand` class. It extends `Command` and overrides the `execute()` method to display the person\u0027s details in full in a new window.","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"sk2001git"},"content":"Like every other command class, it involves a command `ViewCommand` class and a parser `ViewCommandParser`. `ViewCommand Parser` takes in the user input and returns a `ViewCommand` object.    ","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"sk2001git"},"content":"  ","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"sk2001git"},"content":"When executed, `ViewCommand` saves the index of the person to be viewed as `LastViewedPersonIndex` in the `Model` and returns a `CommandResult` object with `isView` property being true.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"sk2001git"},"content":"By having a `isView` property in `CommandResult`, the `MainWindow` component is able to toggle the `UI` to the view the person of the `LastViewedPersonIndex` after the command has been executed.","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"sk2001git"},"content":"Given below is an example usage scenario and how the view feature behaves at each step.","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"sk2001git"},"content":"Step 1. The user launches the application. The `AddressBook` will be initialized with the current saved address book state","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"sk2001git"},"content":"User should see the UI as shown below.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"sk2001git"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"sk2001git"},"content":"Step 2. The user wants to see the full information displayed for the first person in the displayed list. The user enters the command `view 1` to view the first person in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"sk2001git"},"content":"The following sequence diagram shows how the view operation works:","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"sk2001git"},"content":"\u003cpuml src\u003d\"diagrams/ViewSequenceDiagram.puml\" alt\u003d\"ViewSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"sk2001git"},"content":"**Note:** The lifeline for `RemarkCommand` and `RemarkCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"sk2001git"},"content":"User should see the UI as shown below after entering `View 1`  ","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"sk2001git"},"content":"![View](images/viewState.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"sk2001git"},"content":"Step 3. The user can then read or process the information stored for the viewed person.","lastModifiedDate":"2023-10-25"},{"lineNumber":272,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"sk2001git"},"content":"**Note:** The view command can be most effectively used with `search` and `list`. Since the view index is dependent on the Index on the filtered list shown, the user can view the profile after filtering for specific properties in a person using `search` and sorting them using `list`.","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"sk2001git"},"content":"Alternatives considered","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"sk2001git"},"content":"Alternative 1 (Chosen):   ","lastModifiedDate":"2023-10-25"},{"lineNumber":280,"author":{"gitId":"sk2001git"},"content":"The view feature is implemented using the `ViewCommand` class. It extends `Command` and overrides the `execute()` method to display the person\u0027s details in full in a new window.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"sk2001git"},"content":"Pros: Follows the Software Design Patterns of Command. This is the same pattern used for all other commands thus creating consistency.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"sk2001git"},"content":"Cons: Tougher to implement since other commands do not have the ability to trigger the `ViewCommand` in their execution.  That is we specifically need to set the isView property to true if we want the `ViewCommand` to occur simultaneously with another command.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"sk2001git"},"content":"Alternative 2 (Not Chosen):  ","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"sk2001git"},"content":"The view feature is implemented using the `ViewCommand` class. It extends `Command` and overrides the `execute()` method to display the person\u0027s details in full in a new window.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"sk2001git"},"content":"Commands that involved viewing will extend `ViewCommand` instead of the `Command` class. All of them are returned as `ViewCommand` to ensure toggling of the UI after command is executed.    ","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":290,"author":{"gitId":"sk2001git"},"content":"Pros: Arguably a more OOP approach since all commands that trigger view IS-A `ViewCommand`.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"sk2001git"},"content":"Cons: You cannot implement any command that does not involve viewing but inherits from any command that is a children of `ViewCommand`.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":293,"author":{"gitId":"sk2001git"},"content":"An example could be trying to create identical commands that does not toggle the UI after execution. This would require duplication of the exact same command code but inheriting from `Command` instead of `ViewCommand`.","lastModifiedDate":"2023-10-25"},{"lineNumber":294,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":295,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"AriellaCallista"},"content":"### Search feature","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"AriellaCallista"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"AriellaCallista"},"content":"The search feature is implemented using the `SearchCommand` class. It extends `Command` and overrides the `execute()` method to","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"AriellaCallista"},"content":"filter users by the specified parameters.","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"AriellaCallista"},"content":"The search parameters from the user input are parsed using the parse method in the `SearchCommandParser` class. `SearchCommandParser::Parse`","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"AriellaCallista"},"content":"takes in the search parameters from the user input and combines them into a list of predicates. This list of predicates is then ","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"AriellaCallista"},"content":"passed as an argument to the `SearchCommand` constructor and the method returns a `SearchCommand` instance with the associated list of predicates.","lastModifiedDate":"2023-10-27"},{"lineNumber":306,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":307,"author":{"gitId":"AriellaCallista"},"content":"Currently, the search parameters could belong to any of the three following categories: `Name`, `Status`, and `Tag`. Prefixes","lastModifiedDate":"2023-10-27"},{"lineNumber":308,"author":{"gitId":"AriellaCallista"},"content":"`n/`, `st/` and `t/` are used to denote the category of the search parameters respectively. E.g. `search n/alex st/interviewed t/swe`","lastModifiedDate":"2023-10-27"},{"lineNumber":309,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":310,"author":{"gitId":"AriellaCallista"},"content":"The list of predicates is a list comprising predicate objects whose classes implement the `Predicate` class in Java.","lastModifiedDate":"2023-10-27"},{"lineNumber":311,"author":{"gitId":"AriellaCallista"},"content":"Each category has its own predicate class i.e. `NameContainsKeywordPredicate`, `StatusContainsKeywordPredicate`, `TagContainsKeywordPredicate`","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"AriellaCallista"},"content":"and each class overrides the `test` method which returns true if the persons list contains any of the given names/status/tags.","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"AriellaCallista"},"content":"Finally, the execute method in `SearchCommand` class invokes the `updateFilteredPersonList(predicatesList)` which will ","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"AriellaCallista"},"content":"update the list of persons displayed.","lastModifiedDate":"2023-10-27"},{"lineNumber":316,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":317,"author":{"gitId":"AriellaCallista"},"content":"Given below is an example usage scenario and how the search mechanism behaves at each step.","lastModifiedDate":"2023-10-27"},{"lineNumber":318,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":319,"author":{"gitId":"AriellaCallista"},"content":"Step 1. The user launches the application.","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":321,"author":{"gitId":"AriellaCallista"},"content":"Step 2. The user executes `search n/john st/offered t/swe` command to filter candidates having the name john,","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"AriellaCallista"},"content":"offered status and tagged as swe. ","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"AriellaCallista"},"content":"The following sequence diagram shows how the search operation works:","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"AriellaCallista"},"content":"**Note:** The lifeline for `SearchCommand` and `SearchCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"AriellaCallista"},"content":"\u003cpuml src\u003d\"diagrams/SearchSequenceDiagram.puml\" alt\u003d\"SearchSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"AriellaCallista"},"content":"Step 3. The user should see the UI below upon entering `search n/john st/interviewed t/friends`.","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"AriellaCallista"},"content":"![View](images/search.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"AriellaCallista"},"content":"**Note:** The current implementation of search allows users to search by any of the categories individually or by different combinations of the categories.","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"AriellaCallista"},"content":"It also allows users to specify more than one search parameter for each category e.g. `search n/alex bernice`","lastModifiedDate":"2023-10-27"},{"lineNumber":336,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":367,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":374,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":377,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"sk2001git"},"content":"* has a need to manage a significant number of candidates contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":450,"author":{"gitId":"sk2001git"},"content":"* wants to view and manage candidates information in a single place","lastModifiedDate":"2023-10-04"},{"lineNumber":451,"author":{"gitId":"sk2001git"},"content":"* wants to filter and sort candidates based on their skills, experience, or application date","lastModifiedDate":"2023-10-04"},{"lineNumber":452,"author":{"gitId":"sk2001git"},"content":"* wants to compare candidates using their information","lastModifiedDate":"2023-10-04"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":456,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"sk2001git"},"content":"**Value proposition**:","lastModifiedDate":"2023-10-04"},{"lineNumber":459,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":460,"author":{"gitId":"sk2001git"},"content":"JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-04"},{"lineNumber":461,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":462,"author":{"gitId":"sk2001git"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc.","lastModifiedDate":"2023-10-04"},{"lineNumber":463,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":464,"author":{"gitId":"sk2001git"},"content":"It serves as a one-stop addressbook for managing job applications.","lastModifiedDate":"2023-10-04"},{"lineNumber":465,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":466,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                                                                                                                  | So that I can…​                                                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"sk2001git"},"content":"|---------|------------------|-------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-04"},{"lineNumber":475,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | add a candidate\u0027s contact information, including name, email, phone number                                                    | I can easily access and reach out to candidates when needed                                              |","lastModifiedDate":"2023-10-04"},{"lineNumber":476,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | add notes and comments to candidate profiles to document interview feedback and impressions                                   | I can maintain a record of interactions and feedback                                                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":477,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | delete job applicants information                                                                                             | I can remove redundant/unecessary data bloat and also to abide to privacy laws                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":478,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | view a specific job applicant\u0027s resume or portfolio                                                                           | I can check whether they meet the requirements requested by other department heads                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":479,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | search for all job applicants that have a particular skill mentioned in their application                                     | I can find suitable candidates for a project                                                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":480,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | List all candidate\u0027s information                                                                                              | I can easily view each candidates information                                                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":481,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | update the application status for a candidate (e.g. \"Interviewed\", \"Rejected\", \"Offered\")                                     | I can keep track of each candidate\u0027s progress in the hiring process                                      |","lastModifiedDate":"2023-10-04"},{"lineNumber":482,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | filter candidates based on their skills, experience, or application date                                                      | I can efficiently evaluate compare candidates                                                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":483,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | compare candidates that I am handling using the information i have stored such as that comparing CAP, Years of experience etc | so that I can choose the best candidates to the next stage of the hiring process                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":484,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | collate job applicants who were rejected but have potential for other positions in the company                                | I can forward this data to other departments who might need it                                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":485,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | collate job applicants who were offered the job and accepted it as well as deleting their details from JABPro                 | I can send this data to the HR department that manages existing employees                                |","lastModifiedDate":"2023-10-04"},{"lineNumber":486,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | collate job applicants who were offered the job but rejected it                                                               | I can contact them to ask why they rejected the offer and get feedback                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":487,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | add candidates key features into a multi-formatted form                                                                       | I can have a visual way to objectively view a candidates skills and information                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":488,"author":{"gitId":"sk2001git"},"content":"| `*` | Hiring Manager   | easily get summary statistics such as total offers given out, rejections, cost associated with total offers                   | I can have a summary overview without going into each candidate data specifically                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":489,"author":{"gitId":"sk2001git"},"content":"| `*` | Hiring Manager   | get data on which positions are lacking job applicants                                                                        | I can update the external recruitment team to focus on head hunting applicants for these roles           |","lastModifiedDate":"2023-10-04"},{"lineNumber":490,"author":{"gitId":"sk2001git"},"content":"| `*` | Hiring Manager   | get data on which positions already have too many applicants                                                                  | I can forward this to the department heads to see if they still want to keep the job posting or close it |","lastModifiedDate":"2023-10-04"},{"lineNumber":491,"author":{"gitId":"sk2001git"},"content":"| `*` | Hiring Manager   | get a visual alert or a section to display urgent task                                                                        | I can stay organized and ensure that remain up to date and on task with the hiring process               |","lastModifiedDate":"2023-10-04"},{"lineNumber":492,"author":{"gitId":"ScarletBlanks"},"content":"| `*` | Hiring Manager   | export candidate information and application data to a spreadsheet        \u003cbr/\u003e                                               | I can perform further analysis using alternate tools on candidate data                                   |","lastModifiedDate":"2023-10-26"},{"lineNumber":493,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"AriellaCallista"},"content":"(For all use cases below, the **System** is the `JABPro` and the **Actor** is the `hiring manager`, unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"ketweeen"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-10-06"},{"lineNumber":500,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":501,"author":{"gitId":"sk2001git"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":502,"author":{"gitId":"ketweeen"},"content":"1. User requests to add a person.","lastModifiedDate":"2023-10-06"},{"lineNumber":503,"author":{"gitId":"ketweeen"},"content":"2. JABPro shows that command has been executed successfully.","lastModifiedDate":"2023-10-06"},{"lineNumber":504,"author":{"gitId":"ketweeen"},"content":"3. JABPro adds the person to the list of persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":505,"author":{"gitId":"sk2001git"},"content":"4. JABPro shows the person added at the end of the list of persons.   ","lastModifiedDate":"2023-10-26"},{"lineNumber":506,"author":{"gitId":"sk2001git"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":507,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":508,"author":{"gitId":"sk2001git"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":509,"author":{"gitId":"ketweeen"},"content":"* 2a. User does not provide the correct information for a person to be added.","lastModifiedDate":"2023-10-06"},{"lineNumber":510,"author":{"gitId":"ketweeen"},"content":"    * 2a1. JABPro shows an error message and provides course of action for remedy.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":511,"author":{"gitId":"ketweeen"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":512,"author":{"gitId":"ketweeen"},"content":"* 2b. User has already been added to the list of persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":513,"author":{"gitId":"ketweeen"},"content":"    * 2b1. JABPro shows an error message and provides course of action for remedy.   ","lastModifiedDate":"2023-10-06"},{"lineNumber":514,"author":{"gitId":"ketweeen"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":515,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":516,"author":{"gitId":"ketweeen"},"content":"**Use case: Add a remark to a person**","lastModifiedDate":"2023-10-06"},{"lineNumber":517,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":518,"author":{"gitId":"sk2001git"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":519,"author":{"gitId":"ketweeen"},"content":"1. User requests to add a remark to a person.","lastModifiedDate":"2023-10-06"},{"lineNumber":520,"author":{"gitId":"ketweeen"},"content":"2. JABPro shows that command has been executed successfully.","lastModifiedDate":"2023-10-06"},{"lineNumber":521,"author":{"gitId":"ketweeen"},"content":"3. JABPro adds the remark to the person.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":522,"author":{"gitId":"ketweeen"},"content":"Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":523,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":524,"author":{"gitId":"sk2001git"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":525,"author":{"gitId":"ketweeen"},"content":"* 2a. User provides invalid index.","lastModifiedDate":"2023-10-06"},{"lineNumber":526,"author":{"gitId":"ketweeen"},"content":"    * 2a1. JABPro shows an error message and provides course of action for remedy.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":527,"author":{"gitId":"ketweeen"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":528,"author":{"gitId":"ketweeen"},"content":"* 2b. User does not provide a remark.","lastModifiedDate":"2023-10-06"},{"lineNumber":529,"author":{"gitId":"ketweeen"},"content":"    * 2b1. JABPro adds an empty remark to the person, remark no longer seen.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":530,"author":{"gitId":"ketweeen"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":531,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":532,"author":{"gitId":"ketweeen"},"content":"**Use case: List all persons**","lastModifiedDate":"2023-10-06"},{"lineNumber":533,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":534,"author":{"gitId":"AriellaCallista"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":535,"author":{"gitId":"ketweeen"},"content":"1. User  requests to view a list of all persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":536,"author":{"gitId":"ketweeen"},"content":"2. JABPro retrieves the list of all persons from the database.","lastModifiedDate":"2023-10-06"},{"lineNumber":537,"author":{"gitId":"ketweeen"},"content":"3. JABPro displays the list of all persons to the user.","lastModifiedDate":"2023-10-06"},{"lineNumber":538,"author":{"gitId":"ketweeen"},"content":"4. If the user specifies an attribute to sort by, e.g., \"s/name\" for sorting by name, the application sorts the list accordingly. If no attribute is provided, the list remains unsorted.","lastModifiedDate":"2023-10-06"},{"lineNumber":539,"author":{"gitId":"ketweeen"},"content":"5. The sorted or unsorted list is displayed to the user in ascending order based on the specified attribute.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":540,"author":{"gitId":"ketweeen"},"content":"Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":541,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":542,"author":{"gitId":"ketweeen"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":543,"author":{"gitId":"ketweeen"},"content":"* 2a. User provides an incorrect attribute for sorting (e.g., \"list s/phone\").","lastModifiedDate":"2023-10-06"},{"lineNumber":544,"author":{"gitId":"ketweeen"},"content":"  * 2a1. JABPro shows an error message and provides course of action for remedy.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":545,"author":{"gitId":"ketweeen"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":546,"author":{"gitId":"ketweeen"},"content":"* 2b. User attempts to list persons when there are no entries in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":547,"author":{"gitId":"ketweeen"},"content":"  * 2b1. JABPro shows a message indicating that there are no persons to display.   ","lastModifiedDate":"2023-10-06"},{"lineNumber":548,"author":{"gitId":"ketweeen"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":549,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":550,"author":{"gitId":"AriellaCallista"},"content":"**Use case: Search persons by the specified categories(name, status and/ tag)**","lastModifiedDate":"2023-10-27"},{"lineNumber":551,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":552,"author":{"gitId":"ketweeen"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":553,"author":{"gitId":"AriellaCallista"},"content":"1.  Hiring manager types in search parameters to search users by the specified categories.","lastModifiedDate":"2023-10-27"},{"lineNumber":554,"author":{"gitId":"AriellaCallista"},"content":"2.  JABPro shows a list of persons whose profile matches the given parameters.","lastModifiedDate":"2023-10-27"},{"lineNumber":555,"author":{"gitId":"AriellaCallista"},"content":"Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":556,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":557,"author":{"gitId":"AriellaCallista"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":558,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":559,"author":{"gitId":"AriellaCallista"},"content":"* 1a. The given name/status/tag parameter is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":560,"author":{"gitId":"AriellaCallista"},"content":"    * 1a1. JABPro shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":561,"author":{"gitId":"AriellaCallista"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":562,"author":{"gitId":"ketweeen"},"content":"* 2a. The list is empty. \u003cbr/\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":563,"author":{"gitId":"AriellaCallista"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":564,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":566,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"ketweeen"},"content":"1. User requests to list persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":570,"author":{"gitId":"ketweeen"},"content":"2. AddressBook shows a list of persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":571,"author":{"gitId":"ketweeen"},"content":"3. User requests to delete a specific person in the list by providing either the person\u0027s index or tags.","lastModifiedDate":"2023-10-27"},{"lineNumber":572,"author":{"gitId":"ketweeen"},"content":"4. AddressBook deletes the specified person(s).   ","lastModifiedDate":"2023-10-27"},{"lineNumber":573,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"ScarletBlanks"},"content":"    * 2a1. AddressBook displays a message indicating that the list is empty.   ","lastModifiedDate":"2023-10-05"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"ScarletBlanks"},"content":"    * 3a1. AddressBook shows an error message indicating that the specified index is invalid.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":581,"author":{"gitId":"ScarletBlanks"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":582,"author":{"gitId":"ketweeen"},"content":"* 3b. The given tags do not match any persons. ","lastModifiedDate":"2023-10-27"},{"lineNumber":583,"author":{"gitId":"ketweeen"},"content":"    * 3b1. AddressBook shows an error message indicating that no persons with the specified tags were found.  ","lastModifiedDate":"2023-10-27"},{"lineNumber":584,"author":{"gitId":"ketweeen"},"content":"    Use case resumes at step 3","lastModifiedDate":"2023-10-27"},{"lineNumber":585,"author":{"gitId":"ScarletBlanks"},"content":"* 4a. Deletion encounters an error","lastModifiedDate":"2023-10-05"},{"lineNumber":586,"author":{"gitId":"ScarletBlanks"},"content":"    * 4a1. AddressBook displays an error message indicating that the deletion process failed.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":587,"author":{"gitId":"ScarletBlanks"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":589,"author":{"gitId":"ScarletBlanks"},"content":"**Use case: Set a person\u0027s status**","lastModifiedDate":"2023-10-05"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":591,"author":{"gitId":"ScarletBlanks"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":592,"author":{"gitId":"ketweeen"},"content":"1.  User requests to list persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":593,"author":{"gitId":"ketweeen"},"content":"2.  AddressBook shows a list of persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":594,"author":{"gitId":"ketweeen"},"content":"3.  User requests to set the status of a specific person in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":595,"author":{"gitId":"ketweeen"},"content":"4.  AddressBook sets the status of that person in the list.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":598,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":599,"author":{"gitId":"ScarletBlanks"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":600,"author":{"gitId":"ScarletBlanks"},"content":"    * 2a1. AddressBook displays a message indicating that the list is empty.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":601,"author":{"gitId":"ScarletBlanks"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":602,"author":{"gitId":"ScarletBlanks"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":603,"author":{"gitId":"ScarletBlanks"},"content":"    * 3a1. AddressBook shows an error message indicating that the specified index is invalid.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":604,"author":{"gitId":"ScarletBlanks"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":605,"author":{"gitId":"ScarletBlanks"},"content":"* 3b. The given status is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":606,"author":{"gitId":"ScarletBlanks"},"content":"    * 3b1. AddressBook shows an error message indicating that the specified status is invalid.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":607,"author":{"gitId":"ScarletBlanks"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"sk2001git"},"content":"**Use case: View a person\u0027s details**","lastModifiedDate":"2023-10-25"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":611,"author":{"gitId":"sk2001git"},"content":"**MSS**","lastModifiedDate":"2023-10-25"},{"lineNumber":612,"author":{"gitId":"sk2001git"},"content":"1.  User requests to list persons.","lastModifiedDate":"2023-10-25"},{"lineNumber":613,"author":{"gitId":"sk2001git"},"content":"2.  AddressBook shows a list of persons.","lastModifiedDate":"2023-10-25"},{"lineNumber":614,"author":{"gitId":"sk2001git"},"content":"3.  User requests to view a specific person in the current displayed AddressBook.","lastModifiedDate":"2023-10-26"},{"lineNumber":615,"author":{"gitId":"sk2001git"},"content":"4.  The UI shows the details of that person.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":616,"author":{"gitId":"sk2001git"},"content":"    Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":617,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":618,"author":{"gitId":"sk2001git"},"content":"**Extensions**","lastModifiedDate":"2023-10-25"},{"lineNumber":619,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-25"},{"lineNumber":620,"author":{"gitId":"sk2001git"},"content":"    * 2a1. AddressBook displays a message indicating that the list is empty.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":621,"author":{"gitId":"sk2001git"},"content":"      Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":622,"author":{"gitId":"sk2001git"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":623,"author":{"gitId":"sk2001git"},"content":"    * 3a1. AddressBook shows an error message indicating that the specified index is invalid.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":624,"author":{"gitId":"sk2001git"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-25"},{"lineNumber":625,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":626,"author":{"gitId":"sk2001git"},"content":"* 3b. User decides to search for a person based on a criteria such as name.","lastModifiedDate":"2023-10-26"},{"lineNumber":627,"author":{"gitId":"sk2001git"},"content":"    * 3b1. Displayed AddressBook changes to match that of search result.  ","lastModifiedDate":"2023-10-26"},{"lineNumber":628,"author":{"gitId":"sk2001git"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-26"},{"lineNumber":629,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":630,"author":{"gitId":"ScarletBlanks"},"content":"**Use case: Export the current data to excel**","lastModifiedDate":"2023-10-26"},{"lineNumber":631,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":632,"author":{"gitId":"ScarletBlanks"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":633,"author":{"gitId":"ScarletBlanks"},"content":"1.  User requests to export persons.","lastModifiedDate":"2023-10-26"},{"lineNumber":634,"author":{"gitId":"ScarletBlanks"},"content":"2.  JABPro exports the list of persons to a .csv file.","lastModifiedDate":"2023-10-26"},{"lineNumber":635,"author":{"gitId":"ScarletBlanks"},"content":"    Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":636,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":637,"author":{"gitId":"ScarletBlanks"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":638,"author":{"gitId":"ScarletBlanks"},"content":"* 2a. The .csv file to edit is open","lastModifiedDate":"2023-10-26"},{"lineNumber":639,"author":{"gitId":"ScarletBlanks"},"content":"    * 2a1. AddressBook displays a message indicating that we cannot write to it as it is open.","lastModifiedDate":"2023-10-26"},{"lineNumber":640,"author":{"gitId":"ScarletBlanks"},"content":"      Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":641,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":642,"author":{"gitId":"MadLamprey"},"content":"**Use case: Add social profile to person\u0027s details**","lastModifiedDate":"2023-10-06"},{"lineNumber":643,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":644,"author":{"gitId":"MadLamprey"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":645,"author":{"gitId":"ketweeen"},"content":"1. User requests to add social profile (linkedin or github).","lastModifiedDate":"2023-10-27"},{"lineNumber":646,"author":{"gitId":"ketweeen"},"content":"2. JABPro shows that command has been executed successfully.","lastModifiedDate":"2023-10-27"},{"lineNumber":647,"author":{"gitId":"ketweeen"},"content":"3. JABPro adds the social profile to the person\u0027s existing details in the list.  ","lastModifiedDate":"2023-10-27"},{"lineNumber":648,"author":{"gitId":"MadLamprey"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":649,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":650,"author":{"gitId":"MadLamprey"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":651,"author":{"gitId":"MadLamprey"},"content":"* 2a. User does not provide valid information for the person.","lastModifiedDate":"2023-10-06"},{"lineNumber":652,"author":{"gitId":"MadLamprey"},"content":"    * 2a1. JABPro displays error message.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":653,"author":{"gitId":"MadLamprey"},"content":"      Use case resumes at Step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":654,"author":{"gitId":"MadLamprey"},"content":"* 2b. User requests to add social profile other than LinkedIn or Github","lastModifiedDate":"2023-10-06"},{"lineNumber":655,"author":{"gitId":"MadLamprey"},"content":"    * 2b1. JABPro displays error message.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":656,"author":{"gitId":"MadLamprey"},"content":"      Use case resumes at Step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":658,"author":{"gitId":"MadLamprey"},"content":"**Use case: Open social profile for a person**","lastModifiedDate":"2023-10-06"},{"lineNumber":659,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":660,"author":{"gitId":"MadLamprey"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":661,"author":{"gitId":"ketweeen"},"content":"1. User requests to open social profile for a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":662,"author":{"gitId":"ketweeen"},"content":"2. JABPro shows that command has been executed successfully.","lastModifiedDate":"2023-10-27"},{"lineNumber":663,"author":{"gitId":"ketweeen"},"content":"3. JABPro redirects to the webpage of the corresponding profile.  ","lastModifiedDate":"2023-10-27"},{"lineNumber":664,"author":{"gitId":"MadLamprey"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":665,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":666,"author":{"gitId":"MadLamprey"},"content":"**Extension**","lastModifiedDate":"2023-10-06"},{"lineNumber":667,"author":{"gitId":"MadLamprey"},"content":"* 1a. Person does not exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":668,"author":{"gitId":"MadLamprey"},"content":"    * 1a1. JABPro displays error message.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":669,"author":{"gitId":"MadLamprey"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":670,"author":{"gitId":"ketweeen"},"content":"* 1b. Social profile requested other than LinkedIn or Github.","lastModifiedDate":"2023-10-27"},{"lineNumber":671,"author":{"gitId":"MadLamprey"},"content":"    * 1b1. JABPro displays error message.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":672,"author":{"gitId":"MadLamprey"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":673,"author":{"gitId":"ketweeen"},"content":"* 3a. User does not exist on the social platform.  ","lastModifiedDate":"2023-10-27"},{"lineNumber":674,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":676,"author":{"gitId":"MadLamprey"},"content":"**Use case: Add events relating to candidates**","lastModifiedDate":"2023-10-26"},{"lineNumber":677,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":678,"author":{"gitId":"MadLamprey"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":679,"author":{"gitId":"MadLamprey"},"content":"1. User requests to add an event relating to a candidate","lastModifiedDate":"2023-10-26"},{"lineNumber":680,"author":{"gitId":"MadLamprey"},"content":"2. JABPro shows that command has been executed successfully.","lastModifiedDate":"2023-10-26"},{"lineNumber":681,"author":{"gitId":"MadLamprey"},"content":"3. JABPro adds the event to the list of events.","lastModifiedDate":"2023-10-26"},{"lineNumber":682,"author":{"gitId":"MadLamprey"},"content":"   Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":684,"author":{"gitId":"MadLamprey"},"content":"**Extension**","lastModifiedDate":"2023-10-26"},{"lineNumber":685,"author":{"gitId":"MadLamprey"},"content":"* 2a. User does not provide the correct information for an event to be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":686,"author":{"gitId":"MadLamprey"},"content":"  * 2a1. JABPro shows an error message anf provides course of action for remedy. Use case resumes at step 1.","lastModifiedDate":"2023-10-26"},{"lineNumber":687,"author":{"gitId":"MadLamprey"},"content":"* 2b. Event has already been added to the list of events.","lastModifiedDate":"2023-10-26"},{"lineNumber":688,"author":{"gitId":"MadLamprey"},"content":"  * 2b1. JABPro shows an error message and provides course of action for remedy. Use case resumes at step 1.","lastModifiedDate":"2023-10-26"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":691,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"sk2001git"},"content":"2.  Should be able to `hold up to 1000 persons` without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-04"},{"lineNumber":697,"author":{"gitId":"sk2001git"},"content":"3.  A user with above `average typing speed for regular English text` (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-04"},{"lineNumber":698,"author":{"gitId":"sk2001git"},"content":"4.  System should respond within a `reasonable amount of time` (e.g. \u003c 2 second) for typical usage (e.g. listing 1000 persons).","lastModifiedDate":"2023-10-04"},{"lineNumber":699,"author":{"gitId":"sk2001git"},"content":"5.  Should not deal with `external database` or `network connections`.","lastModifiedDate":"2023-10-04"},{"lineNumber":700,"author":{"gitId":"sk2001git"},"content":"6.  Product is expected to be used by a `single user` only.","lastModifiedDate":"2023-10-04"},{"lineNumber":701,"author":{"gitId":"sk2001git"},"content":"7.  Product is `not expected to contain API` for other software to communicate with.","lastModifiedDate":"2023-10-04"},{"lineNumber":702,"author":{"gitId":"sk2001git"},"content":"8.  Product is expected to be used in a system with at least 4GB RAM and `1GB free disk space`.","lastModifiedDate":"2023-10-04"},{"lineNumber":703,"author":{"gitId":"sk2001git"},"content":"9.  Product Visuals should be `unambiguous` and clear to the user","lastModifiedDate":"2023-10-04"},{"lineNumber":704,"author":{"gitId":"sk2001git"},"content":"10. Commands should be `easy to remember` and `intuitive` to use","lastModifiedDate":"2023-10-04"},{"lineNumber":705,"author":{"gitId":"sk2001git"},"content":"11. Product should be `consistent` in its visuals and commands formatting","lastModifiedDate":"2023-10-04"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"sk2001git"},"content":"* **Hiring Manager**: Inter-changable with users in this context","lastModifiedDate":"2023-10-04"},{"lineNumber":713,"author":{"gitId":"AriellaCallista"},"content":"* **Candidate**: Inter-changable with persons/job applicants in this context","lastModifiedDate":"2023-10-05"},{"lineNumber":714,"author":{"gitId":"sk2001git"},"content":"* **AddressBook**: Inter-changable with JABPro in this context since this is an evolve project built on-top of AB3 functionality","lastModifiedDate":"2023-10-04"},{"lineNumber":715,"author":{"gitId":"AriellaCallista"},"content":"* **Keyword**: Search parameter","lastModifiedDate":"2023-10-05"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":725,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":726,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":772,"author":{"gitId":"sk2001git"},"content":"## Adding a person while all persons are being shown ","lastModifiedDate":"2023-10-26"},{"lineNumber":773,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":774,"author":{"gitId":"sk2001git"},"content":"1. Adding a person while all persons are being shown  ","lastModifiedDate":"2023-10-26"},{"lineNumber":775,"author":{"gitId":"sk2001git"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":776,"author":{"gitId":"sk2001git"},"content":"    ","lastModifiedDate":"2023-10-26"},{"lineNumber":777,"author":{"gitId":"sk2001git"},"content":"   1. Test case:   ","lastModifiedDate":"2023-10-26"},{"lineNumber":778,"author":{"gitId":"sk2001git"},"content":"      `add n/John Poh p/98765432 e/johnpoe@gmail.com a/ 311, Clementi Ave 2, #02-25 r/ 2 years of experience in software development`  ","lastModifiedDate":"2023-10-26"},{"lineNumber":779,"author":{"gitId":"sk2001git"},"content":"   ","lastModifiedDate":"2023-10-26"},{"lineNumber":780,"author":{"gitId":"sk2001git"},"content":"      **Note**:  The current AddressBook cannot contain anyone named `John Poh`  ","lastModifiedDate":"2023-10-26"},{"lineNumber":781,"author":{"gitId":"sk2001git"},"content":"      Expected: New person is added to the list. Details of the new person shown in the status message. ","lastModifiedDate":"2023-10-26"},{"lineNumber":782,"author":{"gitId":"sk2001git"},"content":"   2. Test case:   ","lastModifiedDate":"2023-10-26"},{"lineNumber":783,"author":{"gitId":"sk2001git"},"content":"      `add n/John Poh p/98765432 e/johnpoe@gmail.com a/ 311, Clementi Ave 2, #02-25 r/ 2 years of experience in software development`  ","lastModifiedDate":"2023-10-26"},{"lineNumber":784,"author":{"gitId":"sk2001git"},"content":"      **Note**:  The current AddressBook should contain a person named `John Poh`","lastModifiedDate":"2023-10-26"},{"lineNumber":785,"author":{"gitId":"sk2001git"},"content":"      Expected: No person is added. Error details shown in the status message. List of persons remains the same.","lastModifiedDate":"2023-10-26"},{"lineNumber":786,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":787,"author":{"gitId":"sk2001git"},"content":"   ","lastModifiedDate":"2023-10-26"},{"lineNumber":788,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"sk2001git":154,"ScarletBlanks":27,"AriellaCallista":62,"ketweeen":60,"MadLamprey":108,"-":377}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"# JABPro User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"## Product Overview","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"JobApplicationsBook Pro (JABPro) is a **desktop app for hiring managers of companies to ease the management of applicants, optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, JABPro can get your applicant management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"2. Download the latest `jabpro.jar` from [here](https://github.com/AY2324S1-CS2103T-W09-4/tp/releases).","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your JabPro.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar jabpro.jar` command to run the application.\u003cbr\u003e  ","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e  ","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"5. Type the command in the command box and press Enter to execute it.\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`: adds an applicant with the specified contact details","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    * `remark 1 r/Great attitude, hardworking`: edits the remark of the 1st person on the list to have a remark `Great attitude, hardworking`","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    * `view 1`: shows the complete details of the 1st person on the list.","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"    * `search n/John`: Searches for applicants whose names contain the keyword `John`","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"    * `set` : sets the applicant status to either of: (Preliminary, Interviewed, Rejected, Offered)","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    * `add linkedin 1 alexyeoh`: Adds LinkedIn account to candidate\u0027s existing contact information","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    * `github Alex Yeoh`: Redirects the user to the Github account of the candidate [provided github has been added previously]","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"* When using parentheses ( ) with items separated by the slash symbol /, at least one item must be included. \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"  e.g in the command `search (n/KEYWORD [MORE KEYWORDS] / st/KEYWORD [MORE KEYWORDS] / t/KEYWORD [MORE KEYWORDS])`, it is necessary to specify at least one search category.","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `listT`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"### Creating tags: `create`","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"Creates a tag and categorises it to the specified category.","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"You can customize these categories as per your needs and tags will be ","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"color coded by the different categories. ","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"The only restriction is that you can only define up to 6 different categories (including the *assessment* category for score-related tags. Hence if you have","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"defined a tag category *assessment* for score-related tags, you will only be able to define 5 other categories).","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"Format: `create t/CATEGORY TAGNAME…​`","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"* CATEGORY is a MANDATORY field.","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"**Tip:** ","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"* You can create multiple tags at once!","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"* Use this command for frequently used tags for better efficiency in tagging candidates!","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"**Note:**","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"* The tags created using this command can be used to tag candidates using the `add` or `edit` command. Tagging","lastModifiedDate":"2023-11-05"},{"lineNumber":110,"author":{"gitId":"AriellaCallista"},"content":"candidates without previously categorising the tags would still work but the tags would be *uncategorised*.","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"* `create` only allows tags to be categorised at creation meaning tags that have already been created, cannot be categorised further.","lastModifiedDate":"2023-11-05"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"This feature will be supported in future iterations of JABPro through the `edit tags` command.","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"* `create t/role developer`","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"* `create t/dept software t/dept marketing`","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"An example of the `create` command in action:","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"![Create](images/create.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"Adds a person to JABPro.","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"AriellaCallista"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/[CATEGORY] TAGNAME]…​`","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"**Notes regarding the design of the `add` command:**","lastModifiedDate":"2023-11-07"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"* The uniqueness of the person is determined by the name only. This means that you cannot have 2 persons with the same name in the application book.","lastModifiedDate":"2023-11-07"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"* All other fields other than name can be identical between different people in JABPro.","lastModifiedDate":"2023-11-07"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"* `n/NAME` - `NAME` must be alphanumeric (Letters and numbers, no symbols allowed such as `/`, `,` ...)","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"* `p/PHONE_NUMBER` - `PHONE_NUMBER` must contain numbers only and should be at-least 3 digits long","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"* `e/EMAIL` - `EMAIL` must be the standard email address format (There must be an email-prefix followed by  `@` symbol and email domain)","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"sk2001git"},"content":"* `a/ADDRESS` - `ADDRESS` can be any value, including special characters such as `#`, `,` ...","lastModifiedDate":"2023-11-07"},{"lineNumber":134,"author":{"gitId":"sk2001git"},"content":"* `n/NAME`, `p/PHONE_NUMBER`, `e/EMAIL`, `a/ADDRESS` are mandatory fields.  ","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"sk2001git"},"content":"They cannot be blank and must follow the convention as mentioned above.","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"* `t/[CATEGORY] TAGNAME` - `TAGNAME` must be alphanumeric with no spaces. Any details after the space will be ignored.","lastModifiedDate":"2023-11-07"},{"lineNumber":137,"author":{"gitId":"sk2001git"},"content":"* The `t/[CATEGORY] TAGNAME` field is optional. You can add as many tags as you want, including 0 tags.","lastModifiedDate":"2023-11-07"},{"lineNumber":138,"author":{"gitId":"sk2001git"},"content":"* Persons added using the `add` command will be added to the end of the list.","lastModifiedDate":"2023-11-07"},{"lineNumber":139,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"AriellaCallista"},"content":"**Notes on adding tags:**","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"AriellaCallista"},"content":"* If you would like to tag a user with a tag that has not been categorised yet using the `create` command,","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"AriellaCallista"},"content":"you can specify the category that you would like it to be categorised to in the `add` command. e.g. `...t/role swe`","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"AriellaCallista"},"content":"* If you are using a tag that has not been categorised yet and you did not specify its category in the `add` command,","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"AriellaCallista"},"content":"the tag would still be saved but it would be \"uncategorised\" by default.","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"AriellaCallista"},"content":"* If you have multiple tags in different categories with the same name, you must specify the category when you want to ","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"AriellaCallista"},"content":"add one of these tags to the candidate you are adding.","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"AriellaCallista"},"content":"**Tip:** ","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"AriellaCallista"},"content":"* A person can have any number of tags (including 0)!","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"AriellaCallista"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/developer t/software` (note: *developer* and *software* tags have been categorised by the previous `create` command)","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"AriellaCallista"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/dept finance`","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"AriellaCallista"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/uncategorisedtag`","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"sk2001git"},"content":"Negative Examples:","lastModifiedDate":"2023-11-07"},{"lineNumber":164,"author":{"gitId":"sk2001git"},"content":"* `add n/Alex Yoh p/82384839 e/alexyeo@gmail.com a/Gardens by bay` (Name already exists in JABPro)","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":166,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"sk2001git"},"content":"### Adding a remark to a person: `remark`","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"sk2001git"},"content":"Edits a remark of an existing person in JABPro.","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"sk2001git"},"content":"Format: `remark INDEX r/REMARK`","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"sk2001git"},"content":"* Edits the remark for the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"ketweeen"},"content":"* The previous remark is not saved, and instead is replaced by the inputted remark. The command does not add to the existing remark.","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"ketweeen"},"content":"* You can empty out a remark by inputting an empty string.","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"sk2001git"},"content":"* You can get the remark previously inputted by using the **REMARK** keyword. It will be replaced with the previous remark. The keyword **REMARK** is case-sensitive. This means that `remark 1 r/**remark**` will just replace the remark with the word `**remark**`.","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"sk2001git"},"content":"* `r/` is optional, however omitting it will clear the remark of the person at that `INDEX`.","lastModifiedDate":"2023-11-07"},{"lineNumber":178,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"sk2001git"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"ketweeen"},"content":"*  `remark 1 r/Great attitude, hardworking` Edits the remark of the 1st person on the list to have a remark `Great attitude, hardworking`.","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"sk2001git"},"content":"*  `remark 1 r/**REMARK** furthermore he is great at teamwork` Edits the remark of the 1st person to have a remark `Great attitude, hardworking furthermore he is great at teamwork`.","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"sk2001git"},"content":"*  `remark 1 r/` Empties the remark of the 1st person.","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"sk2001git"},"content":"*  `remark 1` Empties the mark of the 1st person.","lastModifiedDate":"2023-11-07"},{"lineNumber":184,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"sk2001git"},"content":"An example of the `remark` command in action:","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"sk2001git"},"content":"![Remark](images/remark.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":187,"author":{"gitId":"sk2001git"},"content":"An example of the `remark` command in action with the **REMARK** keyword:","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"sk2001git"},"content":"![Enhanced Remark](images/enhancedremark.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":189,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"ketweeen"},"content":"### Viewing a person\u0027s details: `view`","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":192,"author":{"gitId":"sk2001git"},"content":"Creates a complete view for details of a candidate in the second main panel and summary statistics of a candidate in the third main panel. ","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":194,"author":{"gitId":"ketweeen"},"content":"Format: `view INDEX`","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"ketweeen"},"content":"* Shows the complete details of the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"ketweeen"},"content":"* The index used will be the same as the index used in the `list` command.","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"ketweeen"},"content":"* Compatible with search and other features that change the order and content of the list.","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"sk2001git"},"content":"* Refer to the [Summary Statistics](#summary-statistics) section for more details on the summary statistics.","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":201,"author":{"gitId":"ketweeen"},"content":"Examples:","lastModifiedDate":"2023-10-20"},{"lineNumber":202,"author":{"gitId":"sk2001git"},"content":"* `view 1` Shows the complete details of the 1st person on the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"sk2001git"},"content":"An example of the `view` command in action:","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"sk2001git"},"content":"![View](images/view.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":206,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"sk2001git"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"sk2001git"},"content":"**Tip:** Other operations that affect user\u0027s data will trigger a refresh of the view.","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"ketweeen"},"content":"These include `add`, `edit`, `set`, `remark`, `addL`, `addG`. ","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"sk2001git"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"ketweeen"},"content":"### Adding Github/LinkedIn username for a user: `addG` or `addL`","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":218,"author":{"gitId":"ketweeen"},"content":"Adds the username for their social profile [LinkedIn/Github] to the existing contact details of users.","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"ketweeen"},"content":"Format: `addL INDEX u/USERNAME` or `addG INDEX u/USERNAME`","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"MadLamprey"},"content":"* User is expected to enter a valid username for the specified social profile, and an account must exist","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"MadLamprey"},"content":"* The username gets added as an attribute to the existing details of a candidate","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"ketweeen"},"content":"* `addG 2 u/MadLamprey`","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"ketweeen"},"content":"* `addL 4 u/aditya-misra`","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"ketweeen"},"content":"### Opening user LinkedIn or GitHub account: `linkedin` or `github`","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"ketweeen"},"content":"Redirect user to candidate\u0027s LinkedIn or Github account.","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"ketweeen"},"content":"Format: `linkedin INDEX` or `github INDEX`","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"MadLamprey"},"content":"* Browser window opens, showing the profile","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"MadLamprey"},"content":"* If the user has not provided a valid username for the corresponding social profile, an appropriate message is displayed on the interface of the social profile (JABPro does not perform error handling for this case).","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"ketweeen"},"content":"* `linkedin 1`","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"ketweeen"},"content":"* `github 2`","lastModifiedDate":"2023-10-20"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"sk2001git"},"content":"Shows a list of all persons in JABPro","lastModifiedDate":"2023-11-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"sk2001git"},"content":"Format: ","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"sk2001git"},"content":"`list` or","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"sk2001git"},"content":"`list so/ATTRIBUTE`","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":250,"author":{"gitId":"ketweeen"},"content":"* `so/ATTRIBUTE` is completely **optional**, on default will NOT be sorted.","lastModifiedDate":"2023-10-20"},{"lineNumber":251,"author":{"gitId":"ketweeen"},"content":"* The attributes that are supported are `name` and `email`.","lastModifiedDate":"2023-11-06"},{"lineNumber":252,"author":{"gitId":"ketweeen"},"content":"* Attribute is case-insensitive: `list so/NAME` and `list so/name` return the same result.","lastModifiedDate":"2023-10-20"},{"lineNumber":253,"author":{"gitId":"ketweeen"},"content":"* The result will be sorted in **ascending** order.","lastModifiedDate":"2023-10-05"},{"lineNumber":254,"author":{"gitId":"ketweeen"},"content":"* The sorting algorithm is case-sensitive, which means it will treat uppercase and ","lastModifiedDate":"2023-11-06"},{"lineNumber":255,"author":{"gitId":"ketweeen"},"content":"lowercase letters as distinct. This may result in names being sorted as A B C a b c, rather than A a B b C c.","lastModifiedDate":"2023-10-20"},{"lineNumber":256,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":257,"author":{"gitId":"ketweeen"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":258,"author":{"gitId":"ketweeen"},"content":"* `list` Shows a list of all persons.","lastModifiedDate":"2023-10-05"},{"lineNumber":259,"author":{"gitId":"ketweeen"},"content":"* `list so/name` Shows a list of all persons, sorted by name in ascending order.","lastModifiedDate":"2023-11-06"},{"lineNumber":260,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"ketweeen"},"content":"### Listing all tags: `listT`","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"sk2001git"},"content":"Shows a list of all tags in JABPro","lastModifiedDate":"2023-11-07"},{"lineNumber":264,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"ketweeen"},"content":"Format: `listT`","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"ketweeen"},"content":"* The `listT` command does not require any additional parameters or arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"ketweeen"},"content":"* Tags listed by the `listT` command are unique and do not repeat.","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"ketweeen"},"content":"**Example:**","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"ketweeen"},"content":"* `listT` Shows a list of all tags.","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"ketweeen"},"content":"![ListT](images/listT.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"sk2001git"},"content":"Edits an existing person in JABPro","lastModifiedDate":"2023-11-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"AriellaCallista"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/[CATEGORY] TAGNAME]…​`","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"AriellaCallista"},"content":"Notes on editing the tags of the specified person:","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":290,"author":{"gitId":"sk2001git"},"content":"Notes on editing the score of the specified person:","lastModifiedDate":"2023-11-07"},{"lineNumber":291,"author":{"gitId":"sk2001git"},"content":"* The `sc/TAG SCORE` field is only applicable for the `edit` command, and not for the `add` command.","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"sk2001git"},"content":"* The `sc/TAG SCORE` field can only be used if the `t/TAG` field is used before it or the `TAG` already exist","lastModifiedDate":"2023-11-02"},{"lineNumber":293,"author":{"gitId":"sk2001git"},"content":"* The `SCORE` in `sc/TAG SCORE` is non-negative, that is `SCORE` must be more than or equal to 0 ","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"sk2001git"},"content":"* To clear a tag\u0027s score, just re-tag it with the same tag name, but without using the `sc/TAG SCORE` field","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":296,"author":{"gitId":"sk2001git"},"content":"Notes on rules for `edit` command involving tags with categories:","lastModifiedDate":"2023-11-07"},{"lineNumber":297,"author":{"gitId":"AriellaCallista"},"content":"* Consequently, similar rules for `add` apply to the `edit` command involving tags:","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"AriellaCallista"},"content":"  * If you would like to tag a user with a tag that has not been categorised yet using the `create` command, ","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"AriellaCallista"},"content":"    you can specify the category that you would like it to be categorised to in the `edit` command. e.g. `edit 1 t/role swe`","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"AriellaCallista"},"content":"  * If you are using a tag that has not been categorised yet and you did not specify its category in the `add` command,","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"AriellaCallista"},"content":"    the tag would still be saved but it would be \"uncategorised\" by default.","lastModifiedDate":"2023-11-02"},{"lineNumber":302,"author":{"gitId":"AriellaCallista"},"content":"  * If you have multiple tags in different categories with the same name, you must specify the category when you want to","lastModifiedDate":"2023-11-02"},{"lineNumber":303,"author":{"gitId":"AriellaCallista"},"content":"    tag the specified candidate with one of these tags.","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"sk2001git"},"content":"*  `edit 2 t/Interview sc/Interview 80` Edits the tag of the 2nd person to have a tag `Interview` with a score of 80.","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"AriellaCallista"},"content":"* `edit 1 t/role swe`","lastModifiedDate":"2023-11-02"},{"lineNumber":311,"author":{"gitId":"AriellaCallista"},"content":"* `edit 1 t/swe`","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"sk2001git"},"content":"An example of the `edit` command in action for editing `tag` and `score`:","lastModifiedDate":"2023-11-02"},{"lineNumber":314,"author":{"gitId":"sk2001git"},"content":"![Edit](images/editscore.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":316,"author":{"gitId":"sk2001git"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":317,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":318,"author":{"gitId":"sk2001git"},"content":"**Note:** Editing the tags of a person or adding a score to a tag will trigger a refresh of the summary statistics table.  ","lastModifiedDate":"2023-11-02"},{"lineNumber":319,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":320,"author":{"gitId":"sk2001git"},"content":"To find out more about the summary statistics table, refer to the [Summary Statistics](#summary-statistics) section.","lastModifiedDate":"2023-11-02"},{"lineNumber":321,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":322,"author":{"gitId":"sk2001git"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":325,"author":{"gitId":"sk2001git"},"content":"### Filter job applicants by statistics: `filter`","lastModifiedDate":"2023-11-02"},{"lineNumber":326,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":327,"author":{"gitId":"sk2001git"},"content":"Filters and display job applicants using statistical metrics and values.","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":329,"author":{"gitId":"sk2001git"},"content":"Format: ","lastModifiedDate":"2023-11-02"},{"lineNumber":330,"author":{"gitId":"sk2001git"},"content":"`filter t/TAGNAME met/METRIC val/VALUE` or `filter t/TAGNAME met/METRIC`","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":332,"author":{"gitId":"sk2001git"},"content":"* Filter works only on the current list of job applicants displayed. It is highly recommended that you enter `list` before using `filter` to ensure that you are filtering the correct list of job applicants.","lastModifiedDate":"2023-11-07"},{"lineNumber":333,"author":{"gitId":"sk2001git"},"content":"* It is strongly recommended that you use `filter` after you have tagged most of the job applicants with a tag that has a score. Read more about this in the [Summary Statistics](#summary-statistics) section.","lastModifiedDate":"2023-11-07"},{"lineNumber":334,"author":{"gitId":"sk2001git"},"content":"* Filters and displays job applicants whose **value** is **greater than or equal** to the specified value for the specified statistic metric.","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"sk2001git"},"content":"* The `TAGNAME` must be a name of a tag that has been created using the `create` command with the `assessment` category.","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"sk2001git"},"content":"* The `METRIC` must be a name of a metric that is either `score`, `percentile`, `mean`, `median`.","lastModifiedDate":"2023-11-02"},{"lineNumber":337,"author":{"gitId":"sk2001git"},"content":"* The `VALUE` must be a non-negative integer.","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"sk2001git"},"content":"* For `METRIC` that is `mean` or `median`, the `VALUE` is optional. Specifying a `VALUE` here will be ignored accordingly.","lastModifiedDate":"2023-11-02"},{"lineNumber":339,"author":{"gitId":"sk2001git"},"content":"* This does not edit, update or in any way change the data of the job applicants. It only filters and displays the job applicants.","lastModifiedDate":"2023-11-02"},{"lineNumber":340,"author":{"gitId":"sk2001git"},"content":"* Filter does not trigger view, that is your view panels represent the previous candidate you viewed before filtering.","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"sk2001git"},"content":"* To get back the **original list with all the candidates**, simply type `list` again.","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"sk2001git"},"content":"* `filter t/Interview met/score val/80` filters and displays job applicants whose score tied to `interview` tag  is greater than or equal to 80.","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"sk2001git"},"content":"* `filter t/Interview met/percentile val/80` filters and displays job applicants whose percentile tied to `interview` tag  is greater than or equal to 80.","lastModifiedDate":"2023-11-02"},{"lineNumber":346,"author":{"gitId":"sk2001git"},"content":"* `filter t/Interview met/mean` filters and displays job applicants whose score tied to `interview` tag is greater than or equal to the mean score for `interview` tag.","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"sk2001git"},"content":"* `filter t/Interview met/median` filters and displays job applicants whose score tied to `interview` tag is greater than or equal to the median score for `interview` tag.","lastModifiedDate":"2023-11-02"},{"lineNumber":348,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"sk2001git"},"content":"An example of the `filter` command in action:","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"sk2001git"},"content":"![Filter](images/filter.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":351,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"sk2001git"},"content":"A more complete example guide on how to use filter effectively from when you first start JABPro:  ","lastModifiedDate":"2023-11-07"},{"lineNumber":353,"author":{"gitId":"sk2001git"},"content":"1. `create t/assessment interview` creates a tag `interview` under the `assessment` category.","lastModifiedDate":"2023-11-02"},{"lineNumber":354,"author":{"gitId":"sk2001git"},"content":"** Take note, only edit if the index exists, adapt this guide accordingly **","lastModifiedDate":"2023-11-02"},{"lineNumber":355,"author":{"gitId":"sk2001git"},"content":"2. `edit 1 t/interview sc/interview 80` edits the tag of the 1st person to have a tag `interview` with a score of 80.","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"sk2001git"},"content":"3. `edit 2 t/interview sc/interview 90` edits the tag of the 2nd person to have a tag `interview` with a score of 90.","lastModifiedDate":"2023-11-02"},{"lineNumber":357,"author":{"gitId":"sk2001git"},"content":"4. `edit 3 t/interview sc/interview 70` edits the tag of the 3rd person to have a tag `interview` with a score of 70.","lastModifiedDate":"2023-11-02"},{"lineNumber":358,"author":{"gitId":"sk2001git"},"content":"5. `filter t/interview met/percentile val/80` filters and displays job applicants whose score tied to `interview` tag  is greater than or equal to 80.","lastModifiedDate":"2023-11-02"},{"lineNumber":359,"author":{"gitId":"sk2001git"},"content":"6. `filter t/interview met/median` filters and displays job applicants whose score tied to `interview` tag is greater than or equal to the median score for `interview` tag.","lastModifiedDate":"2023-11-02"},{"lineNumber":360,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":361,"author":{"gitId":"sk2001git"},"content":"In essence, this allows you to find job applicants whose performance rating is above a certain percentile, score or mean/median score for that tag.  ","lastModifiedDate":"2023-11-02"},{"lineNumber":362,"author":{"gitId":"sk2001git"},"content":"Ideally, this feature can then be used to find the best candidates easily without manual comparison","lastModifiedDate":"2023-11-02"},{"lineNumber":363,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":365,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":366,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":367,"author":{"gitId":"AriellaCallista"},"content":"### Search job applicants by category: `search`","lastModifiedDate":"2023-10-03"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"AriellaCallista"},"content":"Finds job applicants whose profiles match the specified categories\u0027 keywords. The search categories are: name, status, tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":370,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":371,"author":{"gitId":"AriellaCallista"},"content":"Format: `search (n/KEYWORD [MORE KEYWORDS] / st/KEYWORD [MORE KEYWORDS] / t/KEYWORD [MORE KEYWORDS])`","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"AriellaCallista"},"content":"#### Search job applicants by name","lastModifiedDate":"2023-10-03"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"AriellaCallista"},"content":"Finds job applicants whose names contain the given keywords.","lastModifiedDate":"2023-10-03"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"AriellaCallista"},"content":"Format: `search n/KEYWORD [MORE KEYWORDS]`","lastModifiedDate":"2023-10-03"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"AriellaCallista"},"content":"* Keywords are case-insensitive: `search n/Josh` and `search n/josh` return the same result.","lastModifiedDate":"2023-10-03"},{"lineNumber":380,"author":{"gitId":"AriellaCallista"},"content":"* Keyword has to be a string that does not contain any non-alpha numeric characters.","lastModifiedDate":"2023-10-03"},{"lineNumber":381,"author":{"gitId":"ketweeen"},"content":"* The order of the keywords does not matter. e.g. `Josh Peck` will match `Peck Josh`.","lastModifiedDate":"2023-10-27"},{"lineNumber":382,"author":{"gitId":"ketweeen"},"content":"* Only full words will be matched e.g. `Jo` will not match `Josh`.","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"AriellaCallista"},"content":"* Applicants matching at least one keyword will be returned (i.e. `OR` search)","lastModifiedDate":"2023-10-03"},{"lineNumber":384,"author":{"gitId":"ketweeen"},"content":"  e.g. `Josh Peck` will return `Josh Gad`, `Josh Job`.","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"AriellaCallista"},"content":"* `search n/John` returns `john` and `John Doe`","lastModifiedDate":"2023-10-03"},{"lineNumber":388,"author":{"gitId":"AriellaCallista"},"content":"* `search n/alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":389,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":390,"author":{"gitId":"AriellaCallista"},"content":"#### Search job applicants by status","lastModifiedDate":"2023-10-03"},{"lineNumber":391,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":392,"author":{"gitId":"ketweeen"},"content":"Finds job applicants whose status match any of the given keywords.","lastModifiedDate":"2023-10-27"},{"lineNumber":393,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":394,"author":{"gitId":"AriellaCallista"},"content":"Format: `search st/KEYWORD [MORE KEYWORDS]`","lastModifiedDate":"2023-10-27"},{"lineNumber":395,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":396,"author":{"gitId":"AriellaCallista"},"content":"* Keywords can only be from the following list: `Preliminary`, `Interviewed`, `Rejected`, `Offered`","lastModifiedDate":"2023-10-27"},{"lineNumber":397,"author":{"gitId":"AriellaCallista"},"content":"  e.g. `search st/interviewing` will give an error.","lastModifiedDate":"2023-10-27"},{"lineNumber":398,"author":{"gitId":"AriellaCallista"},"content":"* Keywords are case-insensitive: `search st/interviewed` and `search st/INTERVIEWED` return the same result.","lastModifiedDate":"2023-10-27"},{"lineNumber":399,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":400,"author":{"gitId":"AriellaCallista"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":401,"author":{"gitId":"AriellaCallista"},"content":"* `search st/interviewed`","lastModifiedDate":"2023-10-27"},{"lineNumber":402,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":403,"author":{"gitId":"AriellaCallista"},"content":"#### Search job applicants by tag","lastModifiedDate":"2023-10-27"},{"lineNumber":404,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":405,"author":{"gitId":"AriellaCallista"},"content":"Finds job applicants whose tag(s) match any of the given tag keywords","lastModifiedDate":"2023-10-27"},{"lineNumber":406,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":407,"author":{"gitId":"AriellaCallista"},"content":"Format: `search t/KEYWORD [MORE KEYWORDS]`","lastModifiedDate":"2023-10-27"},{"lineNumber":408,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":409,"author":{"gitId":"AriellaCallista"},"content":"* Keywords are case-insensitive: `search t/hardworking\u0027 and `search t/HARDWORKING` return the same result.","lastModifiedDate":"2023-10-27"},{"lineNumber":410,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":411,"author":{"gitId":"AriellaCallista"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":412,"author":{"gitId":"AriellaCallista"},"content":"* `search t/hardworking`","lastModifiedDate":"2023-10-27"},{"lineNumber":413,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":414,"author":{"gitId":"AriellaCallista"},"content":"#### Notes for advanced users:","lastModifiedDate":"2023-10-03"},{"lineNumber":415,"author":{"gitId":"AriellaCallista"},"content":"* You can combine the search categories (e.g. `search n/Alex st/offered t/software engineer`) in a single search command.","lastModifiedDate":"2023-10-27"},{"lineNumber":416,"author":{"gitId":"AriellaCallista"},"content":"* Each search category can be used at most once in a single search command","lastModifiedDate":"2023-10-03"},{"lineNumber":417,"author":{"gitId":"AriellaCallista"},"content":"  e.g. `search n/Alex n/Adam st/rejected` is not allowed.","lastModifiedDate":"2023-10-27"},{"lineNumber":418,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":419,"author":{"gitId":"AriellaCallista"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":420,"author":{"gitId":"AriellaCallista"},"content":"* `search n/Alex Bernice st/interviewed rejected t/intern` will output applicants whose:","lastModifiedDate":"2023-11-08"},{"lineNumber":421,"author":{"gitId":"AriellaCallista"},"content":"    * names contain either Alex `or` Bernice","lastModifiedDate":"2023-10-03"},{"lineNumber":422,"author":{"gitId":"AriellaCallista"},"content":"    * `and` status is either interviewed `or` rejected.","lastModifiedDate":"2023-10-03"},{"lineNumber":423,"author":{"gitId":"AriellaCallista"},"content":"    * `and` has a tag `intern`","lastModifiedDate":"2023-11-08"},{"lineNumber":424,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":425,"author":{"gitId":"AriellaCallista"},"content":"![Search](images/search-3.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"ketweeen"},"content":"Deletes the specified job applicants from the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"ketweeen"},"content":"Format: `delete INDEX` or `delete t/TAG`","lastModifiedDate":"2023-10-27"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"ketweeen"},"content":"* Delete by index","lastModifiedDate":"2023-10-27"},{"lineNumber":434,"author":{"gitId":"-"},"content":"  * Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"  * The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"  * The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"ketweeen"},"content":"* Delete by tags","lastModifiedDate":"2023-10-27"},{"lineNumber":438,"author":{"gitId":"ketweeen"},"content":"  * Deletes all persons who have the specified TAG or a combination of tags. ","lastModifiedDate":"2023-10-27"},{"lineNumber":439,"author":{"gitId":"ketweeen"},"content":"  * The tag(s) must be prefixed with t/.","lastModifiedDate":"2023-10-27"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"ScarletBlanks"},"content":"### Setting an applicant\u0027s status : `set`","lastModifiedDate":"2023-10-05"},{"lineNumber":446,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":447,"author":{"gitId":"ScarletBlanks"},"content":"Format: `set INDEX STATUS`","lastModifiedDate":"2023-10-05"},{"lineNumber":448,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":449,"author":{"gitId":"ScarletBlanks"},"content":"Sets the applicant to a specific status (\"Preliminary\"/ \"Interviewed\"/ \"Rejected\"/ \"Offered\")","lastModifiedDate":"2023-10-05"},{"lineNumber":450,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":451,"author":{"gitId":"ScarletBlanks"},"content":"* Sets the person at the specified `INDEX` to a specific hiring status.","lastModifiedDate":"2023-10-05"},{"lineNumber":452,"author":{"gitId":"ScarletBlanks"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-05"},{"lineNumber":453,"author":{"gitId":"ScarletBlanks"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-05"},{"lineNumber":454,"author":{"gitId":"ScarletBlanks"},"content":"* The status must be a string of exactly \"Preliminary\", \"Interviewed\", \"Rejected\" or \"Offered\".","lastModifiedDate":"2023-10-05"},{"lineNumber":455,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":456,"author":{"gitId":"ScarletBlanks"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":457,"author":{"gitId":"ScarletBlanks"},"content":"* `list` followed by `set 2 Interviewed` sets the 2nd person in the address book to \"Interviewed\".","lastModifiedDate":"2023-10-05"},{"lineNumber":458,"author":{"gitId":"ScarletBlanks"},"content":"* `find Betsy` followed by `set 1 Interviewed` sets the status of 1st person in the results of the `find` command.","lastModifiedDate":"2023-10-05"},{"lineNumber":459,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":460,"author":{"gitId":"MadLamprey"},"content":"### Adding an Event: `event`","lastModifiedDate":"2023-10-26"},{"lineNumber":461,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":462,"author":{"gitId":"MadLamprey"},"content":"Adds an event to JABPro.","lastModifiedDate":"2023-10-26"},{"lineNumber":463,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":464,"author":{"gitId":"MadLamprey"},"content":"Format: `event INDEX d/DESCRIPTION bt/BEGIN_TIME et/END_TIME`","lastModifiedDate":"2023-10-26"},{"lineNumber":465,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":466,"author":{"gitId":"MadLamprey"},"content":"* `BEGIN_TIME` and `END_TIME` must be in the format `yyyy-MM-dd HH:mm`","lastModifiedDate":"2023-10-26"},{"lineNumber":467,"author":{"gitId":"MadLamprey"},"content":"* Event gets added to the current list of events, and also gets written to the `eventbook.json` file","lastModifiedDate":"2023-10-26"},{"lineNumber":468,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":469,"author":{"gitId":"MadLamprey"},"content":"Example:","lastModifiedDate":"2023-10-26"},{"lineNumber":470,"author":{"gitId":"MadLamprey"},"content":"* `event 1 d/Interview bt/2023-10-27 18:00 et/2023-10-27 21:00` adds an event to the list, and stores the name of the person the event is associated with, the description, start time and end time, in a JSON file.","lastModifiedDate":"2023-10-26"},{"lineNumber":471,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":472,"author":{"gitId":"MadLamprey"},"content":"### Viewing events: `schedule`","lastModifiedDate":"2023-10-26"},{"lineNumber":473,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":474,"author":{"gitId":"MadLamprey"},"content":"Displays all events that have been added to JABPro.","lastModifiedDate":"2023-10-26"},{"lineNumber":475,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":476,"author":{"gitId":"MadLamprey"},"content":"Format: `schedule`","lastModifiedDate":"2023-10-26"},{"lineNumber":477,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":478,"author":{"gitId":"MadLamprey"},"content":"* Opens the `Events` window, which can also be accessed by clicking on `Events \u003e Event` in the menu bar","lastModifiedDate":"2023-10-26"},{"lineNumber":479,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":480,"author":{"gitId":"MadLamprey"},"content":"Example:","lastModifiedDate":"2023-10-26"},{"lineNumber":481,"author":{"gitId":"MadLamprey"},"content":"* First, entering `event 1 d/Interview bt/2023-10-27 18:00 et/2023-10-27 21:00` adds the event, and entering `schedule` displays this event in a separate window, titled `Events`","lastModifiedDate":"2023-10-26"},{"lineNumber":482,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":483,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"ScarletBlanks"},"content":"### Exporting all entries : `export`","lastModifiedDate":"2023-10-26"},{"lineNumber":490,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":491,"author":{"gitId":"ScarletBlanks"},"content":"Exports the entries into a .csv file located in the current directory as (/data/export.csv)","lastModifiedDate":"2023-11-08"},{"lineNumber":492,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":493,"author":{"gitId":"ScarletBlanks"},"content":"* Note: Export currently does not support Events.","lastModifiedDate":"2023-11-08"},{"lineNumber":494,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":495,"author":{"gitId":"ScarletBlanks"},"content":"*  Usage Note: JABPro must have write permissions, this means that if the .csv file is open,","lastModifiedDate":"2023-11-08"},{"lineNumber":496,"author":{"gitId":"ScarletBlanks"},"content":"exporting again will not be possible.","lastModifiedDate":"2023-11-08"},{"lineNumber":497,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":498,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":499,"author":{"gitId":"ScarletBlanks"},"content":"Format: `export`","lastModifiedDate":"2023-10-26"},{"lineNumber":500,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":501,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"sk2001git"},"content":"### Summary Statistics","lastModifiedDate":"2023-11-02"},{"lineNumber":508,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":509,"author":{"gitId":"sk2001git"},"content":"Summary Statistics is a table generated by JABPro that displays the following information about a candidate:","lastModifiedDate":"2023-11-02"},{"lineNumber":510,"author":{"gitId":"sk2001git"},"content":"* Tags that are categorised under the `assessment` category and **have a score**","lastModifiedDate":"2023-11-02"},{"lineNumber":511,"author":{"gitId":"sk2001git"},"content":"* The **score** of the candidate for the tag","lastModifiedDate":"2023-11-02"},{"lineNumber":512,"author":{"gitId":"sk2001git"},"content":"* The **mean** score of candidates with that tag","lastModifiedDate":"2023-11-02"},{"lineNumber":513,"author":{"gitId":"sk2001git"},"content":"* The **median** score of candidates with that tag","lastModifiedDate":"2023-11-02"},{"lineNumber":514,"author":{"gitId":"sk2001git"},"content":"* The **minimum** score of candidates with that tag","lastModifiedDate":"2023-11-02"},{"lineNumber":515,"author":{"gitId":"sk2001git"},"content":"* The **maximum** score of candidates with that tag","lastModifiedDate":"2023-11-02"},{"lineNumber":516,"author":{"gitId":"sk2001git"},"content":"* The **percentile** of the candidate for that tag","lastModifiedDate":"2023-11-02"},{"lineNumber":517,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":518,"author":{"gitId":"sk2001git"},"content":"Understanding how to use these summary statistics meaningfully:","lastModifiedDate":"2023-11-02"},{"lineNumber":519,"author":{"gitId":"sk2001git"},"content":"* You should ensure that you have **sufficient candidates** with a score for the tag you are interested in, before using the summary statistics to make comparisons.  ","lastModifiedDate":"2023-11-07"},{"lineNumber":520,"author":{"gitId":"sk2001git"},"content":"  * This is due to the fact that these summary statistics rely on concepts such as mean, median and percentile, which are statistical concepts that require a sufficient sample size to be meaningful.","lastModifiedDate":"2023-11-02"},{"lineNumber":521,"author":{"gitId":"sk2001git"},"content":"  * For example, if you have only assigned 5 out of 100 candidates, the summary statistics will not be representative of the actual mean, median and percentile for that tag.","lastModifiedDate":"2023-11-02"},{"lineNumber":522,"author":{"gitId":"sk2001git"},"content":"  * In this case, you should assign more candidates with a score for that tag, before using the summary statistics to make comparisons.","lastModifiedDate":"2023-11-02"},{"lineNumber":523,"author":{"gitId":"sk2001git"},"content":"  * If you have n number candidates of the same score, their percentile will all be 0.0. This is because they are both the best and the worst performing candidate for that tag. Thus, a placeholder value of 0.0 is used to represent this.","lastModifiedDate":"2023-11-07"},{"lineNumber":524,"author":{"gitId":"sk2001git"},"content":"  * If you have assigned a sufficient number of candidates with a score for that tag, you can use the summary statistics to make comparisons. For example, you want to check if a candidate\u0027s score for a tag is more than or equal to half of all the candidates who have a score for that tag, you can use the median to make this comparison.","lastModifiedDate":"2023-11-02"},{"lineNumber":525,"author":{"gitId":"sk2001git"},"content":"  * A **sufficient number** could be deemed as **any number that is more than 20**, but this is not a hard and fast rule. You should use your own discretion to determine if the number of candidates with a score for that tag is sufficient.","lastModifiedDate":"2023-11-07"},{"lineNumber":526,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":527,"author":{"gitId":"sk2001git"},"content":"* Use mostly `median` and `percentile` to make your judgements","lastModifiedDate":"2023-11-02"},{"lineNumber":528,"author":{"gitId":"sk2001git"},"content":"  * `median` to find candidates who are the better performing half","lastModifiedDate":"2023-11-02"},{"lineNumber":529,"author":{"gitId":"sk2001git"},"content":"  * `percentile` as where this candidate stands among all other candidates (treat it like a ranking system, the higher the percentile, the better the candidate is performing) ","lastModifiedDate":"2023-11-02"},{"lineNumber":530,"author":{"gitId":"sk2001git"},"content":"  * `percentile` 100.0 would represent the best performing candidate for that tag and `percentile` 0.0 would represent the worst performing candidate for that tag","lastModifiedDate":"2023-11-02"},{"lineNumber":531,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":532,"author":{"gitId":"sk2001git"},"content":"**Advanced users**","lastModifiedDate":"2023-11-02"},{"lineNumber":533,"author":{"gitId":"sk2001git"},"content":"* Understand that `percentile` has limited functionality in certain context. Suppose you have 6 candidates with the scores `{80, 90, 100, 100, 100, 100}`","lastModifiedDate":"2023-11-02"},{"lineNumber":534,"author":{"gitId":"sk2001git"},"content":"  * Median would be 90 in this case and percentile would be 50.0 for the candidate with a score of 90, however the upper half of the candidates are all 100.0 percentile","lastModifiedDate":"2023-11-02"},{"lineNumber":535,"author":{"gitId":"sk2001git"},"content":"  * This comes as a consequence of the implementation where given you have the same score, you should have the same percentile / ranking","lastModifiedDate":"2023-11-02"},{"lineNumber":536,"author":{"gitId":"sk2001git"},"content":"  * This is one of the root reasons why your sample size should be sufficiently large before using the summary statistics to make comparisons, this reduces the chances of having candidates with the same score","lastModifiedDate":"2023-11-02"},{"lineNumber":537,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":538,"author":{"gitId":"sk2001git"},"content":"In-depth explanation of the statistics:","lastModifiedDate":"2023-11-02"},{"lineNumber":539,"author":{"gitId":"sk2001git"},"content":"**mean** is calculated by using the formula `sum of all scores with that tag/ number of candidates with that tag`","lastModifiedDate":"2023-11-02"},{"lineNumber":540,"author":{"gitId":"sk2001git"},"content":"**median** is calculated by using the formula `middle score of all scores with that tag`","lastModifiedDate":"2023-11-02"},{"lineNumber":541,"author":{"gitId":"sk2001git"},"content":"**minimum** is calculated by using the formula `lowest score of all scores with that tag`","lastModifiedDate":"2023-11-02"},{"lineNumber":542,"author":{"gitId":"sk2001git"},"content":"**maximum** is calculated by using the formula `highest score of all scores with that tag`","lastModifiedDate":"2023-11-02"},{"lineNumber":543,"author":{"gitId":"sk2001git"},"content":"**percentile** is calculated by using the formula `number of candidates with a score strictly lower than the candidate/ total number of candidates with that tag`","lastModifiedDate":"2023-11-02"},{"lineNumber":544,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":545,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":546,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"sk2001git"},"content":"JABPro data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-11-07"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":552,"author":{"gitId":"sk2001git"},"content":"JABPro data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-11-07"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":554,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":556,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":557,"author":{"gitId":"sk2001git"},"content":"If your changes to the data file makes its format invalid, JABPro will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-11-07"},{"lineNumber":558,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":560,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":563,"author":{"gitId":"AriellaCallista"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-05"},{"lineNumber":564,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":565,"author":{"gitId":"AriellaCallista"},"content":"## Planned Enhancements","lastModifiedDate":"2023-11-05"},{"lineNumber":566,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":567,"author":{"gitId":"AriellaCallista"},"content":"### Deleting tags : `delete tag`","lastModifiedDate":"2023-11-05"},{"lineNumber":568,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":569,"author":{"gitId":"AriellaCallista"},"content":"While certainly useful, JABPro currently does not have feature to delete existing tags. However, this feature will be implemented","lastModifiedDate":"2023-11-05"},{"lineNumber":570,"author":{"gitId":"AriellaCallista"},"content":"in future iterations.","lastModifiedDate":"2023-11-05"},{"lineNumber":571,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":572,"author":{"gitId":"AriellaCallista"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":573,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":574,"author":{"gitId":"AriellaCallista"},"content":"**Tip:**","lastModifiedDate":"2023-11-05"},{"lineNumber":575,"author":{"gitId":"AriellaCallista"},"content":"* If you are an advanced user, you are welcome to delete your tags manually by editing the json file! ","lastModifiedDate":"2023-11-05"},{"lineNumber":576,"author":{"gitId":"AriellaCallista"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":577,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":578,"author":{"gitId":"AriellaCallista"},"content":"### Editing tags : `edit tag`","lastModifiedDate":"2023-11-05"},{"lineNumber":579,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":580,"author":{"gitId":"AriellaCallista"},"content":"JABPro currently does not support editing tags i.e. editing tag name or category. This feature will be implemented in future iterations.","lastModifiedDate":"2023-11-05"},{"lineNumber":581,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":582,"author":{"gitId":"AriellaCallista"},"content":"**Tip:**","lastModifiedDate":"2023-11-05"},{"lineNumber":583,"author":{"gitId":"AriellaCallista"},"content":"* If you are an advanced user, you are welcome to edit your tags manually by editing the json file!","lastModifiedDate":"2023-11-05"},{"lineNumber":584,"author":{"gitId":"AriellaCallista"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":585,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":586,"author":{"gitId":"ScarletBlanks"},"content":"### Exporting events : `export`","lastModifiedDate":"2023-11-08"},{"lineNumber":587,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":588,"author":{"gitId":"ScarletBlanks"},"content":"JABPro currently does not support exporting Events. This feature will be implemented in future iterations.","lastModifiedDate":"2023-11-08"},{"lineNumber":589,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":590,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":591,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"sk2001git"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous JABPro home folder.","lastModifiedDate":"2023-11-07"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":602,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":604,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":606,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":609,"author":{"gitId":"-"},"content":" Action                   | Format, Examples                                                                                                                                               ","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"AriellaCallista"},"content":"--------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-27"},{"lineNumber":611,"author":{"gitId":"AriellaCallista"},"content":" **Create**               | `create t/CATEGORY NAME…​` \u003cbr\u003e e.g. `create t/dept software`","lastModifiedDate":"2023-11-02"},{"lineNumber":612,"author":{"gitId":"ketweeen"},"content":" **Add**                  | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/[CATEGORY] TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/developer t/intern` ","lastModifiedDate":"2023-11-03"},{"lineNumber":613,"author":{"gitId":"sk2001git"},"content":" **Remark**               | `remark r/REMARK` \u003cbr\u003e e.g., `remark 1 r/Great attitude, hardworking`                                                                                          ","lastModifiedDate":"2023-10-03"},{"lineNumber":614,"author":{"gitId":"ketweeen"},"content":" **View**                 | `view INDEX` \u003cbr\u003e e.g., `view 1`                                                                                                                               ","lastModifiedDate":"2023-10-20"},{"lineNumber":615,"author":{"gitId":"ketweeen"},"content":" **Add Github/LinkedIn**  | `addL INDEX u/USERNAME` or `addG INDEX u/USERNAME` e.g., `addL 1 u/alex-yeoh`, `addG 2 u/bernicesanders123`                                                    ","lastModifiedDate":"2023-10-20"},{"lineNumber":616,"author":{"gitId":"ketweeen"},"content":" **Open Github/LinkedIn** | `linkedin INDEX` or `github INDEX` e.g., `linkedin 1`, `github 2`                                                                                              ","lastModifiedDate":"2023-10-20"},{"lineNumber":617,"author":{"gitId":"-"},"content":" **Clear**                | `clear`                                                                                                                                                        ","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"ketweeen"},"content":" **Delete**               | `delete INDEX` or `delete (t/TAG [MORE TAGS] st/STATUS)` \u003cbr\u003e e.g., `delete 3`, `delete t/intern st/rejected`                                                                                                                           ","lastModifiedDate":"2023-11-03"},{"lineNumber":619,"author":{"gitId":"ScarletBlanks"},"content":" **Set**                  | `set INDEX STATUS`\u003cbr\u003e e.g., `set 2 Interviewed`                                                                                                               ","lastModifiedDate":"2023-10-05"},{"lineNumber":620,"author":{"gitId":"sk2001git"},"content":" **Edit**                 | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/[CATEGORY] TAGNAME]... [sc/TAGNAME SCORE]​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com t\\MarketingInterview sc\\MarketingInterview 50`                                   ","lastModifiedDate":"2023-11-02"},{"lineNumber":621,"author":{"gitId":"ketweeen"},"content":" **Search**               | `search (n/NAME [MORE NAME] / st/STATUS [MORE STATUS] / t/TAGS [MORE TAGS])` \u003cbr\u003e e.g., `search n/alex` ","lastModifiedDate":"2023-11-03"},{"lineNumber":622,"author":{"gitId":"sk2001git"},"content":" **Filter**               | `filter t/TAGNAME met/METRIC val/VALUE` \u003cbr\u003e e.g., `filter t/interview met/score val/80`","lastModifiedDate":"2023-11-07"},{"lineNumber":623,"author":{"gitId":"ketweeen"},"content":" **List**                 | `list so/ATTRIBUTE` \u003cbr\u003e e.g. `list so/name`","lastModifiedDate":"2023-11-03"},{"lineNumber":624,"author":{"gitId":"ketweeen"},"content":" **ListT**                | `listT`","lastModifiedDate":"2023-11-02"},{"lineNumber":625,"author":{"gitId":"ScarletBlanks"},"content":" **Export**               | `export`                                                                                                                                                       ","lastModifiedDate":"2023-10-26"},{"lineNumber":626,"author":{"gitId":"-"},"content":" **Help**                 | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"MadLamprey"},"content":" **Event**                | `event INDEX d/DESCRIPTION bt/START_TIME et/END_TIME`","lastModifiedDate":"2023-11-03"},{"lineNumber":628,"author":{"gitId":"MadLamprey"},"content":" **Schedule**             | `schedule`","lastModifiedDate":"2023-11-03"},{"lineNumber":629,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":630,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":631,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":632,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":633,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"sk2001git":168,"ScarletBlanks":35,"AriellaCallista":142,"ketweeen":72,"MadLamprey":36,"-":180}},{"path":"docs/diagrams/AddGSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"participant \":AddGCommandParser\" as AddGCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"participant \"a:AddGCommand\" as AddGCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"[-\u003e LogicManager : execute(\"addG 1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addG 1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"create AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser -\u003e AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"activate AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"AddGCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"deactivate AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser -\u003e AddGCommandParser : parse(\"1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"activate AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"create AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"AddGCommandParser -\u003e AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"activate AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"AddGCommand --\u003e AddGCommandParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"deactivate AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"AddGCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"deactivate AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"AddGCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"destroy AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"LogicManager -\u003e AddGCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"activate AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"AddGCommand -\u003e Model : addGithub(1, \"alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"Model --\u003e AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"AddGCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"CommandResult --\u003e AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"AddGCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"deactivate AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"MadLamprey":70}},{"path":"docs/diagrams/AddLSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"participant \":AddLCommandParser\" as AddLCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"participant \"a:AddLCommand\" as AddLCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"[-\u003e LogicManager : execute(\"addL 1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addL 1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"create AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser -\u003e AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"activate AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"AddLCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"deactivate AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser -\u003e AddLCommandParser : parse(\"1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"activate AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"create AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"AddLCommandParser -\u003e AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"activate AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"AddLCommand --\u003e AddLCommandParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"deactivate AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"AddLCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"deactivate AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"AddLCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"destroy AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"LogicManager -\u003e AddLCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"activate AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"AddLCommand -\u003e Model : addLinkedIn(1, \"alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"Model --\u003e AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"AddLCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"CommandResult --\u003e AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"AddLCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"deactivate AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"MadLamprey":70}},{"path":"docs/diagrams/SearchSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"participant \":SearchCommandParser\" as SearchCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"participant \"f:SearchCommand\" as SearchCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"[-\u003e LogicManager : execute(\"search st/offered\")","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"search st/offered\")","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"create SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"AddressBookParser -\u003e SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"activate SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"SearchCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"deactivate SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"AddressBookParser -\u003e SearchCommandParser : parse(\"search st/offered\")","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"activate SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"create SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"SearchCommandParser -\u003e SearchCommand : searchCommand(predicatesList)","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"activate SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"SearchCommand --\u003e SearchCommandParser : f","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"deactivate SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"SearchCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"deactivate SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"SearchCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"destroy SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"LogicManager -\u003e SearchCommand  : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"activate SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"SearchCommand -\u003e Model : updateFilteredPersonList(predicatesList)","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"Model --\u003e SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"SearchCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"CommandResult --\u003e SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"SearchCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"deactivate SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"AriellaCallista":76}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"Class PersonListInformationPanel","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"MainWindow *-down-\u003e \"1\" PersonListInformationPanel","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"PersonListInformationPanel --|\u003e UiPart","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"PersonListInformationPanel ..\u003e Model","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sk2001git":7,"-":60}},{"path":"docs/diagrams/ViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"participant \"v:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"activate MainWindow","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"MainWindow -\u003e LogicManager : execute(\"view 1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"view 1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"create ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"AddressBookParser -\u003e ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"ViewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"AddressBookParser -\u003e ViewCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"create ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"ViewCommandParser -\u003e ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"activate ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"ViewCommand --\u003e ViewCommandParser : v","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"ViewCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"ViewCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"destroy ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"LogicManager -\u003e ViewCommand  : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"activate ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"ViewCommand -\u003e Model : setLastViewedPersonIndex(1)","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"Model --\u003e ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"CommandResult --\u003e ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"ViewCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"LogicManager --\u003e MainWindow : result","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"MainWindow --\u003e MainWindow : handleView()","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"destroy ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"sk2001git":85}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"# JABPro","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"**JABPro is a desktop application used for managing job applications received by you.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"* If you are interested in using JABPro, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"* If you are interested about developing JABpro, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"MadLamprey":4,"-":17}},{"path":"docs/team/ariellacallista.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"title: \"Ariella Callista\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"# Project: JABPRO","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc. It serves as a one-stop addressbook for job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dariellacallista\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"**Enhancement implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"**Contribution to the UG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"**Contribution to DG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"* Contributed to DG for non-functional requirements","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"**Contribution to team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"* Keeping track of deadlines and objectives:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"**Review/mentoring contributions**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"**Contributions beyond the project team**:","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"AriellaCallista":25}},{"path":"docs/team/ketweeen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"title: \"Catherine Liang\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"# Project: JABPRO","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"## Overview JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc. It serves as a one-stop addressbook for job applications.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dketweeen\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"**Enhancement implemented**:","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"**Contribution to the UG**:","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"**Contribution to DG**:","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"* Contributed to DG for non-functional requirements","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"**Contribution to team-based tasks**:","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"* Keeping track of deadlines and objectives:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"**Review/mentoring contributions**:","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"**Contributions beyond the project team**:","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"ketweeen":24}},{"path":"docs/team/madlamprey.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"layout: default.md","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"title: \"Misra Aditya\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"# Project: JABPRO","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc. It serves as a one-stop addressbook for job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dmadlamprey\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"**Enhancement implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"**Contribution to the UG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"**Contribution to DG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"* Contributed to DG for non-functional requirements","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"**Contribution to team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"* Keeping track of deadlines and objectives","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"**Review/mentoring contributions**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"**Contributions beyond the project team**:","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"MadLamprey":26}},{"path":"docs/team/scarletblanks.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"title: \"Peng Tat\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"# Project: JABPRO","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"## Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc. It serves as a one-stop addressbook for job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dScarletBlanks\u0026tabRepo\u003dAY2324S1-CS2103T-W09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse) ","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"**Enhancement implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"**Contribution to the UG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"**Contribution to DG**:* Contributed to DG for non-functional requirements","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"**Contribution to team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"* Keeping track of deadlines and objectives*:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"  **Code quality: Looks after code quality, ensures adherence to coding standards, etc.s**:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"  **Contributions beyond the project team**:*","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"ScarletBlanks":18}},{"path":"docs/team/sk2001git.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"title: \"Sean Koh\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"# Project: JABPRO","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc. It serves as a one-stop addressbook for job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsk2001git\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dsk2001git\u0026tabRepo\u003dAY2324S1-CS2103T-W09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"**Enhancement implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"* Remark command","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"**Contribution to the UG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"* Updated UG for the `remark\u0027 command","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"**Contribution to DG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"* Contributed to DG for writing in User Stories for week 7","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"* Contributed to DG for non-functional requirements","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"* Contributed to DG for glossary","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"* Contributed to DG for use cases regarding add and remark features","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"**Contribution to team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"* Keeping track of deadlines and objectives","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"* Seperating tasks into workable units for team members each week","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"**Review/mentoring contributions**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"* Generally main reviewer for PR contributions, requests changes when necessary and not always approving","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"**Contributions beyond the project team**:","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"*","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"### Contributions to Developer Guide(Extracts)","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"### Contributions to User Guide(Extracts)","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"Adding a remark to a person: `remark`","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"Edits a remark to an existing person to the address book","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"Format: `remark INDEX r/REMARK`","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"* Edits the remark for the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"* The previous remark is not saved, and instead is replaced by the inputted remark. The command does not add to the existing remark","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"* You can empty out a remark by inputting an empty string","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"*  `remark 1 r/Great attitude, hardworking` Edits the remark of the 1st person on the list to have a remark `Great attitude, hardworking`","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"*  `remark 1 r/` Empties the remark of the 1st person.","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"**Remark** | `remark r/REMARK` \u003cbr\u003e e.g., `remark 1 r/Great attitude, hardworking`","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"sk2001git":58}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.storage.event.EventBookStorage;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.storage.event.JsonEventBookStorage;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        EventBookStorage eventBookStorage \u003d new JsonEventBookStorage(userPrefs.getEventBookFilePath());","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, eventBookStorage);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        logger.info(\"Using data file : \" + storage.getEventBookFilePath());","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        Optional\u003cReadOnlyEventBook\u003e eventBookOptional;","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"        ReadOnlyEventBook initialEventData;","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"            eventBookOptional \u003d storage.readEventBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"            initialEventData \u003d eventBookOptional.orElse(new EventBook());","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"            initialEventData \u003d new EventBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"        return new ModelManager(initialData, initialEventData, userPrefs);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MadLamprey":14,"-":183}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"     * Returns the default index. The default index is created with a value of","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"     * Integer.MAX_VALUE.","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"     * @return The default index with a value of Integer.MAX_VALUE.","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"    public static Index getDefaultIndex() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"        return new Index((Integer.MAX_VALUE));","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"     * Checks if the index is present. An index is considered present if its value","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"     * is not equal to Integer.MAX_VALUE.","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"     * @return {@code true} if the index is present; {@code false} otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"    public boolean isPresent() {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"        return zeroBasedIndex !\u003d Integer.MAX_VALUE;","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ketweeen":20,"-":69}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"     * Returns true if {@code s} represents a non-negative integer","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"     * @param s string to be checked","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"     * @return true if {@code s} represents a non-negative integer","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"    public static boolean isNonNegativeInteger(String s) {","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"     * Uses escape quotations to specify a string as a string","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"     * @param str","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"     * @return","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"    public static String treatAsString(String str) {","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"        return \"\\\"\" + str + \"\\\"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"     * Appends the persons to a StringBuilder","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"     * @param model the model in use","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"ScarletBlanks"},"content":"     * @return returns the StringBuilder containing all the data of Persons","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"ScarletBlanks"},"content":"    public static StringBuilder appendPersons(Model model) {","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"ScarletBlanks"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Name,Phone,Email,Address,Tags,LinkedIn,Github,Remark,Status\\n\");","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"ScarletBlanks"},"content":"        for (Person p : model.getAddressBook().getPersonList()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"ScarletBlanks"},"content":"            String name \u003d treatAsString(p.getName().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"ScarletBlanks"},"content":"            String phone \u003d treatAsString(p.getPhone().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"ScarletBlanks"},"content":"            String email \u003d treatAsString(p.getEmail().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"ScarletBlanks"},"content":"            String address \u003d treatAsString(p.getAddress().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"ScarletBlanks"},"content":"            String tags \u003d treatAsString(p.getTags().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"ScarletBlanks"},"content":"            String linkedIn \u003d treatAsString(p.getLinkedIn().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"ScarletBlanks"},"content":"            String github \u003d treatAsString(p.getGithub().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"ScarletBlanks"},"content":"            String remark \u003d treatAsString(p.getRemark().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"ScarletBlanks"},"content":"            String status \u003d treatAsString(p.getStatus().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"ScarletBlanks"},"content":"            sb.append(name)","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(phone)","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(email)","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(address)","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(tags)","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(linkedIn)","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(github)","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(remark)","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(status)","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"ScarletBlanks"},"content":"        return sb;","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sk2001git":16,"ScarletBlanks":45,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.ReadOnlySummaryStatistic;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    ReadOnlyEventBook getEventBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"     * Returns the SummaryStatistic.","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"     * @return SummaryStatistic","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    ReadOnlySummaryStatistic getSummaryStatistic();","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"    ObservableList\u003cTag\u003e getFilteredTagsList();","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"     * Returns the last viewed person index.","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"    Index getLastViewedPersonIndex();","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sk2001git":15,"ketweeen":3,"MadLamprey":7,"-":51}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.ReadOnlySummaryStatistic;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"            storage.saveEventBook(model.getEventBook());","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"    public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        return model.getEventBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"    public ReadOnlySummaryStatistic getSummaryStatistic() {","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"        return model.getSummaryStatistic();","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":92,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"ketweeen"},"content":"    public ObservableList\u003cTag\u003e getFilteredTagsList() {","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"        return model.getFilteredTagList();","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"    public Index getLastViewedPersonIndex() {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"        return model.getLastViewedPersonIndex();","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"        return model.getEventBookFilePath();","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sk2001git":17,"ketweeen":6,"MadLamprey":18,"-":89}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_TAG_DOES_NOT_EXIST \u003d \"The tag does not exist\";","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_ILLEGAL_TAG_SCORE \u003d \"The tag does not exist, cannot attach a score to it\";","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_INCORRECT_DATE_FORMAT \u003d","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            \"Date is not in correct format! \\nRequired format: yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_INVALID_START \u003d \"End time must be after start time!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Date entered is invalid!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":2,"MadLamprey":5,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"            + PREFIX_TAG + \"developer \"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"            + PREFIX_TAG + \"intern\";","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    private Index index;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        index \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":7,"ketweeen":2,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddGCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * Adds GitHub account to candidates existing details.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"public class AddGCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public static final String COMMAND_WORD \u003d \"addG\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds Github to details of a candidate. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            + \"Parameters: \" + \"[\" + COMMAND_WORD + \" \u003cUSERID\u003e u/\u003cUSERNAME\u003e]...\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            + \"where USERID must be a non-zero unsigned integer, and within bounds of list size\\n\"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 u/alexyeoh\";","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Github account added for: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    private final Github username;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     * Creates an AddG Command to add Github.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     * @param index","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"     * @param username","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    public AddGCommand(Index index, Github username) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        personToEdit.setGithub(username);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(generateSuccessMessage(personToEdit), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"     * the username is added to or removed from","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        String message \u003d !username.value.isEmpty() ? MESSAGE_SUCCESS : \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        return String.format(message, personToEdit.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof AddGCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand otherAddGCommand \u003d (AddGCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        return this.index.equals(otherAddGCommand.index) \u0026\u0026 this.username.equals(otherAddGCommand.username);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"        return new ToStringBuilder(this).add(\"index\", index).add(\"username\", username).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"sk2001git":2,"MadLamprey":87}},{"path":"src/main/java/seedu/address/logic/commands/AddLCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * Adds LinkedIn account to candidate\u0027s existing details.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"public class AddLCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public static final String COMMAND_WORD \u003d \"addL\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds LinkedIn to details of a candidate. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"            + \"Parameters: \" + \"[\" + COMMAND_WORD","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            + \" \u003cUSERID\u003e u/\u003cUSERNAME\u003e]...\\nwhere USERID must be a non-zero unsigned integer, \"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            + \"and within bounds of list size\\n\"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 u/alexyeoh\";","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"LinkedIn account added for: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    private final LinkedIn username;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     * Creates an AddL command to add LinkedIn.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     * @param index","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"     * @param username","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    public AddLCommand(Index index, LinkedIn username) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        personToEdit.setLinkedIn(username);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(generateSuccessMessage(personToEdit), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"     * the username is added to or removed from","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        String message \u003d !username.value.isEmpty() ? MESSAGE_SUCCESS : \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        return String.format(message, personToEdit.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof AddLCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand otherAddLCommand \u003d (AddLCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        return this.index.equals(otherAddLCommand.index) \u0026\u0026 this.username.equals(otherAddLCommand.username);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"        return new ToStringBuilder(this).add(\"index\", index).add(\"username\", username).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"sk2001git":2,"MadLamprey":87}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    private final boolean isView;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    private final boolean showEvent;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"    private final boolean listTags;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isView,","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"                         boolean showEvent, boolean listTags) {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        this.isView \u003d isView;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        this.showEvent \u003d showEvent;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"        this.listTags \u003d listTags;","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"        this(feedbackToUser, false, false, false, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"     * @param feedbackToUser feedback to user","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"     * @param isView whether to show the view","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    public CommandResult(String feedbackToUser, boolean isView) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"        this(feedbackToUser, false, false, isView, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"     * Returns true if the command result is to show the view.","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"     * @return  true if the command result is to show the view","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"    public boolean isView() {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        return isView;","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"    public boolean isShowEvent() {","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        return showEvent;","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"    public boolean isListTags() {","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"        return listTags;","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"                \u0026\u0026 isView \u003d\u003d otherCommandResult.isView","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"                \u0026\u0026 showEvent \u003d\u003d otherCommandResult.showEvent","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"                \u0026\u0026 listTags \u003d\u003d otherCommandResult.listTags;","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"ketweeen"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, isView, showEvent, listTags);","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"                .add(\"isView\", isView)","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"                .add(\"showEvent\", showEvent)","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"ketweeen"},"content":"                .add(\"listTags\", listTags)","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":21,"ketweeen":14,"MadLamprey":9,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/CreateTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command to create tags with specific categories.","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"public class CreateTagCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Tags created!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates tags with specific categories. \"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"            + PREFIX_TAG + \"ROLE TAG \"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"            + PREFIX_TAG + \"dept \"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"            + \"Tech \"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"            + PREFIX_TAG + \"role \"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"            + \"Analyst\";","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"This tag already exists in the address book!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Oops! You\u0027ve reached the maximum limit for categories\";","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    private final String[] tagParams;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a CreateTagCommand with the specified tag parameters.","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"     * @param tagParams An array of tag parameters, where each element represents a tag\u0027s category and name.","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"    public CreateTagCommand(String[] tagParams) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"        this.tagParams \u003d tagParams;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the CreateTagCommand to create tags with specific categories in the model.","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     * @param model The model in which the tags are created.","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"     * @return A CommandResult indicating the success of the command.","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"     * @throws CommandException If there is an error executing the command.","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"        UniqueTagList uniqueTagList \u003d new UniqueTagList();","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"        for (String tagParam : tagParams) {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"            String[] categoryTag \u003d tagParam.split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"            try {","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"                String tagCategory \u003d categoryTag[0];","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"                String tagName \u003d categoryTag[1];","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"                Tag newTag \u003d new Tag(tagName, tagCategory);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"                if (model.hasTag(newTag)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"                    throw new CommandException(MESSAGE_DUPLICATE_TAG);","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"                if (countDistinctCategories(uniqueTagList.asUnmodifiableObservableList()) \u003e 5) {","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"                    throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"                model.addTag(newTag);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"            } catch (IllegalValueException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"    private int countDistinctCategories(List\u003cTag\u003e tags) {","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"        Set\u003cString\u003e distinctCategories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"            String tagCategory \u003d tag.getTagCategory();","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"            distinctCategories.add(tagCategory);","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"        return distinctCategories.size();","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"AriellaCallista":88}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":" * Deletes a person identified using its displayed index or tags from the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"            + \": Deletes the person(s) identified by the index number, tags, or status \"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"            + \"used in the displayed person list.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"            + \"Parameters: INDEX (must be a positive integer) or \" + PREFIX_TAG + \"TAG [MORE_TAGS]... or \"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"            + PREFIX_STATUS + \"STATUS\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"            + \"Example (Delete by index): \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"            + \"Example (Delete by tags): \" + COMMAND_WORD + \" \" + PREFIX_TAG + \"manager \" + PREFIX_TAG + \"intern\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"            + \"Example (Delete by status): \" + COMMAND_WORD + \" \" + PREFIX_STATUS + \"rejected\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"            + \"Example (Delete by tags and status): \" + COMMAND_WORD + \" \" + PREFIX_TAG + \"softwareEngineer \"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"            + PREFIX_STATUS + \"interviewed\";","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"    public static final String MESSAGE_PERSONS_NOT_FOUND \u003d \"No persons with the specified tags or status found.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"    public static final String MESSAGE_NO_TARGET_SPECIFIED \u003d \"You must specify either an index, tags, \"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"            + \"or status to delete.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"    private Index targetIndex \u003d Index.getDefaultIndex();","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    private List\u003cPredicate\u003cPerson\u003e\u003e predicatesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"    public DeleteCommand(List\u003cPredicate\u003cPerson\u003e\u003e predicatesList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"        this.predicatesList \u003d predicatesList;","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"        // Delete by index","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"        if (targetIndex.isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"            List\u003cEvent\u003e eventsToDelete \u003d lastShownEventList.stream()","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"                    .filter(event -\u003e event.getPerson().isSamePerson(personToDelete))","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"            for (Event event : eventsToDelete) {","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"                model.deleteEvent(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"        // Use predicates to filter the list of persons","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"        List\u003cPerson\u003e personsToDelete \u003d lastShownList.stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"                .filter(person -\u003e predicatesList.stream().allMatch(predicate -\u003e predicate.test(person)))","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"        if (personsToDelete.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"            throw new CommandException(MESSAGE_PERSONS_NOT_FOUND);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"ketweeen"},"content":"        for (Person person : personsToDelete) {","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"            model.deletePerson(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"        List\u003cEvent\u003e eventsToDelete \u003d lastShownEventList.stream()","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"                .filter(event -\u003e personsToDelete.stream()","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"                        .anyMatch(person -\u003e event.getPerson().isSamePerson(person)))","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"        for (Event event : eventsToDelete) {","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"            model.deleteEvent(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"                personsToDelete.size() \u003d\u003d 1 ? Messages.format(personsToDelete.get(0))","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"                        : personsToDelete.size() + \" persons\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"ketweeen"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex)","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"ketweeen"},"content":"                \u0026\u0026 predicatesList.equals(otherDeleteCommand.predicatesList);","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"ketweeen"},"content":"        ToStringBuilder stringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"ketweeen"},"content":"        if (targetIndex.isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"ketweeen"},"content":"            return stringBuilder.add(\"targetIndex\", targetIndex).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"ketweeen"},"content":"        if (!predicatesList.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"ketweeen"},"content":"            return stringBuilder.add(\"predicateList\", predicatesList).toString();","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"ketweeen"},"content":"        return stringBuilder.add(\"invalid\", \"No valid target specified\").toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ketweeen":53,"MadLamprey":18,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"            + \"[\" + PREFIX_SCORE + \"SCORE] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"        containsIllegalTagScore(editedPerson);","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"        updateScoreList(personToEdit, editedPerson);","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"        model.loadSummaryStatistics();","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"        for (Event event : lastShownEventList) {","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"            if (event.getPerson().isSamePerson(personToEdit)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"                Event updatedEvent \u003d new Event(editedPerson, event.getDescription(), event.getStart_time(),","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"                        event.getEnd_time());","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"                model.setEvent(event, updatedEvent);","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"    private void updateScoreList(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"        // If the tags are the same, then the score list can be updated through setting editedPerson","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"        if (personToEdit.getTags().equals(editedPerson.getTags())) {","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"            return;","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"        // If there are no more tags, we should clean the score-list","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"        ScoreList newScoreList \u003d editedPerson.getScoreList();","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"        Set\u003cTag\u003e newTags \u003d editedPerson.getTags();","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"        if (newTags.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"            editedPerson.setScoreList(new ScoreList());","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"            return;","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"        // If there is a difference in tags, delete all those that are not in current updated tags","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"        for (Tag tag : newScoreList.getTagsWithScore()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"            if (!newTags.contains(tag)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"                newScoreList.removeScore(tag);","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"sk2001git"},"content":"        editedPerson.setScoreList(newScoreList);","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"sk2001git"},"content":"    private boolean containsIllegalTagScore(Person person) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"sk2001git"},"content":"        Set\u003cTag\u003e currentTags \u003d person.getTags();","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"        if (currentTags.isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"sk2001git"},"content":"        List\u003cTag\u003e tagsWithScore \u003d person.getScoreList().getTagsWithScore();","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"sk2001git"},"content":"        for (Tag tag : tagsWithScore) {","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"sk2001git"},"content":"            if (!currentTags.contains(tag)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"sk2001git"},"content":"                throw new CommandException(Messages.MESSAGE_ILLEGAL_TAG_SCORE);","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"sk2001git"},"content":"        return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"sk2001git"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark();","lastModifiedDate":"2023-09-25"},{"lineNumber":164,"author":{"gitId":"sk2001git"},"content":"        LinkedIn updatedLinkedIn \u003d personToEdit.getLinkedIn();","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"sk2001git"},"content":"        Github updatedGithub \u003d personToEdit.getGithub();","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"sk2001git"},"content":"        Status updatedStatus \u003d personToEdit.getStatus();","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"sk2001git"},"content":"        Person editedPerson \u003d new Person(updatedName, updatedPhone,","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"sk2001git"},"content":"                updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"sk2001git"},"content":"        ScoreList updatedScoreList \u003d createEditedScoreList(personToEdit.getScoreList(),","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"sk2001git"},"content":"                editPersonDescriptor.getScoreList());","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"sk2001git"},"content":"        editedPerson.setScoreList(updatedScoreList);","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"sk2001git"},"content":"        editedPerson.setGithub(updatedGithub);","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"sk2001git"},"content":"        editedPerson.setLinkedIn(updatedLinkedIn);","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"sk2001git"},"content":"        editedPerson.setStatus(updatedStatus);","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"sk2001git"},"content":"        return editedPerson;","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"sk2001git"},"content":"    private static ScoreList createEditedScoreList(","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"sk2001git"},"content":"            ScoreList oldScoreList,","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"sk2001git"},"content":"            Optional\u003cScoreList\u003e editPersonDescriptorScoreList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"sk2001git"},"content":"        Optional\u003cScoreList\u003e editedScoreList \u003d editPersonDescriptorScoreList.filter(scoreList -\u003e !scoreList.isEmpty());","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"sk2001git"},"content":"        if (!editedScoreList.isPresent()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"sk2001git"},"content":"            return oldScoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"sk2001git"},"content":"        ScoreList updatedScoreList \u003d editPersonDescriptorScoreList.get();","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"sk2001git"},"content":"        // The score list that is updated, only contains the update pair, which is 1 pair of tag score entry","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"sk2001git"},"content":"        Tag newTag \u003d updatedScoreList.getTagsWithScore().get(0);","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"sk2001git"},"content":"        Score newScore \u003d updatedScoreList.getScore(newTag);","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"sk2001git"},"content":"        oldScoreList.updateScoreList(newTag, newScore);","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"sk2001git"},"content":"        return oldScoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"sk2001git"},"content":"        private ScoreList scoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"sk2001git"},"content":"            setScoreList(toCopy.scoreList);","lastModifiedDate":"2023-10-28"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"sk2001git"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, scoreList, tags);","lastModifiedDate":"2023-10-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"sk2001git"},"content":"        public void setScoreList(ScoreList scoreList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":290,"author":{"gitId":"sk2001git"},"content":"            this.scoreList \u003d (scoreList !\u003d null) ? scoreList : null;","lastModifiedDate":"2023-11-01"},{"lineNumber":291,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":292,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":293,"author":{"gitId":"sk2001git"},"content":"        public Optional\u003cScoreList\u003e getScoreList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":294,"author":{"gitId":"sk2001git"},"content":"            return this.scoreList \u003d\u003d null ? Optional.empty() : Optional.ofNullable(scoreList);","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":296,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":306,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":307,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":308,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":330,"author":{"gitId":"sk2001git"},"content":"                    \u0026\u0026 Objects.equals(scoreList, otherEditPersonDescriptor.scoreList)","lastModifiedDate":"2023-10-28"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":341,"author":{"gitId":"sk2001git"},"content":"                    .add(\"score-list\", scoreList)","lastModifiedDate":"2023-10-28"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"sk2001git":91,"MadLamprey":12,"-":243}},{"path":"src/main/java/seedu/address/logic/commands/EventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * Adds an Event to JABPro.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds Event relating to a candidate. \"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            + \"Parameters: \" + \"[\" + COMMAND_WORD + \" \u003cUSERID\u003e d/\u003cDESCRIPTION\u003e bt/\u003cBEGIN_TIME\u003e et/\u003cEND_TIME\u003e]...\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 d/Interview Round 1 bt/2023-10-22 09:00 et/2023-10-22 10:00\";","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Event added: %1$s\";","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"            \"An event with the same description, for the same person, already exists!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private final Event event;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"     * Creates an EventCommand to add event.","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     * @param event The event to be added.","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        Index targetIndex \u003d event.getIndex();","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        Person person \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        Event event1 \u003d new Event(person, event.getDescription(), event.getStart_time(), event.getEnd_time());","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        if (model.hasEvent(event1)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        model.addEvent(event1);","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, event1),","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"                false, false, false, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof EventCommand)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        EventCommand otherEventCommand \u003d (EventCommand) other;","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        return event.equals(otherEventCommand.event);","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"                .add(\"event\", event)","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"                .toString();","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ketweeen":1,"MadLamprey":79}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ketweeen":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":" * Exports the current dataset into Excel (.csv) format -- into the /data folder","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exports the current address book to Excel format \"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"            + \"export\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sucessfully Exported\";","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"    private String defaulltPath \u003d \"data/export.csv\";","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"     * Empty constructor,","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    public ExportCommand() {}","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"        try (FileWriter writer \u003d new FileWriter(defaulltPath)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"            writer.append(StringUtil.appendPersons(model));","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"            throw new CommandException(\"Error exporting data: \" + e.getMessage());","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"     * Checks if the other command is an equivalent ExportCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"     * @param other the other object to be compared","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"        return other instanceof ExportCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"        return \"ExportCommand\";","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ScarletBlanks":58}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.StatisticMetric;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.SummaryStatistic;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":" * Filters the list of users by the given metric and value.","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_INVALID_TAG \u003d \"Invalid tag provided. Needs to be non-empty name\";","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_INVALID_METRIC \u003d \"Invalid metric provided. Needs to be one of: \"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"            + \"score, mean, median, percentile\";","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_INVALID_VALUE \u003d \"Invalid value provided. Needs to be a non negative integer \"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"            + \"that is more than or equal to 0\";","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters the list of users whose value is greater \"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"            + \"or equal to the value provided for the given metric and tag. \\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"            + \"t/TAG  (Tag must be a non-empty name of type assessment), \"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"            + \"met/METRIC  (Metric must be one of: score, mean, median, percentile), \"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"            + \"val/VALUE (Value must be a non-negative integer, OPTIONAL for mean and median \\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"t/Interview met/SCORE val/50\"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"t/Interview met/MEAN\";","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    private final StatisticMetric metric;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    private final int value;","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    private final Tag tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"     * Creates a FilterCommand to filter the list of users by the given metric and value.","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"     * @param tag","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"     * @param metric","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"     * @param value","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    public FilterCommand(Tag tag, StatisticMetric metric, int value) {","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(tag, metric, value);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        this.metric \u003d metric;","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        if (summaryStatistic.getNumOfPeopleAssociatedWithTag(tag) \u003d\u003d 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"            throw new CommandException(Messages.MESSAGE_TAG_DOES_NOT_EXIST);","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e filteredPersonWithGreaterVal \u003d summaryStatistic.filteredPersonList(tag, metric, value);","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        model.updateFilteredPersonList(person -\u003e isFilteredPerson(filteredPersonWithGreaterVal, person));","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(String.format(successMessage(model.getFilteredPersonList().size())));","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"     * Checks if the person is in the filtered list.","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"     * @param filteredList","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"     * @param person","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"     * @return true if the person is in the filtered list, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"    public boolean isFilteredPerson(List\u003cPerson\u003e filteredList, Person person) {","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        if (filteredList.contains(person)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"        return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"     * Returns the success message for the filter command.","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"     * @param numberOfPeople number of people in the filtered list","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"     * @return success message for the filter command","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"    public String successMessage(int numberOfPeople) {","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"        String message \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, numberOfPeople)","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"                + \"\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"                + String.format(\"There are %d people with a value more than the value provided for the given metric %s\",","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"                numberOfPeople, metric);","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"        return message;","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"        return this.tag.equals(otherFilterCommand.tag)","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 this.metric.equals(otherFilterCommand.metric)","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 this.value \u003d\u003d otherFilterCommand.value;","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"sk2001git":102}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    public static final String COMMAND_WORD \u003d \"search\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Searches users by categories (e.g. name, status, tags)\"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"            + \" whose details match the given keywords (case-insensitive) \"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alex bernice st/interviewed t/softwareEngineer\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    private final List\u003cPredicate\u003cPerson\u003e\u003e predicatesList;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * Creates an FindCommand to find the specified {@code Person}","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    public FindCommand(List\u003cPredicate\u003cPerson\u003e\u003e predicatesList) {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        this.predicatesList \u003d predicatesList;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        model.updateFilteredPersonList(predicatesList);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        Boolean isListEqual \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e otherPredicates \u003d otherFindCommand.predicatesList;","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"        if (predicatesList.size() !\u003d otherPredicates.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"        for (int i \u003d 0; i \u003c predicatesList.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"            isListEqual \u003d predicatesList.get(i).equals(otherPredicates.get(i));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"        return isListEqual;","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"                .add(\"predicates list\", predicatesList)","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"AriellaCallista":29,"ketweeen":1,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/GithubCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.awt.Desktop;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.net.URI;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * Redirects user to the Github account of a specific candidates.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"public class GithubCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    public static final String COMMAND_WORD \u003d \"github\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Redirects to user\u0027s Github account. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            + \"Parameters: \" + \"[\" + COMMAND_WORD + \" \u003cUSERID\u003e]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redirecting to Github ...\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    public GithubCommand(Index index) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        String username \u003d personToEdit.getGithub().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        if (username.isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(\"No Github account has been added for this candidate.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        String githubUrl \u003d \"https://github.com/\" + username;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"            Desktop.getDesktop().browse(new URI(githubUrl));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":54}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ketweeen":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/LinkedInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.awt.Desktop;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.net.URI;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * Redirects the user to the LinkedIn account of a specific candidate.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"public class LinkedInCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    public static final String COMMAND_WORD \u003d \"linkedin\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Redirects to user\u0027s LinkedIn account. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            + \"Parameters: \" + \"[\" + COMMAND_WORD + \" \u003cUSERID\u003e]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redirecting to LinkedIn ...\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    public LinkedInCommand(Index index) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        String username \u003d personToEdit.getLinkedIn().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        if (username.isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(\"No LinkedIn account has been added for this candidate.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        String linkedInUrl \u003d \"https://www.linkedin.com/in/\" + username;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"            Desktop.getDesktop().browse(new URI(linkedInUrl));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":54}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all persons. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"            + \"Parameters: [so/ATTRIBUTE]\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"            + \"Optional: ATTRIBUTE can be \u0027name\u0027 or other attributes for sorting.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_SORT + \"name\";","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"    public static final Comparator\u003cPerson\u003e DEFAULT_COMPARATOR \u003d (person1, person2) -\u003e 0; // Comparator that does nothing","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    private final Comparator\u003cPerson\u003e sortingComparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"     * Creates a ListCommand with the specified sorting comparator.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"     * @param sortingComparator The comparator to be used for sorting the person list.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"    public ListCommand(Comparator\u003cPerson\u003e sortingComparator) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"        this.sortingComparator \u003d sortingComparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"     * Gets the sorting comparator currently set for sorting the list of persons.","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"     * @return The comparator used for sorting the list.","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"    public Comparator\u003cPerson\u003e getSortingComparator() {","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"        return sortingComparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"        model.sortPersonList(sortingComparator);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ketweeen":29,"-":25}},{"path":"src/main/java/seedu/address/logic/commands/ListTCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TAGS;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":" * Lists all tags in the address book.","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"public class ListTCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    public static final String COMMAND_WORD \u003d \"listT\";","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tags\";","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all tags. \"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        model.updateFilteredTagList(PREDICATE_SHOW_ALL_TAGS);","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, false, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ketweeen":33}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import java.util.List;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.parser.RemarkSyntaxHandler;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    private final Index index;","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    private final Remark remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    private final boolean isKeepRemark;","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        this.isKeepRemark \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"     * @param isKeepRemark whether to keep the old remark","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"    public RemarkCommand(Index index, Remark remark, boolean isKeepRemark) {","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        this.isKeepRemark \u003d isKeepRemark;","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"        Remark newRemark \u003d remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"        if (isKeepRemark) {","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"            Remark currentRemark \u003d personToEdit.getRemark();","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"            newRemark \u003d RemarkSyntaxHandler.generateKeepRemarkCommand(remark.value, currentRemark);","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"                personToEdit.getAddress(), newRemark, personToEdit.getTags());","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-09-25"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson), true);","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"        return String.format(message, Messages.format(personToEdit));","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-09-25"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 remark.equals(e.remark) \u0026\u0026 isKeepRemark \u003d\u003d e.isKeepRemark;","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"sk2001git":117}},{"path":"src/main/java/seedu/address/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows events.\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    public static final String SHOWING_SCHEDULE_MESSAGE \u003d \"Opened events window.\";","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        model.sortEventList(Comparator.comparing(Event::getStart_time));","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        model.updateFilteredEventList(Model.PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        return new CommandResult(SHOWING_SCHEDULE_MESSAGE, false, false, false, true, false);","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"MadLamprey":26}},{"path":"src/main/java/seedu/address/logic/commands/SetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":" * Sets the status of a person in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"public class SetCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String MESSAGE_SET_PERSON_SUCCESS \u003d \"SET Person: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String COMMAND_WORD \u003d \"set\";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"            + \": Sets the status of a person. \" + \"Parameters: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"            + \"[\" + COMMAND_WORD + \" \u003cUSERID\u003e \u003cSTATUS\u003e]...\\n\" + \"Example: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"            + COMMAND_WORD + \" 5 Interviewed\";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Status set for: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    private final StatusTypes newStatus;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    private final Index index;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates a SetCommand to set the status of the person at the specified target index.","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"     * @param index     The index of the person to set the status.","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"     * @param newStatus The new status to set.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"    public SetCommand(Index index, StatusTypes newStatus) {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"        requireNonNull(newStatus);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"        this.newStatus \u003d newStatus;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"        personToEdit.getStatus().setStatusType(newStatus);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(String.format(MESSAGE_SET_PERSON_SUCCESS, Messages.format(personToEdit)), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"                .add(\"targetIndex\", index)","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"                .add(\"newStatus\", newStatus)","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"    public boolean equals(SetCommand this, SetCommand other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"        return this.index.equals(other.index) \u0026\u0026 this.newStatus.equals(other.newStatus);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"sk2001git":2,"ScarletBlanks":77}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":" * Views a person identified using it\u0027s last displayed index from the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"            + \": Views the details of the person identified \"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"            + \"by the index number used in the last person listing. \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"            + \"Parameters: INDEX (must be a positive integer) \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_SUCCESSFUL_VIEW \u003d \"Full-view shown for  Person: %1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    private final Index index;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"     * Constructor for ViewCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"     * @param index of the person in the filtered person list to view","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        model.loadSummaryStatistics();","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        Person personToView \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(generateSuccessMessage(personToView), true);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"     * Generates a command execution success message for viewing {@code personToView}.","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    private String generateSuccessMessage(Person personToView) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        return String.format(MESSAGE_SUCCESSFUL_VIEW, Messages.format(personToView));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        ViewCommand v \u003d (ViewCommand) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        return index.equals(v.index);","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"sk2001git":72}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        Remark remark \u003d new Remark(\"\");","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"sk2001git":3,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/AddGCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddGCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":" * Parses input arguments and creates a new AddLCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"public class AddGCommandParser implements Parser\u003cAddGCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * Parses the given {@code String} of arguments in the context of the AddLCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     * and returns an AddLCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public AddGCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, PREFIX_USERNAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        if (!arePrefixesPresent(argMultiMap, PREFIX_USERNAME)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"            index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        String username \u003d argMultiMap.getValue(PREFIX_USERNAME).orElse(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        return new AddGCommand(index, new Github(username));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":49}},{"path":"src/main/java/seedu/address/logic/parser/AddLCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddLCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":" * Parses input arguments and creates a new AddLCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"public class AddLCommandParser implements Parser\u003cAddLCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * Parses the given {@code String} of arguments in the context of the AddLCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     * and returns an AddLCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public AddLCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, PREFIX_USERNAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"            index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        if (!arePrefixesPresent(argMultiMap, PREFIX_USERNAME)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        String username \u003d argMultiMap.getValue(PREFIX_USERNAME).orElse(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        return new AddLCommand(index, new LinkedIn(username));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":49}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddGCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddLCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.logic.commands.CreateTagCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.GithubCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.LinkedInCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.commands.ListTCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"ketweeen"},"content":"        case ListTCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"            return new ListTCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"        case AddLCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"            return new AddLCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"        case AddGCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"            return new AddGCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"        case LinkedInCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"            return new LinkedInCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"        case GithubCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"            return new GithubCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"ScarletBlanks"},"content":"        case SetCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"ScarletBlanks"},"content":"            return new SetCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"            return new EventCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"            return new ScheduleCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"ScarletBlanks"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"ScarletBlanks"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"AriellaCallista"},"content":"        case CreateTagCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"AriellaCallista"},"content":"            return new CreateTagCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":11,"ScarletBlanks":10,"AriellaCallista":3,"ketweeen":4,"MadLamprey":24,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"    public static final Prefix PREFIX_VIEW \u003d new Prefix(\"v/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    public static final Prefix PREFIX_SORT \u003d new Prefix(\"so/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"st/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public static final Prefix PREFIX_USERNAME \u003d new Prefix(\"u/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    public static final Prefix PREFIX_STARTTIME \u003d new Prefix(\"bt/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public static final Prefix PREFIX_ENDTIME \u003d new Prefix(\"et/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    public static final Prefix PREFIX_SCORE \u003d new Prefix(\"sc/\");","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    public static final Prefix PREFIX_METRIC \u003d new Prefix(\"met/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    public static final Prefix PREFIX_VALUE \u003d new Prefix(\"val/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sk2001git":6,"ketweeen":2,"MadLamprey":4,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/CreateTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.logic.commands.CreateTagCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":" * Parses user input and creates a new CreateTagCommand.","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"public class CreateTagCommandParser implements Parser\u003cCreateTagCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"     * Parses the given user input and creates a CreateTagCommand.","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     * @param args The user input arguments.","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @return A CreateTagCommand based on the parsed input.","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @throws ParseException If the input does not conform to the expected format.","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    public CreateTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        String[] tagParams \u003d ParserUtil.parseTagCategories(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"        return new CreateTagCommand(tagParams);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"AriellaCallista":49}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        // Try index-based deletion first","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"            // Ignore parsing exception and continue","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        // If not delete by index","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"        List\u003cString\u003e statusKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"        List\u003cString\u003e tagKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"        if (!(arePrefixesPresent(argMultimap, PREFIX_STATUS) || arePrefixesPresent(argMultimap, PREFIX_TAG))","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_STATUS)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"            setKeywords(statusKeywords, tagKeywords, argMultimap, PREFIX_STATUS);","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"            setKeywords(statusKeywords, tagKeywords, argMultimap, PREFIX_TAG);","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d new StatusContainsKeywordsPredicate(statusKeywords);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d new TagContainsKeywordsPredicate(tagKeywords);","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"        return new DeleteCommand(getPredicatesList(statusKeywords, tagKeywords, statusPredicate, tagPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"    private List\u003cPredicate\u003cPerson\u003e\u003e getPredicatesList(List\u003cString\u003e statusKeywords,","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"                                                      List\u003cString\u003e tagKeywords,","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"                                                      StatusContainsKeywordsPredicate statusPredicate,","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"                                                      TagContainsKeywordsPredicate tagPredicate) {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicatesList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"                if (!statusKeywords.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"                    add(statusPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"                if (!tagKeywords.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"                    add(tagPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"            }};","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"        return predicatesList;","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"    private void setKeywords(List\u003cString\u003e statusKeywords,","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"                             List\u003cString\u003e tagKeywords,","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"                             ArgumentMultimap argMultimap,","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"                             Prefix prefix) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"ketweeen"},"content":"        if (prefix.equals(PREFIX_STATUS)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"ketweeen"},"content":"            List\u003cString\u003e keywords \u003d ParserUtil.parseSinglePrefixStatus(argMultimap.getAllValues(PREFIX_STATUS));","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"ketweeen"},"content":"                statusKeywords.add(keyword);","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"ketweeen"},"content":"        if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"ketweeen"},"content":"            List\u003cString\u003e keywords \u003d ParserUtil.parseSinglePrefixTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"                tagKeywords.add(keyword);","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ketweeen":69,"-":30}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"                        PREFIX_ADDRESS, PREFIX_SCORE, PREFIX_TAG);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_SCORE);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        if (argMultimap.getValue(PREFIX_SCORE).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"            ScoreList scoreList \u003d createScoreListForParse(argMultimap.getValue(PREFIX_SCORE).get());","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"            editPersonDescriptor.setScoreList(scoreList);","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        // Return empty score list if not edited, just like tags, scorelist is optional","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"        if (!editPersonDescriptor.getScoreList().isPresent()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"            editPersonDescriptor.setScoreList(new ScoreList());","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"    private ScoreList createScoreListForParse(String scoreWithTag) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList \u003d new ScoreList();","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"        Pair\u003cTag, Score\u003e tagScorePair \u003d ParserUtil.parseTagScore(scoreWithTag);","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"        scoreList.updateScoreList(tagScorePair.getKey(), tagScorePair.getValue());","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"        return scoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"sk2001git":25,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/EventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INCORRECT_DATE_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_DATE;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_START;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":" * Parses input arguments and returns an EventCommand object.","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"public class EventCommandParser implements Parser\u003cEventCommand\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"     * Parses the given {@code String} in the context of an EventCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"     * and returns an EventCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    public EventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION,","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"                PREFIX_STARTTIME, PREFIX_ENDTIME);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_STARTTIME, PREFIX_ENDTIME)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        LocalDateTime startTime;","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        LocalDateTime endTime;","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"            startTime \u003d LocalDateTime.parse(argMultimap.getValue(PREFIX_STARTTIME).get(),","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"                    DateTimeFormatter.ofPattern(\"uuuu-MM-dd HH:mm\").withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"            endTime \u003d LocalDateTime.parse(argMultimap.getValue(PREFIX_ENDTIME).get(),","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"                    DateTimeFormatter.ofPattern(\"uuuu-MM-dd HH:mm\").withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"            String s \u003d e.getMessage();","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"            if (s.contains(\"Invalid\")) {","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"                throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"            } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"                throw new ParseException(MESSAGE_INCORRECT_DATE_FORMAT);","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        if (!(endTime.isAfter(startTime))) {","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(MESSAGE_INVALID_START);","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        Index index;","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        Event event \u003d new Event(index, description, startTime, endTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        return new EventCommand(event);","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"MadLamprey":73}},{"path":"src/main/java/seedu/address/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"public class ExportCommandParser implements Parser\u003cExportCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"     * Parses the given {@code String} of arguments in the context of the SetCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"     * and returns a SetCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    public ExportCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"        return new ExportCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ScarletBlanks":24}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_METRIC;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.StatisticMetric;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(FilterCommandParser.class);","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"     * @param args String of arguments","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"     * @return FilterCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"        UniqueTagList uniqueTagList \u003d new UniqueTagList();","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG, PREFIX_METRIC, PREFIX_VALUE);","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG, PREFIX_METRIC, PREFIX_VALUE);","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        if (!(argMultimap.getValue(PREFIX_TAG).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_METRIC).isPresent())) {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(String.format(\"Incomplete parameter inputs. t/TAG and met/SCORE are compulsory\"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"                    + \"fields. \\n\" + FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        String tagName \u003d argMultimap.getValue(PREFIX_TAG).orElse(\"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        if (!(Tag.isValidTagName(tagName)","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 ScoreList.isValidScoreTag(uniqueTagList.getTag(tagName, \"assessment\")))) {","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(String.format(FilterCommand.MESSAGE_INVALID_TAG));","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        if (!StatisticMetric.isValidMetric(argMultimap.getValue(PREFIX_METRIC).orElse(\"\"))) {","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(String.format(FilterCommand.MESSAGE_INVALID_METRIC));","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        Tag tag \u003d new Tag(argMultimap.getValue(PREFIX_TAG).get(), \"assessment\");","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        StatisticMetric metric \u003d StatisticMetric.valueOf(argMultimap.getValue(PREFIX_METRIC).get().toUpperCase());","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        if (!StatisticMetric.isScoreRelevant(argMultimap.getValue(PREFIX_METRIC).orElse(\"\"))) {","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"            return new FilterCommand(tag, metric, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        if (!argMultimap.getValue(PREFIX_VALUE).isPresent()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(String.format(\"val/VALUE is missing, it is compulsory. \\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"                    + FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"            int value \u003d Integer.parseInt(argMultimap.getValue(PREFIX_VALUE).orElse(\"0\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"            if (!Score.isValidScoreValue(value)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"                throw new ParseException(String.format(FilterCommand.MESSAGE_INVALID_VALUE));","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(String.format(FilterCommand.MESSAGE_INVALID_VALUE));","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        int value \u003d Integer.parseInt(argMultimap.getValue(PREFIX_VALUE).get());","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        return new FilterCommand(tag, metric, value);","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"sk2001git":80}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cString\u003e nameKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cString\u003e statusKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cString\u003e tagKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        if (!(arePrefixesPresent(argMultimap, PREFIX_NAME) || arePrefixesPresent(argMultimap, PREFIX_STATUS)","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_TAG))","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"            setKeywords(nameKeywords, statusKeywords, tagKeywords, argMultimap, PREFIX_NAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_STATUS)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"            setKeywords(nameKeywords, statusKeywords, tagKeywords, argMultimap, PREFIX_STATUS);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"            setKeywords(nameKeywords, statusKeywords, tagKeywords, argMultimap, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(nameKeywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d new StatusContainsKeywordsPredicate(statusKeywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d new TagContainsKeywordsPredicate(tagKeywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"        return new FindCommand(getPredicatesList(nameKeywords, statusKeywords, tagKeywords,","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"                namePredicate, statusPredicate, tagPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"    private List\u003cPredicate\u003cPerson\u003e\u003e getPredicatesList(List\u003cString\u003e nameKeywords,","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"                                                      List\u003cString\u003e statusKeywords,","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"                                                      List\u003cString\u003e tagKeywords,","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"                                                      NameContainsKeywordsPredicate namePredicate,","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"                                                      StatusContainsKeywordsPredicate statusPredicate,","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"                                                      TagContainsKeywordsPredicate tagPredicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicatesList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"                if (!nameKeywords.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"                    add(namePredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"                if (!statusKeywords.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"                    add(statusPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"                if (!tagKeywords.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"                    add(tagPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"            }};","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"        return predicatesList;","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"    private void setKeywords(List\u003cString\u003e nameKeywords,","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"                             List\u003cString\u003e statusKeywords,","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"                             List\u003cString\u003e tagKeywords,","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"                             ArgumentMultimap argMultimap,","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"                             Prefix prefix) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"            List\u003cString\u003e keywords \u003d ParserUtil.parseSinglePrefixName(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"                nameKeywords.add(keyword);","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"        if (prefix.equals(PREFIX_STATUS)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"            List\u003cString\u003e keywords \u003d ParserUtil.parseSinglePrefixStatus(argMultimap.getAllValues(PREFIX_STATUS));","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"                statusKeywords.add(keyword);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"        if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"ketweeen"},"content":"            List\u003cString\u003e keywords \u003d ParserUtil.parseSinglePrefixTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"                tagKeywords.add(keyword);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"AriellaCallista":81,"ketweeen":3,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/GithubCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.GithubCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":" * Parses input arguments and creates a new GithubCommand object.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"public class GithubCommandParser implements Parser\u003cGithubCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     * Parses the given {@code String} of arguments in the context of the GithubCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"     * and returns a GithubCommand object.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    public GithubCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"            return new GithubCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GithubCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":27}},{"path":"src/main/java/seedu/address/logic/parser/LinkedInCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.LinkedInCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":" * Parses input arguments and creates a new GithubCommand object.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"public class LinkedInCommandParser implements Parser\u003cLinkedInCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     * Parses the given {@code String} of arguments in the context of the LinkedInCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"     * and returns a LinkedInCommand object.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    public LinkedInCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"            return new LinkedInCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkedInCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":27}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":" * Parses input arguments and creates a new ListCommand object with sorting options.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     * and returns an ListCommand object for execution.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_SORT);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        String sortingAttribute \u003d argMultimap.getValue(CliSyntax.PREFIX_SORT).orElse(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"        // Create the sorting comparator based on the sorting attribute","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"        Comparator\u003cPerson\u003e sortingComparator \u003d createSortingComparator(sortingAttribute);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"        return new ListCommand(sortingComparator);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"     * Creates a sorting comparator based on the specified sorting attribute.","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"     * @param sortingAttribute The attribute by which the list should be sorted (e.g., \"name\" or \"email\").","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"     * @return A comparator for sorting based on the specified attribute.","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"    private Comparator\u003cPerson\u003e createSortingComparator(String sortingAttribute) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"        if (\"name\".equalsIgnoreCase(sortingAttribute)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"            return Comparator.comparing(Person::getName);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"        } else if (\"email\".equalsIgnoreCase(sortingAttribute)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"            return Comparator.comparing(Person::getEmail);","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"            return ListCommand.DEFAULT_COMPARATOR; // A comparator that does nothing","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ketweeen":52}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"     * Parses a {@code String statusType} into a {@code StatusType}.","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"     * @throws ParseException if the given {@code statusType} is invalid.","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"    public static StatusTypes parseStatusType(String statusType) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"        requireNonNull(statusType);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"        String trimmedStatus \u003d statusType.trim().toLowerCase();","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"        if (!StatusTypes.isValidStatusType(trimmedStatus)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"            throw new ParseException(\"PLACEHOLDER: PARSE_EXCEPTION STATUS TYPE\");","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"        switch (trimmedStatus) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"        case \"interviewed\":","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"            return StatusTypes.INTERVIEWED;","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"        case \"offered\":","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"            return StatusTypes.OFFERED;","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"ScarletBlanks"},"content":"        case \"rejected\":","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"            return StatusTypes.REJECTED;","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"        case \"preliminary\":","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"            return StatusTypes.PRELIMINARY;","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"        default:","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"            throw new ParseException(\"e\");","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"AriellaCallista"},"content":"    public static Tag parseTag(String tagName, String tagCategory) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(tagCategory);","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"AriellaCallista"},"content":"        UniqueTagList uniqueTagList \u003d new UniqueTagList();","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"AriellaCallista"},"content":"        String trimmedTag \u003d tagName.trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"AriellaCallista"},"content":"        return uniqueTagList.getTag(trimmedTag, tagCategory);","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"AriellaCallista"},"content":"        String listTags \u003d tags.toString();","lastModifiedDate":"2023-11-03"},{"lineNumber":160,"author":{"gitId":"AriellaCallista"},"content":"        String cleanedList \u003d listTags.replaceAll(\"[\\\\[\\\\]]\", \"\");","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"AriellaCallista"},"content":"        String[] tagNameCategoryPairs \u003d cleanedList.split(\",\");","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"AriellaCallista"},"content":"        if (tagNameCategoryPairs.length \u003d\u003d 1 \u0026\u0026 tagNameCategoryPairs[0].isBlank()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"AriellaCallista"},"content":"            return tagSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"AriellaCallista"},"content":"        for (String tagNameCategory : tagNameCategoryPairs) {","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"AriellaCallista"},"content":"            if (tagNameCategory.split(\"\\\\s+\").length \u003e 1) {","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"AriellaCallista"},"content":"                String[] nameCategory \u003d tagNameCategory.split(\"\\\\s+\");","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"AriellaCallista"},"content":"                // category specified","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"AriellaCallista"},"content":"                String tagName \u003d nameCategory[1];","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"AriellaCallista"},"content":"                String tagCategory \u003d nameCategory[0];","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"AriellaCallista"},"content":"                tagSet.add(parseTag(tagName, tagCategory));","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"AriellaCallista"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"AriellaCallista"},"content":"                // category not specified","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"AriellaCallista"},"content":"                tagSet.add(parseTag(tagNameCategory, \"\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":181,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"AriellaCallista"},"content":"     * Parses a collection of tag strings into an array of tag categories.","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"AriellaCallista"},"content":"     * @param tags A collection of tag strings to be parsed.","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"AriellaCallista"},"content":"     * @return An array of tag categories extracted from the provided collection of tag strings.","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"AriellaCallista"},"content":"    public static String[] parseTagCategories(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"AriellaCallista"},"content":"        String listTags \u003d tags.toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"AriellaCallista"},"content":"        String cleanedList \u003d listTags.replaceAll(\"[\\\\[\\\\]]\", \"\");","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"AriellaCallista"},"content":"        String[] tagParams \u003d cleanedList.split(\",\");","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"AriellaCallista"},"content":"        for (String tag : tagParams) {","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"AriellaCallista"},"content":"            if (tag.split(\"\\\\s+\").length \u003e 1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"AriellaCallista"},"content":"                if (!Tag.isValidTagName(tag.split(\"\\\\s+\")[1])) {","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"AriellaCallista"},"content":"                    throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"AriellaCallista"},"content":"            } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":199,"author":{"gitId":"AriellaCallista"},"content":"                if (!Tag.isValidTagName(tag)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":200,"author":{"gitId":"AriellaCallista"},"content":"                    throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-03"},{"lineNumber":201,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-11-03"},{"lineNumber":202,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"AriellaCallista"},"content":"        return tagParams;","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"ketweeen"},"content":"     * Parses a list of keywords into an array of strings.","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"ketweeen"},"content":"     * @param keywordsList A list of keywords, where each element may contain multiple words.","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"ketweeen"},"content":"     * @return An array of strings where each element represents an individual keyword.","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"ketweeen"},"content":"     * @throws ParseException if any of the search parameters contain non-alphanumeric characters e.g. commas","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"ketweeen"},"content":"     *     The method first converts the list of keywords into a string representation,","lastModifiedDate":"2023-11-01"},{"lineNumber":215,"author":{"gitId":"ketweeen"},"content":"     *     e.g., [Alex, Yeoh] (including square brackets). It then removes the square brackets","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"ketweeen"},"content":"     *     from the string representation, resulting in a cleaned string, e.g., Alex, Yeoh (no square brackets).","lastModifiedDate":"2023-11-01"},{"lineNumber":217,"author":{"gitId":"ketweeen"},"content":"     *     Finally, the cleaned string is split into an array of strings, where each word separated","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"ketweeen"},"content":"     *     by a whitespace or comma is considered a single element.","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"ketweeen"},"content":"     *     Example:","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"ketweeen"},"content":"     *     If keywordsList is [\"John Doe\"], the returned array will be [\"John\", \"Doe\"].","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"ketweeen"},"content":"    private static String[] parseSinglePrefixParams(Collection\u003cString\u003e keywordsList) {","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"ketweeen"},"content":"        String list \u003d keywordsList.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"ketweeen"},"content":"        String cleanedList \u003d list.replaceAll(\"[\\\\[\\\\]]\", \"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"ketweeen"},"content":"        String[] singlePrefixParams \u003d cleanedList.split(\"\\\\s+\");","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"ketweeen"},"content":"        return singlePrefixParams;","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"ketweeen"},"content":"     * Parses {@code Collection\u003cString\u003e status parameters} into a {@code List\u003cString\u003e of status}.","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"ketweeen"},"content":"    public static List\u003cString\u003e parseSinglePrefixStatus(Collection\u003cString\u003e statuses)","lastModifiedDate":"2023-11-09"},{"lineNumber":234,"author":{"gitId":"ketweeen"},"content":"            throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(statuses);","lastModifiedDate":"2023-10-19"},{"lineNumber":236,"author":{"gitId":"ketweeen"},"content":"        String[] statusArr \u003d parseSinglePrefixParams(statuses);","lastModifiedDate":"2023-11-09"},{"lineNumber":237,"author":{"gitId":"AriellaCallista"},"content":"        final List\u003cString\u003e statusList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":238,"author":{"gitId":"AriellaCallista"},"content":"        for (String status : statusArr) {","lastModifiedDate":"2023-10-19"},{"lineNumber":239,"author":{"gitId":"AriellaCallista"},"content":"            status \u003d status.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"AriellaCallista"},"content":"            if (!StatusTypes.isValidStatusType(status.toLowerCase())) {","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"AriellaCallista"},"content":"                throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":243,"author":{"gitId":"ketweeen"},"content":"            checkArgument(StatusTypes.isValidStatusType(status.toLowerCase()), Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":244,"author":{"gitId":"AriellaCallista"},"content":"            statusList.add(status);","lastModifiedDate":"2023-10-19"},{"lineNumber":245,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":246,"author":{"gitId":"AriellaCallista"},"content":"        return statusList;","lastModifiedDate":"2023-10-19"},{"lineNumber":247,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":250,"author":{"gitId":"ketweeen"},"content":"     * Parses {@code Collection\u003cString\u003e name parameters} into a {@code List\u003cString\u003e of names}.","lastModifiedDate":"2023-11-01"},{"lineNumber":251,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":252,"author":{"gitId":"ketweeen"},"content":"    public static List\u003cString\u003e parseSinglePrefixName(Collection\u003cString\u003e names)","lastModifiedDate":"2023-11-09"},{"lineNumber":253,"author":{"gitId":"ketweeen"},"content":"            throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-10-19"},{"lineNumber":255,"author":{"gitId":"ketweeen"},"content":"        String[] nameArr \u003d parseSinglePrefixParams(names);","lastModifiedDate":"2023-11-09"},{"lineNumber":256,"author":{"gitId":"AriellaCallista"},"content":"        final List\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":257,"author":{"gitId":"AriellaCallista"},"content":"        for (String name : nameArr) {","lastModifiedDate":"2023-10-19"},{"lineNumber":258,"author":{"gitId":"AriellaCallista"},"content":"            name \u003d name.trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":259,"author":{"gitId":"AriellaCallista"},"content":"            if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":260,"author":{"gitId":"AriellaCallista"},"content":"                throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":261,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":262,"author":{"gitId":"ketweeen"},"content":"            checkArgument(Name.isValidName(name), Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"AriellaCallista"},"content":"            nameList.add(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":264,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":265,"author":{"gitId":"AriellaCallista"},"content":"        return nameList;","lastModifiedDate":"2023-10-19"},{"lineNumber":266,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":267,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":268,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"ketweeen"},"content":"     * Parses {@code Collection\u003cString\u003e tag parameters} into a {@code List\u003cString\u003e of tags}.","lastModifiedDate":"2023-11-01"},{"lineNumber":270,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"ketweeen"},"content":"    public static List\u003cString\u003e parseSinglePrefixTags(Collection\u003cString\u003e tags)","lastModifiedDate":"2023-11-09"},{"lineNumber":272,"author":{"gitId":"ketweeen"},"content":"            throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"ketweeen"},"content":"        String[] tagArr \u003d parseSinglePrefixParams(tags);","lastModifiedDate":"2023-11-09"},{"lineNumber":275,"author":{"gitId":"AriellaCallista"},"content":"        final List\u003cString\u003e tagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"AriellaCallista"},"content":"        for (String tag : tagArr) {","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"AriellaCallista"},"content":"            tag \u003d tag.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"AriellaCallista"},"content":"            if (!Tag.isValidTagName(tag)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"AriellaCallista"},"content":"                throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"AriellaCallista"},"content":"            tagList.add(tag);","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"AriellaCallista"},"content":"        return tagList;","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"AriellaCallista"},"content":"     * Parses a {@code String score} into a {@code Score}.","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"sk2001git"},"content":"     * @param score String to be parsed","lastModifiedDate":"2023-10-23"},{"lineNumber":290,"author":{"gitId":"sk2001git"},"content":"     * @return Score object","lastModifiedDate":"2023-10-23"},{"lineNumber":291,"author":{"gitId":"sk2001git"},"content":"     * @throws ParseException if the given {@code score} is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":292,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":293,"author":{"gitId":"sk2001git"},"content":"    public static Score parseScore(String score) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":294,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(score);","lastModifiedDate":"2023-10-23"},{"lineNumber":295,"author":{"gitId":"sk2001git"},"content":"        String trimmedScore \u003d score.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":296,"author":{"gitId":"sk2001git"},"content":"        if (!StringUtil.isNonNegativeInteger(trimmedScore)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":297,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":298,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":299,"author":{"gitId":"sk2001git"},"content":"        return new Score(Integer.parseInt(trimmedScore));","lastModifiedDate":"2023-10-23"},{"lineNumber":300,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":301,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":302,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":303,"author":{"gitId":"sk2001git"},"content":"     * Parses a Tag Score string input and turns it into a Pair with head as Tag and tail as Score.","lastModifiedDate":"2023-11-01"},{"lineNumber":304,"author":{"gitId":"sk2001git"},"content":"     * @param tagScore String to be parsed","lastModifiedDate":"2023-10-28"},{"lineNumber":305,"author":{"gitId":"sk2001git"},"content":"     * @return Pair with head as Tag and tail as Score","lastModifiedDate":"2023-11-01"},{"lineNumber":306,"author":{"gitId":"sk2001git"},"content":"     * @throws ParseException if the given {@code tagScorePair} is invalid.","lastModifiedDate":"2023-10-28"},{"lineNumber":307,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":308,"author":{"gitId":"sk2001git"},"content":"    public static Pair\u003cTag, Score\u003e parseTagScore(String tagScore) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":309,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(tagScore);","lastModifiedDate":"2023-10-28"},{"lineNumber":310,"author":{"gitId":"sk2001git"},"content":"        String trimmedTagScorePair \u003d tagScore.trim();","lastModifiedDate":"2023-10-28"},{"lineNumber":311,"author":{"gitId":"sk2001git"},"content":"        String[] tagScorePairArr \u003d trimmedTagScorePair.split(\" \");","lastModifiedDate":"2023-10-28"},{"lineNumber":312,"author":{"gitId":"sk2001git"},"content":"        if (tagScorePairArr.length !\u003d 2) {","lastModifiedDate":"2023-10-28"},{"lineNumber":313,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(\"Invalid score, score must be non-negative integer.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":314,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":315,"author":{"gitId":"AriellaCallista"},"content":"        Tag tag \u003d parseTag(tagScorePairArr[0], \"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":316,"author":{"gitId":"sk2001git"},"content":"        if (!ScoreList.isValidScoreTag(tag)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":317,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(\"Invalid score tag, tag must a tag of the category assessment (made using \"","lastModifiedDate":"2023-11-02"},{"lineNumber":318,"author":{"gitId":"sk2001git"},"content":"                    + \"the create command.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":319,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":320,"author":{"gitId":"sk2001git"},"content":"        Score score \u003d parseScore(tagScorePairArr[1]);","lastModifiedDate":"2023-10-28"},{"lineNumber":321,"author":{"gitId":"sk2001git"},"content":"        return new Pair\u003c\u003e(tag, score);","lastModifiedDate":"2023-10-28"},{"lineNumber":322,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sk2001git":37,"ScarletBlanks":27,"AriellaCallista":101,"ketweeen":38,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(RemarkCommandParser.class);","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        Index index;","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        String remarkText \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"        Remark remark \u003d new Remark(remarkText);","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        if (RemarkSyntaxHandler.isKeepRemark(args)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"            logger.fine(\"Keep remark detected, replacing relevant syntax with old remark\");","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"            return new RemarkCommand(index, remark, true);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"sk2001git":50}},{"path":"src/main/java/seedu/address/logic/parser/RemarkSyntaxHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":" * Parses special input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"public class RemarkSyntaxHandler {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"    public static final String REGEX_KEEP_REMARK \u003d \"\\\\*\\\\*REMARK\\\\*\\\\*\";","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"     * @param args the string to be parsed","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"     * @return true if the string contains the special syntax for keeping the remark","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    public static boolean isKeepRemark(String args) {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_KEEP_REMARK);","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"     * Generates a new remark based on the current remark and the special syntax **remark**","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"     * @param args the string to be parsed","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"     * @param currentRemark the current remark of the person","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"     * @return the new remark where **remark** is replaced by the current remark","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    public static Remark generateKeepRemarkCommand(String args, Remark currentRemark) {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        String resultString \u003d args.replaceAll(REGEX_KEEP_REMARK, currentRemark.value);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        return new Remark(resultString);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"sk2001git":44}},{"path":"src/main/java/seedu/address/logic/parser/SetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"public class SetCommandParser implements Parser\u003cSetCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"     * Parses the given {@code String} of arguments in the context of the SetCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     * and returns a SetCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    public SetCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"            String[] splitArgs \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"            if (splitArgs.length \u003c 2) {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"                throw new ParseException(SetCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"            StatusTypes newStatusType \u003d ParserUtil.parseStatusType((splitArgs[1]));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"            return new SetCommand(index, newStatusType);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"            throw new ParseException(SetCommand.MESSAGE_USAGE, e);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ScarletBlanks":39}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VIEW;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":" * Parses input arguments and creates a new {@code ViewCommand} object","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":" *","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code ViewCommand}","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"     * and returns a {@code ViewCommand} object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_VIEW);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        Index index;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"        return new ViewCommand(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"sk2001git":36}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"    private final UniqueTagList tags;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        tags \u003d new UniqueTagList();","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"ketweeen"},"content":"     * Sorts the address book using the provided comparator.","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"ketweeen"},"content":"     * @param comparator The comparator used to determine the sorting order.","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"ketweeen"},"content":"    public void sortAddressBook(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"ketweeen"},"content":"        ObservableList\u003cPerson\u003e personObservableList \u003d getPersonList();","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"ketweeen"},"content":"        List\u003cPerson\u003e sortedList \u003d personObservableList.sorted(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"ketweeen"},"content":"        setPersons(sortedList);","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"    public void addTag(Tag tag) {","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"        this.tags.add(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"AriellaCallista"},"content":"        return tags.contains(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":141,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"AriellaCallista"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"AriellaCallista"},"content":"        return tags.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AriellaCallista":23,"ketweeen":12,"MadLamprey":1,"-":130}},{"path":"src/main/java/seedu/address/model/EventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"public class EventBook implements ReadOnlyEventBook {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    /*","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"     *   among constructors.","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    public EventBook() {}","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    public EventBook(ReadOnlyEventBook toBeCopied) {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        this();","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    public void resetData(ReadOnlyEventBook newData) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    //// person-level operations","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        return events.contains(event);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        events.add(e);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        events.remove(key);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"     * Sorts the address book using the provided comparator.","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"     * @param comparator The comparator used to determine the sorting order.","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"    public void sortEventBook(Comparator\u003cEvent\u003e comparator) {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"        ObservableList\u003cEvent\u003e eventObservableList \u003d getEventList();","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"        List\u003cEvent\u003e sortedList \u003d eventObservableList.sorted(comparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"        setEvents(sortedList);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"    //// util methods","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"                .add(\"events\", events)","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof EventBook)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"        EventBook otherEventBook \u003d (EventBook) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"        return events.equals(otherEventBook.events);","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"        return events.hashCode();","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"MadLamprey":129}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.ReadOnlySummaryStatistic;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    Predicate\u003cTag\u003e PREDICATE_SHOW_ALL_TAGS \u003d unused -\u003e true;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    void setEventBookFilePath(Path eventBookFilePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    void setEventBook(ReadOnlyEventBook eventBook);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"    ReadOnlyEventBook getEventBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"    ReadOnlySummaryStatistic getSummaryStatistic();","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"    void deleteEvent(Event event);","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"    void addEvent(Event event);","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"ketweeen"},"content":"    ObservableList\u003cTag\u003e getFilteredTagList();","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"     * Updates the filter of the filtered person list to filter by all the given {@code predicates}.","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"     * @throws NullPointerException if any of the {@code predicatesList} is null.","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"    void updateFilteredPersonList(List\u003cPredicate\u003cPerson\u003e\u003e predicatesList);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"ketweeen"},"content":"    void updateFilteredTagList(Predicate\u003cTag\u003e predicate);","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"    void updateFilteredEventList(List\u003cPredicate\u003cEvent\u003e\u003e predicateList);","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"ketweeen"},"content":"     * Sorts the list of persons using the provided comparator.","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"ketweeen"},"content":"     * @param comparator The comparator used to determine the sorting order.","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"ketweeen"},"content":"    void sortPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"    void sortEventList(Comparator\u003cEvent\u003e comparator);","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"     * Returns the Index of the last view command called.","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"sk2001git"},"content":"    Index getLastViewedPersonIndex();","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"sk2001git"},"content":"     * Sets the Index of the last view command called.","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"sk2001git"},"content":"    void setLastViewedPersonIndex(Index index);","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"AriellaCallista"},"content":"    void addTag(Tag tag) throws IllegalValueException;","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"AriellaCallista"},"content":"    boolean hasTag(Tag tag);","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"sk2001git"},"content":"     * Loads the summary statistics based on the current Address Book","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"sk2001git"},"content":"    void loadSummaryStatistics();","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sk2001git":18,"AriellaCallista":12,"ketweeen":19,"MadLamprey":23,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.ReadOnlySummaryStatistic;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.SummaryStatistic;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    private final SummaryStatistic summaryStatistic;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    private final EventBook eventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"    private final FilteredList\u003cTag\u003e filteredTags;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    private Index lastViewedPersonIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyEventBook eventBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        this.eventBook \u003d new EventBook(eventBook);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"        filteredTags \u003d new FilteredList\u003c\u003e(this.addressBook.getTagList());","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.eventBook.getEventList());","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        summaryStatistic \u003d new SummaryStatistic(this.addressBook.getPersonList());","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        this(new AddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"        return userPrefs.getEventBookFilePath();","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"    public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(eventBookFilePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"        userPrefs.setEventBookFilePath(eventBookFilePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"    public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"        this.eventBook.resetData(eventBook);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"    public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"        return eventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"    public ReadOnlySummaryStatistic getSummaryStatistic() {","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"        return summaryStatistic;","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"MadLamprey"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"MadLamprey"},"content":"        return eventBook.hasEvent(event);","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"MadLamprey"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"MadLamprey"},"content":"        eventBook.removeEvent(target);","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":162,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"MadLamprey"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"        eventBook.addEvent(event);","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"        eventBook.setEvent(target, editedEvent);","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"AriellaCallista"},"content":"    public void updateFilteredPersonList(List\u003cPredicate\u003cPerson\u003e\u003e predicatesList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(predicatesList);","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"AriellaCallista"},"content":"        Predicate\u003cPerson\u003e combinedPredicate \u003d predicatesList.stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"AriellaCallista"},"content":"                .reduce(Predicate::and)","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"AriellaCallista"},"content":"                .orElse(person -\u003e true);","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"AriellaCallista"},"content":"        filteredPersons.setPredicate(combinedPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"ketweeen"},"content":"    public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"ketweeen"},"content":"        return filteredTags;","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"ketweeen"},"content":"    public void updateFilteredTagList(Predicate\u003cTag\u003e predicate) {","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"ketweeen"},"content":"        filteredTags.setPredicate(predicate);","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"MadLamprey"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"MadLamprey"},"content":"        return filteredEvents;","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"MadLamprey"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"MadLamprey"},"content":"    public void updateFilteredEventList(List\u003cPredicate\u003cEvent\u003e\u003e predicatesList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(predicatesList);","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"MadLamprey"},"content":"        Predicate\u003cEvent\u003e combinedPredicate \u003d predicatesList.stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"MadLamprey"},"content":"                .reduce(Predicate::and)","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"MadLamprey"},"content":"                .orElse(event -\u003e true);","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"MadLamprey"},"content":"        filteredEvents.setPredicate(combinedPredicate);","lastModifiedDate":"2023-10-24"},{"lineNumber":234,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":236,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"ketweeen"},"content":"    public void sortPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-13"},{"lineNumber":238,"author":{"gitId":"ketweeen"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"ketweeen"},"content":"        addressBook.sortAddressBook(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":243,"author":{"gitId":"MadLamprey"},"content":"    public void sortEventList(Comparator\u003cEvent\u003e comparator) {","lastModifiedDate":"2023-10-28"},{"lineNumber":244,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-10-28"},{"lineNumber":245,"author":{"gitId":"MadLamprey"},"content":"        eventBook.sortEventBook(comparator);","lastModifiedDate":"2023-10-28"},{"lineNumber":246,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":247,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":248,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":249,"author":{"gitId":"sk2001git"},"content":"    public void setLastViewedPersonIndex(Index index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":250,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":251,"author":{"gitId":"sk2001git"},"content":"        lastViewedPersonIndex \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":252,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":253,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":254,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":255,"author":{"gitId":"sk2001git"},"content":"    public Index getLastViewedPersonIndex() {","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"sk2001git"},"content":"        return lastViewedPersonIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":257,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":258,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":259,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"AriellaCallista"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-11-01"},{"lineNumber":262,"author":{"gitId":"AriellaCallista"},"content":"        return addressBook.hasTag(tag);","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":264,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"AriellaCallista"},"content":"    public void addTag(Tag tag) {","lastModifiedDate":"2023-10-28"},{"lineNumber":266,"author":{"gitId":"AriellaCallista"},"content":"        addressBook.addTag(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":267,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"sk2001git"},"content":"    public void loadSummaryStatistics() {","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"sk2001git"},"content":"        summaryStatistic.updatePersonData(addressBook.getPersonList());","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":273,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":288,"author":{"gitId":"MadLamprey"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"MadLamprey"},"content":"                \u0026\u0026 filteredEvents.equals(otherModelManager.filteredEvents);","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sk2001git":31,"AriellaCallista":18,"ketweeen":20,"MadLamprey":78,"-":145}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    ObservableList\u003cTag\u003e getTagList();","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AriellaCallista":2,"-":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyEventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":" * Unmodifiable view of an event book","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public interface ReadOnlyEventBook {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"MadLamprey":11}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"MadLamprey":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private Path eventBookFilePath \u003d Paths.get(\"data\", \"eventbook.json\");","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        setEventBookFilePath(newUserPrefs.getEventBookFilePath());","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        return eventBookFilePath;","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(eventBookFilePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        this.eventBookFilePath \u003d eventBookFilePath;","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath)","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"                \u0026\u0026 eventBookFilePath.equals(otherUserPrefs.eventBookFilePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, eventBookFilePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"        sb.append(\"\\nLocal data file location : \" + eventBookFilePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MadLamprey":15,"-":86}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":" * Represents an Event in JABPro.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"public class Event {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    private final Person person;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    private final Index index;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private final String description;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     * Initialises an Event object.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    public Event(Person person, String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        this.index \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"     * Initialises an Event object.","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    public Event(Index index, String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        this.person \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    public Person getPerson() {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        return person;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        return description;","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"    public LocalDateTime getStart_time() {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        return startTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    public LocalDateTime getEnd_time() {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        return endTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    public Index getIndex() {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        return index;","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"     * Returns true if both events are associated with the same person, and have the same description.","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        return otherEvent !\u003d null \u0026\u0026 otherEvent.getPerson().isSamePerson(getPerson())","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"                \u0026\u0026 otherEvent.getDescription().equalsIgnoreCase(getDescription());","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"            return index.equals(otherEvent.index)","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"                    \u0026\u0026 description.equals(otherEvent.description);","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"        return person.isSamePerson(otherEvent.person)","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"                \u0026\u0026 description.equals(otherEvent.description);","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this.getClass().getSimpleName());","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"        builder.add(\"name\", person.getName().fullName)","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"                .add(\"description\", description)","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"                .add(\"startTime\", startTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")))","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"                .add(\"endTime\", endTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")));","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"MadLamprey":105}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":" *","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":" *","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"    public void setPersons(UniqueEventList replacement) {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"        internalList.setAll(events);","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"        return internalList;","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof UniqueEventList)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"        UniqueEventList otherUniqueEventList \u003d (UniqueEventList) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"        return internalList.equals(otherUniqueEventList.internalList);","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"MadLamprey"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"MadLamprey"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"MadLamprey"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"MadLamprey"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"MadLamprey"},"content":"                    return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"MadLamprey"},"content":"        return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"MadLamprey":149}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"public class Email implements Comparable\u003cEmail\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"    public int compareTo(Email other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"        return this.value.compareTo(other.value);","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ketweeen":6,"-":78}},{"path":"src/main/java/seedu/address/model/person/Github.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * Represents a person\u0027s Github details in JABPro.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class Github {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"     * Constructs a {@code Github}.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"     * @param github A valid Github username","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    public Github(String github) {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"        value \u003d github;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        return value !\u003d null ? value : \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof Github)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        Github otherGithub \u003d (Github) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        return value.equals(otherGithub.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"MadLamprey":37}},{"path":"src/main/java/seedu/address/model/person/LinkedIn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * Represents a person\u0027s LinkedIn details in JABPro.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class LinkedIn {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"     * Constructs a {@code LinkedIn}.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"     * @param linkedin","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    public LinkedIn(String linkedin) {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"        value \u003d linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof LinkedIn)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        LinkedIn otherLinkedIn \u003d (LinkedIn) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        return value.equals(otherLinkedIn.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"MadLamprey":37}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"    public int compareTo(Name other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"        return this.fullName.compareTo(other.fullName);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ketweeen":6,"-":66}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private LinkedIn linkedIn \u003d new LinkedIn(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private Github github \u003d new Github(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    private Status currentStatus \u003d new Status();","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    private ScoreList scoreList \u003d new ScoreList();","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(name, phone, email, address, tags, remark);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"        return remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"        return currentStatus;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"    public LinkedIn getLinkedIn() {","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"        return linkedIn;","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"    public Github getGithub() {","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"        return github;","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"    public Score getScoreForTag(Tag tag) {","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"        return scoreList.getScore(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"    public ScoreList getScoreList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"        return scoreList;","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"    public void setLinkedIn(LinkedIn linkedIn) {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"        this.linkedIn \u003d linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"    public void setGithub(Github github) {","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"        this.github \u003d github;","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"     * Sets the score list of the person to the given score list.","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"     * This is ONLY recommended for use in Person Builder. Strongly discouraged otherwise.","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"     * @param scoreList the score list to set to","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"    public void setScoreList(ScoreList scoreList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"        this.scoreList \u003d scoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"    public void setScoreForTag(Tag tag, Score score) {","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(tag, score);","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"        scoreList.updateScoreList(tag, score);","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"    public void setStatus(Status newStatus) {","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"        this.currentStatus \u003d newStatus;","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"ScarletBlanks"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 remark.equals(otherPerson.remark)","lastModifiedDate":"2023-09-25"},{"lineNumber":165,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 scoreList.equals(otherPerson.scoreList)","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"sk2001git"},"content":"        return Objects.hash(name, phone, email, address, tags, remark);","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"        builder.add(\"name\", name)","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"sk2001git"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"sk2001git"},"content":"                .add(\"status\", currentStatus)","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"sk2001git"},"content":"                .add(\"score-list\", scoreList);","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"MadLamprey"},"content":"        if (!linkedIn.value.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"            builder.add(\"linkedin\", linkedIn);","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"        if (!github.value.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"            builder.add(\"github\", github);","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":51,"ScarletBlanks":8,"MadLamprey":31,"-":109}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"public class Remark {","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"    public final String value;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"        value \u003d remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    public String toString() {","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"        return value;","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        return value.hashCode();","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"sk2001git":37}},{"path":"src/main/java/seedu/address/model/person/Score.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":" * Represents a Person\u0027s score in JABPro.","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"public class Score implements Comparable\u003cScore\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Score should be a non-negative integer\";","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"    public final int value;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"     * Constructs a {@code Score}.","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"     * @param value","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    public Score(int value) {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"        checkArgument(isValidScoreValue(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"     * Returns if a given integer is a valid score.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"     * @param test integer to be tested","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"     * @return true if test is a non-negative integer","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    public static boolean isValidScoreValue(int test) {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    public static boolean isValidScore(Score score) {","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"        return isValidScoreValue(score.value);","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        return Integer.toString(value);","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        if (!(other instanceof Score)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        Score otherScore \u003d (Score) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        return value \u003d\u003d otherScore.value;","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        return Integer.hashCode(value);","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"    public int compareTo(Score other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        return Integer.compare(this.value, other.value);","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"sk2001git":67}},{"path":"src/main/java/seedu/address/model/person/ScoreList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import java.util.Map;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":" * Represents the score list of a person.","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"public class ScoreList {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    private static final String MESSAGE_CONSTRAINTS \u003d \"Score tag should start with assessment\";","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    private static final String MESSAGE_MISSING_TAG \u003d \"Tag does not exist in score list\";","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"    private final HashMap\u003cString, Score\u003e scoreList;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    public ScoreList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"        scoreList \u003d new HashMap\u003cString, Score\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    public ScoreList(HashMap\u003cString, Score\u003e scoreList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        this.scoreList \u003d scoreList;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"     * Updates the score list with the new score.","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"     * @param score score","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    public void updateScoreList(Tag tag, Score score) {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(tag, score);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"        isValidScoreTag(tag);","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        checkArgument(isValidScoreTag(tag), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        checkArgument(Score.isValidScore(score), Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        scoreList.put(tag.tagName, score);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"     * Returns the score associated with the tag.","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"     * @return score associated with the tag","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"    public Score getScore(Tag tag) {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        checkArgument(scoreList.containsKey(tag.tagName), MESSAGE_MISSING_TAG);","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        return scoreList.get(tag.tagName);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"     * Removes the score associated with the tag. Does nothing if the tag does not exist.","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"    public void removeScore(Tag tag) {","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        if (hasTag(tag)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"            scoreList.remove(tag.tagName);","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"    public HashMap\u003cString, Score\u003e getScoreList() {","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        HashMap\u003cString, Score\u003e copy \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        for (Map.Entry\u003cString, Score\u003e entry : scoreList.entrySet()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"            copy.put(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        return copy;","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"     * Returns true if the score list contains the tag.","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"     * @return true if the score list contains the tag","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"        return scoreList.containsKey(tag.tagName);","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"     * Gets the List of tags with score.","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"     * @return List of tags with score","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"    public List\u003cTag\u003e getTagsWithScore() {","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"        ArrayList\u003cTag\u003e result \u003d new ArrayList\u003cTag\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"        if (scoreList.isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"            return result;","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"        Set\u003cString\u003e tags \u003d scoreList.keySet();","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"        for (String tag : tags) {","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"            result.add(new Tag(tag, \"assessment\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"        return result;","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"     * Returns true if a given tag is a valid score tag.","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"     * @return true if a given tag is a valid score tag","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"    public static boolean isValidScoreTag(Tag tag) {","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"        return tag.tagCategory.toLowerCase().contains(\"assessment\");","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"     * Returns true if the score list is empty.","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"     * @return true if the score list is empty","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"        return scoreList.isEmpty();","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"     * Returns true if both score lists have the same score list.","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"     * @param other other score list","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"     * @return true if both score lists have the same score list","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"        if (!(other instanceof ScoreList)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"        ScoreList otherScoreList \u003d (ScoreList) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"        return scoreList.equals(otherScoreList.scoreList);","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"     * Returns the string representation of the score list.","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"sk2001git"},"content":"     * @return","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"    public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"sk2001git"},"content":"        return scoreList.toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"sk2001git"},"content":"     * Returns the hashcode of the score list.","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"sk2001git"},"content":"     * @return hashcode of the score list","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"sk2001git"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"sk2001git"},"content":"        return scoreList.hashCode();","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"sk2001git":149,"AriellaCallista":4}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":" * Represents a Status in the Person class","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"public class Status {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status should be either one of the following: \u0027Preliminary\u0027,\"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"            + \"\u0027Interviewed\u0027, \u0027Offered\u0027, \u0027Rejected\u0027 and it should not be blank\";","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    private String value;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    private StatusTypes statusType;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates a default Status - Preliminary","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    public Status() {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"        this.statusType \u003d StatusTypes.PRELIMINARY;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"        this.value \u003d \"Preliminary\";","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates a Status from String","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"     * @param value The status type string to used","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    public Status(String value) {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"        switch (value.toLowerCase()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"        case \"offered\":","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"            this.statusType \u003d StatusTypes.OFFERED;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"        case \"rejected\":","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"            this.statusType \u003d StatusTypes.REJECTED;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"        case \"interviewed\":","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"            this.statusType \u003d StatusTypes.INTERVIEWED;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"        case \"preliminary\":","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"            this.statusType \u003d StatusTypes.PRELIMINARY;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"        default:","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates a Status from a StatusType","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"     * @param statusType The StatusType to be used","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"    public Status(StatusTypes statusType) {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"        this.value \u003d statusType.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"        this.statusType \u003d statusType;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    public StatusTypes getStatusType() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"        return this.statusType;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"    public void setStatusType(StatusTypes newStatus) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"        this.statusType \u003d newStatus;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"        this.value \u003d newStatus.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"        return statusType.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"        return this.value;","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"     * Checks the other object is equals to this one","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"     * @param other the other Object","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"     * @return {@code true} if equals, {@code false} otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"            if (other instanceof Status) {","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"                return this.statusType \u003d\u003d ((Status) other).statusType;","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"            } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"                return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"sk2001git":2,"ScarletBlanks":84,"AriellaCallista":5}},{"path":"src/main/java/seedu/address/model/person/StatusContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"public class StatusContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    public StatusContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getStatus().toString(), keyword));","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        if (!(other instanceof StatusContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate otherStatusContainsKeywordsPredicate \u003d (StatusContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        return keywords.equals(otherStatusContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"AriellaCallista":44}},{"path":"src/main/java/seedu/address/model/person/StatusTypes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":" * Represents a StatusType in the Status class.","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"public enum StatusTypes {","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"    PRELIMINARY(\"Preliminary\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"    INTERVIEWED(\"Interviewed\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"    REJECTED(\"Rejected\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    OFFERED(\"Offered\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"    private final String statusName;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    StatusTypes(String statusName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"        this.statusName \u003d statusName;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"        return this.statusName;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"     * Checks if the provided status is a valid status.","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"     * @param input The string status to be checked for validity.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"     * @return {@code true} if the status is valid, {@code false} otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"    public static boolean isValidStatusType(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"        return input.equals(\"interviewed\") || input.equals(\"preliminary\")","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"                || input.equals(\"rejected\")","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"                || input.equals(\"offered\");","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ScarletBlanks":34}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"                .anyMatch(keyword -\u003e person.getTags().stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword))","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"                );","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"        TagContainsKeywordsPredicate otherTagContainsKeywordsPredicate \u003d (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        return keywords.equals(otherTagContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"AriellaCallista":46}},{"path":"src/main/java/seedu/address/model/statistics/ReadOnlySummaryStatistic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.statistics;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":" * Represents a ReadOnlySummaryStatistic, that is no update can be done to the summary statistic.","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"public interface ReadOnlySummaryStatistic {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"     * Returns the number of people in the address book associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"     * @return number of people in the address book associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"    public int getNumOfPeopleAssociatedWithTag(Tag tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"     * Generate the Median of the score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"     * @return median of the score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    public int generateMedianWithTag(Tag tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"     * Generate the Mean of the score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"     * @return mean of the score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    public int generateMeanWithTag(Tag tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"     * Generate the Max score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"     * @param person person to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"     * @return max score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    public double generatePercentileWithTag(Person person, Tag tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"     * Generate the Min score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"     * @return min score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    public int generateMaxScoreValueWithTag(Tag tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"     * Generate the Min score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"     * @return min score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    public int generateMinScoreValueWithTag(Tag tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"sk2001git":53}},{"path":"src/main/java/seedu/address/model/statistics/StatisticMetric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.statistics;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":" * Represents the different metrics that can be used to calculate the statistics.","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"public enum StatisticMetric {","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"    SCORE(\"SCORE\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"    MEAN(\"MEAN\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"    MEDIAN(\"MEDIAN\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"    PERCENTILE(\"PERCENTILE\");","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"    private final String metricName;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"    StatisticMetric(String metricName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"        this.metricName \u003d metricName;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    public String toString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"        return this.metricName;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"     * Checks if the provided metric is a valid metric.","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"     * @param input The string metric to be checked for validity.","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"     * @return {@code true} if the metric is valid, {@code false} otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    public static boolean isValidMetric(String input) {","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        String inputUpperCase \u003d input.toUpperCase();","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        return inputUpperCase.equals(\"SCORE\") || inputUpperCase.equals(\"MEAN\") || inputUpperCase.equals(\"MEDIAN\")","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"                || inputUpperCase.equals(\"PERCENTILE\");","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"     * Checks if a score is needed for the metric.","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"     * @param input The string metricF to be checked.","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"     * @return {@code true} if the metric needs a score, {@code false} otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    public static boolean isScoreRelevant(String input) {","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"        String inputUpperCase \u003d input.toUpperCase();","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        return inputUpperCase.equals(\"SCORE\") || inputUpperCase.equals(\"PERCENTILE\");","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"sk2001git":41}},{"path":"src/main/java/seedu/address/model/statistics/SummaryStatistic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.statistics;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":" * Represents the summary statistic of the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":" * Using terminal operations on Stream like count() consumes the stream and closes it.","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":" * This can throw an IllegalStateException if you try to use the stream after it is closed.","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"public class SummaryStatistic implements ReadOnlySummaryStatistic {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(SummaryStatistic.class);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    private ObservableList\u003cPerson\u003e personData;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"     * Initializes a SummaryStatistic with the observable list of given person data.","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"     * @param persons person data","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    public SummaryStatistic(ObservableList\u003cPerson\u003e persons) {","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        personData \u003d persons;","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"     * Updates the person data in the summary statistic.","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"     * @param persons person data","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    public void updatePersonData(ObservableList\u003cPerson\u003e persons) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        personData \u003d persons;","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"     * Returns the number of people in the address book associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"     * @return number of people in the address book associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"    public int getNumOfPeopleAssociatedWithTag(Tag tag) {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cPerson\u003e filteredStream \u003d personData.stream().filter(person -\u003e person.getTags().contains(tag));","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        return (int) filteredStream.count();","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"     * Returns the sorted stream of score value in the address book associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"     * @return sorted stream of score value","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"    private Stream\u003cInteger\u003e getSortedScoreValueStream(Tag tag) {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cPerson\u003e filteredStream \u003d filteredPersonsWithScoreTag(tag);","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cScoreList\u003e scoreListStream \u003d filteredStream.map(person -\u003e person.getScoreList());","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cScore\u003e scoreStream \u003d scoreListStream.map(scoreList -\u003e scoreList.getScore(tag));","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cInteger\u003e scoreValueStream \u003d scoreStream.map(score -\u003e score.value);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cInteger\u003e sortedScoreValueStream \u003d scoreValueStream.sorted();","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        return sortedScoreValueStream;","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"     * Calculate the median of the score value stream.","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"     * @param sortedScoreValueStream sorted score value stream","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"     * @return median of the score value stream","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"    public int calculateMedian(Stream\u003cInteger\u003e sortedScoreValueStream) {","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        List\u003cInteger\u003e sortedValueList \u003d sortedScoreValueStream.collect(Collectors.toList());","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"        int numOfPeople \u003d sortedValueList.size();","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"        int median \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        if (numOfPeople \u003c\u003d 0) {","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"            logger.warning(\"No people in the list, median will be left as default of 0\");","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"            return median;","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        if (numOfPeople \u003d\u003d 1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"            median \u003d sortedValueList.get(0);","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"            return median;","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"        if (numOfPeople % 2 \u003d\u003d 0) {","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"            int medianIndex \u003d numOfPeople / 2;","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"            median \u003d (sortedValueList.get(medianIndex - 1) + sortedValueList.get(medianIndex)) / 2;","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"            return median;","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"            int medianIndex \u003d (numOfPeople + 1) / 2;","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"            median \u003d sortedValueList.get(medianIndex - 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"            return median;","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"     * Generate the Median of the score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"     * @return median of the score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"    public int generateMedianWithTag(Tag tag) {","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cInteger\u003e sortedScoreValueStream \u003d getSortedScoreValueStream(tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"        int median \u003d calculateMedian(sortedScoreValueStream);","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"        return median;","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"     * Calculate the mean of the score value stream.","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"     * @param sortedScoreValueStream sorted score value stream","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"     * @return mean of the score value stream","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"    public int calculateMean(Stream\u003cInteger\u003e sortedScoreValueStream) {","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"        List\u003cInteger\u003e sortedValueList \u003d sortedScoreValueStream.collect(Collectors.toList());","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"        int numOfPeople \u003d sortedValueList.size();","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"        int mean \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"        if (numOfPeople \u003c\u003d 0) {","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"            logger.warning(\"No people in the list, mean will be left as default of 0\");","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"            return mean;","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"        if (numOfPeople \u003d\u003d 1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"            Integer ans \u003d sortedValueList.get(0);","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"            return ans;","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"        for (Integer value : sortedValueList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"            mean +\u003d value;","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"        mean /\u003d numOfPeople;","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"        return mean;","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"sk2001git"},"content":"     * Generate the Mean of the score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"sk2001git"},"content":"     * @return mean of the score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"sk2001git"},"content":"    public int generateMeanWithTag(Tag tag) {","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cInteger\u003e sortedScoreValueStream \u003d getSortedScoreValueStream(tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"sk2001git"},"content":"        int mean \u003d calculateMean(sortedScoreValueStream);","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"        return mean;","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"sk2001git"},"content":"     * Generate the percentile of the score of the person associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"sk2001git"},"content":"     * @param person person to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"sk2001git"},"content":"     * @return percentile of the score of the person associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"sk2001git"},"content":"    public double generatePercentileWithTag(Person person, Tag tag) {","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"sk2001git"},"content":"        List\u003cInteger\u003e filteredList \u003d getSortedScoreValueStream(tag).collect(Collectors.toList());","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"sk2001git"},"content":"        if (filteredList.size() \u003c\u003d 0) {","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"sk2001git"},"content":"            logger.warning(\"No people in the list, percentile will be left as default of 0\");","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"sk2001git"},"content":"            return 0;","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"sk2001git"},"content":"        } else if (filteredList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"sk2001git"},"content":"            return 100;","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cPerson\u003e filteredStreamWithScoreValue \u003d filteredPersonsWithScoreTag(tag)","lastModifiedDate":"2023-11-08"},{"lineNumber":158,"author":{"gitId":"sk2001git"},"content":"                .filter(personInList -\u003e personInList.getScoreForTag(tag).compareTo(person.getScoreForTag(tag)) \u003c 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e filteredListWithScoreValue \u003d filteredStreamWithScoreValue.collect(Collectors.toList());","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"sk2001git"},"content":"        double percentile \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"sk2001git"},"content":"        int sameScoreIndividuals \u003d filteredPersonsWithScoreTag(tag)","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"sk2001git"},"content":"                .filter(personInList -\u003e personInList.getScoreForTag(tag).compareTo(person.getScoreForTag(tag)) \u003d\u003d 0)","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"sk2001git"},"content":"                .collect(Collectors.toList()).size();","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"sk2001git"},"content":"        int trueListSize \u003d filteredList.size() - sameScoreIndividuals;","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"sk2001git"},"content":"        if (filteredListWithScoreValue.size() \u003c\u003d 0) {","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"sk2001git"},"content":"            logger.warning(\"No people in the list, percentile will be left as default of 0\");","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"sk2001git"},"content":"            return percentile;","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"sk2001git"},"content":"        percentile \u003d Math.ceil((double) filteredListWithScoreValue.size() / trueListSize * 100);","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"sk2001git"},"content":"        return percentile;","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"sk2001git"},"content":"     * Generate the Max score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"sk2001git"},"content":"     * @return max score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"sk2001git"},"content":"    public int generateMaxScoreValueWithTag(Tag tag) {","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cInteger\u003e sortedScoreValueStream \u003d getSortedScoreValueStream(tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"sk2001git"},"content":"        List\u003cInteger\u003e sortedList \u003d sortedScoreValueStream.collect(Collectors.toList());","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"sk2001git"},"content":"        if (sortedList.size() \u003c\u003d 0) {","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"sk2001git"},"content":"            logger.warning(\"No people in the list, max score will be left as default of 0\");","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"sk2001git"},"content":"            return 0;","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"sk2001git"},"content":"        if (sortedList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"sk2001git"},"content":"            return sortedList.get(0);","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"sk2001git"},"content":"        int maxScore \u003d sortedList.get(sortedList.size() - 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"sk2001git"},"content":"        return maxScore;","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"sk2001git"},"content":"     * Generate the Min score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"sk2001git"},"content":"     * @return min score of the people associated with that tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"sk2001git"},"content":"    public int generateMinScoreValueWithTag(Tag tag) {","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cInteger\u003e sortedScoreValueStream \u003d getSortedScoreValueStream(tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"sk2001git"},"content":"        List\u003cInteger\u003e sortedList \u003d sortedScoreValueStream.collect(Collectors.toList());","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"sk2001git"},"content":"        if (sortedList.size() \u003c\u003d 0) {","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"sk2001git"},"content":"            logger.warning(\"No people in the list, min score will be left as default of 0\");","lastModifiedDate":"2023-10-28"},{"lineNumber":202,"author":{"gitId":"sk2001git"},"content":"            return 0;","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"sk2001git"},"content":"        if (sortedList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"sk2001git"},"content":"            return sortedList.get(0);","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"sk2001git"},"content":"        int minScore \u003d sortedList.get(0);","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"sk2001git"},"content":"        return minScore;","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"sk2001git"},"content":"     * Returns the list of people in the address book associated with that tag and has a value greater than","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"sk2001git"},"content":"     * or equal to the metric and value provided by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-11-08"},{"lineNumber":215,"author":{"gitId":"sk2001git"},"content":"     * @param metric metric to be associated with","lastModifiedDate":"2023-11-08"},{"lineNumber":216,"author":{"gitId":"sk2001git"},"content":"     * @param value value to be associated with","lastModifiedDate":"2023-11-08"},{"lineNumber":217,"author":{"gitId":"sk2001git"},"content":"     * @return","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"sk2001git"},"content":"    public List\u003cPerson\u003e filteredPersonList(Tag tag, StatisticMetric metric, int value) {","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"sk2001git"},"content":"        switch (metric) {","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"sk2001git"},"content":"        case SCORE:","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"sk2001git"},"content":"            Stream\u003cInteger\u003e scoreValueStream \u003d getSortedScoreValueStream(tag);","lastModifiedDate":"2023-11-08"},{"lineNumber":223,"author":{"gitId":"sk2001git"},"content":"            Stream\u003cPerson\u003e filteredPersonStream \u003d scoreValueStream.filter(scoreValue -\u003e scoreValue \u003e\u003d value)","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"sk2001git"},"content":"                    .flatMap(scoreValue -\u003e personData.stream()","lastModifiedDate":"2023-11-08"},{"lineNumber":225,"author":{"gitId":"sk2001git"},"content":"                    .filter(person -\u003e person.getTags().contains(tag)","lastModifiedDate":"2023-11-07"},{"lineNumber":226,"author":{"gitId":"sk2001git"},"content":"                            \u0026\u0026 person.getScoreList().hasTag(tag))","lastModifiedDate":"2023-11-07"},{"lineNumber":227,"author":{"gitId":"sk2001git"},"content":"                    .filter(person -\u003e person.getScoreForTag(tag).value \u003e\u003d scoreValue)).distinct();","lastModifiedDate":"2023-11-08"},{"lineNumber":228,"author":{"gitId":"sk2001git"},"content":"            List\u003cPerson\u003e filteredPersonList \u003d filteredPersonStream.collect(Collectors.toList());","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"sk2001git"},"content":"            return filteredPersonList;","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"sk2001git"},"content":"        case MEAN:","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"sk2001git"},"content":"            Stream\u003cInteger\u003e sortedScoreValueStream \u003d getSortedScoreValueStream(tag);","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"sk2001git"},"content":"            int mean \u003d calculateMean(sortedScoreValueStream);","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"sk2001git"},"content":"            Stream\u003cPerson\u003e filteredPersonStreamWithMean \u003d filteredPersonsWithScoreTag(tag)","lastModifiedDate":"2023-11-08"},{"lineNumber":234,"author":{"gitId":"sk2001git"},"content":"                    .filter(person -\u003e person.getScoreForTag(tag).value \u003e\u003d mean);","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"sk2001git"},"content":"            List\u003cPerson\u003e filteredPersonListWithMean \u003d filteredPersonStreamWithMean.collect(Collectors.toList());","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"sk2001git"},"content":"            return filteredPersonListWithMean;","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"sk2001git"},"content":"        case MEDIAN:","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"sk2001git"},"content":"            Stream\u003cInteger\u003e sortedScoreValueStreamWithMedian \u003d getSortedScoreValueStream(tag);","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"sk2001git"},"content":"            int median \u003d calculateMedian(sortedScoreValueStreamWithMedian);","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"sk2001git"},"content":"            Stream\u003cPerson\u003e filteredPersonStreamWithMedian \u003d filteredPersonsWithScoreTag(tag)","lastModifiedDate":"2023-11-08"},{"lineNumber":241,"author":{"gitId":"sk2001git"},"content":"                    .filter(person -\u003e person.getScoreForTag(tag).value \u003e\u003d median);","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"sk2001git"},"content":"            List\u003cPerson\u003e filteredPersonListWithMedian \u003d filteredPersonStreamWithMedian.collect(Collectors.toList());","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"sk2001git"},"content":"            return filteredPersonListWithMedian;","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"sk2001git"},"content":"        case PERCENTILE:","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"sk2001git"},"content":"            Stream\u003cPerson\u003e filteredStreamWithPercentile \u003d filteredPersonsWithScoreTag(tag)","lastModifiedDate":"2023-11-08"},{"lineNumber":246,"author":{"gitId":"sk2001git"},"content":"                    .filter(person -\u003e generatePercentileWithTag(person, tag) \u003e\u003d value);","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"sk2001git"},"content":"            List\u003cPerson\u003e filteredPersonListWithPercentile \u003d filteredStreamWithPercentile.collect(Collectors.toList());","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"sk2001git"},"content":"            return filteredPersonListWithPercentile;","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"sk2001git"},"content":"        default:","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"sk2001git"},"content":"            assert false : \"Invalid metric\";","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"sk2001git"},"content":"            return List.of();","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":256,"author":{"gitId":"sk2001git"},"content":"     * Returns the stream of people in JABPro associated with that tag and has a value greater than","lastModifiedDate":"2023-11-08"},{"lineNumber":257,"author":{"gitId":"sk2001git"},"content":"     * @param tag tag to be associated with","lastModifiedDate":"2023-11-08"},{"lineNumber":258,"author":{"gitId":"sk2001git"},"content":"     * @return stream of people in JABPro associated with that tag and has a value greater than","lastModifiedDate":"2023-11-08"},{"lineNumber":259,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":260,"author":{"gitId":"sk2001git"},"content":"    public Stream\u003cPerson\u003e filteredPersonsWithScoreTag(Tag tag) {","lastModifiedDate":"2023-11-08"},{"lineNumber":261,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cPerson\u003e filteredStream \u003d personData.stream().filter(person -\u003e person.getTags().contains(tag)","lastModifiedDate":"2023-11-08"},{"lineNumber":262,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 person.getScoreList().hasTag(tag));","lastModifiedDate":"2023-11-08"},{"lineNumber":263,"author":{"gitId":"sk2001git"},"content":"        return filteredStream;","lastModifiedDate":"2023-11-08"},{"lineNumber":264,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":265,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":266,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":267,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"sk2001git":268}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    public final String tagCategory;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    public Tag(String tagName, String tagCategory) {","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        this.tagCategory \u003d tagCategory;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"    public String getTagName() {","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        return tagName;","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"    public String getTagCategory() {","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"        return tagCategory;","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"        return tagName.equals(otherTag.tagName) \u0026\u0026 tagCategory.equals(otherTag.tagCategory);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AriellaCallista":4,"ketweeen":8,"-":60}},{"path":"src/main/java/seedu/address/model/tag/UniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":" * Represents a list of unique tags. This class provides methods to manage a collection of tags,","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":" * ensuring that no duplicate tags are allowed in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"public class UniqueTagList implements Iterable\u003cTag\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    private static final ObservableList\u003cTag\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    private final ObservableList\u003cTag\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the list contains a specific tag.","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     * @param toCheck The tag to check for in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     * @return true if the tag is in the list, false otherwise.","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    public boolean contains(Tag toCheck) {","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     * Adds a tag to the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     * @param toAdd The tag to add.","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     * @throws DuplicateTagException If the tag to add already exists in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    public void add(Tag toAdd) {","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"     * Retrieves a tag by its name.","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"     * @param tagName The name of the tag to retrieve.","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"     * @return The tag with the specified name.","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"     * @throws ParseException If the tag is not found in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"    public Tag getTag(String tagName, String tagCategory) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"        Optional\u003cTag\u003e foundTag \u003d internalList.stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"                .filter(tag -\u003e tag.tagName.equals(tagName) \u0026\u0026 tag.tagCategory.contains(tagCategory))","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"                .findFirst();","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"        if (foundTag.isPresent()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"            long occurrence \u003d internalList.stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"                    .filter(tag -\u003e tag.tagName.equals(tagName) \u0026\u0026 tag.tagCategory.contains(tagCategory))","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"                    .count();","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"            if (occurrence \u003e 1) {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"                throw new ParseException(\"Multiple tags exists with the same name! \"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"                        + \"Specify the category of the tag when adding it to a person e.g. edit 1 t/experience 3\");","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"            return foundTag.get();","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"        } else if (!tagCategory.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"            Tag newTag \u003d new Tag(tagName, tagCategory);","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"            add(newTag);","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"            return newTag;","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"        return new Tag(tagName, \"uncategorised\");","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"     * Replaces a target tag with an edited tag.","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"     * @param target The tag to be replaced.","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"     * @param editedTag The edited tag to replace the target.","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"     * @throws TagNotFoundException If the target tag is not found in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"     * @throws DuplicateTagException If the edited tag is already present in the list.","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"        requireAllNonNull(target, editedTag);","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"        if (!target.equals(editedTag) \u0026\u0026 contains(editedTag)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"        internalList.set(index, editedTag);","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"     * Removes a tag from the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"     * @param toRemove The tag to remove.","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"     * @throws PersonNotFoundException If the tag to remove is not found in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"    public void remove(Tag toRemove) {","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"     * Replaces the current list of tags with a new list.","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"     * @param replacement The new list of tags to replace the current list.","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"AriellaCallista"},"content":"    public void setTags(UniqueTagList replacement) {","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"AriellaCallista"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"AriellaCallista"},"content":"     * Sets the list of tags with a given list of tags.","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"AriellaCallista"},"content":"     * @param tags The list of tags to set.","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"AriellaCallista"},"content":"     * @throws DuplicatePersonException If the tags are not unique in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"AriellaCallista"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"AriellaCallista"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"AriellaCallista"},"content":"        if (!tagsAreUnique(tags)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"AriellaCallista"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"AriellaCallista"},"content":"        internalList.setAll(tags);","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"AriellaCallista"},"content":"     * Returns an unmodifiable view of the internal tag list.","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"AriellaCallista"},"content":"     * @return An unmodifiable ObservableList of tags.","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"AriellaCallista"},"content":"    public ObservableList\u003cTag\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"AriellaCallista"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"AriellaCallista"},"content":"    public Iterator\u003cTag\u003e iterator() {","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"AriellaCallista"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"AriellaCallista"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"AriellaCallista"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"AriellaCallista"},"content":"        if (!(other instanceof UniqueTagList)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"AriellaCallista"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"AriellaCallista"},"content":"        UniqueTagList otherUniqueTagList \u003d (UniqueTagList) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"AriellaCallista"},"content":"        return internalList.equals(otherUniqueTagList.internalList);","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"AriellaCallista"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"AriellaCallista"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"AriellaCallista"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"AriellaCallista"},"content":"    private boolean tagsAreUnique(List\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"AriellaCallista"},"content":"        for (int i \u003d 0; i \u003c tags.size() - 1; i++) {","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"AriellaCallista"},"content":"            for (int j \u003d i + 1; j \u003c tags.size(); j++) {","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"AriellaCallista"},"content":"                if (tags.get(i).equals(tags.get(j))) {","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"AriellaCallista"},"content":"                    return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"AriellaCallista"},"content":"        return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"AriellaCallista":191}},{"path":"src/main/java/seedu/address/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents an exception that is thrown when an operation would result in duplicate tags.","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class DuplicateTagException extends RuntimeException {","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a DuplicateTagException with a default error message.","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     * The error message indicates that the operation would result in duplicate tags.","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    public DuplicateTagException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"        super(\"Operation would result in duplicate tags\");","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"AriellaCallista":15}},{"path":"src/main/java/seedu/address/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents an exception that is thrown when a specified tag is not found in the tag manager.","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class TagNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a TagNotFoundException with a default error message.","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     * The error message indicates that the tag was not found and suggests creating the tag before using it.","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    public TagNotFoundException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"        super(\"Tag not found! Create tag before tagging a person with it!\");","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"AriellaCallista":15}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"                getTagSet(\"dept marketing\", \"employment intern\")),","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"                getTagSet(\"dept software\", \"role developer\", \"employment intern\")),","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"                getTagSet(\"dept marketing\", \"employment intern\")),","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"                    getTagSet(\"dept marketing\", \"employment intern\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        };","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    public static Tag[] getSampleTags() {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        return new Tag[] {","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"            new Tag(\"intern\", \"employment\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"            new Tag(\"developer\", \"role\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"            new Tag(\"marketing\", \"dept\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"            new Tag(\"software\", \"dept\")","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"        for (Tag sampleTag : getSampleTags()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"            sampleAb.addTag(sampleTag);","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"                .map(x -\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"                    String[] tagNameCategory \u003d x.split(\"\\\\s+\");","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"                    if (tagNameCategory.length \u003e 1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"                        String tagName \u003d tagNameCategory[1];","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"                        String tagCategory \u003d tagNameCategory[0];","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"                        return new Tag(tagName, tagCategory);","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"                    } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"                        return new Tag(x, \"uncategorised\");","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"                    }","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"                })","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"sk2001git":7,"AriellaCallista":27,"-":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    private final List\u003cMap\u003cString, String\u003e\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    private final JsonAdaptedScoreList scoreList;","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    private final String linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    private final String github;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    private final String remark;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"    private final String status;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"            @JsonProperty(\"tags\") List\u003cMap\u003cString, String\u003e\u003e tags,","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"            @JsonProperty(\"scoreList\") JsonAdaptedScoreList scoreList,","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"            @JsonProperty(\"linkedIn\") String linkedIn,","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"            @JsonProperty(\"github\") String github,","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"            @JsonProperty(\"remark\") String remark, @JsonProperty(\"status\") String status) {","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        this.linkedIn \u003d linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        this.github \u003d github;","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        this.scoreList \u003d scoreList;","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"        Set\u003cTag\u003e personTags \u003d source.getTags();","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"        for (Tag tag : personTags) {","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"            Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"            map.put(\"tagCategory\", tag.tagCategory);","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"            map.put(\"tagName\", tag.tagName);","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"            this.tags.add(map);","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"        scoreList \u003d new JsonAdaptedScoreList(source.getScoreList());","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"        linkedIn \u003d source.getLinkedIn().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        github \u003d source.getGithub().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"        status \u003d source.getStatus().getValue();","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"        for (Map\u003cString, String\u003e tagData : tags) {","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"            String tagCategory \u003d tagData.get(\"tagCategory\");","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"            String tagName \u003d tagData.get(\"tagName\");","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"            if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"                throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"            personTags.add(new Tag(tagName, tagCategory));","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"sk2001git"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"sk2001git"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"sk2001git"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"        Person p \u003d new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"MadLamprey"},"content":"        if (linkedIn !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"MadLamprey"},"content":"            p.setLinkedIn(new LinkedIn(linkedIn));","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"MadLamprey"},"content":"        if (github !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"MadLamprey"},"content":"            p.setGithub(new Github(github));","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"ScarletBlanks"},"content":"        if (status !\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"ScarletBlanks"},"content":"            p.setStatus(new Status(status));","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"sk2001git"},"content":"        ScoreList modelScoreList \u003d (scoreList !\u003d null) ? scoreList.toModelType() : new ScoreList();","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"sk2001git"},"content":"        p.setScoreList(modelScoreList);","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"MadLamprey"},"content":"        return p;","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sk2001git":18,"ScarletBlanks":9,"AriellaCallista":18,"MadLamprey":16,"-":101}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedScoreList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import java.util.Map;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":" * Jackson-friendly version of {@link ScoreList}.","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"public class JsonAdaptedScoreList {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    private Map\u003cString, Integer\u003e scores;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"     * @param scoreList","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    public JsonAdaptedScoreList(ScoreList scoreList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"        scores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        for (Map.Entry\u003cString, Score\u003e entry : scoreList.getScoreList().entrySet()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"            scores.put(entry.getKey(), entry.getValue().value);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"     * Constructs a {@code JsonAdaptedScoreList} with the given score details.","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"     * @param scores","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    @JsonCreator","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    public JsonAdaptedScoreList(Map\u003cString, Integer\u003e scores) {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        this.scores \u003d scores;","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"     * Gets the score list.","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"     * @return score list","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"    @JsonValue","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    public Map\u003cString, Integer\u003e getScoreList() {","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        return scores;","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"     * Converts this Jackson-friendly adapted score list object into the model\u0027s {@code ScoreList} object.","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"     * @return ScoreList","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"    public ScoreList toModelType() {","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList \u003d new ScoreList();","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        if (scores \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"            return scoreList;","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        for (Map.Entry\u003cString, Integer\u003e entry : scores.entrySet()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"            scoreList.updateScoreList(new Tag(entry.getKey(), \"assessment\"), new Score(entry.getValue()));","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        return scoreList;","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"sk2001git":61,"AriellaCallista":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    private final String tagCategory;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName} and {@code tagCategory}.","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    public JsonAdaptedTag(","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"            @JsonProperty(\"tagCategory\") String tagCategory,","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"            @JsonProperty(\"tagName\") String tagName) {","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        this.tagCategory \u003d tagCategory;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        tagCategory \u003d source.tagCategory;","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    public String getTagCategory() {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"        return tagCategory;","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"        return new Tag(tagName, tagCategory);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AriellaCallista":15,"-":45}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"Tags list contains duplicate tag(s).\";","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    private final List\u003cMap\u003cString, String\u003e\u003e tagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and tags.","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"                                       @JsonProperty(\"tagList\") List\u003cMap\u003cString, String\u003e\u003e tags) {","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        this.tagList.addAll(tags);","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"        ObservableList\u003cTag\u003e internalTagList \u003d source.getTagList();","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        for (Tag tag : internalTagList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"            Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"            map.put(\"tagCategory\", tag.tagCategory);","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"            map.put(\"tagName\", tag.tagName);","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"            this.tagList.add(map);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"        for (Map\u003cString, String\u003e tagData : tagList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"            String tagCategory \u003d tagData.get(\"tagCategory\");","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"            String tagName \u003d tagData.get(\"tagName\");","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"            Tag tag \u003d new Tag(tagName, tagCategory);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"            if (!addressBook.hasTag(tag)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"                addressBook.addTag(tag);","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AriellaCallista":29,"-":59}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.storage.event.EventBookStorage;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, EventBookStorage {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook) throws IOException;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"MadLamprey":12,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.storage.event.EventBookStorage;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    private EventBookStorage eventBookStorage;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"                          EventBookStorage eventBookStorage) {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        this.eventBookStorage \u003d eventBookStorage;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"        return eventBookStorage.getEventBookFilePath();","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        return readEventBook(eventBookStorage.getEventBookFilePath());","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        return eventBookStorage.readEventBook(filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook) throws IOException {","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"        saveEventBook(eventBook, eventBookStorage.getEventBookFilePath());","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"        eventBookStorage.saveEventBook(eventBook, filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MadLamprey":32,"-":77}},{"path":"src/main/java/seedu/address/storage/event/EventBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.storage.event;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"public interface EventBookStorage {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"     * @see #getEventBookFilePath()","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook) throws IOException;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException;","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"MadLamprey":45}},{"path":"src/main/java/seedu/address/storage/event/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.storage.event;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    public static final String INCORRECT_DATE_FORMAT \u003d \"Date is not in correct format!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private final String name;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private final String description;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    private final String startTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    private final String endTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"                             @JsonProperty(\"startTime\") String startTime, @JsonProperty(\"endTime\") String endTime) {","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        name \u003d source.getPerson().getName().fullName;","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        startTime \u003d source.getStart_time().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        endTime \u003d source.getEnd_time().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"description\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        LocalDateTime modelStartTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"startTime\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"            try {","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"                modelStartTime \u003d LocalDateTime.parse(startTime, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"                throw new IllegalValueException(INCORRECT_DATE_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        LocalDateTime modelEndTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"endTime\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"            try {","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"                modelEndTime \u003d LocalDateTime.parse(endTime, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"                throw new IllegalValueException(INCORRECT_DATE_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"        Person person \u003d new Person(new Name(name), new Phone(\"00000\"), new Email(\"filler@email.com\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"                new Address(\"36 College Avenue East\"), new Remark(\"\"), new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"        Event e \u003d new Event(person, description, modelStartTime, modelEndTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"        return e;","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"MadLamprey":97}},{"path":"src/main/java/seedu/address/storage/event/JsonEventBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.storage.event;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"public class JsonEventBookStorage implements EventBookStorage {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonEventBookStorage.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    public JsonEventBookStorage(Path filePath) {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        return filePath;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        return readEventBook(filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        Optional\u003cJsonSerializableEventBook\u003e jsonEventBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"                filePath, JsonSerializableEventBook.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        if (!jsonEventBook.isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"            return Optional.of(jsonEventBook.get().toModelType());","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook) throws IOException {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        saveEventBook(eventBook, filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(eventBook);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableEventBook(eventBook), filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"MadLamprey":76}},{"path":"src/main/java/seedu/address/storage/event/JsonSerializableEventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.storage.event;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"@JsonRootName(value \u003d \"eventbook\")","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"class JsonSerializableEventBook {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    public JsonSerializableEventBook(@JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        this.events.addAll(events);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    public JsonSerializableEventBook(ReadOnlyEventBook source) {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    public EventBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"            if (eventBook.hasEvent(event)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"            eventBook.addEvent(event);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        return eventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"MadLamprey":60}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    public final Event event;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private Label description;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    private Label index;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    private Label id;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    private Label startTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    private Label endTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    private Label name;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    public EventCard(Event event) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        super(FXML);","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        description.setText(\"Event: \" + event.getDescription());","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        name.setText(\"Candidate: \" + event.getPerson().getName().fullName);","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        startTime.setText(\"Start Time: \"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"                + event.getStart_time().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        endTime.setText(\"End Time: \" + event.getEnd_time().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"MadLamprey":55}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        super(FXML);","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"                setText(null);","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"            } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"                setGraphic(new EventCard(event).getRoot());","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"MadLamprey":49}},{"path":"src/main/java/seedu/address/ui/EventWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":" * Controller for events window","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"public class EventWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    private static final String FXML \u003d \"EventWindow.fxml\";","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EventWindow.class);","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"     * Initialises an EventWindow object","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    public EventWindow(Stage root, Logic logic) {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     * Shows the event window.","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    public void show() {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        logger.fine(\"Showing events page.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    public void focus() {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"MadLamprey":51}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w09-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ScarletBlanks":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    private EventWindow eventWindow;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    private TagListWindow tagListWindow;","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"    private PersonInformationPanel personInformationPanel;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"    private SummaryStatisticScreen summaryStatisticScreen;","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"    private StackPane personInformationPanelPlaceholder;","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"    private StackPane summaryStatisticScreenPlaceholder;","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        eventWindow \u003d new EventWindow(new Stage(), logic);","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"        tagListWindow \u003d new TagListWindow(new Stage(), logic);","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"     * Opens the events window.","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"    public void handleEvent() {","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"        if (!eventWindow.isShowing()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"            eventWindow.show();","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"            eventWindow.focus();","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"ketweeen"},"content":"     * Opens the tag list window.","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"ketweeen"},"content":"    public void handleListTags() {","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"ketweeen"},"content":"        if (!tagListWindow.isShowing()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"ketweeen"},"content":"            tagListWindow.show();","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"ketweeen"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"ketweeen"},"content":"            tagListWindow.focus();","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":214,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"sk2001git"},"content":"     * Updates the personListPanel based on last View Command entered","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":218,"author":{"gitId":"sk2001git"},"content":"    private void handleView() {","lastModifiedDate":"2023-10-15"},{"lineNumber":219,"author":{"gitId":"sk2001git"},"content":"        Index index \u003d logic.getLastViewedPersonIndex();","lastModifiedDate":"2023-10-15"},{"lineNumber":220,"author":{"gitId":"sk2001git"},"content":"        Person personToView \u003d logic.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":221,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":222,"author":{"gitId":"sk2001git"},"content":"        personInformationPanel \u003d new PersonInformationPanel(personToView);","lastModifiedDate":"2023-10-15"},{"lineNumber":223,"author":{"gitId":"sk2001git"},"content":"        personInformationPanelPlaceholder.getChildren().add(personInformationPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":224,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":225,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList \u003d personToView.getScoreList();","lastModifiedDate":"2023-10-28"},{"lineNumber":226,"author":{"gitId":"sk2001git"},"content":"        if (scoreList.isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":227,"author":{"gitId":"sk2001git"},"content":"            logger.info(\"No score list detected\");","lastModifiedDate":"2023-10-28"},{"lineNumber":228,"author":{"gitId":"sk2001git"},"content":"            summaryStatisticScreenPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-29"},{"lineNumber":229,"author":{"gitId":"sk2001git"},"content":"            return;","lastModifiedDate":"2023-10-28"},{"lineNumber":230,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":231,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":232,"author":{"gitId":"sk2001git"},"content":"        logger.info(\"Score list detected\");","lastModifiedDate":"2023-10-28"},{"lineNumber":233,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":234,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":235,"author":{"gitId":"sk2001git"},"content":"        Person personToView2 \u003d logic.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":236,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":237,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":238,"author":{"gitId":"sk2001git"},"content":"        summaryStatisticScreen \u003d new SummaryStatisticScreen(logic.getSummaryStatistic(), personToView2);","lastModifiedDate":"2023-10-28"},{"lineNumber":239,"author":{"gitId":"sk2001git"},"content":"        summaryStatisticScreenPlaceholder.getChildren().add(summaryStatisticScreen.getRoot());","lastModifiedDate":"2023-10-28"},{"lineNumber":240,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":241,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":242,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":247,"author":{"gitId":"MadLamprey"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"MadLamprey"},"content":"        return eventListPanel;","lastModifiedDate":"2023-10-24"},{"lineNumber":249,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":250,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"sk2001git"},"content":"            if (commandResult.isView()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":272,"author":{"gitId":"sk2001git"},"content":"                logger.fine(\"View command detected\");","lastModifiedDate":"2023-10-28"},{"lineNumber":273,"author":{"gitId":"sk2001git"},"content":"                handleView();","lastModifiedDate":"2023-10-15"},{"lineNumber":274,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":275,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":276,"author":{"gitId":"MadLamprey"},"content":"            if (commandResult.isShowEvent()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"MadLamprey"},"content":"                handleEvent();","lastModifiedDate":"2023-10-24"},{"lineNumber":278,"author":{"gitId":"MadLamprey"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"ketweeen"},"content":"            if (commandResult.isListTags()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"ketweeen"},"content":"                handleListTags();","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sk2001git":50,"ketweeen":19,"MadLamprey":26,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    private Label linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"    private Label github;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    private Label score;","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        linkedIn.setText(person.getLinkedIn().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        github.setText(person.getGithub().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        setTagLabel(person.getTags());","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"    private void setTagLabel(Set\u003cTag\u003e tagsSet) {","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cString\u003e tagCategories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"        UniqueTagList uniqueTagList \u003d new UniqueTagList();","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"        for (Tag tag : uniqueTagList.asUnmodifiableObservableList()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"            if (!tagCategories.contains(tag.tagCategory) \u0026\u0026 !tag.tagCategory.equals(\"assessment\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"                tagCategories.add(tag.tagCategory);","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"        for (Tag tag : tagsSet) {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"            Label label \u003d new Label(tag.tagName);","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"            if (tagCategories.indexOf(tag.tagCategory) \u003d\u003d 0) {","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label2\");","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"            } else if (tagCategories.indexOf(tag.tagCategory) \u003d\u003d 1) {","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label3\");","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"            } else if (tagCategories.indexOf(tag.tagCategory) \u003d\u003d 2) {","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label4\");","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"            } else if (tagCategories.indexOf(tag.tagCategory) \u003d\u003d 3) {","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label5\");","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"            } else if (tagCategories.indexOf(tag.tagCategory) \u003d\u003d 4) {","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label6\");","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"            } else if (tag.tagCategory.equals(\"assessment\")) { //assessment tag","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label7\");","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"            } else { // uncategorised","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label1\");","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"            tags.getChildren().add(label);","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sk2001git":3,"AriellaCallista":36,"MadLamprey":6,"-":56}},{"path":"src/main/java/seedu/address/ui/PersonInformationPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import javafx.scene.control.ToggleButton;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":" * An UI component that displays information of a {@code Person}","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"public class PersonInformationPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    private static final String FXML \u003d \"PersonInformationPanel.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    private final Person person;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    private Label name;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    private Label phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    private Label address;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    private Label email;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    private Label remark;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"    private ToggleButton preliminary;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"    private ToggleButton interviewed;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"    private ToggleButton status;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    private Label linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    private Label github;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"     * Creates a {@code PersonInformationPanel} with the given {@code Person}.","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"     * @param person the person to display","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"    public PersonInformationPanel(Person person) {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"        setTagLabel(person.getTags());","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        linkedIn.setText(person.getLinkedIn().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        github.setText(person.getGithub().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        setResultButton(person.getStatus(), status);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"        setButton(person.getStatus());","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"    private void setTagLabel(Set\u003cTag\u003e tagsSet) {","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cString\u003e tagCategories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        UniqueTagList uniqueTagList \u003d new UniqueTagList();","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"        for (Tag tag : uniqueTagList.asUnmodifiableObservableList()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"            if (!tagCategories.contains(tag.tagCategory)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"                tagCategories.add(tag.tagCategory);","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"        for (Tag tag : tagsSet) {","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"            Label label \u003d new Label(tag.tagName);","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"            if (tagCategories.indexOf(tag.tagCategory) \u003d\u003d 0) {","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label2\");","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"            } else if (tagCategories.indexOf(tag.tagCategory) \u003d\u003d 1) {","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label3\");","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"            } else if (tagCategories.indexOf(tag.tagCategory) \u003d\u003d 2) {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label4\");","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"            } else if (tagCategories.indexOf(tag.tagCategory) \u003d\u003d 3) {","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label5\");","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"            } else if (tagCategories.indexOf(tag.tagCategory) \u003d\u003d 4) {","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label6\");","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"                label.getStyleClass().add(\"label1\");","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"            tags.getChildren().add(label);","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"    private static void setResultButton(Status status, ToggleButton statusButton) {","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"        StatusTypes statusType \u003d status.getStatusType();","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"        if (statusType \u003d\u003d StatusTypes.OFFERED) {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"            statusButton.setText(\"Offered\");","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"        } else if (statusType \u003d\u003d StatusTypes.REJECTED) {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"            statusButton.setText(\"Rejected\");","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"            statusButton.setText(\"Pending\");","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"    private void setButton(Status currentStatus) {","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"        StatusTypes statusType \u003d currentStatus.getStatusType();","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"        if (statusType \u003d\u003d StatusTypes.OFFERED) {","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"            status.getStyleClass().clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"            status.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().clear();;","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"            interviewed.getStyleClass().clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"            interviewed.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"        } else if (statusType \u003d\u003d StatusTypes.REJECTED) {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"            status.getStyleClass().clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"            status.getStyleClass().add(\"rejected-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"        } else if (statusType \u003d\u003d StatusTypes.INTERVIEWED) {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().clear();;","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"            interviewed.getStyleClass().clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"            interviewed.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().clear();;","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"sk2001git":103,"AriellaCallista":34,"MadLamprey":5}},{"path":"src/main/java/seedu/address/ui/SummaryStatisticScreen.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.ReadOnlySummaryStatistic;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":" * Controller for a Summary Statistic page","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"public class SummaryStatisticScreen extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    private static final String FXML \u003d \"SummaryStatisticScreen.fxml\";","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    private final ReadOnlySummaryStatistic summaryStatistic;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"    private final Person person;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    private TableView\u003cStatisticData\u003e tableView;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"     * Constructor for summary statistic screen.","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"     * @param summaryStatistic summary statistic","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"     * @param person person","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    public SummaryStatisticScreen(ReadOnlySummaryStatistic summaryStatistic, Person person) {","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        super(FXML);","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        this.summaryStatistic \u003d summaryStatistic;","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"        updateTableView();","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"     * Updates the table view with the statistic data.","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    public void updateTableView() {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        ObservableList\u003cStatisticData\u003e statisticData \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        statisticData \u003d fillStatisticDataForPerson(statisticData);","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        tableView.setItems(statisticData);","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        tableView.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"     * Fills the statistic data for the person.","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"     * @return statistic data","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    public ObservableList\u003cStatisticData\u003e fillStatisticDataForPerson(ObservableList\u003cStatisticData\u003e statisticData) {","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        List\u003cTag\u003e tags \u003d person.getScoreList().getTagsWithScore();","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"            int mean \u003d summaryStatistic.generateMeanWithTag(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"            int median \u003d summaryStatistic.generateMedianWithTag(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"            int min \u003d summaryStatistic.generateMinScoreValueWithTag(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"            int max \u003d summaryStatistic.generateMaxScoreValueWithTag(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"            double percentile \u003d summaryStatistic.generatePercentileWithTag(person, tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"            int currentScore \u003d person.getScoreList().getScore(tag).value;","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"            statisticData.add(new StatisticData(tag.tagName, mean, median, min, max, percentile, currentScore));","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        return statisticData;","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"     * Represents the statistic data.","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"    public static class StatisticData {","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"        private final String tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"        private final int mean;","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        private final int median;","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"        private final int max;","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"        private final int min;","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        private final double percentile;","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"        private final int currentScore;","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"        /**","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"         * Constructor for statistic data.","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"         * @param tag tag","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"         * @param mean mean","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"         * @param median median","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"         * @param max max","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"         * @param min min","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"         * @param percentile percentile","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"         */","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"        public StatisticData(String tag, int mean, int median, int min, int max, double percentile, int currentScore) {","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"            this.tag \u003d tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"            this.mean \u003d mean;","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"            this.median \u003d median;","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"            this.min \u003d min;","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"            this.max \u003d max;","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"            this.percentile \u003d percentile;","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"            this.currentScore \u003d currentScore;","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"        public String getTag() {","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"            return tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"        public int getMean() {","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"            return mean;","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"        public int getMedian() {","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"            return median;","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"        public int getMin() {","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"            return min;","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"        public int getMax() {","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"            return max;","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"        public double getPercentile() {","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"            return percentile;","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"        public int getCurrentScore() {","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"            return currentScore;","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"sk2001git":130}},{"path":"src/main/java/seedu/address/ui/TagCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":" * An UI component that displays information of a {@code Tag}.","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"public class TagCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    private static final String FXML \u003d \"TagListCard.fxml\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"    public final Tag tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"    private Label tagName;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    private Label tagCategory;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    public TagCard(Tag tag) {","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"        super(FXML);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"        tagName.setText(\"Tag Name: \" + tag.getTagName());","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"        tagCategory.setText(\"Category: \" + tag.getTagCategory());","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ketweeen":42}},{"path":"src/main/java/seedu/address/ui/TagListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":" * Panel containing the list of tags.","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"public class TagListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    private static final String FXML \u003d \"TagListPanel.fxml\";","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TagListPanel.class);","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    private ListView\u003cTag\u003e tagListView;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"     * Creates a {@code TagListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"    public TagListPanel(ObservableList\u003cTag\u003e tagList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"        super(FXML);","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"        tagListView.setItems(tagList);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        tagListView.setCellFactory(listView -\u003e new TagListPanel.TagListViewCell());","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Tag} using a {@code TagCard}.","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"    class TagListViewCell extends ListCell\u003cTag\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"        protected void updateItem(Tag tag, boolean empty) {","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"            super.updateItem(tag, empty);","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"            if (empty || tag \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"                setGraphic(null);","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"                setText(null);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"                setGraphic(new TagCard(tag).getRoot());","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ketweeen":48}},{"path":"src/main/java/seedu/address/ui/TagListWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":" * The window for displaying the list of tags.","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"public class TagListWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    private static final String FXML \u003d \"TagListWindow.fxml\";","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TagListWindow.class);","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    private TagListPanel tagListPanel;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    private StackPane tagListPanelPlaceholder;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"     * Initialises an TagListWindow object","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    public TagListWindow(Stage root, Logic logic) {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"        super(FXML, root);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        tagListPanel \u003d new TagListPanel(logic.getFilteredTagsList());","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        tagListPanelPlaceholder.getChildren().add(tagListPanel.getRoot());","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"     * Shows the tag list window.","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    public void show() {","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"        logger.fine(\"Showing tag list page.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        getRoot().show();","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"    public void focus() {","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ketweeen":49}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":".event_cell_small_label {","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"MadLamprey"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"AriellaCallista"},"content":".label1 {","lastModifiedDate":"2023-10-28"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-color: #3e7b91; // blue","lastModifiedDate":"2023-10-28"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-28"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-28"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-28"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-28"},{"lineNumber":359,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":360,"author":{"gitId":"AriellaCallista"},"content":".label2 {","lastModifiedDate":"2023-10-28"},{"lineNumber":361,"author":{"gitId":"AriellaCallista"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-28"},{"lineNumber":362,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-color: #bc8650;","lastModifiedDate":"2023-10-28"},{"lineNumber":363,"author":{"gitId":"AriellaCallista"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-28"},{"lineNumber":364,"author":{"gitId":"AriellaCallista"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-28"},{"lineNumber":365,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-28"},{"lineNumber":366,"author":{"gitId":"AriellaCallista"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-28"},{"lineNumber":367,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-28"},{"lineNumber":368,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":369,"author":{"gitId":"AriellaCallista"},"content":".label3 {","lastModifiedDate":"2023-10-28"},{"lineNumber":370,"author":{"gitId":"AriellaCallista"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-28"},{"lineNumber":371,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-color: #008E8B;","lastModifiedDate":"2023-11-03"},{"lineNumber":372,"author":{"gitId":"AriellaCallista"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-28"},{"lineNumber":373,"author":{"gitId":"AriellaCallista"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-28"},{"lineNumber":374,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-28"},{"lineNumber":375,"author":{"gitId":"AriellaCallista"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-28"},{"lineNumber":376,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-28"},{"lineNumber":377,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":378,"author":{"gitId":"AriellaCallista"},"content":".label4 {","lastModifiedDate":"2023-10-28"},{"lineNumber":379,"author":{"gitId":"AriellaCallista"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-28"},{"lineNumber":380,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-color: #114D77;","lastModifiedDate":"2023-10-29"},{"lineNumber":381,"author":{"gitId":"AriellaCallista"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-28"},{"lineNumber":382,"author":{"gitId":"AriellaCallista"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-28"},{"lineNumber":383,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-28"},{"lineNumber":384,"author":{"gitId":"AriellaCallista"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-28"},{"lineNumber":385,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-28"},{"lineNumber":386,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":387,"author":{"gitId":"AriellaCallista"},"content":".label5 {","lastModifiedDate":"2023-11-01"},{"lineNumber":388,"author":{"gitId":"AriellaCallista"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-28"},{"lineNumber":389,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-color: #347c39;","lastModifiedDate":"2023-11-03"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":394,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":395,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":396,"author":{"gitId":"AriellaCallista"},"content":".label6 {","lastModifiedDate":"2023-11-01"},{"lineNumber":397,"author":{"gitId":"AriellaCallista"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-01"},{"lineNumber":398,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-color: #9B3B6A;","lastModifiedDate":"2023-11-01"},{"lineNumber":399,"author":{"gitId":"AriellaCallista"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-01"},{"lineNumber":400,"author":{"gitId":"AriellaCallista"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-01"},{"lineNumber":401,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-01"},{"lineNumber":402,"author":{"gitId":"AriellaCallista"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-11-01"},{"lineNumber":403,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":404,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":405,"author":{"gitId":"AriellaCallista"},"content":".label7 {","lastModifiedDate":"2023-11-03"},{"lineNumber":406,"author":{"gitId":"AriellaCallista"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-03"},{"lineNumber":407,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-color: #005910;","lastModifiedDate":"2023-11-03"},{"lineNumber":408,"author":{"gitId":"AriellaCallista"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-03"},{"lineNumber":409,"author":{"gitId":"AriellaCallista"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-03"},{"lineNumber":410,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-03"},{"lineNumber":411,"author":{"gitId":"AriellaCallista"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-11-03"},{"lineNumber":412,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":413,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":414,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"AriellaCallista":53,"MadLamprey":5,"-":356}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"event_cell_small_label\" text\u003d\"Event: \\$description\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"            \u003cLabel fx:id\u003d\"startTime\" styleClass\u003d\"event_cell_small_label\" text\u003d\"Start Time: \\$startTime\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"            \u003cLabel fx:id\u003d\"endTime\" styleClass\u003d\"event_cell_small_label\" text\u003d\"End Time: \\$endTime\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"event_cell_small_label\" text\u003d\"Candidate: \\$name\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"MadLamprey":25}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"MadLamprey":8}},{"path":"src/main/resources/view/EventWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Events\" minWidth\u003d\"600\" minHeight\u003d\"400\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    \u003cicons\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"                \u003cURL value\u003d\"@Form.css\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"            \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"150\" prefWidth\u003d\"150\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"MadLamprey":32}},{"path":"src/main/resources/view/Form.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":".white-box {","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #fff;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"    -fx-border-color: #ccc;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 20px;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"    -fx-pref-width: 300px;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"    -fx-margin: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"    -fx-effect: drop shadow(three-pass-box, #888, 2, 2, 5, 0);","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":".text-field {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #333333;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"    -fx-border-color: #fff;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 3px;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"    -fx-margin: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 3px;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    -fx-text-fill: #fff;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":".box {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #0074d9;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    -fx-text-fill: #fff;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 3px;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":".box:hover {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #0056b3;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":".stage-button {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #ccc;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 50;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":".offered-button {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-color: #005910;","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 50;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":".rejected-button {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    -fx-background-color: #BC5150;","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 50;","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":".connection-line {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"    -fx-border-style: solid;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"    -fx-border-color: grey;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":".connection-box {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 5 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":".connection-line {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"    -fx-fill: #ccc;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"    -fx-stroke: #ccc;","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"    -fx-stroke-width: 4px;","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"    -fx-min-width: 100px;","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"    -fx-max-width: 200px;","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"    -fx-min-height: 2px;","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"    -fx-max-height: 2px;","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"sk2001git":76,"AriellaCallista":2}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"         title\u003d\"JABPro\" minWidth\u003d\"1000\" minHeight\u003d\"800\"  onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    \u003cImage url\u003d\"@/images/jabpro.png\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        \u003cURL value\u003d\"@Form.css\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Events\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"            \u003cMenuItem fx:id\u003d\"eventItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleEvent\" text\u003d\"Events\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox fx:id\u003d\"mainWindow\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"          \u003cSplitPane fx:id\u003d\"splitPane\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"300\" prefWidth\u003d\"300\"","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"                       VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"            \u003cStackPane fx:id\u003d\"personInformationPanelPlaceholder\"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"                       styleClass\u003d\"pane-with-border\" minWidth\u003d\"600\" prefWidth\u003d\"600\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"            \u003cStackPane fx:id\u003d\"summaryStatisticScreenPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"                       minWidth\u003d\"300\" prefWidth\u003d\"300\"\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"          \u003c/SplitPane\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"sk2001git":27,"MadLamprey":5,"-":55}},{"path":"src/main/resources/view/PersonInformationPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.control.ToggleButton?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"\u003cListView id\u003d\"personInformationPanel\" fx:id\u003d\"personListPanelPlaceholder\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" VBox.vgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"30\" \u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"                \u003cInsets top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"                \u003cLabel text\u003d\"Name: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"text-field\" wrapText\u003d\"true\" minWidth\u003d\"170\"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"                       alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"                \u003cLabel text\u003d\"Phone: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"text-field\" text\u003d\"\\$phone\" wrapText\u003d\"true\" minWidth\u003d\"165\"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"                       alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"34\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"Email: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"text-field\" text\u003d\"\\$email\" wrapText\u003d\"true\"  prefWidth\u003d\"450\"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"                   alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"15\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"Address: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"text-field\" text\u003d\"\\$address\" wrapText\u003d\"true\" prefWidth\u003d\"450\"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"                   alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"11\" \u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"LinkedIn: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel fx:id\u003d\"linkedIn\" styleClass\u003d\"text-field\" text\u003d\"\\$linkedIn\" wrapText\u003d\"true\" prefWidth\u003d\"450\"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"            alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"24\" \u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"Github: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"text-field\" text\u003d\"\\$github\" wrapText\u003d\"true\" prefWidth\u003d\"450\"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"                   alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"40\" \u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"Tags: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"0\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"                \u003cInsets left\u003d\"30\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"            \u003cToggleButton fx:id\u003d\"preliminary\" text\u003d\"Preliminary\" styleClass\u003d\"stage-button\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"            \u003cRectangle styleClass\u003d\"connection-line\" width\u003d\"120\" strokeWidth\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"            \u003cToggleButton fx:id\u003d\"interviewed\" text\u003d\"Interviewed\" styleClass\u003d\"stage-button\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"            \u003cRectangle styleClass\u003d\"connection-line\" width\u003d\"120\" strokeWidth\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"            \u003cToggleButton fx:id\u003d\"status\" text\u003d\"\\$status\" styleClass\u003d\"stage-button\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" VBox.vgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"Remark: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel fx:id\u003d\"remark\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"text-field\" text\u003d\"\\$remark\" wrapText\u003d\"true\" prefWidth\u003d\"530\"","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"            minHeight\u003d\"250\"  /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"\u003c/ListView\u003e","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"sk2001git":85}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"      \u003cLabel fx:id\u003d\"linkedIn\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$linkedIn\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"      \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$github\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MadLamprey":2,"-":36}},{"path":"src/main/resources/view/SummaryStatisticScreen.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.control.cell.PropertyValueFactory?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"\u003cListView id\u003d\"summaryStatisticScreen\" fx:id\u003d\"summaryStatisticScreenPlaceholder\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"        \u003cTableView fx:id\u003d\"tableView\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"            \u003ccolumns\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"            \u003cTableColumn text\u003d\"Tag\" minWidth\u003d\"130\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"                \u003ccellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"                    \u003cPropertyValueFactory property\u003d\"tag\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"                \u003c/cellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"            \u003c/TableColumn\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"            \u003cTableColumn text\u003d\"Score\" minWidth\u003d\"80\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"                \u003ccellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"                    \u003cPropertyValueFactory property\u003d\"currentScore\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"                \u003c/cellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"            \u003c/TableColumn\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"            \u003cTableColumn text\u003d\"Mean\" minWidth\u003d\"100\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"                \u003ccellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"                    \u003cPropertyValueFactory property\u003d\"mean\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"                \u003c/cellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"            \u003c/TableColumn\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"            \u003cTableColumn text\u003d\"Median\" minWidth\u003d\"120\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"                \u003ccellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"                    \u003cPropertyValueFactory property\u003d\"median\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"                \u003c/cellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"            \u003c/TableColumn\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"            \u003cTableColumn text\u003d\"Min\" minWidth\u003d\"80\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"                \u003ccellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"                    \u003cPropertyValueFactory property\u003d\"min\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"                \u003c/cellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"            \u003c/TableColumn\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"            \u003cTableColumn text\u003d\"Max\" minWidth\u003d\"80\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"                \u003ccellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"                    \u003cPropertyValueFactory property\u003d\"max\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"                \u003c/cellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"            \u003c/TableColumn\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"            \u003cTableColumn text\u003d\"Percentile\" minWidth\u003d\"150\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"                \u003ccellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"                    \u003cPropertyValueFactory property\u003d\"percentile\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"                \u003c/cellValueFactory\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"            \u003c/TableColumn\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"            \u003c/columns\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        \u003c/TableView\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"\u003c/ListView\u003e","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"sk2001git":54}},{"path":"src/main/resources/view/TagListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"            \u003cLabel fx:id\u003d\"tagName\" styleClass\u003d\"event_cell_small_label\" text\u003d\"Tag name: \\$tagName\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"            \u003cLabel fx:id\u003d\"tagCategory\" styleClass\u003d\"event_cell_small_label\" text\u003d\"Tag category: \\$tagCategory\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ketweeen":23}},{"path":"src/main/resources/view/TagListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"    \u003cListView fx:id\u003d\"tagListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ketweeen":8}},{"path":"src/main/resources/view/TagListWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Tag List\" minWidth\u003d\"600\" minHeight\u003d\"400\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    \u003cicons\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"                \u003cURL value\u003d\"@Form.css\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"            \u003cStackPane fx:id\u003d\"tagListPanelPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"150\" prefWidth\u003d\"150\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ketweeen":33}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.storage.event.JsonEventBookStorage;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        JsonEventBookStorage eventBookStorage \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"                new JsonEventBookStorage(temporaryFolder.resolve(\"eventbook.json\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, eventBookStorage);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"        JsonEventBookStorage eventBookStorage \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"                new JsonEventBookStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, eventBookStorage);","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"MadLamprey":11,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"                expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"sk2001git":1,"MadLamprey":3,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.SummaryStatistic;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"        public Path getEventBookFilePath() {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":"        public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"MadLamprey"},"content":"        public void setEventBook(ReadOnlyEventBook newData) {","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"        public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"AriellaCallista"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"AriellaCallista"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"AriellaCallista"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"MadLamprey"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"AriellaCallista"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"AriellaCallista"},"content":"        public void updateFilteredPersonList(List\u003cPredicate\u003cPerson\u003e\u003e predicatesList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"AriellaCallista"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":219,"author":{"gitId":"ketweeen"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"ketweeen"},"content":"        public void sortPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-13"},{"lineNumber":221,"author":{"gitId":"ketweeen"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":223,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":225,"author":{"gitId":"MadLamprey"},"content":"        public void sortEventList(Comparator\u003cEvent\u003e comparator) {","lastModifiedDate":"2023-10-28"},{"lineNumber":226,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-10-28"},{"lineNumber":227,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":228,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":229,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"MadLamprey"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"MadLamprey"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"MadLamprey"},"content":"        public void updateFilteredEventList(List\u003cPredicate\u003cEvent\u003e\u003e predicatesList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"ketweeen"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"ketweeen"},"content":"        public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"ketweeen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"ketweeen"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"ketweeen"},"content":"        public void updateFilteredTagList(Predicate\u003cTag\u003e predicate) {","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"ketweeen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"AriellaCallista"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":255,"author":{"gitId":"sk2001git"},"content":"        public Index getLastViewedPersonIndex() {","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"sk2001git"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":257,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":258,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":259,"author":{"gitId":"sk2001git"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"sk2001git"},"content":"        public void setLastViewedPersonIndex(Index index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":261,"author":{"gitId":"AriellaCallista"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":262,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":264,"author":{"gitId":"AriellaCallista"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"AriellaCallista"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2023-10-28"},{"lineNumber":266,"author":{"gitId":"AriellaCallista"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":268,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"sk2001git"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":270,"author":{"gitId":"sk2001git"},"content":"        public void loadSummaryStatistics() {","lastModifiedDate":"2023-11-01"},{"lineNumber":271,"author":{"gitId":"sk2001git"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":272,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":274,"author":{"gitId":"sk2001git"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":275,"author":{"gitId":"sk2001git"},"content":"        public SummaryStatistic getSummaryStatistic() {","lastModifiedDate":"2023-11-01"},{"lineNumber":276,"author":{"gitId":"sk2001git"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":303,"author":{"gitId":"sk2001git"},"content":"        private Index index;","lastModifiedDate":"2023-10-19"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":317,"author":{"gitId":"sk2001git"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":318,"author":{"gitId":"sk2001git"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":319,"author":{"gitId":"sk2001git"},"content":"            ObservableList\u003cPerson\u003e filteredList \u003d FXCollections.observableArrayList(personsAdded);","lastModifiedDate":"2023-10-19"},{"lineNumber":320,"author":{"gitId":"sk2001git"},"content":"            return filteredList;","lastModifiedDate":"2023-10-19"},{"lineNumber":321,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":322,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":323,"author":{"gitId":"sk2001git"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":324,"author":{"gitId":"sk2001git"},"content":"        public void setLastViewedPersonIndex(Index index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":325,"author":{"gitId":"sk2001git"},"content":"            this.index \u003d index;","lastModifiedDate":"2023-10-19"},{"lineNumber":326,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":327,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":328,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"sk2001git":33,"AriellaCallista":16,"ketweeen":20,"MadLamprey":62,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/AddGCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"public class AddGCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private static final String GITHUB_STUB \u003d \"Someusername\";","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withGithub(GITHUB_STUB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        editedPerson.setGithub(new Github(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand addGCommand \u003d new AddGCommand(INDEX_FIRST_PERSON, new Github(editedPerson.getGithub().value));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(AddGCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"                new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(addGCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand addGCommand \u003d new AddGCommand(outOfBoundIndex, new Github(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        assertCommandFailure(addGCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand addGCommand \u003d new AddGCommand(outOfBoundIndex, new Github(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        assertCommandFailure(addGCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        final AddGCommand standardCommand \u003d new AddGCommand(INDEX_FIRST_PERSON, new Github(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand commandWithSameValues \u003d new AddGCommand(INDEX_FIRST_PERSON, new Github(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(new AddGCommand(INDEX_SECOND_PERSON, new Github(\"xyz\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"        // different remark, same value-\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(new AddGCommand(INDEX_FIRST_PERSON, new Github(\"xyz\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"sk2001git":1,"MadLamprey":90}},{"path":"src/test/java/seedu/address/logic/commands/AddLCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"public class AddLCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private static final String LINKEDIN_STUB \u003d \"Someusername\";","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withLinkedIn(LINKEDIN_STUB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        editedPerson.setLinkedIn(new LinkedIn(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand addLCommand \u003d new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(editedPerson.getLinkedIn().value));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(AddLCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"                new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(addLCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand addLCommand \u003d new AddLCommand(outOfBoundIndex, new LinkedIn(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        assertCommandFailure(addLCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand addLCommand \u003d new AddLCommand(outOfBoundIndex, new LinkedIn(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        assertCommandFailure(addLCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        final AddLCommand standardCommand \u003d new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand commandWithSameValues \u003d new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(new AddLCommand(INDEX_SECOND_PERSON, new LinkedIn(\"xyz\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"        // different remark, same value-\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(\"xyz\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"sk2001git":1,"MadLamprey":90}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"MadLamprey":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, false)));","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false, false)));","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false, false)));","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        // different isView value -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true, false, false)));","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"        // different listTags value -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, true)));","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"                false, false, false).hashCode());","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"                false, false, false).hashCode());","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        // different isView value -\u003e returns different hashcode","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"                true, false, false).hashCode());","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"        // different listTags value -\u003e returns different hashcode","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"                false, false, true).hashCode());","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"        String expected \u003d CommandResult.class.getCanonicalName()","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"                + \"{feedbackToUser\u003d\" + commandResult.getFeedbackToUser()","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"                + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"                + \", exit\u003d\" + commandResult.isExit()","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"                + \", isView\u003d\" + commandResult.isView()","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"                + \", showEvent\u003d\" + commandResult.isShowEvent()","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"                + \", listTags\u003d\" + commandResult.isListTags() + \"}\";","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"sk2001git":4,"ketweeen":24,"-":55}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"    public static final ScoreList VALID_SCORE_LIST_AMY \u003d new ScoreList();","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"     * that takes a string {@code expectedMessage} and a boolean {@code isView}.","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"            Model expectedModel, boolean isView) {","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, isView);","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"sk2001git":17,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalStatusPerson;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTagAndStatusPerson;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTagPerson;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPredicateLists.PREDICATE_LIST_CONTAINING_STATUS_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPredicateLists.PREDICATE_LIST_CONTAINING_STATUS_TWO;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPredicateLists.PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_MIX;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPredicateLists.PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPredicateLists.PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_TWO;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPredicateLists.PREDICATE_LIST_CONTAINING_TAG_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPredicateLists.PREDICATE_LIST_CONTAINING_TAG_TWO;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalTags.NO_MATCHING_TAG_NAME_STRING;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalTags.TEST_TAG_NAME_STRING;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"    // Delete by index tests","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"    // Delete by tags tests","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"ketweeen"},"content":"    public void execute_validTagsUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"ketweeen"},"content":"        Person personToDelete \u003d getTypicalTagPerson();","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d new TagContainsKeywordsPredicate(List.of(TEST_TAG_NAME_STRING));","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"ketweeen"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"ketweeen"},"content":"                add(tagPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"ketweeen"},"content":"            }};","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(predicateList);","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"ketweeen"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"ketweeen"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"ketweeen"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"ketweeen"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"ketweeen"},"content":"    public void execute_noMatchingTagsUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"ketweeen"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"ketweeen"},"content":"                new TagContainsKeywordsPredicate(List.of(NO_MATCHING_TAG_NAME_STRING));","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"ketweeen"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"ketweeen"},"content":"                add(tagPredicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"ketweeen"},"content":"            }};","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(predicateList);","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"ketweeen"},"content":"        assertCommandFailure(deleteCommand, model, DeleteCommand.MESSAGE_PERSONS_NOT_FOUND);","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"ketweeen"},"content":"    // Delete by status tests","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"ketweeen"},"content":"    public void execute_validStatusUnfilteredList_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"ketweeen"},"content":"        Person personToDelete \u003d getTypicalStatusPerson(); // Person with rejected status","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"ketweeen"},"content":"        String testStatus \u003d StatusTypes.REJECTED.toString();","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"ketweeen"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d new StatusContainsKeywordsPredicate(List.of(testStatus));","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"ketweeen"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":141,"author":{"gitId":"ketweeen"},"content":"                add(statusPredicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"ketweeen"},"content":"            }};","lastModifiedDate":"2023-11-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(predicateList);","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"ketweeen"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"ketweeen"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"ketweeen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-11-08"},{"lineNumber":150,"author":{"gitId":"ketweeen"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-11-08"},{"lineNumber":151,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"ketweeen"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":153,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"ketweeen"},"content":"    public void execute_noMatchingStatusUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"ketweeen"},"content":"        String testStatus \u003d StatusTypes.OFFERED.toString();","lastModifiedDate":"2023-11-08"},{"lineNumber":158,"author":{"gitId":"ketweeen"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d new StatusContainsKeywordsPredicate(List.of(testStatus));","lastModifiedDate":"2023-11-08"},{"lineNumber":159,"author":{"gitId":"ketweeen"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"ketweeen"},"content":"                add(statusPredicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"ketweeen"},"content":"            }};","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(predicateList);","lastModifiedDate":"2023-11-08"},{"lineNumber":164,"author":{"gitId":"ketweeen"},"content":"        assertCommandFailure(deleteCommand, model, DeleteCommand.MESSAGE_PERSONS_NOT_FOUND);","lastModifiedDate":"2023-11-08"},{"lineNumber":165,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"ketweeen"},"content":"    // Delete by tags and status tests","lastModifiedDate":"2023-11-08"},{"lineNumber":168,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"ketweeen"},"content":"    public void execute_validTagsAndStatusUnfilteredList_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"ketweeen"},"content":"        Person personToDelete \u003d getTypicalTagAndStatusPerson(); // Benson","lastModifiedDate":"2023-11-08"},{"lineNumber":171,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"ketweeen"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d new TagContainsKeywordsPredicate(List.of(TEST_TAG_NAME_STRING));","lastModifiedDate":"2023-11-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"ketweeen"},"content":"        String testStatus \u003d StatusTypes.REJECTED.toString();","lastModifiedDate":"2023-11-08"},{"lineNumber":175,"author":{"gitId":"ketweeen"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d new StatusContainsKeywordsPredicate(List.of(testStatus));","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"ketweeen"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":178,"author":{"gitId":"ketweeen"},"content":"                add(tagPredicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":179,"author":{"gitId":"ketweeen"},"content":"                add(statusPredicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":180,"author":{"gitId":"ketweeen"},"content":"            }};","lastModifiedDate":"2023-11-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(predicateList);","lastModifiedDate":"2023-11-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":186,"author":{"gitId":"ketweeen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-11-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"ketweeen"},"content":"    public void equals_index() {","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"ketweeen"},"content":"        // Delete by index","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByIndexFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByIndexSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByIndexFirstCommand.equals(deleteByIndexFirstCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":201,"author":{"gitId":"ketweeen"},"content":"        // same values (delete by index) -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":202,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByIndexFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-08"},{"lineNumber":203,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByIndexFirstCommand.equals(deleteByIndexFirstCommandCopy));","lastModifiedDate":"2023-11-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":206,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByIndexFirstCommand.equals(1));","lastModifiedDate":"2023-11-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":209,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByIndexFirstCommand.equals(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":211,"author":{"gitId":"ketweeen"},"content":"        // different person or set of tags -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":212,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByIndexFirstCommand.equals(deleteByIndexSecondCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":216,"author":{"gitId":"ketweeen"},"content":"    public void equals_tags() {","lastModifiedDate":"2023-11-08"},{"lineNumber":217,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByTagsFirstCommand \u003d new DeleteCommand(PREDICATE_LIST_CONTAINING_TAG_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":218,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByTagsSecondCommand \u003d new DeleteCommand(PREDICATE_LIST_CONTAINING_TAG_TWO);","lastModifiedDate":"2023-11-08"},{"lineNumber":219,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":220,"author":{"gitId":"ketweeen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":221,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByTagsFirstCommand.equals(deleteByTagsFirstCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":222,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":223,"author":{"gitId":"ketweeen"},"content":"        // same values (delete by tags) -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":224,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByTagsFirstCommandCopy \u003d new DeleteCommand(PREDICATE_LIST_CONTAINING_TAG_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":225,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByTagsFirstCommand.equals(deleteByTagsFirstCommandCopy));","lastModifiedDate":"2023-11-08"},{"lineNumber":226,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":227,"author":{"gitId":"ketweeen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":228,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByTagsFirstCommand.equals(1));","lastModifiedDate":"2023-11-08"},{"lineNumber":229,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"ketweeen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":231,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByTagsFirstCommand.equals(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":232,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":233,"author":{"gitId":"ketweeen"},"content":"        // different person or set of tags -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":234,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByTagsFirstCommand.equals(deleteByTagsSecondCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":235,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":236,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":237,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":238,"author":{"gitId":"ketweeen"},"content":"    public void equals_status() {","lastModifiedDate":"2023-11-08"},{"lineNumber":239,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByStatusFirstCommand \u003d new DeleteCommand(PREDICATE_LIST_CONTAINING_STATUS_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":240,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByStatusSecondCommand \u003d new DeleteCommand(PREDICATE_LIST_CONTAINING_STATUS_TWO);","lastModifiedDate":"2023-11-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":243,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByStatusFirstCommand.equals(deleteByStatusFirstCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":245,"author":{"gitId":"ketweeen"},"content":"        // same values (delete by status) -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":246,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByStatusFirstCommandCopy \u003d new DeleteCommand(PREDICATE_LIST_CONTAINING_STATUS_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":247,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByStatusFirstCommand.equals(deleteByStatusFirstCommandCopy));","lastModifiedDate":"2023-11-08"},{"lineNumber":248,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"ketweeen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":250,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByStatusFirstCommand.equals(1));","lastModifiedDate":"2023-11-08"},{"lineNumber":251,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":252,"author":{"gitId":"ketweeen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":253,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByStatusFirstCommand.equals(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":254,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":255,"author":{"gitId":"ketweeen"},"content":"        // different person or set of tags -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":256,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByStatusFirstCommand.equals(deleteByStatusSecondCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":257,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":258,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":259,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":260,"author":{"gitId":"ketweeen"},"content":"    public void equals_tagsAndStatus() {","lastModifiedDate":"2023-11-08"},{"lineNumber":261,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByTagsAndStatusFirstCommand \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":262,"author":{"gitId":"ketweeen"},"content":"                new DeleteCommand(PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":263,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByTagsAndStatusSecondCommand \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":264,"author":{"gitId":"ketweeen"},"content":"                new DeleteCommand(PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_TWO);","lastModifiedDate":"2023-11-08"},{"lineNumber":265,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByTagsAndStatusMixCommand \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":266,"author":{"gitId":"ketweeen"},"content":"                new DeleteCommand(PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_MIX);","lastModifiedDate":"2023-11-08"},{"lineNumber":267,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":268,"author":{"gitId":"ketweeen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":269,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByTagsAndStatusFirstCommand.equals(deleteByTagsAndStatusFirstCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":270,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":271,"author":{"gitId":"ketweeen"},"content":"        // same values (delete by tags and status) -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":272,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByTagsAndStatusFirstCommandCopy \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":273,"author":{"gitId":"ketweeen"},"content":"                new DeleteCommand(PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":274,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByTagsAndStatusFirstCommand.equals(deleteByTagsAndStatusFirstCommandCopy));","lastModifiedDate":"2023-11-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":277,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByTagsAndStatusFirstCommand.equals(1));","lastModifiedDate":"2023-11-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":280,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByTagsAndStatusFirstCommand.equals(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":282,"author":{"gitId":"ketweeen"},"content":"        // different person or set of tags -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByTagsAndStatusFirstCommand.equals(deleteByTagsAndStatusSecondCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":284,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByTagsAndStatusFirstCommand.equals(deleteByTagsAndStatusMixCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":288,"author":{"gitId":"ketweeen"},"content":"    public void toString_index() {","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":291,"author":{"gitId":"ketweeen"},"content":"        String expectedToString \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"ketweeen"},"content":"        assertEquals(expectedToString, deleteCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"ketweeen"},"content":"    public void toString_tags() {","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(PREDICATE_LIST_CONTAINING_TAG_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":298,"author":{"gitId":"ketweeen"},"content":"        String expectedString \u003d DeleteCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-08"},{"lineNumber":299,"author":{"gitId":"ketweeen"},"content":"                + String.format(\"{predicateList\u003d%s}\", PREDICATE_LIST_CONTAINING_TAG_ONE.toString());","lastModifiedDate":"2023-11-08"},{"lineNumber":300,"author":{"gitId":"ketweeen"},"content":"        assertEquals(expectedString, deleteCommand.toString());","lastModifiedDate":"2023-11-08"},{"lineNumber":301,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":302,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":303,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":304,"author":{"gitId":"ketweeen"},"content":"    public void toString_status() {","lastModifiedDate":"2023-11-01"},{"lineNumber":305,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(PREDICATE_LIST_CONTAINING_STATUS_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":306,"author":{"gitId":"ketweeen"},"content":"        String expectedString \u003d DeleteCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-08"},{"lineNumber":307,"author":{"gitId":"ketweeen"},"content":"                + String.format(\"{predicateList\u003d%s}\", PREDICATE_LIST_CONTAINING_STATUS_ONE.toString());","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"ketweeen"},"content":"        assertEquals(expectedString, deleteCommand.toString());","lastModifiedDate":"2023-11-08"},{"lineNumber":309,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":310,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":311,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":312,"author":{"gitId":"ketweeen"},"content":"    public void toString_tagsAndStatus() {","lastModifiedDate":"2023-11-01"},{"lineNumber":313,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":314,"author":{"gitId":"ketweeen"},"content":"        String expectedString \u003d DeleteCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-08"},{"lineNumber":315,"author":{"gitId":"ketweeen"},"content":"                + String.format(\"{predicateList\u003d%s}\", PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_ONE.toString());","lastModifiedDate":"2023-11-08"},{"lineNumber":316,"author":{"gitId":"ketweeen"},"content":"        assertEquals(expectedString, deleteCommand.toString());","lastModifiedDate":"2023-11-08"},{"lineNumber":317,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":319,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":320,"author":{"gitId":"ketweeen"},"content":"    public void toString_invalid() {","lastModifiedDate":"2023-10-26"},{"lineNumber":321,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Index.getDefaultIndex());","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"ketweeen"},"content":"        String expectedToString \u003d \"seedu.address.logic.commands.DeleteCommand{invalid\u003dNo valid target specified}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"ketweeen"},"content":"        assertEquals(expectedToString, deleteCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":328,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"AriellaCallista":1,"ketweeen":204,"MadLamprey":4,"-":125}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"                new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"                new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"                new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"                new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"sk2001git":4,"MadLamprey":10,"-":175}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", score-list\u003d\"","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"                + editPersonDescriptor.getScoreList().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"sk2001git":2,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/EventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalEvents.EVENT_1;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.statistics.SummaryStatistic;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        Event validEventInput \u003d new Event(Index.fromZeroBased(0), \"Testing\",","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 8, 12, 0),","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 8, 13, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        Event validEventOutput \u003d new Event(validPerson, \"Testing\",","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 8, 12, 0),","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 8, 13, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        CommandResult commandResult \u003d new EventCommand(validEventInput).execute(modelStub);","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(String.format(EventCommand.MESSAGE_SUCCESS, validEventOutput),","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(Arrays.asList(validEventOutput), modelStub.eventsAdded);","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    public void execute_invalidIndex_failure() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        Event eventInput \u003d new Event(Index.fromZeroBased(1), \"Testing\",","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 8, 12, 0),","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 8, 13, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"        EventCommand eventCommand \u003d new EventCommand(eventInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(CommandException.class, () -\u003e eventCommand.execute(modelStub));","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        Event event1 \u003d new Event(Index.fromZeroBased(0), \"Testing\",","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 8, 12, 0),","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 8, 13, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        Event event2 \u003d new Event(Index.fromZeroBased(0), \"Interview\",","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 8, 12, 0),","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 8, 13, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        EventCommand event1Command \u003d new EventCommand(event1);","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        EventCommand event2Command \u003d new EventCommand(event2);","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(event1Command.equals(event1Command));","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"        EventCommand event1CommandCopy \u003d new EventCommand(event1);","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(event1Command.equals(event1CommandCopy));","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(event1Command.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(event1Command.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(event1Command.equals(event2Command));","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"        EventCommand eventCommand \u003d new EventCommand(EVENT_1);","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        String expected \u003d EventCommand.class.getCanonicalName() + \"{event\u003d\" + EVENT_1 + \"}\";","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(expected, eventCommand.toString());","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"MadLamprey"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"MadLamprey"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"MadLamprey"},"content":"        public Path getEventBookFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"MadLamprey"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"MadLamprey"},"content":"        public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"MadLamprey"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-11-09"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"MadLamprey"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-11-09"},{"lineNumber":172,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"        public void setEventBook(ReadOnlyEventBook newData) {","lastModifiedDate":"2023-11-09"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"MadLamprey"},"content":"        public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"MadLamprey"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"MadLamprey"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-11-09"},{"lineNumber":207,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":208,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":209,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":210,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":211,"author":{"gitId":"MadLamprey"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":216,"author":{"gitId":"MadLamprey"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-11-09"},{"lineNumber":217,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":218,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":219,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":220,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"MadLamprey"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":225,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"MadLamprey"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-11-09"},{"lineNumber":227,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":228,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":229,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":230,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"MadLamprey"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-11-09"},{"lineNumber":232,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":233,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":234,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":235,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":236,"author":{"gitId":"MadLamprey"},"content":"        public void updateFilteredPersonList(List\u003cPredicate\u003cPerson\u003e\u003e predicatesList) {","lastModifiedDate":"2023-11-09"},{"lineNumber":237,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":238,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":239,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":240,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":241,"author":{"gitId":"MadLamprey"},"content":"        public void sortPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-11-09"},{"lineNumber":242,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-11-09"},{"lineNumber":243,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":244,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":245,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":246,"author":{"gitId":"MadLamprey"},"content":"        public void sortEventList(Comparator\u003cEvent\u003e comparator) {","lastModifiedDate":"2023-11-09"},{"lineNumber":247,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-11-09"},{"lineNumber":248,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":249,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":250,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":251,"author":{"gitId":"MadLamprey"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-11-09"},{"lineNumber":252,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":253,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":254,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":255,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":256,"author":{"gitId":"MadLamprey"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-11-09"},{"lineNumber":257,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":258,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":259,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":260,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":261,"author":{"gitId":"MadLamprey"},"content":"        public void updateFilteredEventList(List\u003cPredicate\u003cEvent\u003e\u003e predicatesList) {","lastModifiedDate":"2023-11-09"},{"lineNumber":262,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":263,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":264,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":265,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":266,"author":{"gitId":"MadLamprey"},"content":"        public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2023-11-09"},{"lineNumber":267,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":268,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":269,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":270,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":271,"author":{"gitId":"MadLamprey"},"content":"        public void updateFilteredTagList(Predicate\u003cTag\u003e predicate) {","lastModifiedDate":"2023-11-09"},{"lineNumber":272,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":273,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":274,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":275,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":276,"author":{"gitId":"MadLamprey"},"content":"        public Index getLastViewedPersonIndex() {","lastModifiedDate":"2023-11-09"},{"lineNumber":277,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":278,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":279,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":280,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":281,"author":{"gitId":"MadLamprey"},"content":"        public void setLastViewedPersonIndex(Index index) {","lastModifiedDate":"2023-11-09"},{"lineNumber":282,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":283,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":284,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":285,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":286,"author":{"gitId":"MadLamprey"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2023-11-09"},{"lineNumber":287,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":288,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":289,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":290,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":291,"author":{"gitId":"MadLamprey"},"content":"        public void loadSummaryStatistics() {","lastModifiedDate":"2023-11-09"},{"lineNumber":292,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":293,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":294,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":295,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":296,"author":{"gitId":"MadLamprey"},"content":"        public SummaryStatistic getSummaryStatistic() {","lastModifiedDate":"2023-11-09"},{"lineNumber":297,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":298,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":299,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":300,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":301,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":302,"author":{"gitId":"MadLamprey"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-11-09"},{"lineNumber":303,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":304,"author":{"gitId":"MadLamprey"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2023-11-09"},{"lineNumber":305,"author":{"gitId":"MadLamprey"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":306,"author":{"gitId":"MadLamprey"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":307,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":308,"author":{"gitId":"MadLamprey"},"content":"        private Index index;","lastModifiedDate":"2023-11-09"},{"lineNumber":309,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":310,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":311,"author":{"gitId":"MadLamprey"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-11-09"},{"lineNumber":312,"author":{"gitId":"MadLamprey"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":313,"author":{"gitId":"MadLamprey"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2023-11-09"},{"lineNumber":314,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":315,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":316,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":317,"author":{"gitId":"MadLamprey"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-11-09"},{"lineNumber":318,"author":{"gitId":"MadLamprey"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":319,"author":{"gitId":"MadLamprey"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":320,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":321,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":322,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":323,"author":{"gitId":"MadLamprey"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-11-09"},{"lineNumber":324,"author":{"gitId":"MadLamprey"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-11-09"},{"lineNumber":325,"author":{"gitId":"MadLamprey"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-11-09"},{"lineNumber":326,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":327,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":328,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":329,"author":{"gitId":"MadLamprey"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-11-09"},{"lineNumber":330,"author":{"gitId":"MadLamprey"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-11-09"},{"lineNumber":331,"author":{"gitId":"MadLamprey"},"content":"            personsAdded.add(person);","lastModifiedDate":"2023-11-09"},{"lineNumber":332,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":333,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":334,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":335,"author":{"gitId":"MadLamprey"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-11-09"},{"lineNumber":336,"author":{"gitId":"MadLamprey"},"content":"            ObservableList\u003cEvent\u003e filteredList \u003d FXCollections.observableArrayList(eventsAdded);","lastModifiedDate":"2023-11-09"},{"lineNumber":337,"author":{"gitId":"MadLamprey"},"content":"            return filteredList;","lastModifiedDate":"2023-11-09"},{"lineNumber":338,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":339,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":340,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":341,"author":{"gitId":"MadLamprey"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-11-09"},{"lineNumber":342,"author":{"gitId":"MadLamprey"},"content":"            ObservableList\u003cPerson\u003e filteredList \u003d FXCollections.observableArrayList(personsAdded);","lastModifiedDate":"2023-11-09"},{"lineNumber":343,"author":{"gitId":"MadLamprey"},"content":"            return filteredList;","lastModifiedDate":"2023-11-09"},{"lineNumber":344,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":345,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":346,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":347,"author":{"gitId":"MadLamprey"},"content":"        public void setLastViewedPersonIndex(Index index) {","lastModifiedDate":"2023-11-09"},{"lineNumber":348,"author":{"gitId":"MadLamprey"},"content":"            this.index \u003d index;","lastModifiedDate":"2023-11-09"},{"lineNumber":349,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":350,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":351,"author":{"gitId":"MadLamprey"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":352,"author":{"gitId":"MadLamprey"},"content":"        public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2023-11-09"},{"lineNumber":353,"author":{"gitId":"MadLamprey"},"content":"            return new EventBook();","lastModifiedDate":"2023-11-09"},{"lineNumber":354,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":355,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":356,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":357,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"MadLamprey":357}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false,","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"                true, false, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ketweeen":1,"MadLamprey":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"public class ExportCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    private final ExportCommand exportCommand \u003d new ExportCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new ExportCommand().equals(new ExportCommand()));","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(new ExportCommand().toString(), \"ExportCommand\");","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"    public void execute_validExport_successful() {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"            CommandResult result \u003d exportCommand.execute(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"            assert(ExportCommand.MESSAGE_SUCCESS.equals(result.getFeedbackToUser())","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"                    || result.getFeedbackToUser().contains(\"Error exporting data\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"            //This exception is expected","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"            fail(\"This test has failed because of a failed export\");","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(exportCommand, new ExportCommand());","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"    public void equals_null_false() {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(false, exportCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ScarletBlanks":50}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.StatisticMetric;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"public class FilterCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    private static final Tag VALID_TAG \u003d new Tag(\"Interview\", \"assessment\");","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    private static final Tag OTHER_VALID_TAG \u003d new Tag(\"Fake\", \"Notassessment\");","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    private static final StatisticMetric VALID_METRIC \u003d StatisticMetric.SCORE;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"    private static final StatisticMetric OTHER_VALID_METRIC \u003d StatisticMetric.MEAN;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    private static final int VALID_VALUE \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    private static final int OTHER_VALID_VALUE \u003d 76;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    public void execute_validTagAndMetricAndValue_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        //TODO: Fix this test","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(VALID_TAG, VALID_METRIC, VALID_VALUE);","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        String expectedMessage \u003d filterCommand.successMessage(expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    public void equals() {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        FilterCommand filterCommandTest \u003d new FilterCommand(VALID_TAG, VALID_METRIC, VALID_VALUE);","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"        assertTrue(filterCommandTest.equals(filterCommandTest));","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        FilterCommand filterCommandTestCopy \u003d new FilterCommand(VALID_TAG, VALID_METRIC, VALID_VALUE);","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        assertTrue(filterCommandTest.equals(filterCommandTestCopy));","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        FilterCommand filterCommandTestDiffTag \u003d new FilterCommand(OTHER_VALID_TAG, VALID_METRIC, VALID_VALUE);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        assertFalse(filterCommandTest.equals(filterCommandTestDiffTag));","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        // different metric -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        FilterCommand filterCommandTestDiffMetric \u003d new FilterCommand(VALID_TAG, OTHER_VALID_METRIC, VALID_VALUE);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        assertFalse(filterCommandTest.equals(filterCommandTestDiffMetric));","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        // different value -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        FilterCommand filterCommandTestDiffValue \u003d new FilterCommand(VALID_TAG, VALID_METRIC, OTHER_VALID_VALUE);","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        assertFalse(filterCommandTest.equals(filterCommandTestDiffValue));","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"sk2001git":59}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"firstName\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate firstStatusPredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"                new StatusContainsKeywordsPredicate(Collections.singletonList(\"firstStatus\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"secondName\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate secondStatusPredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"                new StatusContainsKeywordsPredicate(Collections.singletonList(\"secondStatus\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e firstPredicatesList \u003d Arrays.asList(firstNamePredicate, firstStatusPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e secondPredicatesList \u003d Arrays.asList(secondNamePredicate, secondStatusPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicatesList);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicatesList);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicatesList);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d prepareStatusPredicate(\"\");","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand command \u003d new FindCommand(Arrays.asList(namePredicate, statusPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"        expectedModel.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_multipleNameKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand command \u003d new FindCommand(preparePredicateList(\"Kurz Elle Kunz\", \"\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"        expectedModel.updateFilteredPersonList(preparePredicateList(\"Kurz Elle Kunz\", \"\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_multipleStatusKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand command \u003d new FindCommand(preparePredicateList(\"\", \"preliminary\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"        expectedModel.updateFilteredPersonList(preparePredicateList(\"\", \"preliminary\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"ketweeen"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d new StatusContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand findCommand \u003d new FindCommand(Arrays.asList(namePredicate, statusPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicates list\u003d[\" + namePredicate + \", \"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"                + statusPredicate + \"]}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"     * Parses {@code userInput} into a {@code StatusContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"    private StatusContainsKeywordsPredicate prepareStatusPredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"AriellaCallista"},"content":"        return new StatusContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"AriellaCallista"},"content":"    private List\u003cPredicate\u003cPerson\u003e\u003e preparePredicateList(String nameKeywords, String statusKeywords) {","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicatesList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"AriellaCallista"},"content":"                if (!nameKeywords.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"AriellaCallista"},"content":"                    add(prepareNamePredicate(nameKeywords));","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"AriellaCallista"},"content":"                if (!statusKeywords.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"AriellaCallista"},"content":"                    add(prepareStatusPredicate(statusKeywords));","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"AriellaCallista"},"content":"            }};","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"AriellaCallista"},"content":"        return predicatesList;","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AriellaCallista":62,"ketweeen":2,"MadLamprey":3,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ketweeen":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"        assertCommandSuccess(new ListCommand(ListCommand.DEFAULT_COMPARATOR), model,","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"                ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        assertCommandSuccess(new ListCommand(ListCommand.DEFAULT_COMPARATOR), model,","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"                ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ketweeen":4,"MadLamprey":3,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    private static final String KEEP_REMARK_STUB \u003d \"**REMARK** remark v2.0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    private static final String REPLACED_REMARK \u003d \"Some remark remark v2.0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"                new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS,","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"                new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"    public void execute_keepRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        // Set base person to have a remark same as REMARK_STUB","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"        Person basePerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"        model.setPerson(firstPerson, basePerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"        // Create a remark command with keep remark","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(KEEP_REMARK_STUB),","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"                true);","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"        Person expectedPerson \u003d new PersonBuilder(firstPerson).withRemark(REPLACED_REMARK).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"                Messages.format(expectedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"                new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"        expectedModel.setPerson(basePerson, expectedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"        // Execute the command and see how they compare","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"    public void equals() {","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-25"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-09-25"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON, new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"        // different remark, same value-\u003e returns true","lastModifiedDate":"2023-09-25"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"        assertTrue(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2023-09-25"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-09-25"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"sk2001git":122,"MadLamprey":8}},{"path":"src/test/java/seedu/address/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.ScheduleCommand.SHOWING_SCHEDULE_MESSAGE;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    public void execute_schedule_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_SCHEDULE_MESSAGE, false,","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"                false, false, true, false);","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        assertCommandSuccess(new ScheduleCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"MadLamprey":21}},{"path":"src/test/java/seedu/address/logic/commands/SetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"public class SetCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    public void execute_validIndexAndStatus_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"        // Check if the status of the person in the model has been updated","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals((new Status()).toString(), \"Preliminary\");","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"    public void setCommandString_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals((new SetCommand(Index.fromOneBased(1), StatusTypes.INTERVIEWED)).toString(),","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"                \"seedu.address.logic.commands.\"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"                        + \"SetCommand{targetIndex\u003dseedu.address.commons.core.index.Index{zeroBasedIndex\u003d0},\"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"                        + \" newStatus\u003dInterviewed}\");","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"    public void exceptionChecks() {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"        SetCommand command \u003d new SetCommand(Index.fromZeroBased(99), StatusTypes.INTERVIEWED);","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ScarletBlanks":41,"MadLamprey":2}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    private static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    public void execute_viewUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"                String.format(ViewCommand.MESSAGE_SUCCESSFUL_VIEW, Messages.format(firstPerson)), true);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"                new EventBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        expectedModel.setLastViewedPersonIndex(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(viewCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        final ViewCommand standardCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        ViewCommand commandWithSameValues \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(new ViewCommand(INDEX_SECOND_PERSON)));","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"sk2001git":67,"MadLamprey":4}},{"path":"src/test/java/seedu/address/logic/parser/AddGCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddGCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"public class AddGCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private AddGCommandParser parser \u003d new AddGCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    private final String nonEmptyUsername \u003d \"Someusername\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_USERNAME + nonEmptyUsername;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand expectedCommand \u003d new AddGCommand(INDEX_FIRST_PERSON, new Github(nonEmptyUsername));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        expectedCommand \u003d new AddGCommand(INDEX_FIRST_PERSON, new Github(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    public void parse_indexSpecified_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        // Negative numbers","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        String userInput \u003d \" -5\";","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        // Out of bounds check","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        String userInput2 \u003d \" 100000000000\";","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        // Blank field","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        // no index","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        userInput \u003d PREFIX_USERNAME + nonEmptyUsername;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        // no parameters","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, AddGCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        // no index","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, AddGCommand.COMMAND_WORD + \" \" + nonEmptyUsername, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":63}},{"path":"src/test/java/seedu/address/logic/parser/AddLCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddLCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"public class AddLCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private AddLCommandParser parser \u003d new AddLCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    private final String nonEmptyUsername \u003d \"Someusername\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_USERNAME + nonEmptyUsername;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand expectedCommand \u003d new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(nonEmptyUsername));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        expectedCommand \u003d new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    public void parse_indexSpecified_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        // Negative numbers","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        String userInput \u003d \" -5\";","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        // Out of bounds check","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        String userInput2 \u003d \" 100000000000\";","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        // Blank field","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        // no index","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        userInput \u003d PREFIX_USERNAME + nonEmptyUsername;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        // no parameters","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, AddLCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        // no index","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, AddLCommand.COMMAND_WORD + \" \" + nonEmptyUsername, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":63}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.StatisticMetric;","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"                FindCommand.COMMAND_WORD + \" \" + \"n/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(new FindCommand(Arrays.asList(new NameContainsKeywordsPredicate(keywords))), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"    public void parseCommand_set() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(parser.parseCommand(SetCommand.COMMAND_WORD + \" 5 Interviewed\") instanceof SetCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(parser.parseCommand(SetCommand.COMMAND_WORD + \" 3 Interviewed\") instanceof SetCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"ScarletBlanks"},"content":"    public void parseCommand_parseStatusType() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(ParserUtil.parseStatusType(\"Interviewed\").toString().equals(\"Interviewed\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"        // assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"ScarletBlanks"},"content":"    public void parseCommand_export() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD) instanceof ExportCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"ScarletBlanks"},"content":"        // assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"        final String remark \u003d \"Some remark.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, new Remark(remark)), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"                ViewCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"        assertEquals(new ViewCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"    public void parseCommand_viewWrongIndex_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"sk2001git"},"content":"            -\u003e parser.parseCommand(\"view 0\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"sk2001git"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"sk2001git"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"                FilterCommand.COMMAND_WORD + \" \" + \"t/Interview met/MEAN\");","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"sk2001git"},"content":"        Tag tag \u003d new Tag(\"Interview\", \"assessment\");","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"sk2001git"},"content":"        assertEquals(new FilterCommand(tag, StatisticMetric.MEAN, 0), command);","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"sk2001git"},"content":"    public void parseCommand_filterInvalidTag_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"sk2001git"},"content":"        String message \u003d \"val/VALUE is missing, it is compulsory. \\n\" + FilterCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, message, ()","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"sk2001git"},"content":"            -\u003e parser.parseCommand(\"filter t/Interview met/PERCENTILE\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"sk2001git":34,"ScarletBlanks":18,"AriellaCallista":14,"-":98}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalTags.INVALID_TAG_STRING;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.testutil.TypicalTags.TEST_TAG_NAME_STRING;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"import seedu.address.testutil.TypicalPredicateLists;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"    // Delete by index tests","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"    public void parse_validIndex_returnsDeleteCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"    // Delete by tags tests","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"    public void parse_validTags_returnsDeleteCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_TAG + TEST_TAG_NAME_STRING;","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"        // Create predicate based on the expected tag value","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d new TagContainsKeywordsPredicate(List.of(TEST_TAG_NAME_STRING));","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"                add(tagPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"            }};","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"        // Create a DeleteCommand with the tag predicate","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand expectedCommand \u003d new DeleteCommand(predicateList);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"    public void parse_invalidTags_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + INVALID_TAG_STRING;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"        assertParseFailure(parser, userInput, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"    public void parse_emptyTags_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"        String userInput \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"        assertParseFailure(parser, userInput, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"    // Delete by status tests","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"    public void parse_validStatus_returnsDeleteCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"        String testStatus \u003d new Status().toString(); // \"Preliminary\"","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_STATUS + testStatus;","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"        // Create predicate based on the expected status","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d new StatusContainsKeywordsPredicate(List.of(testStatus));","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"ketweeen"},"content":"                add(statusPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"ketweeen"},"content":"            }};","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"ketweeen"},"content":"        // Create a DeleteCommand with the status predicate","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(predicateList);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"        assertParseSuccess(parser, userInput, deleteCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"    public void parse_invalidStatus_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"        assertParseFailure(parser, PREFIX_STATUS.toString(),","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"ketweeen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"    public void parse_validTagsAndStatus_returnsDeleteCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + TEST_TAG_NAME_STRING + \" \"","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"                + PREFIX_STATUS + TypicalPredicateLists.TEST_STATUS_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"ketweeen"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d TypicalPredicateLists.PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"ketweeen"},"content":"        // Create a DeleteCommand with the tag predicate","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand expectedCommand \u003d new DeleteCommand(predicateList);","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"ketweeen"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"ketweeen"},"content":"    public void parse_invalidTagsButValidStatus_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"ketweeen"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \" \" + PREFIX_STATUS + TypicalPredicateLists.TEST_STATUS_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"ketweeen"},"content":"        assertParseFailure(parser, userInput, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"ketweeen"},"content":"    public void parse_invalidStatusButValidTags_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"ketweeen"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + TEST_TAG_NAME_STRING + \" \" + PREFIX_STATUS; // empty status","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"ketweeen"},"content":"        assertParseFailure(parser, userInput, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"AriellaCallista":3,"ketweeen":88,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCORE_LIST_AMY;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"                .withScoreList(VALID_SCORE_LIST_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"sk2001git":2,"-":207}},{"path":"src/test/java/seedu/address/logic/parser/EventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INCORRECT_DATE_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_DATE;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_START;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"public class EventCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    private final EventCommandParser parser \u003d new EventCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private final String nonEmptyDescription \u003d \"Interview\";","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    private final String nonEmptyValidStartTime \u003d \"2023-11-01 12:00\";","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private final String nonEmptyValidEndTime \u003d \"2023-11-01 13:00\";","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private final String nonEmptyInvalidStartTime \u003d \"01-11-2023 12:00\";","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    private final String nonEmptyInvalidEndTime \u003d \"1 January 2023 12PM\";","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    private final String invalidDate \u003d \"2023-02-30 12:00\";","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_DESCRIPTION + nonEmptyDescription + \" \"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"                + PREFIX_STARTTIME + nonEmptyValidStartTime + \" \" + PREFIX_ENDTIME + nonEmptyValidEndTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        EventCommand expectedCommand \u003d new EventCommand(new Event(Index.fromOneBased(1),","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"                \"Interview\", LocalDateTime.of(2023, 11, 1, 12, 0),","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"                LocalDateTime.of(2023, 11, 1, 13, 0)));","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    public void parse_indexSpecified_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        // Negative numbers","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        String userInput \u003d \" -5\" + \" \" + PREFIX_DESCRIPTION + nonEmptyDescription + \" \" + PREFIX_STARTTIME","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyValidStartTime + \" \" + PREFIX_ENDTIME + nonEmptyValidEndTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        // Out of bounds check","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        String userInput2 \u003d \" 100000000000\" + \" \" + PREFIX_DESCRIPTION + nonEmptyDescription + \" \" + PREFIX_STARTTIME","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyValidStartTime + \" \" + PREFIX_ENDTIME + nonEmptyValidEndTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"        // Blank field","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        // no index","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        userInput \u003d PREFIX_DESCRIPTION + nonEmptyDescription + \" \" + PREFIX_STARTTIME + nonEmptyValidStartTime","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"                + \" \" + PREFIX_ENDTIME + nonEmptyValidEndTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        // no parameters","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, EventCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        // no index","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, EventCommand.COMMAND_WORD + \" \" + nonEmptyDescription, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        // no description","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, EventCommand.COMMAND_WORD + \" 0 \" + PREFIX_STARTTIME","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyValidStartTime + \" \" + PREFIX_ENDTIME + nonEmptyValidEndTime, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        // no start time","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, EventCommand.COMMAND_WORD + \" 0 \" + PREFIX_ENDTIME","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyValidEndTime, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"        // no end time","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, EventCommand.COMMAND_WORD + \" 0 \" + PREFIX_STARTTIME","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyValidStartTime, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"    public void parse_invalidDateFormat_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d MESSAGE_INCORRECT_DATE_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"        // invalid date format for start time","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, EventCommand.COMMAND_WORD + \" 0 \" + PREFIX_DESCRIPTION","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyDescription + \" \" + PREFIX_STARTTIME + nonEmptyInvalidStartTime + \" \" + PREFIX_ENDTIME","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyValidEndTime, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"        // invalid date format for end time","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, EventCommand.COMMAND_WORD + \" 0 \" + PREFIX_DESCRIPTION","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyDescription + \" \" + PREFIX_STARTTIME + nonEmptyValidStartTime + \" \" + PREFIX_ENDTIME","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyInvalidEndTime, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"    public void parse_invalidStart_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d MESSAGE_INVALID_START;","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"        // end time \u003d start time","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, EventCommand.COMMAND_WORD + \" 0 \" + PREFIX_DESCRIPTION","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyDescription + \" \" + PREFIX_STARTTIME + nonEmptyValidStartTime + \" \" + PREFIX_ENDTIME","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyValidStartTime, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"        // end time \u003c start time","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, EventCommand.COMMAND_WORD + \" 0 \" + PREFIX_DESCRIPTION","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyDescription + \" \" + PREFIX_STARTTIME + nonEmptyValidEndTime + \" \" + PREFIX_ENDTIME","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyValidStartTime, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"MadLamprey"},"content":"    public void parse_invalidDate_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d MESSAGE_INVALID_DATE;","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, EventCommand.COMMAND_WORD + \" 0 \" + PREFIX_DESCRIPTION","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyDescription + \" \" + PREFIX_STARTTIME + invalidDate + \" \" + PREFIX_ENDTIME","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"MadLamprey"},"content":"                + nonEmptyValidEndTime, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"MadLamprey":126}},{"path":"src/test/java/seedu/address/logic/parser/ExportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"public class ExportCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    public void execute_validIndexAndStatus_success() throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new ExportCommandParser().parse(\"\").equals(","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"                new ExportCommand()));","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ScarletBlanks":14}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_METRIC;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.StatisticMetric;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    private static final Tag VALID_TAG \u003d new Tag(\"CS2103T\", \"assessment\");","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    public void parse_missingTagField_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_METRIC + \"MEAN\";","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    public void parse_missingMetricField_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\";","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public void parse_invalidMetric_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"MEANNN\";","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    public void parse_metricCaseInsensitive_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"mEaN\";","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(VALID_TAG, StatisticMetric.MEAN, 0);","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"    public void parse_validMean_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"MEAN\";","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(VALID_TAG, StatisticMetric.MEAN, 0);","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    public void parse_validMeanWithValue_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        // Value will be default zero when being inputted creating the command for mean and median","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"MEAN\" + \" \" + \"val/50\";","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(VALID_TAG, StatisticMetric.MEAN, 0);","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"    public void parse_validMedian_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"MEDIAN\";","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(VALID_TAG, StatisticMetric.MEDIAN, 0);","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"    public void parse_validMedianWithValue_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        // Value will be default zero when being inputted creating the command for mean and median","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"MEDIAN\" + \" \" + \"val/50\";","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(VALID_TAG, StatisticMetric.MEDIAN, 0);","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"    public void parse_validPercentile_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"PERCENTILE\" + \" \" + PREFIX_VALUE","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"                + \"50\";","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(VALID_TAG, StatisticMetric.PERCENTILE, 50);","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"    public void parse_invalidPercentileWithoutValue_throwParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"PERCENTILE\";","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"    public void parse_validScore_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"SCORE\" + \" \" + PREFIX_VALUE + \"50\";","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(VALID_TAG, StatisticMetric.SCORE, 50);","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"    public void parse_invalidScoreWithoutValue_throwParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"SCORE\";","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"    public void parse_invalidScoreValue_throwParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"SCORE\" + \" \" + PREFIX_VALUE + \"-50\";","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"    public void parse_invalidExtraField_throwParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"SCORE\" + \" \" + PREFIX_VALUE + \"50\"","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"                + \" \" + PREFIX_VALUE + \"60\";","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"        String userInput2 \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"SCORE\" + \" \" + PREFIX_VALUE + \"50\"","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"                + \" \" + PREFIX_TAG + \"CS2103T\";","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput2));","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"        String userInput3 \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"SCORE\" + \" \" + PREFIX_VALUE + \"50\"","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"                + \" \" + PREFIX_METRIC + \"MEAN\";","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput3));","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"        String userInput4 \u003d \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"SCORE\" + \" \" + PREFIX_VALUE + \"50\"","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"                + \" \" + PREFIX_TAG + \"CS2103T\" + \" \" + PREFIX_METRIC + \"MEAN\";","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput4));","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"sk2001git":128}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"                new FindCommand(Arrays.asList(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"                        new StatusContainsKeywordsPredicate(Arrays.asList(\"Interviewed\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, \" n/Alice Bob st/Interviewed\", expectedFindCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        assertParseSuccess(parser, \" n/ \\n Alice \\n \\t Bob  \\t st/Interviewed\", expectedFindCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_validArgsWithNoStatus_returnsFindCommand() {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"                new FindCommand(Arrays.asList(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"        assertParseSuccess(parser, \" n/ \\n Alice \\n \\t Bob  \\t \", expectedFindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"sk2001git":1,"AriellaCallista":13,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    private ListCommandParser parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"        parser \u003d new ListCommandParser();","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    public void parse_noSortingAttribute_returnsListCommandWithDefaultComparator() throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"        String args \u003d \"\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"        ListCommand result \u003d parser.parse(args);","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"        // Ensure the ListCommand uses the default sorting comparator","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"        assertEquals(result.getSortingComparator(), ListCommand.DEFAULT_COMPARATOR);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"ketweeen":30}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    private static final String VALID_TAG_1 \u003d \"developer\";","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    private static final String VALID_TAG_2 \u003d \"tech\";","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"AriellaCallista"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null, null));","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"AriellaCallista"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG, \"\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"AriellaCallista"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1, \"role\");","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1, \"role\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"AriellaCallista"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1, \"role\");","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace, \"role\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"AriellaCallista"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1, \"uncategorised\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"AriellaCallista"},"content":"                new Tag(VALID_TAG_2, \"uncategorised\")));","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"sk2001git"},"content":"    public void parseScore_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"sk2001git"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseScore(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"sk2001git"},"content":"    public void parseScore_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseScore(\"a\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"sk2001git"},"content":"    public void parseScore_validValueWithoutWhitespace_returnsScore() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"sk2001git"},"content":"        assertEquals(ParserUtil.parseScore(\"1\"), new Score(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"sk2001git"},"content":"    public void parseScore_negativeValue_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseScore(\"-1\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":219,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":220,"author":{"gitId":"sk2001git"},"content":"    public void parseTagScore_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"sk2001git"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTagScore(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":225,"author":{"gitId":"sk2001git"},"content":"    public void parseTagScore_invalidValue_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTagScore(\"a\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":227,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":228,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":229,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":230,"author":{"gitId":"sk2001git"},"content":"    public void parseTagScore_invalidValueTwoTabs_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTagScore(\"Interview 100 awadaw\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":232,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"sk2001git":35,"AriellaCallista":11,"-":187}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    private final String nonEmptyRemark \u003d \"Some remark.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"        // have remark","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(nonEmptyRemark));","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        // no remark","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    public void parse_indexSpecified_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        // Negative numbers","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" -5\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        // Out of bounds check","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        String userInput2 \u003d \" 100000000000\";","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        // Blank field","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        // no index","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        userInput \u003d PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    public void parse_keepRemark_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        // Important to note that a remark will have trailing white spaces trimmed","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        // That is a remark with trailing white spaces will be treated as a remark without trailing white spaces","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        String expectedRemarkValue \u003d \"**REMARK** \" + nonEmptyRemark;","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + expectedRemarkValue;","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(expectedRemarkValue), true);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        //Not a keep remark, simulate mistype","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        String wrongRemarkValue \u003d \"**REMARK* \" + nonEmptyRemark;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        String userInput2 \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + wrongRemarkValue;","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand expectedCommand2 \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(wrongRemarkValue));","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput2, expectedCommand2);","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        // No parse failure since it is not a keep remark but an original remark","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"        // no parameters","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"        // no index","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"sk2001git":82}},{"path":"src/test/java/seedu/address/logic/parser/SetCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"public class SetCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    public void execute_validIndexAndStatus_success() throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"        // Check if the status of the person in the model has been updated","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new SetCommandParser().parse(\"1 Interviewed\").equals(","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"                new SetCommand(Index.fromOneBased(1), StatusTypes.INTERVIEWED)));","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ScarletBlanks":20}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" 1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"        ViewCommand expectedCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    public void parse_indexSpecified_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        // Negative numbers","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" -5\";","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        // Out of bounds check","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        String userInput2 \u003d \" 100000000000\";","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        // Blank field","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"sk2001git":40}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"            this.tags.setAll(tags);","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"        public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"            return tags;","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"        };","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"AriellaCallista":12,"-":106}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"        modelManager \u003d new ModelManager(addressBook, new EventBook(), userPrefs);","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, new EventBook(), userPrefs);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, new EventBook(), userPrefs)));","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, new EventBook(), userPrefs)));","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, new EventBook(), differentUserPrefs)));","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"MadLamprey":5,"-":127}},{"path":"src/test/java/seedu/address/model/person/GithubTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public class GithubTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"        Github github \u003d new Github(\"alexyeoh\");","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(github.equals(new Github(\"alexyeoh\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(github.equals(github));","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(github.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(github.equals(new Github(\"zhiwang\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        Github github \u003d new Github(\"alexyeoh\");","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"alexyeoh\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(github.toString(), s);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"MadLamprey":29}},{"path":"src/test/java/seedu/address/model/person/LinkedInTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public class LinkedInTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    /*@Test","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LinkedIn(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    }*/","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"        LinkedIn linkedIn \u003d new LinkedIn(\"alexyeoh\");","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(linkedIn.equals(new LinkedIn(\"alexyeoh\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(linkedIn.equals(linkedIn));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(linkedIn.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(linkedIn.equals(new LinkedIn(\"zhiwang\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        LinkedIn linkedIn \u003d new LinkedIn(\"alexyeoh\");","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"alexyeoh\";","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(linkedIn.toString(), s);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"MadLamprey":34}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRemark(\"Some remark\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"        // different score list -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"ScarletBlanks"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"                + \", remark\u003d\" + ALICE.getRemark() + \", status\u003d\" + ALICE.getStatus() + \", score-list\u003d\"","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"                + ALICE.getScoreList()","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"                + (!ALICE.getLinkedIn().value.isEmpty() ? \", linkedin\u003d\" + ALICE.getLinkedIn() : \"\")","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"                + (!ALICE.getGithub().value.isEmpty() ? \", github\u003d\" + ALICE.getGithub() : \"\") + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"sk2001git":10,"ScarletBlanks":1,"MadLamprey":1,"-":98}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"public class RemarkTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"    private static final String VALID_REMARK \u003d \"Likes to swim\";","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    public void toStringTest_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"        Remark remark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"        assert remark.toString().equals(VALID_REMARK);","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    public void equals() {","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        Remark remark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        assertTrue(!remark.equals(new Remark(\"Other Valid Remark\")));","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        assertTrue(remark.equals(new Remark(VALID_REMARK)));","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        assertTrue(!remark.equals(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"sk2001git":39}},{"path":"src/test/java/seedu/address/model/person/ScoreListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"public class ScoreListTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    private static final Tag VALID_TAG \u003d new Tag(\"Interview\", \"assessment\");","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"    public void constructor_emptyScoreList() {","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList \u003d new ScoreList();","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"        assertTrue(scoreList.isEmpty());","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    public void updateScoreList_validTagAndScore_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList \u003d new ScoreList();","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        Score score \u003d new Score(85);","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        scoreList.updateScoreList(VALID_TAG, score);","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        assertTrue(scoreList.hasTag(VALID_TAG));","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public void updateScoreList_invalidTag() {","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList \u003d new ScoreList();","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        Tag tag \u003d new Tag(\"invalidTag\", \"wrongType\");","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        Score score \u003d new Score(85);","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e scoreList.updateScoreList(tag, score));","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    public void getScore_validTagAndScore_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList \u003d new ScoreList();","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        Score score \u003d new Score(85);","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        scoreList.updateScoreList(VALID_TAG, score);","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        assertEquals(score, scoreList.getScore(VALID_TAG));","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"    public void removeScore_tagExists_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList \u003d new ScoreList();","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        Score score \u003d new Score(85);","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        scoreList.updateScoreList(VALID_TAG, score);","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        assertTrue(scoreList.hasTag(VALID_TAG));","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        scoreList.removeScore(VALID_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        assertFalse(scoreList.hasTag(VALID_TAG));","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"    public void removeScore_tagDoesNotExists_noEffect() {","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList \u003d new ScoreList();","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        assertFalse(scoreList.hasTag(VALID_TAG));","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        scoreList.removeScore(VALID_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        assertFalse(scoreList.hasTag(VALID_TAG));","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    public void equals() {","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList1 \u003d new ScoreList();","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList2 \u003d new ScoreList();","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"        ScoreList scoreList3 \u003d new ScoreList();","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"        Score score \u003d new Score(85);","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"        scoreList1.updateScoreList(VALID_TAG, score);","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        scoreList2.updateScoreList(VALID_TAG, score);","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"        scoreList3.updateScoreList(VALID_TAG, score);","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"        scoreList3.removeScore(VALID_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"        assertEquals(scoreList1, scoreList1);","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        assertEquals(scoreList1, scoreList2);","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        assertEquals(scoreList2, scoreList1);","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"        assertEquals(scoreList1, scoreList2);","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"        assertNotEquals(scoreList1, scoreList3);","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"        // Inequality","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"        assertNotEquals(scoreList1, null);","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"sk2001git":90}},{"path":"src/test/java/seedu/address/model/person/ScoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"public class ScoreTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"    public void constructor_invalidScore_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Score(-1));","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    public void constructor_validScore_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"        new Score(0);","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"        new Score(1000); // The upper limit of score is positive infinity, but this is jsut to test a large value","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"        new Score(50);","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"        assert true;","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    public void isValidScore() {","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"        // null score","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        assertThrows(NullPointerException.class, () -\u003e Score.isValidScore(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        // valid scores","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        assertTrue(Score.isValidScore(new Score(0))); // minimum score","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        assertTrue(Score.isValidScore(new Score(1000))); // random large score","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        assertTrue(Score.isValidScore(new Score(50))); // random score","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    public void isValidScoreValue() {","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        // valid score values","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"        assertTrue(Score.isValidScoreValue(0)); // minimum score","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        assertTrue(Score.isValidScoreValue(1000)); // random large score","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        assertTrue(Score.isValidScoreValue(50)); // random score","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        // invalid score values","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        assertFalse(Score.isValidScoreValue(-1)); // negative score","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        assertFalse(Score.isValidScoreValue(-1000)); // random negative score","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    public void equals() {","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        Score score \u003d new Score(50);","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        assertTrue(score.equals(new Score(50)));","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        assertTrue(score.equals(score));","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        assertFalse(score.equals(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        assertFalse(score.equals(new Score(100)));","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"    public void compareTo() {","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        Score score \u003d new Score(50);","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        Score score2 \u003d new Score(100);","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"        Score score3 \u003d new Score(50);","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        // same values -\u003e returns 0","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"        assertTrue(score.compareTo(score3) \u003d\u003d 0);","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"        // different values -\u003e returns -1","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        assertTrue(score.compareTo(score2) \u003d\u003d -1);","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"        // different values -\u003e returns 1","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        assertTrue(score2.compareTo(score) \u003d\u003d 1);","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"sk2001git":81}},{"path":"src/test/java/seedu/address/model/person/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"public class StatusTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(new Status().toString(), \"Preliminary\");","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    public void constructorTestingOffered() {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(new Status(\"offered\"), new Status(StatusTypes.OFFERED));","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    public void constructorTestingPrelim() {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new Status(\"preliminary\").equals(new Status(StatusTypes.PRELIMINARY)));","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    public void constructorTestingInt() {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new Status(\"interviewed\").equals(","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"            new Status(StatusTypes.INTERVIEWED)));","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"    public void constructorTestingRej() {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new Status(\"rejected\").equals(","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"            new Status(StatusTypes.REJECTED)));","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"    public void getStatusTypeTestR() {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new Status(\"rejected\").getStatusType().equals(","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"            StatusTypes.REJECTED));","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"    public void getStatusTypeTestI() {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new Status(\"interviewed\").getStatusType().equals(","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"            StatusTypes.INTERVIEWED));","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"    public void getStatusTypeTestP() {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(new Status(\"preliminary\").getStatusType(), (StatusTypes.PRELIMINARY));","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    public void getStatusTypeTestO() {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(new Status(\"offered\").getStatusType(),","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"            StatusTypes.OFFERED);","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"    public void setStatusTypeTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"        Status testStatus \u003d new Status();","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"        testStatus.setStatusType(StatusTypes.INTERVIEWED);","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(testStatus.getStatusType(), StatusTypes.INTERVIEWED);","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ScarletBlanks":60}},{"path":"src/test/java/seedu/address/model/person/StatusTypesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"public class StatusTypesTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    public void isValidInterviewed() {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(StatusTypes.isValidStatusType(\"interviewed\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    public void isValidPreliminary() {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(StatusTypes.isValidStatusType(\"preliminary\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    public void isValidOffered() {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(StatusTypes.isValidStatusType(\"offered\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"    public void isValidRejected() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(StatusTypes.isValidStatusType(\"rejected\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ScarletBlanks":26}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null, null));","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName, \"uncategorised\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"AriellaCallista":2,"-":24}},{"path":"src/test/java/seedu/address/statistic/StatisticMetricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.statistic;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.StatisticMetric;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"public class StatisticMetricTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"    public void isValidMetric() {","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"        // null metric","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatisticMetric.isValidMetric(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"        // invalid metrics","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"        assertFalse(StatisticMetric.isValidMetric(\"\")); // empty string","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"        assertFalse(StatisticMetric.isValidMetric(\"notametric\")); // random string","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"        assertFalse(StatisticMetric.isValidMetric(\"scores\")); // additional s","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"        // valid metrics","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        assertTrue(StatisticMetric.isValidMetric(\"SCORE\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"        assertTrue(StatisticMetric.isValidMetric(\"mean\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        assertTrue(StatisticMetric.isValidMetric(\"MeaN\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        assertTrue(StatisticMetric.isValidMetric(\"median\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        assertTrue(StatisticMetric.isValidMetric(\"PERCENTILE\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    public void isScoreRelevant() {","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatisticMetric.isScoreRelevant(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        // Score and percentile are relevant","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        assertTrue(StatisticMetric.isScoreRelevant(\"SCORE\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"        assertTrue(StatisticMetric.isScoreRelevant(\"PERCENTILE\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        // Mean median are not relevant","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        assertFalse(StatisticMetric.isScoreRelevant(\"MEAN\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        assertFalse(StatisticMetric.isScoreRelevant(\"MEDIAN\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"sk2001git":45}},{"path":"src/test/java/seedu/address/statistic/SummaryStatisticTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.statistic;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithTagScores;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import java.util.List;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.StatisticMetric;","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.statistics.SummaryStatistic;","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"public class SummaryStatisticTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    private static final Tag VALID_SCORE_TAG \u003d new Tag(\"Interview\", \"assessment\");","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    private static final Person VALID_LOWEST_SCORE_PERSON \u003d TypicalPersons.ALPHA;","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    private static final Person VALID_PERSON_WITH_SCORE \u003d TypicalPersons.BETA;","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithTagScores(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    private Model emptyModel \u003d new ModelManager(new AddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    // Check if the mean is calculated correctly","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    public void execute_calculateMean_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        int expectedMean \u003d prepareAverageScore();","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        int actualMean \u003d summaryStatistic.calculateMean(generateSortedStream(model));","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMean \u003d\u003d actualMean);","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"    // Check if the median is calculated correctly","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"    public void execute_calculateMedian_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        int expectedMedian \u003d prepareMedianScore();","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        int actualMedian \u003d summaryStatistic.calculateMedian(generateSortedStream(model));","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        System.out.println(expectedMedian);","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        System.out.println(actualMedian);","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMedian \u003d\u003d actualMedian);","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"    // Check if we are able to generate Mean value with tag","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"    public void execute_generateMeanValueWithTag_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        int expectedMean \u003d prepareAverageScore();","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        int actualMean \u003d summaryStatistic.generateMeanWithTag(VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMean \u003d\u003d actualMean);","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"    // Check if we are able to generate Median value with tag","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"    public void execute_generateMedianValueWithTag_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"        int expectedMedian \u003d prepareMedianScore();","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"        int actualMedian \u003d summaryStatistic.generateMedianWithTag(VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMedian \u003d\u003d actualMedian);","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"    // Check if we are able to generate Max value with tag","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"    public void execute_generateMaxValueWithTag_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        int expectedMax \u003d prepareMaxScore();","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        int actualMax \u003d summaryStatistic.generateMaxScoreValueWithTag(VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMax \u003d\u003d actualMax);","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"    // Check if we are able to generate Min value with tag","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"    public void execute_generateMinValueWithTag_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"        int expectedMin \u003d prepareMinScore();","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"        int actualMin \u003d summaryStatistic.generateMinScoreValueWithTag(VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMin \u003d\u003d actualMin);","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"    // Check if we are able to generate percentile value with tag","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"    public void execute_generatePercentileValueWithTag_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"        double expectedPercentile \u003d preparePercentile();","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"        double actualPercentile \u003d summaryStatistic.generatePercentileWithTag(VALID_PERSON_WITH_SCORE, VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedPercentile \u003d\u003d actualPercentile);","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"    public void execute_filteredPersonList_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"        // Test case 1: Lowest scorer being filtered out (Score metric)","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"        // Lowest score of 50","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"        int lowestScore \u003d VALID_LOWEST_SCORE_PERSON.getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"        // Filtering a score above the lowest scorer, take note that BETA, the next lowest scorer, has a score of 60","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e filteredList \u003d summaryStatistic.filteredPersonList(","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"                VALID_SCORE_TAG, StatisticMetric.SCORE, lowestScore + 1);","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"        // Checking if the filtered list has one less person than the original list","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"        assertTrue(filteredList.size() \u003d\u003d model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"        assertTrue(!filteredList.contains(VALID_LOWEST_SCORE_PERSON));","lastModifiedDate":"2023-11-08"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"        // Test case 2: All scorers being filtered out (Score metric)","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e filteredList2 \u003d summaryStatistic.filteredPersonList(","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"                VALID_SCORE_TAG, StatisticMetric.SCORE, 1000);","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"        assertTrue(filteredList2.size() \u003d\u003d 0);","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"        // Test case 3: Filtering out less than median scorers (Median metric)","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e filteredList3 \u003d summaryStatistic.filteredPersonList(","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"                VALID_SCORE_TAG, StatisticMetric.MEDIAN, 0);","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"        assertTrue(filteredList3.size() \u003d\u003d countOfMoreThanEqualToMedian());","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"        // Test case 4: Filtering out less than mean scorers (Median mean)","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e filteredList4 \u003d summaryStatistic.filteredPersonList(","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"                VALID_SCORE_TAG, StatisticMetric.MEAN, 0);","lastModifiedDate":"2023-11-08"},{"lineNumber":133,"author":{"gitId":"sk2001git"},"content":"        assertTrue(filteredList4.size() \u003d\u003d countOfMoreThanEqualToMean());","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"sk2001git"},"content":"        // Test case 5: Filtering out lowest percentile 0.0 scorers (Percentile metric)","lastModifiedDate":"2023-11-08"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e filteredList5 \u003d summaryStatistic.filteredPersonList(","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"sk2001git"},"content":"                VALID_SCORE_TAG, StatisticMetric.PERCENTILE, 0);","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"sk2001git"},"content":"        assertTrue(filteredList5.size() \u003d\u003d model.getFilteredPersonList().size());","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"        // Test case 6: Filtering out highest percentile 100.0 scorers (Percentile metric)","lastModifiedDate":"2023-11-08"},{"lineNumber":141,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e filteredList6 \u003d summaryStatistic.filteredPersonList(","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"sk2001git"},"content":"                VALID_SCORE_TAG, StatisticMetric.PERCENTILE, 100);","lastModifiedDate":"2023-11-08"},{"lineNumber":143,"author":{"gitId":"sk2001git"},"content":"        assertTrue(filteredList6.size() \u003d\u003d countOfHundredPercentile());","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":145,"author":{"gitId":"sk2001git"},"content":"        // Test case 7: Filtering out highest percentile 50.0 scorers (Percentile metric)","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e filteredList7 \u003d summaryStatistic.filteredPersonList(","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"sk2001git"},"content":"                VALID_SCORE_TAG, StatisticMetric.PERCENTILE, 50);","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"sk2001git"},"content":"        assertTrue(filteredList7.size() \u003d\u003d countOfMoreThanEqualToMedian());","lastModifiedDate":"2023-11-08"},{"lineNumber":149,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":150,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":151,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":152,"author":{"gitId":"sk2001git"},"content":"    public void execute_filteredPersonsWithTag_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":153,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":154,"author":{"gitId":"sk2001git"},"content":"        // The model contains everyone who contains an \"Interview\" Tag","lastModifiedDate":"2023-11-08"},{"lineNumber":155,"author":{"gitId":"sk2001git"},"content":"        int expectedNumOfPeople \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"sk2001git"},"content":"        int actualNumOfPeople \u003d summaryStatistic.getNumOfPeopleAssociatedWithTag(VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":158,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedNumOfPeople \u003d\u003d actualNumOfPeople);","lastModifiedDate":"2023-11-08"},{"lineNumber":159,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"sk2001git"},"content":"    public void execute_filteredPersonsWithScoreTag_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":164,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":165,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cPerson\u003e personWithValidScoreTags \u003d summaryStatistic.filteredPersonsWithScoreTag(VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":166,"author":{"gitId":"sk2001git"},"content":"        assertTrue(personWithValidScoreTags.count() \u003d\u003d model.getFilteredPersonList().size());","lastModifiedDate":"2023-11-08"},{"lineNumber":167,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":168,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":169,"author":{"gitId":"sk2001git"},"content":"    // Check for all statistic being 0 for empty list of people","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":171,"author":{"gitId":"sk2001git"},"content":"    public void execute_emptyList_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":172,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(emptyModel.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":173,"author":{"gitId":"sk2001git"},"content":"        int expectedMean \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":174,"author":{"gitId":"sk2001git"},"content":"        int actualMean \u003d summaryStatistic.calculateMean(generateSortedStream(emptyModel));","lastModifiedDate":"2023-11-08"},{"lineNumber":175,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMean \u003d\u003d actualMean);","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"sk2001git"},"content":"        int expectedMedian \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":178,"author":{"gitId":"sk2001git"},"content":"        int actualMedian \u003d summaryStatistic.calculateMedian(generateSortedStream(emptyModel));","lastModifiedDate":"2023-11-08"},{"lineNumber":179,"author":{"gitId":"sk2001git"},"content":"        System.out.println(actualMedian);","lastModifiedDate":"2023-11-08"},{"lineNumber":180,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMedian \u003d\u003d actualMedian);","lastModifiedDate":"2023-11-08"},{"lineNumber":181,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"sk2001git"},"content":"        int expectedMax \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":183,"author":{"gitId":"sk2001git"},"content":"        int actualMax \u003d summaryStatistic.generateMaxScoreValueWithTag(VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":184,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMax \u003d\u003d actualMax);","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":186,"author":{"gitId":"sk2001git"},"content":"        int expectedMin \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":187,"author":{"gitId":"sk2001git"},"content":"        int actualMin \u003d summaryStatistic.generateMinScoreValueWithTag(VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":188,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMin \u003d\u003d actualMin);","lastModifiedDate":"2023-11-08"},{"lineNumber":189,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":190,"author":{"gitId":"sk2001git"},"content":"        double expectedPercentile \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":191,"author":{"gitId":"sk2001git"},"content":"        double actualPercentile \u003d summaryStatistic.generatePercentileWithTag(VALID_PERSON_WITH_SCORE, VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":192,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedPercentile \u003d\u003d actualPercentile);","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e filteredList \u003d summaryStatistic.filteredPersonList(","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"sk2001git"},"content":"                VALID_SCORE_TAG, StatisticMetric.SCORE, 0);","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"sk2001git"},"content":"        assertTrue(filteredList.size() \u003d\u003d 0);","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":201,"author":{"gitId":"sk2001git"},"content":"    // 1 person in list of people","lastModifiedDate":"2023-11-08"},{"lineNumber":202,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":203,"author":{"gitId":"sk2001git"},"content":"    public void execute_onePerson_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":204,"author":{"gitId":"sk2001git"},"content":"        emptyModel.addPerson(VALID_PERSON_WITH_SCORE);","lastModifiedDate":"2023-11-08"},{"lineNumber":205,"author":{"gitId":"sk2001git"},"content":"        SummaryStatistic summaryStatistic \u003d new SummaryStatistic(emptyModel.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":206,"author":{"gitId":"sk2001git"},"content":"        int expectedMean \u003d VALID_PERSON_WITH_SCORE.getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":207,"author":{"gitId":"sk2001git"},"content":"        int actualMean \u003d summaryStatistic.calculateMean(generateSortedStream(emptyModel));","lastModifiedDate":"2023-11-08"},{"lineNumber":208,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMean \u003d\u003d actualMean);","lastModifiedDate":"2023-11-08"},{"lineNumber":209,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":210,"author":{"gitId":"sk2001git"},"content":"        int expectedMedian \u003d VALID_PERSON_WITH_SCORE.getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":211,"author":{"gitId":"sk2001git"},"content":"        int actualMedian \u003d summaryStatistic.calculateMedian(generateSortedStream(emptyModel));","lastModifiedDate":"2023-11-08"},{"lineNumber":212,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMedian \u003d\u003d actualMedian);","lastModifiedDate":"2023-11-08"},{"lineNumber":213,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":214,"author":{"gitId":"sk2001git"},"content":"        int expectedMax \u003d VALID_PERSON_WITH_SCORE.getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":215,"author":{"gitId":"sk2001git"},"content":"        int actualMax \u003d summaryStatistic.generateMaxScoreValueWithTag(VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":216,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMax \u003d\u003d actualMax);","lastModifiedDate":"2023-11-08"},{"lineNumber":217,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":218,"author":{"gitId":"sk2001git"},"content":"        int expectedMin \u003d VALID_PERSON_WITH_SCORE.getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":219,"author":{"gitId":"sk2001git"},"content":"        int actualMin \u003d summaryStatistic.generateMinScoreValueWithTag(VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":220,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedMin \u003d\u003d actualMin);","lastModifiedDate":"2023-11-08"},{"lineNumber":221,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":222,"author":{"gitId":"sk2001git"},"content":"        double expectedPercentile \u003d 100;","lastModifiedDate":"2023-11-08"},{"lineNumber":223,"author":{"gitId":"sk2001git"},"content":"        double actualPercentile \u003d summaryStatistic.generatePercentileWithTag(VALID_PERSON_WITH_SCORE, VALID_SCORE_TAG);","lastModifiedDate":"2023-11-08"},{"lineNumber":224,"author":{"gitId":"sk2001git"},"content":"        assertTrue(expectedPercentile \u003d\u003d actualPercentile);","lastModifiedDate":"2023-11-08"},{"lineNumber":225,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":226,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":227,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":228,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":229,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":230,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":231,"author":{"gitId":"sk2001git"},"content":"     * Helper method to prepare the average score","lastModifiedDate":"2023-11-08"},{"lineNumber":232,"author":{"gitId":"sk2001git"},"content":"     * @return average score","lastModifiedDate":"2023-11-08"},{"lineNumber":233,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":234,"author":{"gitId":"sk2001git"},"content":"    private int prepareAverageScore() {","lastModifiedDate":"2023-11-08"},{"lineNumber":235,"author":{"gitId":"sk2001git"},"content":"        int totalScore \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":236,"author":{"gitId":"sk2001git"},"content":"        int totalPersons \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-11-08"},{"lineNumber":237,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":238,"author":{"gitId":"sk2001git"},"content":"            totalScore +\u003d model.getFilteredPersonList().get(i).getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":239,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":240,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":241,"author":{"gitId":"sk2001git"},"content":"        return totalScore / totalPersons;","lastModifiedDate":"2023-11-08"},{"lineNumber":242,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":243,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":244,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":245,"author":{"gitId":"sk2001git"},"content":"     * Helper method to prepare the median score","lastModifiedDate":"2023-11-08"},{"lineNumber":246,"author":{"gitId":"sk2001git"},"content":"     * @return median score","lastModifiedDate":"2023-11-08"},{"lineNumber":247,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":248,"author":{"gitId":"sk2001git"},"content":"    private int prepareMedianScore() {","lastModifiedDate":"2023-11-08"},{"lineNumber":249,"author":{"gitId":"sk2001git"},"content":"        int totalPersons \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-11-08"},{"lineNumber":250,"author":{"gitId":"sk2001git"},"content":"        int[] scores \u003d new int[totalPersons];","lastModifiedDate":"2023-11-08"},{"lineNumber":251,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":252,"author":{"gitId":"sk2001git"},"content":"            scores[i] \u003d model.getFilteredPersonList().get(i).getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":253,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":254,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":255,"author":{"gitId":"sk2001git"},"content":"        Arrays.sort(scores);","lastModifiedDate":"2023-11-08"},{"lineNumber":256,"author":{"gitId":"sk2001git"},"content":"        if (totalPersons % 2 \u003d\u003d 0) {","lastModifiedDate":"2023-11-08"},{"lineNumber":257,"author":{"gitId":"sk2001git"},"content":"            return (scores[totalPersons / 2 - 1] + scores[totalPersons / 2]) / 2;","lastModifiedDate":"2023-11-08"},{"lineNumber":258,"author":{"gitId":"sk2001git"},"content":"        } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":259,"author":{"gitId":"sk2001git"},"content":"            return scores[totalPersons / 2];","lastModifiedDate":"2023-11-08"},{"lineNumber":260,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":261,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":262,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":263,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":264,"author":{"gitId":"sk2001git"},"content":"     * Helper method to count the number of persons with score more than or equal to the median","lastModifiedDate":"2023-11-08"},{"lineNumber":265,"author":{"gitId":"sk2001git"},"content":"     * @return count of persons with score more than or equal to the median","lastModifiedDate":"2023-11-08"},{"lineNumber":266,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":267,"author":{"gitId":"sk2001git"},"content":"    private int countOfMoreThanEqualToMedian() {","lastModifiedDate":"2023-11-08"},{"lineNumber":268,"author":{"gitId":"sk2001git"},"content":"        int totalPersons \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-11-08"},{"lineNumber":269,"author":{"gitId":"sk2001git"},"content":"        int[] scores \u003d new int[totalPersons];","lastModifiedDate":"2023-11-08"},{"lineNumber":270,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":271,"author":{"gitId":"sk2001git"},"content":"            scores[i] \u003d model.getFilteredPersonList().get(i).getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":272,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":273,"author":{"gitId":"sk2001git"},"content":"        int median \u003d scores[totalPersons / 2];","lastModifiedDate":"2023-11-08"},{"lineNumber":274,"author":{"gitId":"sk2001git"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":275,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":276,"author":{"gitId":"sk2001git"},"content":"            if (scores[i] \u003e\u003d median) {","lastModifiedDate":"2023-11-08"},{"lineNumber":277,"author":{"gitId":"sk2001git"},"content":"                count++;","lastModifiedDate":"2023-11-08"},{"lineNumber":278,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":279,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":280,"author":{"gitId":"sk2001git"},"content":"        return count;","lastModifiedDate":"2023-11-08"},{"lineNumber":281,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":282,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":283,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":284,"author":{"gitId":"sk2001git"},"content":"     * Helper method to count the number of persons with score more than or equal to the mean","lastModifiedDate":"2023-11-08"},{"lineNumber":285,"author":{"gitId":"sk2001git"},"content":"     * @return count of persons with score more than or equal to the mean","lastModifiedDate":"2023-11-08"},{"lineNumber":286,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":287,"author":{"gitId":"sk2001git"},"content":"    private int countOfMoreThanEqualToMean() {","lastModifiedDate":"2023-11-08"},{"lineNumber":288,"author":{"gitId":"sk2001git"},"content":"        int totalPersons \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-11-08"},{"lineNumber":289,"author":{"gitId":"sk2001git"},"content":"        int[] scores \u003d new int[totalPersons];","lastModifiedDate":"2023-11-08"},{"lineNumber":290,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":291,"author":{"gitId":"sk2001git"},"content":"            scores[i] \u003d model.getFilteredPersonList().get(i).getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":292,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":293,"author":{"gitId":"sk2001git"},"content":"        int mean \u003d prepareAverageScore();","lastModifiedDate":"2023-11-08"},{"lineNumber":294,"author":{"gitId":"sk2001git"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":295,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":296,"author":{"gitId":"sk2001git"},"content":"            if (scores[i] \u003e\u003d mean) {","lastModifiedDate":"2023-11-08"},{"lineNumber":297,"author":{"gitId":"sk2001git"},"content":"                count++;","lastModifiedDate":"2023-11-08"},{"lineNumber":298,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":299,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":300,"author":{"gitId":"sk2001git"},"content":"        return count;","lastModifiedDate":"2023-11-08"},{"lineNumber":301,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":302,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":303,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":304,"author":{"gitId":"sk2001git"},"content":"     * Helper method to count the number of persons with score equal to 100.0 percentile","lastModifiedDate":"2023-11-08"},{"lineNumber":305,"author":{"gitId":"sk2001git"},"content":"     * @return count of persons with score equal to 100.0 percentile","lastModifiedDate":"2023-11-08"},{"lineNumber":306,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":307,"author":{"gitId":"sk2001git"},"content":"    private int countOfHundredPercentile() {","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"sk2001git"},"content":"        int totalPersons \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-11-08"},{"lineNumber":309,"author":{"gitId":"sk2001git"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":310,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":311,"author":{"gitId":"sk2001git"},"content":"            int score \u003d model.getFilteredPersonList().get(i).getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":312,"author":{"gitId":"sk2001git"},"content":"            if (score \u003e\u003d prepareMaxScore()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":313,"author":{"gitId":"sk2001git"},"content":"                count++;","lastModifiedDate":"2023-11-08"},{"lineNumber":314,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":315,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":316,"author":{"gitId":"sk2001git"},"content":"        return count;","lastModifiedDate":"2023-11-08"},{"lineNumber":317,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":318,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":319,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":320,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":321,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":322,"author":{"gitId":"sk2001git"},"content":"     * Helper method to prepare the minimum score","lastModifiedDate":"2023-11-08"},{"lineNumber":323,"author":{"gitId":"sk2001git"},"content":"     * @return minimum score","lastModifiedDate":"2023-11-08"},{"lineNumber":324,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":325,"author":{"gitId":"sk2001git"},"content":"    private int prepareMinScore() {","lastModifiedDate":"2023-11-08"},{"lineNumber":326,"author":{"gitId":"sk2001git"},"content":"        int totalPersons \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-11-08"},{"lineNumber":327,"author":{"gitId":"sk2001git"},"content":"        int[] scores \u003d new int[totalPersons];","lastModifiedDate":"2023-11-08"},{"lineNumber":328,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":329,"author":{"gitId":"sk2001git"},"content":"            scores[i] \u003d model.getFilteredPersonList().get(i).getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":330,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":331,"author":{"gitId":"sk2001git"},"content":"        int min \u003d scores[0];","lastModifiedDate":"2023-11-08"},{"lineNumber":332,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 1; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":333,"author":{"gitId":"sk2001git"},"content":"            if (scores[i] \u003c min) {","lastModifiedDate":"2023-11-08"},{"lineNumber":334,"author":{"gitId":"sk2001git"},"content":"                min \u003d scores[i];","lastModifiedDate":"2023-11-08"},{"lineNumber":335,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":336,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":337,"author":{"gitId":"sk2001git"},"content":"        return min;","lastModifiedDate":"2023-11-08"},{"lineNumber":338,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":339,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":340,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":341,"author":{"gitId":"sk2001git"},"content":"     * Helper method to prepare the maximum score","lastModifiedDate":"2023-11-08"},{"lineNumber":342,"author":{"gitId":"sk2001git"},"content":"     * @return maximum score","lastModifiedDate":"2023-11-08"},{"lineNumber":343,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":344,"author":{"gitId":"sk2001git"},"content":"    private int prepareMaxScore() {","lastModifiedDate":"2023-11-08"},{"lineNumber":345,"author":{"gitId":"sk2001git"},"content":"        int totalPersons \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-11-08"},{"lineNumber":346,"author":{"gitId":"sk2001git"},"content":"        int[] scores \u003d new int[totalPersons];","lastModifiedDate":"2023-11-08"},{"lineNumber":347,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":348,"author":{"gitId":"sk2001git"},"content":"            scores[i] \u003d model.getFilteredPersonList().get(i).getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":349,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":350,"author":{"gitId":"sk2001git"},"content":"        int max \u003d scores[0];","lastModifiedDate":"2023-11-08"},{"lineNumber":351,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 1; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":352,"author":{"gitId":"sk2001git"},"content":"            if (scores[i] \u003e max) {","lastModifiedDate":"2023-11-08"},{"lineNumber":353,"author":{"gitId":"sk2001git"},"content":"                max \u003d scores[i];","lastModifiedDate":"2023-11-08"},{"lineNumber":354,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":355,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":356,"author":{"gitId":"sk2001git"},"content":"        return max;","lastModifiedDate":"2023-11-08"},{"lineNumber":357,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":358,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":359,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":360,"author":{"gitId":"sk2001git"},"content":"     * Helper method to prepare the percentile","lastModifiedDate":"2023-11-08"},{"lineNumber":361,"author":{"gitId":"sk2001git"},"content":"     * @return percentile","lastModifiedDate":"2023-11-08"},{"lineNumber":362,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":363,"author":{"gitId":"sk2001git"},"content":"    private double preparePercentile() {","lastModifiedDate":"2023-11-08"},{"lineNumber":364,"author":{"gitId":"sk2001git"},"content":"        int totalPersons \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-11-08"},{"lineNumber":365,"author":{"gitId":"sk2001git"},"content":"        int[] scores \u003d new int[totalPersons];","lastModifiedDate":"2023-11-08"},{"lineNumber":366,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":367,"author":{"gitId":"sk2001git"},"content":"            scores[i] \u003d model.getFilteredPersonList().get(i).getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":368,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":369,"author":{"gitId":"sk2001git"},"content":"        Arrays.sort(scores);","lastModifiedDate":"2023-11-08"},{"lineNumber":370,"author":{"gitId":"sk2001git"},"content":"        int targetScore \u003d VALID_PERSON_WITH_SCORE.getScoreForTag(VALID_SCORE_TAG).value;","lastModifiedDate":"2023-11-08"},{"lineNumber":371,"author":{"gitId":"sk2001git"},"content":"        int numberOfScoresLessThanTarget \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":372,"author":{"gitId":"sk2001git"},"content":"        int numberOfSameScore \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":373,"author":{"gitId":"sk2001git"},"content":"        for (int i \u003d 0; i \u003c totalPersons; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":374,"author":{"gitId":"sk2001git"},"content":"            if (scores[i] \u003c targetScore) {","lastModifiedDate":"2023-11-08"},{"lineNumber":375,"author":{"gitId":"sk2001git"},"content":"                numberOfScoresLessThanTarget++;","lastModifiedDate":"2023-11-08"},{"lineNumber":376,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":377,"author":{"gitId":"sk2001git"},"content":"            if (scores[i] \u003d\u003d targetScore) {","lastModifiedDate":"2023-11-08"},{"lineNumber":378,"author":{"gitId":"sk2001git"},"content":"                numberOfSameScore++;","lastModifiedDate":"2023-11-08"},{"lineNumber":379,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":380,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":381,"author":{"gitId":"sk2001git"},"content":"        return Math.ceil((double) numberOfScoresLessThanTarget / (totalPersons - numberOfSameScore) * 100);","lastModifiedDate":"2023-11-08"},{"lineNumber":382,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":383,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":384,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":385,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":386,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":387,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":388,"author":{"gitId":"sk2001git"},"content":"     * Helper method to generate a sorted stream of scores","lastModifiedDate":"2023-11-08"},{"lineNumber":389,"author":{"gitId":"sk2001git"},"content":"     * @return sorted stream of scores","lastModifiedDate":"2023-11-08"},{"lineNumber":390,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":391,"author":{"gitId":"sk2001git"},"content":"    private Stream\u003cInteger\u003e generateSortedStream(Model modelUsed) {","lastModifiedDate":"2023-11-08"},{"lineNumber":392,"author":{"gitId":"sk2001git"},"content":"        ObservableList\u003cPerson\u003e personList \u003d modelUsed.getFilteredPersonList();","lastModifiedDate":"2023-11-08"},{"lineNumber":393,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cPerson\u003e filteredStream \u003d personList.stream().filter(person -\u003e person.getTags().contains(VALID_SCORE_TAG)","lastModifiedDate":"2023-11-08"},{"lineNumber":394,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 person.getScoreList().hasTag(VALID_SCORE_TAG));","lastModifiedDate":"2023-11-08"},{"lineNumber":395,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cScoreList\u003e scoreListStream \u003d filteredStream.map(person -\u003e person.getScoreList());","lastModifiedDate":"2023-11-08"},{"lineNumber":396,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cScore\u003e scoreStream \u003d scoreListStream.map(scoreList -\u003e scoreList.getScore(VALID_SCORE_TAG));","lastModifiedDate":"2023-11-08"},{"lineNumber":397,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cInteger\u003e scoreValueStream \u003d scoreStream.map(score -\u003e score.value);","lastModifiedDate":"2023-11-08"},{"lineNumber":398,"author":{"gitId":"sk2001git"},"content":"        Stream\u003cInteger\u003e sortedScoreValueStream \u003d scoreValueStream.sorted();","lastModifiedDate":"2023-11-08"},{"lineNumber":399,"author":{"gitId":"sk2001git"},"content":"        return sortedScoreValueStream;","lastModifiedDate":"2023-11-08"},{"lineNumber":400,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":401,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":402,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":403,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"sk2001git":403}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Map;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    private static Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    private static final List\u003cMap\u003cString, String\u003e\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"            .map(tag -\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"                Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"                map.put(\"tagCategory\", tag.tagCategory);","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"                map.put(\"tagName\", tag.tagName);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"                return map;","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"            })","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"    private static final String VALID_LINKEDIN \u003d BENSON.getLinkedIn().toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    private static final String VALID_GITHUB \u003d BENSON.getGithub().toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    private static final JsonAdaptedScoreList VALID_SCORELIST \u003d new JsonAdaptedScoreList(BENSON.getScoreList());","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"                        VALID_SCORELIST,","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"                        VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"                VALID_TAGS, VALID_SCORELIST, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"                        VALID_TAGS, VALID_SCORELIST, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"                VALID_TAGS, VALID_SCORELIST, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"                        VALID_SCORELIST, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"                VALID_TAGS, VALID_SCORELIST, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"                        VALID_SCORELIST, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"                VALID_TAGS, VALID_SCORELIST, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"AriellaCallista"},"content":"        Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cMap\u003cString, String\u003e\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"AriellaCallista"},"content":"        map.put(\"tagCategory\", \"uncategorised\");","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"AriellaCallista"},"content":"        map.put(\"tagName\", INVALID_TAG);","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"AriellaCallista"},"content":"        invalidTags.add(map);","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"AriellaCallista"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"                        invalidTags, VALID_SCORELIST, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"sk2001git"},"content":"    public void toModelType_invalidScoreList_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"sk2001git"},"content":"        Map\u003cString, Integer\u003e invalidScoreMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"sk2001git"},"content":"        invalidScoreMap.put(\"invalidTag\", -5);","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"sk2001git"},"content":"        JsonAdaptedScoreList invalidScoreList \u003d new JsonAdaptedScoreList(invalidScoreMap);","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"sk2001git"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"sk2001git"},"content":"                VALID_TAGS, invalidScoreList, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"sk2001git"},"content":"        assertThrows(IllegalArgumentException.class, person::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"sk2001git":21,"AriellaCallista":32,"-":97}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.storage.event.JsonEventBookStorage;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        JsonEventBookStorage eventBookStorage \u003d new JsonEventBookStorage(getTempFilePath(\"ev\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, eventBookStorage);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"         * {@link JsonAddressBookStorage} class and {@link JsonEventBookStorage} class.","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest}","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"         * and {@link JsonEventBookStorageTest} class.","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"    public void eventBookReadSave() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        EventBook original \u003d new EventBook();","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        storageManager.saveEventBook(original);","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        ReadOnlyEventBook retrieved \u003d storageManager.readEventBook().get();","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(original, new EventBook(retrieved));","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"    public void getEventBookFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        assertNotNull(storageManager.getEventBookFilePath());","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MadLamprey":21,"-":65}},{"path":"src/test/java/seedu/address/storage/event/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.storage.event;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.storage.event.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalEvents.EVENT_1;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"    private static final String INVALID_START_TIME \u003d \"2023-09-22 18:00\";","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    private static final String INVALID_END_TIME \u003d \"2023-09-22 19:00\";","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private static final String VALID_DESCRIPTION \u003d \"Interview\";","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    private static final String VALID_START_TIME \u003d \"22-09-2023 18:00\";","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    private static final String VALID_END_TIME \u003d \"22-09-2023 19:00\";","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(EVENT_1);","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(EVENT_1, event.toModelType());","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    public void toModelType_nullPerson_throwsIllegalValueException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(null, VALID_DESCRIPTION, VALID_START_TIME, VALID_END_TIME);","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\");","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, null, VALID_START_TIME, VALID_END_TIME);","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"description\");","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    public void toModelType_nullStartTime_throwsIllegalValueException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_DESCRIPTION, null, VALID_END_TIME);","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"startTime\");","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_DESCRIPTION, VALID_START_TIME, null);","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"endTime\");","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    public void toModelType_invalidStartTime_throwsIllegalValueException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"                new JsonAdaptedEvent(ALICE.getName().toString(), VALID_DESCRIPTION, INVALID_START_TIME, VALID_END_TIME);","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d \"Date is not in correct format!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"    public void toModelType_invalidEndTime_throwsIllegalValueException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"                new JsonAdaptedEvent(ALICE.getName().toString(), VALID_DESCRIPTION, VALID_START_TIME, INVALID_END_TIME);","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d \"Date is not in correct format!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"MadLamprey":73}},{"path":"src/test/java/seedu/address/storage/event/JsonEventBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.storage.event;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"public class JsonEventBookStorageTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            \"JsonEventBookStorageTest\");","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    @TempDir","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    public Path testFolder;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    public void readEventBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(NullPointerException.class, () -\u003e readEventBook(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    private java.util.Optional\u003cReadOnlyEventBook\u003e readEventBook(String filePath) throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        return new JsonEventBookStorage(Paths.get(filePath)).readEventBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"                : null;","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(readEventBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readEventBook(\"notJsonFormatEventBook.json\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    public void readEventBook_invalidPersonEventBook_throwDataLoadingException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readEventBook(\"invalidEventBook.json\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    public void readEventBook_invalidAndValidPersonEventBook_throwDataLoadingException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readEventBook(\"invalidAndValidEventBook.json\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    public void readAndSaveEventBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"        Path filePath \u003d testFolder.resolve(\"TempEventBook.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        EventBook original \u003d new EventBook();","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        original.addEvent(new Event(ALICE, \"Interview\", LocalDateTime.of(2023, 11, 2,","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"                12, 0), LocalDateTime.MAX));","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        original.addEvent(new Event(BENSON, \"Work\", LocalDateTime.of(2023, 11, 2,","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"                12, 0), LocalDateTime.MAX));","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"        JsonEventBookStorage jsonEventBookStorage \u003d new JsonEventBookStorage(filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"        jsonEventBookStorage.saveEventBook(original, filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        ReadOnlyEventBook readBack \u003d jsonEventBookStorage.readEventBook(filePath).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(original, new EventBook(readBack));","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        original.addEvent(new Event(IDA, \"Test\", LocalDateTime.of(2023, 11, 2,","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"                12, 0), LocalDateTime.MAX));","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        jsonEventBookStorage.saveEventBook(original, filePath);","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        readBack \u003d jsonEventBookStorage.readEventBook(filePath).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(original.equals(new EventBook(readBack)));","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        jsonEventBookStorage.saveEventBook(original); // file path not specified","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"        readBack \u003d jsonEventBookStorage.readEventBook().get(); // file path not specified","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(original, new EventBook(readBack));","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"    public void saveEventBook_nullEventBook_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEventBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"     * Saves {@code eventBook} at the specified {@code filePath}.","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"    private void saveEventBook(ReadOnlyEventBook addressBook, String filePath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"            new JsonEventBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"                    .saveEventBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"    public void saveEventBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEventBook(new EventBook(), null));","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"MadLamprey":116}},{"path":"src/test/java/seedu/address/storage/event/JsonSerializableEventBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.storage.event;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"public class JsonSerializableEventBookTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableEventBookTest\");","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private static final Path TYPICAL_EVENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEventBook.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    private static final Path INVALID_EVENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEventBook.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    private static final Path DUPLICATE_EVENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventBook.json\");","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    public void toModelType_typicalEventsFile_success() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        JsonSerializableEventBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_EVENTS_FILE,","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"                JsonSerializableEventBook.class).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        EventBook eventBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        EventBook typicalEventsBook \u003d TypicalEvents.getTypicalEventBook();","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(eventBookFromFile, typicalEventsBook);","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        JsonSerializableEventBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EVENTS_FILE,","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"                JsonSerializableEventBook.class).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        JsonSerializableEventBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EVENTS_FILE,","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"                JsonSerializableEventBook.class).get();","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableEventBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"MadLamprey":46}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"     * Creates a {@code EditPersonDescriptorBuilder} with a empty score list.","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        // Each descriptor builder must have a default score list","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        descriptor.setScoreList(new ScoreList());","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        descriptor.setScoreList(person.getScoreList());","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"     * Sets the {@code Score} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"    public EditPersonDescriptorBuilder withScoreList(ScoreList scoreList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"        descriptor.setScoreList(scoreList);","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(tag -\u003e new Tag(tag, \"uncategorised\")).collect(Collectors.toSet());","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"sk2001git":15,"AriellaCallista":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    public static final String DEFAULT_LINKEDIN \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    public static final String DEFAULT_GITHUB \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public static final int DEFAULT_SCORE_VALUE \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"    private Remark remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"    private ScoreList scoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"    private Status status;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    private LinkedIn linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    private Github github;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        scoreList \u003d new ScoreList();","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"        status \u003d new Status(); // default status is preliminary","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        linkedIn \u003d new LinkedIn(DEFAULT_LINKEDIN);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        scoreList \u003d personToCopy.getScoreList();","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        linkedIn \u003d personToCopy.getLinkedIn();","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"        return this;","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"     * Sets the {@code ScoreList} of the {@code Person} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"     * @param scoreList the score list to be set","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"     * @return PersonBuilder","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"    public PersonBuilder withScoreList(ScoreList scoreList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"        this.scoreList \u003d scoreList;","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"sk2001git"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"sk2001git"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"sk2001git"},"content":"     * @param score the score to be set","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"sk2001git"},"content":"     * @return PersonBuilder","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":141,"author":{"gitId":"sk2001git"},"content":"    public PersonBuilder withInterviewScore(int score) {","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"sk2001git"},"content":"        ScoreList newScoreList \u003d new ScoreList();","lastModifiedDate":"2023-11-08"},{"lineNumber":143,"author":{"gitId":"sk2001git"},"content":"        newScoreList.updateScoreList(new Tag(\"Interview\", \"assessment\"), new Score(score));","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"sk2001git"},"content":"        this.scoreList \u003d newScoreList;","lastModifiedDate":"2023-11-08"},{"lineNumber":145,"author":{"gitId":"sk2001git"},"content":"        return this;","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"MadLamprey"},"content":"     * Sets the {@code LinkedIn} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"MadLamprey"},"content":"     * @param username","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"sk2001git"},"content":"     * @return PersonBuilder","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"MadLamprey"},"content":"    public PersonBuilder withLinkedIn(String username) {","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"MadLamprey"},"content":"        this.linkedIn \u003d new LinkedIn(username);","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"MadLamprey"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":159,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"AriellaCallista"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"AriellaCallista"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"AriellaCallista"},"content":"        switch (status.toLowerCase()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"AriellaCallista"},"content":"        case \"interviewed\":","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"AriellaCallista"},"content":"            this.status.setStatusType(StatusTypes.INTERVIEWED);","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"AriellaCallista"},"content":"            break;","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"AriellaCallista"},"content":"        case \"rejected\":","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"AriellaCallista"},"content":"            this.status.setStatusType(StatusTypes.REJECTED);","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"AriellaCallista"},"content":"            break;","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"AriellaCallista"},"content":"        case \"offered\":","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"AriellaCallista"},"content":"            this.status.setStatusType(StatusTypes.OFFERED);","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"AriellaCallista"},"content":"            break;","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"AriellaCallista"},"content":"        default:","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"AriellaCallista"},"content":"            this.status.setStatusType(StatusTypes.PRELIMINARY);","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"AriellaCallista"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"sk2001git"},"content":"     * Builds a person with the given parameters.","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"sk2001git"},"content":"     * @return Person","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":184,"author":{"gitId":"sk2001git"},"content":"        Person createdPerson \u003d new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"sk2001git"},"content":"        createdPerson.setStatus(status);","lastModifiedDate":"2023-11-08"},{"lineNumber":186,"author":{"gitId":"sk2001git"},"content":"        createdPerson.setScoreList(scoreList);","lastModifiedDate":"2023-11-08"},{"lineNumber":187,"author":{"gitId":"sk2001git"},"content":"        return createdPerson;","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"     * Sets the {@code Github} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"     * @param username","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"     * @return","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"    public PersonBuilder withGithub(String username) {","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"        this.github \u003d new Github(username);","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"MadLamprey"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"sk2001git":52,"AriellaCallista":25,"MadLamprey":26,"-":96}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"public class TypicalEvents {","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    public static final Event EVENT_1 \u003d new Event(ALICE, \"Interview\",","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            LocalDateTime.of(2023, 11, 8, 12, 0),","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            LocalDateTime.of(2023, 11, 9, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    public static final Event EVENT_2 \u003d new Event(BENSON, \"Round 1 Test\",","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            LocalDateTime.of(2023, 11, 8, 12, 0),","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"            LocalDateTime.of(2023, 11, 9, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    public static final Event EVENT_3 \u003d new Event(CARL, \"Round 2 Test\",","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"            LocalDateTime.of(2023, 11, 8, 12, 0),","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"            LocalDateTime.of(2023, 11, 9, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    public static final Event EVENT_4 \u003d new Event(DANIEL, \"Round 3 Test\",","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"            LocalDateTime.of(2023, 11, 8, 12, 0),","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"            LocalDateTime.of(2023, 11, 9, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"     * Returns an {@code EventBook} with all the typical events.","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    public static EventBook getTypicalEventBook() {","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        EventBook eb \u003d new EventBook();","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"            eb.addEvent(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        return eb;","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(EVENT_1, EVENT_2, EVENT_3, EVENT_4));","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"MadLamprey":53}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.ScoreList;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"            .withTags(\"intern\")","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"            .withStatus(\"interviewed\")","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"            .withTags(\"role developer\")","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"            .withRemark(\"Benson the builder\")","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"            .withScoreList(new ScoreList())","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"            .withStatus(\"rejected\")","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"            .build();","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"    // Manually added - Person with \"Interview\" tag with a score attached to them","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    public static final Person ALPHA \u003d new PersonBuilder().withName(\"Alpha\").withPhone(\"8482424\")","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"            .withEmail(\"example1@example.com\").withAddress(\"a\")","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"            .withTags(\"assessment Interview\").withInterviewScore(50).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"    public static final Person BETA \u003d new PersonBuilder().withName(\"Beta\").withPhone(\"8482424\")","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"            .withEmail(\"example2@example.com\").withAddress(\"b\")","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"            .withTags(\"assessment Interview\").withInterviewScore(60).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"    public static final Person CHARLIE \u003d new PersonBuilder().withName(\"Charlie\").withPhone(\"8482424\")","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"            .withEmail(\"example3@example.com\").withAddress(\"c\")","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"            .withTags(\"assessment Interview\").withInterviewScore(65).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"    public static final Person DELTA \u003d new PersonBuilder().withName(\"Delta\").withPhone(\"8482424\")","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"            .withEmail(\"example4@example.com\").withAddress(\"d\")","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"            .withTags(\"assessment Interview\").withInterviewScore(70).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"    public static final Person ECHO \u003d new PersonBuilder().withName(\"Echo\").withPhone(\"8482424\")","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"            .withEmail(\"example5@example.com\").withAddress(\"e\")","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"            .withTags(\"assessment Interview\").withInterviewScore(75).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"    public static final Person FOXTROT \u003d new PersonBuilder().withName(\"Foxtrot\").withPhone(\"8482424\")","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"            .withEmail(\"example6@example.com\").withAddress(\"f\")","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"            .withTags(\"assessment Interview\").withInterviewScore(80).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"    public static final Person GOLF \u003d new PersonBuilder().withName(\"Golf\").withPhone(\"8482424\")","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"            .withEmail(\"example7@example.com\").withAddress(\"g\")","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"            .withTags(\"assessment Interview\").withInterviewScore(85).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"    public static final Person HOTEL \u003d new PersonBuilder().withName(\"Hotel\").withPhone(\"8482424\")","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"            .withEmail(\"example8@example.com\").withAddress(\"h\")","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"            .withTags(\"assessment Interview\").withInterviewScore(90).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"     * Returns an {@code AddressBook} with all the typical persons with interview scores.","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"     * @return","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"    public static AddressBook getTypicalAddressBookWithTagScores() {","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"        for (Person person : getTypicalPersonsWithTagScores()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-11-08"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"        return ab;","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsWithTagScores() {","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALPHA, BETA, CHARLIE, DELTA, ECHO, FOXTROT, GOLF, HOTEL));","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"ketweeen"},"content":"    public static Person getTypicalTagPerson() {","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"ketweeen"},"content":"        return BENSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":135,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"ketweeen"},"content":"    public static Person getTypicalStatusPerson() {","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"ketweeen"},"content":"        return BENSON;","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"ketweeen"},"content":"    public static Person getTypicalTagAndStatusPerson() {","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"ketweeen"},"content":"        return BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"sk2001git":51,"AriellaCallista":4,"ketweeen":14,"-":74}},{"path":"src/test/java/seedu/address/testutil/TypicalPredicateLists.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalTags.NO_MATCHING_TAG_NAME_STRING;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalTags.TEST_TAG_NAME_STRING;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":" * A utility class that provides typical predicate lists for testing purposes.","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"public class TypicalPredicateLists {","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    // Predicates containing only tags","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    public static final TagContainsKeywordsPredicate TAG_PREDICATE_ONE \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"            new TagContainsKeywordsPredicate(List.of(TEST_TAG_NAME_STRING));","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    public static final TagContainsKeywordsPredicate TAG_PREDICATE_TWO \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"            new TagContainsKeywordsPredicate(List.of(NO_MATCHING_TAG_NAME_STRING));","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    public static final List\u003cPredicate\u003cPerson\u003e\u003e PREDICATE_LIST_CONTAINING_TAG_ONE \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"            add(TAG_PREDICATE_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"        }};","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    public static final List\u003cPredicate\u003cPerson\u003e\u003e PREDICATE_LIST_CONTAINING_TAG_TWO \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"            add(TAG_PREDICATE_TWO);","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        }};","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    // Predicates containing only status","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"    public static final String TEST_STATUS_ONE \u003d StatusTypes.OFFERED.toString();","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    public static final StatusContainsKeywordsPredicate STATUS_PREDICATE_ONE \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"            new StatusContainsKeywordsPredicate(List.of(TEST_STATUS_ONE));","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"    public static final String TEST_STATUS_TWO \u003d StatusTypes.PRELIMINARY.toString();","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    public static final StatusContainsKeywordsPredicate STATUS_PREDICATE_TWO \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"            new StatusContainsKeywordsPredicate(List.of(TEST_STATUS_TWO));","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"    public static final List\u003cPredicate\u003cPerson\u003e\u003e PREDICATE_LIST_CONTAINING_STATUS_ONE \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"            add(STATUS_PREDICATE_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"        }};","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"    public static final List\u003cPredicate\u003cPerson\u003e\u003e PREDICATE_LIST_CONTAINING_STATUS_TWO \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"            add(STATUS_PREDICATE_TWO);","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"        }};","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    // Predicates containing tags and status","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"    public static final List\u003cPredicate\u003cPerson\u003e\u003e PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_ONE \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"            add(STATUS_PREDICATE_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"            add(TAG_PREDICATE_ONE);","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"        }};","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"    public static final List\u003cPredicate\u003cPerson\u003e\u003e PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_TWO \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"            add(TAG_PREDICATE_TWO);","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"            add(STATUS_PREDICATE_TWO);","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"        }};","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"    public static final List\u003cPredicate\u003cPerson\u003e\u003e PREDICATE_LIST_CONTAINING_TAG_AND_STATUS_MIX \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"            add(TAG_PREDICATE_ONE);","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"            add(STATUS_PREDICATE_TWO);","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"        }};","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"ketweeen":58}},{"path":"src/test/java/seedu/address/testutil/TypicalTags.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":" * A utility class for providing typical Tag objects and sets of tags for testing.","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"public class TypicalTags {","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    public static final String TEST_TAG_NAME_STRING \u003d \"developer\";","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    public static final String TEST_TAG_CATEGORY_STRING \u003d \"role\";","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    public static final String NO_MATCHING_TAG_NAME_STRING \u003d \"NoMatchingTag\";","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    public static final String NO_MATCHING_TAG_CATEGORY_STRING \u003d \"uncategorised\";","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    public static final String INVALID_TAG_STRING \u003d \"@\";","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public static final Tag TEST_TAG \u003d new Tag(TEST_TAG_NAME_STRING, TEST_TAG_CATEGORY_STRING);","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    public static final Tag NO_MATCHING_TAG \u003d new Tag(NO_MATCHING_TAG_NAME_STRING, NO_MATCHING_TAG_CATEGORY_STRING);","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"AriellaCallista":6,"ketweeen":10}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W09-4/tp/actions)","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"# JABPro","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"![ui image](https://raw.githubusercontent.com/ScarletBlanks/tp/master/docs/images/Ui.png)","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"# Table of Contents","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"## Features","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"Search Job Applicants","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"Add Contact Information","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"Add Optional Comments","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"List All Candidate Information","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"Delete an Entry","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"Set Applicant Status","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"Add GitHub/LinkedIn Username for a Candidate","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"Open User LinkedIn or Github Account","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"### Applicant Management","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"JABPro allows you to efficiently search and manage job applicants based on various criteria. You can search for applicants by name, email, phone number, and status. Additionally, you can combine multiple search categories to narrow down your results.","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"### Command Types","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"Search Job Applicants : Use Search categories to narrow down results","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"Add Contact Information : You can add contact information for job applicants, including their name, email, and phone number. This feature helps you keep track of applicant details.","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"Add Optional Comments : allows you to add optional comments or notes to a candidate\u0027s profile. These comments can be tagged with the candidate\u0027s details and provide additional information or insights about the applicant.","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"List All Candidate Information : You can retrieve a comprehensive list of all job applicants and their relevant information, such as name, email, and phone number. This feature makes it easy to review and manage candidate profiles.","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"Delete an Entry : If needed, you can remove a candidate\u0027s profile from the system. This feature helps you maintain an up-to-date database of applicants","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"Set Applicant Status : You can set the application status for each candidate, including options like \"Preliminary,\" \"Interviewed,\" \"Rejected,\" and \"Offered.\" This feature helps you track the progress of each applicant.","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"Add Github/LinkedIn Username for a Candidate : JASMS allows you to add the candidate\u0027s social profile usernames (Github or LinkedIn) to their existing contact details. This feature helps you link to their online profiles for further evaluation.","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"Open User LinkedIn or Github Account : You can quickly access a candidate\u0027s LinkedIn or Github profile directly from JABPro. This feature provides easy access to additional information about the applicant.","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"Visit our website for more details!","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"(https://github.com/AY2324S1-CS2103T-W09-4/tp)","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ScarletBlanks":52}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"run {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AriellaCallista":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"You can reach us at the email `e0958427[at]comp.nus.edu.sg`","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"### Sean Koh Hak Guan","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"\u003cimg src\u003d\"images/sk2001git.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"[[github](https://github.com/sk2001git)]","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"* Role: Developer","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"* Responsibilities: Deliverables \u0026 Deadlines, Integration","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"* In charge of: Storage","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"### Ariella Thirza Callista","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"\u003cimg src\u003d\"images/ariellacallista.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"[[github](http://github.com/AriellaCallista)]","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"* In charge of: Model, UI","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"### Misra Aditya","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"\u003cimg src\u003d\"images/madlamprey.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"[[github](http://github.com/MadLamprey)]","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"* In charge of: Test cases and coverage","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"### Catherine Liang","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"\u003cimg src\u003d\"images/ketweeen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"[[github](http://github.com/ketweeen)]","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"* In charge of: Commons","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"### Goh Peng Tat","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"\u003cimg src\u003d\"images/scarletblanks.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"[[github](http://github.com/ScarletBlanks)]","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"* In charge of: Logic","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"sk2001git":31,"-":39}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"# JABPro Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"This is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org). ","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"MadLamprey"},"content":"### LinkedIn/Github feature","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"MadLamprey"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"MadLamprey"},"content":"The LinkedIn/Github feature consists of two parts - adding the linkedin/github username to the candidate\u0027s data, and viewing the profile. ","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"The addition is performed by the `AddLCommand` and `AddGCommand` classes. They extend `Command` and override the `execute()` method to add the username to the candidate\u0027s existing details. ","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"It involves the command `AddLCommand` and `AddGCommand` classes, and their corresponding parsers `AddLCommandParser` and `AddGCommandParser`, that take in user input and return either `AddLCommand` or `AddGCommand` objects.","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"MadLamprey"},"content":"When executed, `AddLCommand` and `AddGCommand` find the person at the specified index in the list, and adds either their linkedin or github username to the `LinkedIn` or `Github` class associated with that `Person`. The list is then updated, and a `CommandResult` object is returned.","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"The viewing is performed by the `LinkedInCommand` and `GithubCommand` classes. They extend `Command` and override the `execute()` method to redirect the user to the candidate\u0027s LinkedIn or Github profile on the browser.","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"It involves the command `LinkedInCommand` and `GithubCommand` classes, and their corresponding parsers `LinkedInCommandParser` and `GithubCommandParser`, that take in user input and return either `LinkedInCommand` or `GithubCommand` objects.","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"When executed, `LinkedInCommand` and `GithubCommand` append the username of the person to the base URLs for LinkedIn and Github, and open the URL in the browser.","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"Given below is an example usage scenario and how the linkedin and github feature behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"Step 1. The user launches the application. `JABPro` will be initialized with the current saved state","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"MadLamprey"},"content":"User should see the UI as shown below.","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"MadLamprey"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"MadLamprey"},"content":"Step 2. The user wants to add the LinkedIn username to the first person in the list. The user enters the command `addL 1 u/alexyeoh` to add the username to the candidate\u0027s existing details.","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"MadLamprey"},"content":"The following sequence diagram shows how the AddL and AddG operations work:","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"MadLamprey"},"content":"\u003cpuml src\u003d\"diagrams/AddLSequenceDiagram.puml\" alt\u003d\"AddLSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"MadLamprey"},"content":"\u003cpuml src\u003d\"diagram/AddGSequenceDiagram.puml\" alt\u003d\"AddGSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"MadLamprey"},"content":"User should see the UI as shown below after entering `addL 1 u/alexyeoh`","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"MadLamprey"},"content":"![AddL](images/addLState.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"MadLamprey"},"content":"Step 3. The user can then view the linkedin profile for the candidate at index 1. The user enters the command `linkedin 1`.","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"MadLamprey"},"content":"User should see the UI asa shown below after entering `linkedin 1`","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"MadLamprey"},"content":"![LinkedIn](images/linkedinState.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"MadLamprey"},"content":"Alternatives considered","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"MadLamprey"},"content":"Alternative 1 (Chosen): ","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"MadLamprey"},"content":"`LinkedIn` and `Github` are attributes of a `Person` that can be added using the `AddLCommand` and `AddGCommand` and are initially provided with default string values when a Person is initialised.","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"MadLamprey"},"content":"Pros: There may be candidates who do not provide their LinkedIn or Github profiles as part of their application.","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"MadLamprey"},"content":"Cons: Person is always initialised with empty values for LinkedIn and Github, and those values would have to be manually set using the commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"MadLamprey"},"content":"Alternative 2:","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"MadLamprey"},"content":"`LinkedIn` and `Github`, like all other attributes of `Person`, are required to be non null.","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"MadLamprey"},"content":"Pros: These details will be provided at the time of addition of a new Person, without having to add them later separately.","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"MadLamprey"},"content":"Cons: It limits the scope for candidates that do not possess a LinkedIn or Github account.","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"MadLamprey"},"content":"Alternative 3:","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"MadLamprey"},"content":"`LinkedIn` and `Github` are attributes of `Person` but are allowed to be null.","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"MadLamprey"},"content":"Pros: This accounts for candidates that do not have those social profiles, and allows for their addition at the time of Person creation","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"MadLamprey"},"content":"Cons: With defensive programming in mind, not the best approach having to deal with null values.","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"AriellaCallista"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"sk2001git"},"content":"### View feature","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"sk2001git"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"sk2001git"},"content":"The view feature is implemented using the `ViewCommand` class. It extends `Command` and overrides the `execute()` method to display the person\u0027s details in full in a new window.","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"sk2001git"},"content":"Like every other command class, it involves a command `ViewCommand` class and a parser `ViewCommandParser`. `ViewCommand Parser` takes in the user input and returns a `ViewCommand` object.    ","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"sk2001git"},"content":"  ","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"sk2001git"},"content":"When executed, `ViewCommand` saves the index of the person to be viewed as `LastViewedPersonIndex` in the `Model` and returns a `CommandResult` object with `isView` property being true.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"sk2001git"},"content":"By having a `isView` property in `CommandResult`, the `MainWindow` component is able to toggle the `UI` to the view the person of the `LastViewedPersonIndex` after the command has been executed.","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"sk2001git"},"content":"Given below is an example usage scenario and how the view feature behaves at each step.","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"sk2001git"},"content":"Step 1. The user launches the application. The `AddressBook` will be initialized with the current saved address book state","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"sk2001git"},"content":"User should see the UI as shown below.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"sk2001git"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"sk2001git"},"content":"Step 2. The user wants to see the full information displayed for the first person in the displayed list. The user enters the command `view 1` to view the first person in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"sk2001git"},"content":"The following sequence diagram shows how the view operation works:","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"sk2001git"},"content":"\u003cpuml src\u003d\"diagrams/ViewSequenceDiagram.puml\" alt\u003d\"ViewSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"sk2001git"},"content":"**Note:** The lifeline for `RemarkCommand` and `RemarkCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"sk2001git"},"content":"User should see the UI as shown below after entering `View 1`  ","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"sk2001git"},"content":"![View](images/viewState.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"sk2001git"},"content":"Step 3. The user can then read or process the information stored for the viewed person.","lastModifiedDate":"2023-10-25"},{"lineNumber":272,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"sk2001git"},"content":"**Note:** The view command can be most effectively used with `search` and `list`. Since the view index is dependent on the Index on the filtered list shown, the user can view the profile after filtering for specific properties in a person using `search` and sorting them using `list`.","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"sk2001git"},"content":"Alternatives considered","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"sk2001git"},"content":"Alternative 1 (Chosen):   ","lastModifiedDate":"2023-10-25"},{"lineNumber":280,"author":{"gitId":"sk2001git"},"content":"The view feature is implemented using the `ViewCommand` class. It extends `Command` and overrides the `execute()` method to display the person\u0027s details in full in a new window.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"sk2001git"},"content":"Pros: Follows the Software Design Patterns of Command. This is the same pattern used for all other commands thus creating consistency.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"sk2001git"},"content":"Cons: Tougher to implement since other commands do not have the ability to trigger the `ViewCommand` in their execution.  That is we specifically need to set the isView property to true if we want the `ViewCommand` to occur simultaneously with another command.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"sk2001git"},"content":"Alternative 2 (Not Chosen):  ","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"sk2001git"},"content":"The view feature is implemented using the `ViewCommand` class. It extends `Command` and overrides the `execute()` method to display the person\u0027s details in full in a new window.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"sk2001git"},"content":"Commands that involved viewing will extend `ViewCommand` instead of the `Command` class. All of them are returned as `ViewCommand` to ensure toggling of the UI after command is executed.    ","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":290,"author":{"gitId":"sk2001git"},"content":"Pros: Arguably a more OOP approach since all commands that trigger view IS-A `ViewCommand`.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"sk2001git"},"content":"Cons: You cannot implement any command that does not involve viewing but inherits from any command that is a children of `ViewCommand`.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":293,"author":{"gitId":"sk2001git"},"content":"An example could be trying to create identical commands that does not toggle the UI after execution. This would require duplication of the exact same command code but inheriting from `Command` instead of `ViewCommand`.","lastModifiedDate":"2023-10-25"},{"lineNumber":294,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":295,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"AriellaCallista"},"content":"### Search feature","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"AriellaCallista"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"AriellaCallista"},"content":"The search feature is implemented using the `SearchCommand` class. It extends `Command` and overrides the `execute()` method to","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"AriellaCallista"},"content":"filter users by the specified parameters.","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"AriellaCallista"},"content":"The search parameters from the user input are parsed using the parse method in the `SearchCommandParser` class. `SearchCommandParser::Parse`","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"AriellaCallista"},"content":"takes in the search parameters from the user input and combines them into a list of predicates. This list of predicates is then ","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"AriellaCallista"},"content":"passed as an argument to the `SearchCommand` constructor and the method returns a `SearchCommand` instance with the associated list of predicates.","lastModifiedDate":"2023-10-27"},{"lineNumber":306,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":307,"author":{"gitId":"AriellaCallista"},"content":"Currently, the search parameters could belong to any of the three following categories: `Name`, `Status`, and `Tag`. Prefixes","lastModifiedDate":"2023-10-27"},{"lineNumber":308,"author":{"gitId":"AriellaCallista"},"content":"`n/`, `st/` and `t/` are used to denote the category of the search parameters respectively. E.g. `search n/alex st/interviewed t/swe`","lastModifiedDate":"2023-10-27"},{"lineNumber":309,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":310,"author":{"gitId":"AriellaCallista"},"content":"The list of predicates is a list comprising predicate objects whose classes implement the `Predicate` class in Java.","lastModifiedDate":"2023-10-27"},{"lineNumber":311,"author":{"gitId":"AriellaCallista"},"content":"Each category has its own predicate class i.e. `NameContainsKeywordPredicate`, `StatusContainsKeywordPredicate`, `TagContainsKeywordPredicate`","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"AriellaCallista"},"content":"and each class overrides the `test` method which returns true if the persons list contains any of the given names/status/tags.","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"AriellaCallista"},"content":"Finally, the execute method in `SearchCommand` class invokes the `updateFilteredPersonList(predicatesList)` which will ","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"AriellaCallista"},"content":"update the list of persons displayed.","lastModifiedDate":"2023-10-27"},{"lineNumber":316,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":317,"author":{"gitId":"AriellaCallista"},"content":"Given below is an example usage scenario and how the search mechanism behaves at each step.","lastModifiedDate":"2023-10-27"},{"lineNumber":318,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":319,"author":{"gitId":"AriellaCallista"},"content":"Step 1. The user launches the application.","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":321,"author":{"gitId":"AriellaCallista"},"content":"Step 2. The user executes `search n/john st/offered t/swe` command to filter candidates having the name john,","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"AriellaCallista"},"content":"offered status and tagged as swe. ","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"AriellaCallista"},"content":"The following sequence diagram shows how the search operation works:","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"AriellaCallista"},"content":"**Note:** The lifeline for `SearchCommand` and `SearchCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"AriellaCallista"},"content":"\u003cpuml src\u003d\"diagrams/SearchSequenceDiagram.puml\" alt\u003d\"SearchSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"AriellaCallista"},"content":"Step 3. The user should see the UI below upon entering `search n/john st/interviewed t/friends`.","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"AriellaCallista"},"content":"![View](images/search.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"AriellaCallista"},"content":"**Note:** The current implementation of search allows users to search by any of the categories individually or by different combinations of the categories.","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"AriellaCallista"},"content":"It also allows users to specify more than one search parameter for each category e.g. `search n/alex bernice`","lastModifiedDate":"2023-10-27"},{"lineNumber":336,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":367,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":374,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":377,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"sk2001git"},"content":"* has a need to manage a significant number of candidates contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":450,"author":{"gitId":"sk2001git"},"content":"* wants to view and manage candidates information in a single place","lastModifiedDate":"2023-10-04"},{"lineNumber":451,"author":{"gitId":"sk2001git"},"content":"* wants to filter and sort candidates based on their skills, experience, or application date","lastModifiedDate":"2023-10-04"},{"lineNumber":452,"author":{"gitId":"sk2001git"},"content":"* wants to compare candidates using their information","lastModifiedDate":"2023-10-04"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":456,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"sk2001git"},"content":"**Value proposition**:","lastModifiedDate":"2023-10-04"},{"lineNumber":459,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":460,"author":{"gitId":"sk2001git"},"content":"JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-04"},{"lineNumber":461,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":462,"author":{"gitId":"sk2001git"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc.","lastModifiedDate":"2023-10-04"},{"lineNumber":463,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":464,"author":{"gitId":"sk2001git"},"content":"It serves as a one-stop addressbook for managing job applications.","lastModifiedDate":"2023-10-04"},{"lineNumber":465,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":466,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                                                                                                                  | So that I can…​                                                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"sk2001git"},"content":"|---------|------------------|-------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-04"},{"lineNumber":475,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | add a candidate\u0027s contact information, including name, email, phone number                                                    | I can easily access and reach out to candidates when needed                                              |","lastModifiedDate":"2023-10-04"},{"lineNumber":476,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | add notes and comments to candidate profiles to document interview feedback and impressions                                   | I can maintain a record of interactions and feedback                                                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":477,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | delete job applicants information                                                                                             | I can remove redundant/unecessary data bloat and also to abide to privacy laws                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":478,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | view a specific job applicant\u0027s resume or portfolio                                                                           | I can check whether they meet the requirements requested by other department heads                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":479,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | search for all job applicants that have a particular skill mentioned in their application                                     | I can find suitable candidates for a project                                                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":480,"author":{"gitId":"sk2001git"},"content":"| `* * *` | Hiring Manager   | List all candidate\u0027s information                                                                                              | I can easily view each candidates information                                                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":481,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | update the application status for a candidate (e.g. \"Interviewed\", \"Rejected\", \"Offered\")                                     | I can keep track of each candidate\u0027s progress in the hiring process                                      |","lastModifiedDate":"2023-10-04"},{"lineNumber":482,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | filter candidates based on their skills, experience, or application date                                                      | I can efficiently evaluate compare candidates                                                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":483,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | compare candidates that I am handling using the information i have stored such as that comparing CAP, Years of experience etc | so that I can choose the best candidates to the next stage of the hiring process                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":484,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | collate job applicants who were rejected but have potential for other positions in the company                                | I can forward this data to other departments who might need it                                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":485,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | collate job applicants who were offered the job and accepted it as well as deleting their details from JABPro                 | I can send this data to the HR department that manages existing employees                                |","lastModifiedDate":"2023-10-04"},{"lineNumber":486,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | collate job applicants who were offered the job but rejected it                                                               | I can contact them to ask why they rejected the offer and get feedback                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":487,"author":{"gitId":"sk2001git"},"content":"| `* * `  | Hiring Manager   | add candidates key features into a multi-formatted form                                                                       | I can have a visual way to objectively view a candidates skills and information                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":488,"author":{"gitId":"sk2001git"},"content":"| `*` | Hiring Manager   | easily get summary statistics such as total offers given out, rejections, cost associated with total offers                   | I can have a summary overview without going into each candidate data specifically                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":489,"author":{"gitId":"sk2001git"},"content":"| `*` | Hiring Manager   | get data on which positions are lacking job applicants                                                                        | I can update the external recruitment team to focus on head hunting applicants for these roles           |","lastModifiedDate":"2023-10-04"},{"lineNumber":490,"author":{"gitId":"sk2001git"},"content":"| `*` | Hiring Manager   | get data on which positions already have too many applicants                                                                  | I can forward this to the department heads to see if they still want to keep the job posting or close it |","lastModifiedDate":"2023-10-04"},{"lineNumber":491,"author":{"gitId":"sk2001git"},"content":"| `*` | Hiring Manager   | get a visual alert or a section to display urgent task                                                                        | I can stay organized and ensure that remain up to date and on task with the hiring process               |","lastModifiedDate":"2023-10-04"},{"lineNumber":492,"author":{"gitId":"ScarletBlanks"},"content":"| `*` | Hiring Manager   | export candidate information and application data to a spreadsheet        \u003cbr/\u003e                                               | I can perform further analysis using alternate tools on candidate data                                   |","lastModifiedDate":"2023-10-26"},{"lineNumber":493,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"AriellaCallista"},"content":"(For all use cases below, the **System** is the `JABPro` and the **Actor** is the `hiring manager`, unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"ketweeen"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-10-06"},{"lineNumber":500,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":501,"author":{"gitId":"sk2001git"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":502,"author":{"gitId":"ketweeen"},"content":"1. User requests to add a person.","lastModifiedDate":"2023-10-06"},{"lineNumber":503,"author":{"gitId":"ketweeen"},"content":"2. JABPro shows that command has been executed successfully.","lastModifiedDate":"2023-10-06"},{"lineNumber":504,"author":{"gitId":"ketweeen"},"content":"3. JABPro adds the person to the list of persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":505,"author":{"gitId":"sk2001git"},"content":"4. JABPro shows the person added at the end of the list of persons.   ","lastModifiedDate":"2023-10-26"},{"lineNumber":506,"author":{"gitId":"sk2001git"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":507,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":508,"author":{"gitId":"sk2001git"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":509,"author":{"gitId":"ketweeen"},"content":"* 2a. User does not provide the correct information for a person to be added.","lastModifiedDate":"2023-10-06"},{"lineNumber":510,"author":{"gitId":"ketweeen"},"content":"    * 2a1. JABPro shows an error message and provides course of action for remedy.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":511,"author":{"gitId":"ketweeen"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":512,"author":{"gitId":"ketweeen"},"content":"* 2b. User has already been added to the list of persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":513,"author":{"gitId":"ketweeen"},"content":"    * 2b1. JABPro shows an error message and provides course of action for remedy.   ","lastModifiedDate":"2023-10-06"},{"lineNumber":514,"author":{"gitId":"ketweeen"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":515,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":516,"author":{"gitId":"ketweeen"},"content":"**Use case: Add a remark to a person**","lastModifiedDate":"2023-10-06"},{"lineNumber":517,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":518,"author":{"gitId":"sk2001git"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":519,"author":{"gitId":"ketweeen"},"content":"1. User requests to add a remark to a person.","lastModifiedDate":"2023-10-06"},{"lineNumber":520,"author":{"gitId":"ketweeen"},"content":"2. JABPro shows that command has been executed successfully.","lastModifiedDate":"2023-10-06"},{"lineNumber":521,"author":{"gitId":"ketweeen"},"content":"3. JABPro adds the remark to the person.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":522,"author":{"gitId":"ketweeen"},"content":"Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":523,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":524,"author":{"gitId":"sk2001git"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":525,"author":{"gitId":"ketweeen"},"content":"* 2a. User provides invalid index.","lastModifiedDate":"2023-10-06"},{"lineNumber":526,"author":{"gitId":"ketweeen"},"content":"    * 2a1. JABPro shows an error message and provides course of action for remedy.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":527,"author":{"gitId":"ketweeen"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":528,"author":{"gitId":"ketweeen"},"content":"* 2b. User does not provide a remark.","lastModifiedDate":"2023-10-06"},{"lineNumber":529,"author":{"gitId":"ketweeen"},"content":"    * 2b1. JABPro adds an empty remark to the person, remark no longer seen.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":530,"author":{"gitId":"ketweeen"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":531,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":532,"author":{"gitId":"ketweeen"},"content":"**Use case: List all persons**","lastModifiedDate":"2023-10-06"},{"lineNumber":533,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":534,"author":{"gitId":"AriellaCallista"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":535,"author":{"gitId":"ketweeen"},"content":"1. User  requests to view a list of all persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":536,"author":{"gitId":"ketweeen"},"content":"2. JABPro retrieves the list of all persons from the database.","lastModifiedDate":"2023-10-06"},{"lineNumber":537,"author":{"gitId":"ketweeen"},"content":"3. JABPro displays the list of all persons to the user.","lastModifiedDate":"2023-10-06"},{"lineNumber":538,"author":{"gitId":"ketweeen"},"content":"4. If the user specifies an attribute to sort by, e.g., \"s/name\" for sorting by name, the application sorts the list accordingly. If no attribute is provided, the list remains unsorted.","lastModifiedDate":"2023-10-06"},{"lineNumber":539,"author":{"gitId":"ketweeen"},"content":"5. The sorted or unsorted list is displayed to the user in ascending order based on the specified attribute.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":540,"author":{"gitId":"ketweeen"},"content":"Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":541,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":542,"author":{"gitId":"ketweeen"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":543,"author":{"gitId":"ketweeen"},"content":"* 2a. User provides an incorrect attribute for sorting (e.g., \"list s/phone\").","lastModifiedDate":"2023-10-06"},{"lineNumber":544,"author":{"gitId":"ketweeen"},"content":"  * 2a1. JABPro shows an error message and provides course of action for remedy.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":545,"author":{"gitId":"ketweeen"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":546,"author":{"gitId":"ketweeen"},"content":"* 2b. User attempts to list persons when there are no entries in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":547,"author":{"gitId":"ketweeen"},"content":"  * 2b1. JABPro shows a message indicating that there are no persons to display.   ","lastModifiedDate":"2023-10-06"},{"lineNumber":548,"author":{"gitId":"ketweeen"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":549,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":550,"author":{"gitId":"AriellaCallista"},"content":"**Use case: Search persons by the specified categories(name, status and/ tag)**","lastModifiedDate":"2023-10-27"},{"lineNumber":551,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":552,"author":{"gitId":"ketweeen"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":553,"author":{"gitId":"AriellaCallista"},"content":"1.  Hiring manager types in search parameters to search users by the specified categories.","lastModifiedDate":"2023-10-27"},{"lineNumber":554,"author":{"gitId":"AriellaCallista"},"content":"2.  JABPro shows a list of persons whose profile matches the given parameters.","lastModifiedDate":"2023-10-27"},{"lineNumber":555,"author":{"gitId":"AriellaCallista"},"content":"Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":556,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":557,"author":{"gitId":"AriellaCallista"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":558,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":559,"author":{"gitId":"AriellaCallista"},"content":"* 1a. The given name/status/tag parameter is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":560,"author":{"gitId":"AriellaCallista"},"content":"    * 1a1. JABPro shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":561,"author":{"gitId":"AriellaCallista"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":562,"author":{"gitId":"ketweeen"},"content":"* 2a. The list is empty. \u003cbr/\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":563,"author":{"gitId":"AriellaCallista"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":564,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":566,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"ketweeen"},"content":"1. User requests to list persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":570,"author":{"gitId":"ketweeen"},"content":"2. AddressBook shows a list of persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":571,"author":{"gitId":"ketweeen"},"content":"3. User requests to delete a specific person in the list by providing either the person\u0027s index or tags.","lastModifiedDate":"2023-10-27"},{"lineNumber":572,"author":{"gitId":"ketweeen"},"content":"4. AddressBook deletes the specified person(s).   ","lastModifiedDate":"2023-10-27"},{"lineNumber":573,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"ScarletBlanks"},"content":"    * 2a1. AddressBook displays a message indicating that the list is empty.   ","lastModifiedDate":"2023-10-05"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"ScarletBlanks"},"content":"    * 3a1. AddressBook shows an error message indicating that the specified index is invalid.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":581,"author":{"gitId":"ScarletBlanks"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":582,"author":{"gitId":"ketweeen"},"content":"* 3b. The given tags do not match any persons. ","lastModifiedDate":"2023-10-27"},{"lineNumber":583,"author":{"gitId":"ketweeen"},"content":"    * 3b1. AddressBook shows an error message indicating that no persons with the specified tags were found.  ","lastModifiedDate":"2023-10-27"},{"lineNumber":584,"author":{"gitId":"ketweeen"},"content":"    Use case resumes at step 3","lastModifiedDate":"2023-10-27"},{"lineNumber":585,"author":{"gitId":"ScarletBlanks"},"content":"* 4a. Deletion encounters an error","lastModifiedDate":"2023-10-05"},{"lineNumber":586,"author":{"gitId":"ScarletBlanks"},"content":"    * 4a1. AddressBook displays an error message indicating that the deletion process failed.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":587,"author":{"gitId":"ScarletBlanks"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":589,"author":{"gitId":"ScarletBlanks"},"content":"**Use case: Set a person\u0027s status**","lastModifiedDate":"2023-10-05"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":591,"author":{"gitId":"ScarletBlanks"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":592,"author":{"gitId":"ketweeen"},"content":"1.  User requests to list persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":593,"author":{"gitId":"ketweeen"},"content":"2.  AddressBook shows a list of persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":594,"author":{"gitId":"ketweeen"},"content":"3.  User requests to set the status of a specific person in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":595,"author":{"gitId":"ketweeen"},"content":"4.  AddressBook sets the status of that person in the list.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":598,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":599,"author":{"gitId":"ScarletBlanks"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":600,"author":{"gitId":"ScarletBlanks"},"content":"    * 2a1. AddressBook displays a message indicating that the list is empty.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":601,"author":{"gitId":"ScarletBlanks"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":602,"author":{"gitId":"ScarletBlanks"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":603,"author":{"gitId":"ScarletBlanks"},"content":"    * 3a1. AddressBook shows an error message indicating that the specified index is invalid.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":604,"author":{"gitId":"ScarletBlanks"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":605,"author":{"gitId":"ScarletBlanks"},"content":"* 3b. The given status is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":606,"author":{"gitId":"ScarletBlanks"},"content":"    * 3b1. AddressBook shows an error message indicating that the specified status is invalid.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":607,"author":{"gitId":"ScarletBlanks"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"sk2001git"},"content":"**Use case: View a person\u0027s details**","lastModifiedDate":"2023-10-25"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":611,"author":{"gitId":"sk2001git"},"content":"**MSS**","lastModifiedDate":"2023-10-25"},{"lineNumber":612,"author":{"gitId":"sk2001git"},"content":"1.  User requests to list persons.","lastModifiedDate":"2023-10-25"},{"lineNumber":613,"author":{"gitId":"sk2001git"},"content":"2.  AddressBook shows a list of persons.","lastModifiedDate":"2023-10-25"},{"lineNumber":614,"author":{"gitId":"sk2001git"},"content":"3.  User requests to view a specific person in the current displayed AddressBook.","lastModifiedDate":"2023-10-26"},{"lineNumber":615,"author":{"gitId":"sk2001git"},"content":"4.  The UI shows the details of that person.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":616,"author":{"gitId":"sk2001git"},"content":"    Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":617,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":618,"author":{"gitId":"sk2001git"},"content":"**Extensions**","lastModifiedDate":"2023-10-25"},{"lineNumber":619,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-25"},{"lineNumber":620,"author":{"gitId":"sk2001git"},"content":"    * 2a1. AddressBook displays a message indicating that the list is empty.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":621,"author":{"gitId":"sk2001git"},"content":"      Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":622,"author":{"gitId":"sk2001git"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":623,"author":{"gitId":"sk2001git"},"content":"    * 3a1. AddressBook shows an error message indicating that the specified index is invalid.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":624,"author":{"gitId":"sk2001git"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-25"},{"lineNumber":625,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":626,"author":{"gitId":"sk2001git"},"content":"* 3b. User decides to search for a person based on a criteria such as name.","lastModifiedDate":"2023-10-26"},{"lineNumber":627,"author":{"gitId":"sk2001git"},"content":"    * 3b1. Displayed AddressBook changes to match that of search result.  ","lastModifiedDate":"2023-10-26"},{"lineNumber":628,"author":{"gitId":"sk2001git"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-26"},{"lineNumber":629,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":630,"author":{"gitId":"ScarletBlanks"},"content":"**Use case: Export the current data to excel**","lastModifiedDate":"2023-10-26"},{"lineNumber":631,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":632,"author":{"gitId":"ScarletBlanks"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":633,"author":{"gitId":"ScarletBlanks"},"content":"1.  User requests to export persons.","lastModifiedDate":"2023-10-26"},{"lineNumber":634,"author":{"gitId":"ScarletBlanks"},"content":"2.  JABPro exports the list of persons to a .csv file.","lastModifiedDate":"2023-10-26"},{"lineNumber":635,"author":{"gitId":"ScarletBlanks"},"content":"    Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":636,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":637,"author":{"gitId":"ScarletBlanks"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":638,"author":{"gitId":"ScarletBlanks"},"content":"* 2a. The .csv file to edit is open","lastModifiedDate":"2023-10-26"},{"lineNumber":639,"author":{"gitId":"ScarletBlanks"},"content":"    * 2a1. AddressBook displays a message indicating that we cannot write to it as it is open.","lastModifiedDate":"2023-10-26"},{"lineNumber":640,"author":{"gitId":"ScarletBlanks"},"content":"      Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":641,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":642,"author":{"gitId":"MadLamprey"},"content":"**Use case: Add social profile to person\u0027s details**","lastModifiedDate":"2023-10-06"},{"lineNumber":643,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":644,"author":{"gitId":"MadLamprey"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":645,"author":{"gitId":"ketweeen"},"content":"1. User requests to add social profile (linkedin or github).","lastModifiedDate":"2023-10-27"},{"lineNumber":646,"author":{"gitId":"ketweeen"},"content":"2. JABPro shows that command has been executed successfully.","lastModifiedDate":"2023-10-27"},{"lineNumber":647,"author":{"gitId":"ketweeen"},"content":"3. JABPro adds the social profile to the person\u0027s existing details in the list.  ","lastModifiedDate":"2023-10-27"},{"lineNumber":648,"author":{"gitId":"MadLamprey"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":649,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":650,"author":{"gitId":"MadLamprey"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":651,"author":{"gitId":"MadLamprey"},"content":"* 2a. User does not provide valid information for the person.","lastModifiedDate":"2023-10-06"},{"lineNumber":652,"author":{"gitId":"MadLamprey"},"content":"    * 2a1. JABPro displays error message.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":653,"author":{"gitId":"MadLamprey"},"content":"      Use case resumes at Step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":654,"author":{"gitId":"MadLamprey"},"content":"* 2b. User requests to add social profile other than LinkedIn or Github","lastModifiedDate":"2023-10-06"},{"lineNumber":655,"author":{"gitId":"MadLamprey"},"content":"    * 2b1. JABPro displays error message.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":656,"author":{"gitId":"MadLamprey"},"content":"      Use case resumes at Step 1.","lastModifiedDate":"2023-10-06"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":658,"author":{"gitId":"MadLamprey"},"content":"**Use case: Open social profile for a person**","lastModifiedDate":"2023-10-06"},{"lineNumber":659,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":660,"author":{"gitId":"MadLamprey"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":661,"author":{"gitId":"ketweeen"},"content":"1. User requests to open social profile for a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":662,"author":{"gitId":"ketweeen"},"content":"2. JABPro shows that command has been executed successfully.","lastModifiedDate":"2023-10-27"},{"lineNumber":663,"author":{"gitId":"ketweeen"},"content":"3. JABPro redirects to the webpage of the corresponding profile.  ","lastModifiedDate":"2023-10-27"},{"lineNumber":664,"author":{"gitId":"MadLamprey"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":665,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":666,"author":{"gitId":"MadLamprey"},"content":"**Extension**","lastModifiedDate":"2023-10-06"},{"lineNumber":667,"author":{"gitId":"MadLamprey"},"content":"* 1a. Person does not exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":668,"author":{"gitId":"MadLamprey"},"content":"    * 1a1. JABPro displays error message.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":669,"author":{"gitId":"MadLamprey"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":670,"author":{"gitId":"ketweeen"},"content":"* 1b. Social profile requested other than LinkedIn or Github.","lastModifiedDate":"2023-10-27"},{"lineNumber":671,"author":{"gitId":"MadLamprey"},"content":"    * 1b1. JABPro displays error message.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":672,"author":{"gitId":"MadLamprey"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":673,"author":{"gitId":"ketweeen"},"content":"* 3a. User does not exist on the social platform.  ","lastModifiedDate":"2023-10-27"},{"lineNumber":674,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":676,"author":{"gitId":"MadLamprey"},"content":"**Use case: Add events relating to candidates**","lastModifiedDate":"2023-10-26"},{"lineNumber":677,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":678,"author":{"gitId":"MadLamprey"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":679,"author":{"gitId":"MadLamprey"},"content":"1. User requests to add an event relating to a candidate","lastModifiedDate":"2023-10-26"},{"lineNumber":680,"author":{"gitId":"MadLamprey"},"content":"2. JABPro shows that command has been executed successfully.","lastModifiedDate":"2023-10-26"},{"lineNumber":681,"author":{"gitId":"MadLamprey"},"content":"3. JABPro adds the event to the list of events.","lastModifiedDate":"2023-10-26"},{"lineNumber":682,"author":{"gitId":"MadLamprey"},"content":"   Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":684,"author":{"gitId":"MadLamprey"},"content":"**Extension**","lastModifiedDate":"2023-10-26"},{"lineNumber":685,"author":{"gitId":"MadLamprey"},"content":"* 2a. User does not provide the correct information for an event to be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":686,"author":{"gitId":"MadLamprey"},"content":"  * 2a1. JABPro shows an error message anf provides course of action for remedy. Use case resumes at step 1.","lastModifiedDate":"2023-10-26"},{"lineNumber":687,"author":{"gitId":"MadLamprey"},"content":"* 2b. Event has already been added to the list of events.","lastModifiedDate":"2023-10-26"},{"lineNumber":688,"author":{"gitId":"MadLamprey"},"content":"  * 2b1. JABPro shows an error message and provides course of action for remedy. Use case resumes at step 1.","lastModifiedDate":"2023-10-26"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":691,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"sk2001git"},"content":"2.  Should be able to `hold up to 1000 persons` without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-04"},{"lineNumber":697,"author":{"gitId":"sk2001git"},"content":"3.  A user with above `average typing speed for regular English text` (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-04"},{"lineNumber":698,"author":{"gitId":"sk2001git"},"content":"4.  System should respond within a `reasonable amount of time` (e.g. \u003c 2 second) for typical usage (e.g. listing 1000 persons).","lastModifiedDate":"2023-10-04"},{"lineNumber":699,"author":{"gitId":"sk2001git"},"content":"5.  Should not deal with `external database` or `network connections`.","lastModifiedDate":"2023-10-04"},{"lineNumber":700,"author":{"gitId":"sk2001git"},"content":"6.  Product is expected to be used by a `single user` only.","lastModifiedDate":"2023-10-04"},{"lineNumber":701,"author":{"gitId":"sk2001git"},"content":"7.  Product is `not expected to contain API` for other software to communicate with.","lastModifiedDate":"2023-10-04"},{"lineNumber":702,"author":{"gitId":"sk2001git"},"content":"8.  Product is expected to be used in a system with at least 4GB RAM and `1GB free disk space`.","lastModifiedDate":"2023-10-04"},{"lineNumber":703,"author":{"gitId":"sk2001git"},"content":"9.  Product Visuals should be `unambiguous` and clear to the user","lastModifiedDate":"2023-10-04"},{"lineNumber":704,"author":{"gitId":"sk2001git"},"content":"10. Commands should be `easy to remember` and `intuitive` to use","lastModifiedDate":"2023-10-04"},{"lineNumber":705,"author":{"gitId":"sk2001git"},"content":"11. Product should be `consistent` in its visuals and commands formatting","lastModifiedDate":"2023-10-04"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"sk2001git"},"content":"* **Hiring Manager**: Inter-changable with users in this context","lastModifiedDate":"2023-10-04"},{"lineNumber":713,"author":{"gitId":"AriellaCallista"},"content":"* **Candidate**: Inter-changable with persons/job applicants in this context","lastModifiedDate":"2023-10-05"},{"lineNumber":714,"author":{"gitId":"sk2001git"},"content":"* **AddressBook**: Inter-changable with JABPro in this context since this is an evolve project built on-top of AB3 functionality","lastModifiedDate":"2023-10-04"},{"lineNumber":715,"author":{"gitId":"AriellaCallista"},"content":"* **Keyword**: Search parameter","lastModifiedDate":"2023-10-05"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":725,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":726,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":772,"author":{"gitId":"sk2001git"},"content":"## Adding a person while all persons are being shown ","lastModifiedDate":"2023-10-26"},{"lineNumber":773,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":774,"author":{"gitId":"sk2001git"},"content":"1. Adding a person while all persons are being shown  ","lastModifiedDate":"2023-10-26"},{"lineNumber":775,"author":{"gitId":"sk2001git"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":776,"author":{"gitId":"sk2001git"},"content":"    ","lastModifiedDate":"2023-10-26"},{"lineNumber":777,"author":{"gitId":"sk2001git"},"content":"   1. Test case:   ","lastModifiedDate":"2023-10-26"},{"lineNumber":778,"author":{"gitId":"sk2001git"},"content":"      `add n/John Poh p/98765432 e/johnpoe@gmail.com a/ 311, Clementi Ave 2, #02-25 r/ 2 years of experience in software development`  ","lastModifiedDate":"2023-10-26"},{"lineNumber":779,"author":{"gitId":"sk2001git"},"content":"   ","lastModifiedDate":"2023-10-26"},{"lineNumber":780,"author":{"gitId":"sk2001git"},"content":"      **Note**:  The current AddressBook cannot contain anyone named `John Poh`  ","lastModifiedDate":"2023-10-26"},{"lineNumber":781,"author":{"gitId":"sk2001git"},"content":"      Expected: New person is added to the list. Details of the new person shown in the status message. ","lastModifiedDate":"2023-10-26"},{"lineNumber":782,"author":{"gitId":"sk2001git"},"content":"   2. Test case:   ","lastModifiedDate":"2023-10-26"},{"lineNumber":783,"author":{"gitId":"sk2001git"},"content":"      `add n/John Poh p/98765432 e/johnpoe@gmail.com a/ 311, Clementi Ave 2, #02-25 r/ 2 years of experience in software development`  ","lastModifiedDate":"2023-10-26"},{"lineNumber":784,"author":{"gitId":"sk2001git"},"content":"      **Note**:  The current AddressBook should contain a person named `John Poh`","lastModifiedDate":"2023-10-26"},{"lineNumber":785,"author":{"gitId":"sk2001git"},"content":"      Expected: No person is added. Error details shown in the status message. List of persons remains the same.","lastModifiedDate":"2023-10-26"},{"lineNumber":786,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":787,"author":{"gitId":"sk2001git"},"content":"   ","lastModifiedDate":"2023-10-26"},{"lineNumber":788,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"sk2001git":154,"ScarletBlanks":27,"AriellaCallista":62,"ketweeen":60,"MadLamprey":108,"-":377}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"# JABPro User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"## Product Overview","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"JobApplicationsBook Pro (JABPro) is a **desktop app for hiring managers of companies to ease the management of applicants, optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, JABPro can get your applicant management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"2. Download the latest `jabpro.jar` from [here](https://github.com/AY2324S1-CS2103T-W09-4/tp/releases).","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your JabPro.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar jabpro.jar` command to run the application.\u003cbr\u003e  ","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e  ","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"5. Type the command in the command box and press Enter to execute it.\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`: adds an applicant with the specified contact details","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    * `remark 1 r/Great attitude, hardworking`: edits the remark of the 1st person on the list to have a remark `Great attitude, hardworking`","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    * `search n/John`: Searches for applicants whose names contain the keyword `John`","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"    * `set` : sets the applicant status to either of: (Preliminary, Interviewed, Rejected, Offered)","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    * `add linkedin 1 alexyeoh`: Adds LinkedIn account to candidate\u0027s existing contact information","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"    * `github Alex Yeoh`: Redirects the user to the Github account of the candidate","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"* When using parentheses ( ) with items separated by the slash symbol /, at least one item must be included. \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"  e.g in the command `search (n/KEYWORD [MORE KEYWORDS] / st/KEYWORD [MORE KEYWORDS] / t/KEYWORD [MORE KEYWORDS])`, it is necessary to specify at least one search category.","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"**Tip:** A person can have any number of tags (including 0)!","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"### Adding a remark to a person: `remark`","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"ketweeen"},"content":"Edits a remark to an existing person to the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"Format: `remark INDEX r/REMARK`","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"* Edits the remark for the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"ketweeen"},"content":"* The previous remark is not saved, and instead is replaced by the inputted remark. The command does not add to the existing remark.","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"ketweeen"},"content":"* You can empty out a remark by inputting an empty string.","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"ketweeen"},"content":"*  `remark 1 r/Great attitude, hardworking` Edits the remark of the 1st person on the list to have a remark `Great attitude, hardworking`.","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"*  `remark 1 r/` Empties the remark of the 1st person.","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"ketweeen"},"content":"### Viewing a person\u0027s details: `view`","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"ketweeen"},"content":"Creates a complete view for details of a person in the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"ketweeen"},"content":"Format: `view INDEX`","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"ketweeen"},"content":"* Shows the complete details of the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"ketweeen"},"content":"* The index used will be the same as the index used in the `list` command.","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"ketweeen"},"content":"* Compatible with search and other features that change the order and content of the list.","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"ketweeen"},"content":"Examples:","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"* `view 1` Shows the complete details of the 1st person on the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"**Tip:** Other operations that affect user\u0027s data will trigger a refresh of the view.","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"ketweeen"},"content":"These include `add`, `edit`, `set`, `remark`, `addL`, `addG`. ","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"sk2001git"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"ketweeen"},"content":"### Adding Github/LinkedIn username for a user: `addG` or `addL`","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"ketweeen"},"content":"Adds the username for their social profile [LinkedIn/Github] to the existing contact details of users.","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"ketweeen"},"content":"Format: `addL INDEX u/USERNAME` or `addG INDEX u/USERNAME`","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"MadLamprey"},"content":"* User is expected to enter a valid username for the specified social profile, and an account must exist","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"MadLamprey"},"content":"* The username gets added as an attribute to the existing details of a candidate","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"ketweeen"},"content":"* `addG 2 u/MadLamprey`","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"ketweeen"},"content":"* `addL 4 u/aditya-misra`","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"ketweeen"},"content":"### Opening user LinkedIn or GitHub account: `linkedin` or `github`","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"ketweeen"},"content":"Redirect user to candidate\u0027s LinkedIn or Github account.","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"ketweeen"},"content":"Format: `linkedin INDEX` or `github INDEX`","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"MadLamprey"},"content":"* Browser window opens, showing the profile","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"MadLamprey"},"content":"* If the user has not provided a valid username for the corresponding social profile, an appropriate message is displayed on the interface of the social profile (JABPro does not perform error handling for this case).","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"ketweeen"},"content":"* `linkedin 1`","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"ketweeen"},"content":"* `github 2`","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"ketweeen"},"content":"Format: `list so/ATTRIBUTE`","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"ketweeen"},"content":"* `so/ATTRIBUTE` is completely **optional**, on default will NOT be sorted.","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"ketweeen"},"content":"* As of v1.2, the attributes that are supported are `name` and `email`.","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"ketweeen"},"content":"* Attribute is case-insensitive: `list so/NAME` and `list so/name` return the same result.","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"ketweeen"},"content":"* The result will be sorted in **ascending** order.","lastModifiedDate":"2023-10-05"},{"lineNumber":175,"author":{"gitId":"ketweeen"},"content":"* Note: as of v1.2, the sorting algorithm is case-sensitive, which means it will treat uppercase and ","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"ketweeen"},"content":"lowercase letters as distinct. This may result in names being sorted as A B C a b c, rather than A a B b C c.","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":178,"author":{"gitId":"ketweeen"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":179,"author":{"gitId":"ketweeen"},"content":"* `list` Shows a list of all persons.","lastModifiedDate":"2023-10-05"},{"lineNumber":180,"author":{"gitId":"ketweeen"},"content":"* `list s/name` Show a list of all persons, sorted by name in ascending order.","lastModifiedDate":"2023-10-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"AriellaCallista"},"content":"### Search job applicants by category: `search`","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"AriellaCallista"},"content":"Finds job applicants whose profiles match the specified categories\u0027 keywords. The search categories are: name, status, tag.","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"AriellaCallista"},"content":"Format: `search (n/KEYWORD [MORE KEYWORDS] / st/KEYWORD [MORE KEYWORDS] / t/KEYWORD [MORE KEYWORDS])`","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"AriellaCallista"},"content":"#### Search job applicants by name","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"AriellaCallista"},"content":"Finds job applicants whose names contain the given keywords.","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"AriellaCallista"},"content":"Format: `search n/KEYWORD [MORE KEYWORDS]`","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"AriellaCallista"},"content":"* Keywords are case-insensitive: `search n/Josh` and `search n/josh` return the same result.","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"AriellaCallista"},"content":"* Keyword has to be a string that does not contain any non-alpha numeric characters.","lastModifiedDate":"2023-10-03"},{"lineNumber":213,"author":{"gitId":"ketweeen"},"content":"* The order of the keywords does not matter. e.g. `Josh Peck` will match `Peck Josh`.","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"ketweeen"},"content":"* Only full words will be matched e.g. `Jo` will not match `Josh`.","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"AriellaCallista"},"content":"* Applicants matching at least one keyword will be returned (i.e. `OR` search)","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"ketweeen"},"content":"  e.g. `Josh Peck` will return `Josh Gad`, `Josh Job`.","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"AriellaCallista"},"content":"* `search n/John` returns `john` and `John Doe`","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"AriellaCallista"},"content":"* `search n/david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"AriellaCallista"},"content":"#### Search job applicants by status","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"ketweeen"},"content":"Finds job applicants whose status match any of the given keywords.","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":226,"author":{"gitId":"AriellaCallista"},"content":"Format: `search st/KEYWORD [MORE KEYWORDS]`","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"AriellaCallista"},"content":"* Keywords can only be from the following list: `Preliminary`, `Interviewed`, `Rejected`, `Offered`","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"AriellaCallista"},"content":"  e.g. `search st/interviewing` will give an error.","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"AriellaCallista"},"content":"* Keywords are case-insensitive: `search st/interviewed` and `search st/INTERVIEWED` return the same result.","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"AriellaCallista"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"AriellaCallista"},"content":"* `search st/interviewed`","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"AriellaCallista"},"content":"#### Search job applicants by tag","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"AriellaCallista"},"content":"Finds job applicants whose tag(s) match any of the given tag keywords","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"AriellaCallista"},"content":"Format: `search t/KEYWORD [MORE KEYWORDS]`","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":241,"author":{"gitId":"AriellaCallista"},"content":"* Keywords are case-insensitive: `search t/hardworking\u0027 and `search t/HARDWORKING` return the same result.","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":243,"author":{"gitId":"AriellaCallista"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"AriellaCallista"},"content":"* `search t/hardworking`","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"AriellaCallista"},"content":"#### Notes for advanced users:","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"AriellaCallista"},"content":"* You can combine the search categories (e.g. `search n/Alex st/offered t/software engineer`) in a single search command.","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"AriellaCallista"},"content":"* Each search category can be used at most once in a single search command","lastModifiedDate":"2023-10-03"},{"lineNumber":249,"author":{"gitId":"AriellaCallista"},"content":"  e.g. `search n/Alex n/Adam st/rejected` is not allowed.","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"AriellaCallista"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"AriellaCallista"},"content":"* `search n/Alex Bernice st/interviewed rejected t/analyst` will output applicants whose:","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"AriellaCallista"},"content":"    * names contain either Alex `or` Bernice","lastModifiedDate":"2023-10-03"},{"lineNumber":254,"author":{"gitId":"AriellaCallista"},"content":"    * `and` status is either interviewed `or` rejected.","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"AriellaCallista"},"content":"    * `and` has a tag `analyst`","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"ketweeen"},"content":"Deletes the specified job applicants from the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"ketweeen"},"content":"Format: `delete INDEX` or `delete t/TAG`","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"ketweeen"},"content":"* Delete by index","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  * Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  * The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  * The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"ketweeen"},"content":"* Delete by tags","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"ketweeen"},"content":"  * Deletes all persons who have the specified TAG or a combination of tags. ","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"ketweeen"},"content":"  * The tag(s) must be prefixed with t/.","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"ScarletBlanks"},"content":"### Setting an applicant\u0027s status : `set`","lastModifiedDate":"2023-10-05"},{"lineNumber":276,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":277,"author":{"gitId":"ScarletBlanks"},"content":"Format: `set INDEX STATUS`","lastModifiedDate":"2023-10-05"},{"lineNumber":278,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":279,"author":{"gitId":"ScarletBlanks"},"content":"Sets the applicant to a specific status (\"Preliminary\"/ \"Interviewed\"/ \"Rejected\"/ \"Offered\")","lastModifiedDate":"2023-10-05"},{"lineNumber":280,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":281,"author":{"gitId":"ScarletBlanks"},"content":"* Sets the person at the specified `INDEX` to a specific hiring status.","lastModifiedDate":"2023-10-05"},{"lineNumber":282,"author":{"gitId":"ScarletBlanks"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-05"},{"lineNumber":283,"author":{"gitId":"ScarletBlanks"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-05"},{"lineNumber":284,"author":{"gitId":"ScarletBlanks"},"content":"* The status must be a string of exactly \"Preliminary\", \"Interviewed\", \"Rejected\" or \"Offered\".","lastModifiedDate":"2023-10-05"},{"lineNumber":285,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":286,"author":{"gitId":"ScarletBlanks"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":287,"author":{"gitId":"ScarletBlanks"},"content":"* `list` followed by `set 2 Interviewed` sets the 2nd person in the address book to \"Interviewed\".","lastModifiedDate":"2023-10-05"},{"lineNumber":288,"author":{"gitId":"ScarletBlanks"},"content":"* `find Betsy` followed by `set 1 Interviewed` sets the status of 1st person in the results of the `find` command.","lastModifiedDate":"2023-10-05"},{"lineNumber":289,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":290,"author":{"gitId":"MadLamprey"},"content":"### Adding an Event: `event`","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"MadLamprey"},"content":"Adds an event to JABPro.","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"MadLamprey"},"content":"Format: `event INDEX d/DESCRIPTION bt/BEGIN_TIME et/END_TIME`","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"MadLamprey"},"content":"* `BEGIN_TIME` and `END_TIME` must be in the format `yyyy-MM-dd HH:mm`","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"MadLamprey"},"content":"* Event gets added to the current list of events, and also gets written to the `eventbook.json` file","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"MadLamprey"},"content":"Example:","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"MadLamprey"},"content":"* `event 1 d/Interview bt/2023-10-27 18:00 et/2023-10-27 21:00` adds an event to the list, and stores the name of the person the event is associated with, the description, start time and end time, in a JSON file.","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"MadLamprey"},"content":"### Viewing events: `schedule`","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"MadLamprey"},"content":"Displays all events that have been added to JABPro.","lastModifiedDate":"2023-10-26"},{"lineNumber":305,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"MadLamprey"},"content":"Format: `schedule`","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"MadLamprey"},"content":"* Opens the `Events` window, which can also be accessed by clicking on `Events \u003e Event` in the menu bar","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"MadLamprey"},"content":"Example:","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"MadLamprey"},"content":"* First, entering `event 1 d/Interview bt/2023-10-27 18:00 et/2023-10-27 21:00` adds the event, and entering `schedule` displays this event in a separate window, titled `Events`","lastModifiedDate":"2023-10-26"},{"lineNumber":312,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"ScarletBlanks"},"content":"### Exporting all entries : `export`","lastModifiedDate":"2023-10-26"},{"lineNumber":320,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":321,"author":{"gitId":"ScarletBlanks"},"content":"Exports the entries into a .csv file","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"ScarletBlanks"},"content":"Format: `export`","lastModifiedDate":"2023-10-26"},{"lineNumber":324,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":341,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":342,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":345,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"-"},"content":" Action                   | Format, Examples                                                                                                                                               ","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"AriellaCallista"},"content":"--------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-27"},{"lineNumber":369,"author":{"gitId":"-"},"content":" **Add**                  | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` ","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"sk2001git"},"content":" **Remark**               | `remark r/REMARK` \u003cbr\u003e e.g., `remark 1 r/Great attitude, hardworking`                                                                                          ","lastModifiedDate":"2023-10-03"},{"lineNumber":371,"author":{"gitId":"ketweeen"},"content":" **View**                 | `view INDEX` \u003cbr\u003e e.g., `view 1`                                                                                                                               ","lastModifiedDate":"2023-10-20"},{"lineNumber":372,"author":{"gitId":"ketweeen"},"content":" **Add Github/LinkedIn**  | `addL INDEX u/USERNAME` or `addG INDEX u/USERNAME` e.g., `addL 1 u/alex-yeoh`, `addG 2 u/bernicesanders123`                                                    ","lastModifiedDate":"2023-10-20"},{"lineNumber":373,"author":{"gitId":"ketweeen"},"content":" **Open Github/LinkedIn** | `linkedin INDEX` or `github INDEX` e.g., `linkedin 1`, `github 2`                                                                                              ","lastModifiedDate":"2023-10-20"},{"lineNumber":374,"author":{"gitId":"-"},"content":" **Clear**                | `clear`                                                                                                                                                        ","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":" **Delete**               | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                            ","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"ScarletBlanks"},"content":" **Set**                  | `set INDEX STATUS`\u003cbr\u003e e.g., `set 2 Interviewed`                                                                                                               ","lastModifiedDate":"2023-10-05"},{"lineNumber":377,"author":{"gitId":"-"},"content":" **Edit**                 | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                    ","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"AriellaCallista"},"content":" **Search**               | `search (n/KEYWORD [MORE KEYWORDS] / st/KEYWORD [MORE KEYWORDS] / t/KEYWORD [MORE KEYWORDS])` \u003cbr\u003e e.g., `search n/alex`","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"AriellaCallista"},"content":" **List**                 | `list s/ATTRIBUTE` \u003cbr\u003e e.g. `list s/name`    `hello`                                                                                                                 ","lastModifiedDate":"2023-10-27"},{"lineNumber":380,"author":{"gitId":"ScarletBlanks"},"content":" **Export**               | `export`                                                                                                                                                       ","lastModifiedDate":"2023-10-26"},{"lineNumber":381,"author":{"gitId":"-"},"content":" **Help**                 | `help`                                                                                                                                                         ","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":384,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"sk2001git":21,"ScarletBlanks":25,"AriellaCallista":62,"ketweeen":59,"MadLamprey":32,"-":186}},{"path":"docs/diagrams/AddGSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"participant \":AddGCommandParser\" as AddGCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"participant \"a:AddGCommand\" as AddGCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"[-\u003e LogicManager : execute(\"addG 1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addG 1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"create AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser -\u003e AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"activate AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"AddGCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"deactivate AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser -\u003e AddGCommandParser : parse(\"1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"activate AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"create AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"AddGCommandParser -\u003e AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"activate AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"AddGCommand --\u003e AddGCommandParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"deactivate AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"AddGCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"deactivate AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"AddGCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"destroy AddGCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"LogicManager -\u003e AddGCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"activate AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"AddGCommand -\u003e Model : addGithub(1, \"alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"Model --\u003e AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"AddGCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"CommandResult --\u003e AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"AddGCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"deactivate AddGCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"MadLamprey":70}},{"path":"docs/diagrams/AddLSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"participant \":AddLCommandParser\" as AddLCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"participant \"a:AddLCommand\" as AddLCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"[-\u003e LogicManager : execute(\"addL 1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addL 1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"create AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser -\u003e AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"activate AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"AddLCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"deactivate AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser -\u003e AddLCommandParser : parse(\"1 u/alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"activate AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"create AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"AddLCommandParser -\u003e AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"activate AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"AddLCommand --\u003e AddLCommandParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"deactivate AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"AddLCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"deactivate AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"AddLCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"destroy AddLCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"LogicManager -\u003e AddLCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"activate AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"AddLCommand -\u003e Model : addLinkedIn(1, \"alexyeoh\")","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"Model --\u003e AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"AddLCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"CommandResult --\u003e AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"AddLCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"deactivate AddLCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"MadLamprey":70}},{"path":"docs/diagrams/SearchSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"participant \":SearchCommandParser\" as SearchCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"participant \"f:SearchCommand\" as SearchCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"[-\u003e LogicManager : execute(\"search st/offered\")","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"search st/offered\")","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"create SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"AddressBookParser -\u003e SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"activate SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"SearchCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"deactivate SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"AddressBookParser -\u003e SearchCommandParser : parse(\"search st/offered\")","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"activate SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"create SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"SearchCommandParser -\u003e SearchCommand : searchCommand(predicatesList)","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"activate SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"SearchCommand --\u003e SearchCommandParser : f","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"deactivate SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"SearchCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"deactivate SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"SearchCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"destroy SearchCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"LogicManager -\u003e SearchCommand  : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"activate SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"SearchCommand -\u003e Model : updateFilteredPersonList(predicatesList)","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"Model --\u003e SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"SearchCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"CommandResult --\u003e SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"SearchCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"deactivate SearchCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"AriellaCallista":76}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"Class PersonListInformationPanel","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"MainWindow *-down-\u003e \"1\" PersonListInformationPanel","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"PersonListInformationPanel --|\u003e UiPart","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"PersonListInformationPanel ..\u003e Model","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sk2001git":7,"-":60}},{"path":"docs/diagrams/ViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"participant \"v:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"activate MainWindow","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"MainWindow -\u003e LogicManager : execute(\"view 1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"view 1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"create ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"AddressBookParser -\u003e ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"ViewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"AddressBookParser -\u003e ViewCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"create ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"ViewCommandParser -\u003e ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"activate ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"ViewCommand --\u003e ViewCommandParser : v","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"ViewCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"ViewCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"destroy ViewCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"LogicManager -\u003e ViewCommand  : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"activate ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"ViewCommand -\u003e Model : setLastViewedPersonIndex(1)","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"Model --\u003e ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"CommandResult --\u003e ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"ViewCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"LogicManager --\u003e MainWindow : result","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"MainWindow --\u003e MainWindow : handleView()","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"destroy ViewCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"sk2001git":85}},{"path":"docs/team/ariellacallista.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"title: \"Ariella Callista\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"# Project: JABPRO","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc. It serves as a one-stop addressbook for job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dariellacallista\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"**Enhancement implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"**Contribution to the UG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"**Contribution to DG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"* Contributed to DG for non-functional requirements","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"**Contribution to team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"* Keeping track of deadlines and objectives:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"**Review/mentoring contributions**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"**Contributions beyond the project team**:","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"AriellaCallista":25}},{"path":"docs/team/ketweeen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"title: \"Catherine Liang\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"# Project: JABPRO","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"## Overview JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc. It serves as a one-stop addressbook for job applications.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dketweeen\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"**Enhancement implemented**:","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"**Contribution to the UG**:","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"**Contribution to DG**:","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"* Contributed to DG for non-functional requirements","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"**Contribution to team-based tasks**:","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"* Keeping track of deadlines and objectives:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"**Review/mentoring contributions**:","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"**Contributions beyond the project team**:","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"ketweeen":24}},{"path":"docs/team/madlamprey.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"layout: default.md","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"title: \"Misra Aditya\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"# Project: JABPRO","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc. It serves as a one-stop addressbook for job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dmadlamprey\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"**Enhancement implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"**Contribution to the UG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"**Contribution to DG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"* Contributed to DG for non-functional requirements","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"**Contribution to team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"* Keeping track of deadlines and objectives","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"**Review/mentoring contributions**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"**Contributions beyond the project team**:","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"MadLamprey":26}},{"path":"docs/team/scarletblanks.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"title: \"Peng Tat\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"# Project: JABPRO","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"## Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc. It serves as a one-stop addressbook for job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dScarletBlanks\u0026tabRepo\u003dAY2324S1-CS2103T-W09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse) ","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"**Enhancement implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"**Contribution to the UG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"**Contribution to DG**:* Contributed to DG for non-functional requirements","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"**Contribution to team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"* Keeping track of deadlines and objectives*:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"  **Code quality: Looks after code quality, ensures adherence to coding standards, etc.s**:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"  **Contributions beyond the project team**:*","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"ScarletBlanks":18}},{"path":"docs/team/sk2001git.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"title: \"Sean Koh\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"# Project: JABPRO","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"JABPro aims to solve the problem of HR managers having to sort through tons of job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"It makes their life easier by allowing them to easily fetch important info about job applicants such as their contact details, application status etc. It serves as a one-stop addressbook for job applications.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsk2001git\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dsk2001git\u0026tabRepo\u003dAY2324S1-CS2103T-W09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"**Enhancement implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"* Remark command","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"**Contribution to the UG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"* Updated UG for the `remark\u0027 command","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"**Contribution to DG**:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"* Contributed to DG for writing in User Stories for week 7","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"* Contributed to DG for non-functional requirements","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"* Contributed to DG for glossary","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"* Contributed to DG for use cases regarding add and remark features","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"**Contribution to team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"* Keeping track of deadlines and objectives","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"* Seperating tasks into workable units for team members each week","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"**Review/mentoring contributions**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"* Generally main reviewer for PR contributions, requests changes when necessary and not always approving","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"**Contributions beyond the project team**:","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"*","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"### Contributions to Developer Guide(Extracts)","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"### Contributions to User Guide(Extracts)","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"Adding a remark to a person: `remark`","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"Edits a remark to an existing person to the address book","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"Format: `remark INDEX r/REMARK`","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"* Edits the remark for the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"* The previous remark is not saved, and instead is replaced by the inputted remark. The command does not add to the existing remark","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"* You can empty out a remark by inputting an empty string","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"*  `remark 1 r/Great attitude, hardworking` Edits the remark of the 1st person on the list to have a remark `Great attitude, hardworking`","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"*  `remark 1 r/` Empties the remark of the 1st person.","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"**Remark** | `remark r/REMARK` \u003cbr\u003e e.g., `remark 1 r/Great attitude, hardworking`","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"sk2001git":58}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 0, true);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AriellaCallista":1,"-":185}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"     * Returns the default index. The default index is created with a value of","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"     * Integer.MAX_VALUE.","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"     * @return The default index with a value of Integer.MAX_VALUE.","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"    public static Index getDefaultIndex() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"        return new Index((Integer.MAX_VALUE));","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"     * Checks if the index is present. An index is considered present if its value","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"     * is not equal to Integer.MAX_VALUE.","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"     * @return {@code true} if the index is present; {@code false} otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"    public boolean isPresent() {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"        return zeroBasedIndex !\u003d Integer.MAX_VALUE;","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ketweeen":20,"-":69}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"     * Returns true if {@code s} represents a non-negative integer","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"     * @param s string to be checked","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"     * @return true if {@code s} represents a non-negative integer","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"    public static boolean isNonNegativeInteger(String s) {","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sk2001git":16,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"     * Returns the last viewed person index.","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"    Index getLastViewedPersonIndex();","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sk2001git":8,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"    public Index getLastViewedPersonIndex() {","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        return model.getLastViewedPersonIndex();","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sk2001git":11,"-":88}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    private Index index;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        index \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":7,"-":83}},{"path":"src/main/java/seedu/address/logic/commands/AddGCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * Adds GitHub account to candidates existing details.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"public class AddGCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public static final String COMMAND_WORD \u003d \"addG\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds Github to details of a candidate. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            + \"Parameters: \" + \"[\" + COMMAND_WORD + \" \u003cUSERID\u003e \u003cUSERNAME\u003e]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 alexyeoh\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Github account added for: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private final Github username;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"     * Creates an AddG Command to add Github.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     * @param index","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     * @param username","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    public AddGCommand(Index index, Github username) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        personToEdit.setGithub(username);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(generateSuccessMessage(personToEdit), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"     * the username is added to or removed from","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        String message \u003d !username.value.isEmpty() ? MESSAGE_SUCCESS : \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"        return String.format(message, personToEdit.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof AddGCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand otherAddGCommand \u003d (AddGCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"        return this.index.equals(otherAddGCommand.index) \u0026\u0026 this.username.equals(otherAddGCommand.username);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        return new ToStringBuilder(this).add(\"index\", index).add(\"username\", username).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"sk2001git":2,"MadLamprey":86}},{"path":"src/main/java/seedu/address/logic/commands/AddLCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * Adds LinkedIn account to candidate\u0027s existing details.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"public class AddLCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public static final String COMMAND_WORD \u003d \"addL\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds LinkedIn to details of a candidate. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"            + \"Parameters: \" + \"[\" + COMMAND_WORD + \" \u003cUSERID\u003e \u003cUSERNAME\u003e]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 alexyeoh\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"LinkedIn account added for: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private final LinkedIn username;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"     * Creates an AddL command to add LinkedIn.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"     * @param index","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"     * @param username","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"    public AddLCommand(Index index, LinkedIn username) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        personToEdit.setLinkedIn(username);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"        model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(generateSuccessMessage(personToEdit), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"     * the username is added to or removed from","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"        String message \u003d !username.value.isEmpty() ? MESSAGE_SUCCESS : \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        return String.format(message, personToEdit.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof AddLCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand otherAddLCommand \u003d (AddLCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        return this.index.equals(otherAddLCommand.index) \u0026\u0026 this.username.equals(otherAddLCommand.username);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"        return new ToStringBuilder(this).add(\"index\", index).add(\"username\", username).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"sk2001git":2,"MadLamprey":85}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    private final boolean isView;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isView) {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        this.isView \u003d isView;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"     * @param feedbackToUser feedback to user","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"     * @param isView whether to show the view","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"    public CommandResult(String feedbackToUser, boolean isView) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        this(feedbackToUser, false, false, isView);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"     * Returns true if the command result is to show the view.","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"     * @return  true if the command result is to show the view","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    public boolean isView() {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        return isView;","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 isView \u003d\u003d otherCommandResult.isView;","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, isView);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"                .add(\"isView\", isView)","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":27,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":" * Deletes a person identified using its displayed index or tags from the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"            + \": Deletes the person identified by the index number (or tags) used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"            + \"Parameters: INDEX (must be a positive integer) or \" + PREFIX_TAG + \"TAG [MORE_TAGS]...\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"            + \"Example (Delete by index): \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"            + \"Example (Delete by tags): \" + COMMAND_WORD + \" \" + PREFIX_TAG + \"friends \" + PREFIX_TAG + \"colleague\";","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    public static final String MESSAGE_PERSONS_NOT_FOUND \u003d \"No persons with the specified tags found.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"    public static final String MESSAGE_NO_INDEX_OR_TAGS \u003d \"You must specify either an index or tags to delete.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    private Index targetIndex \u003d Index.getDefaultIndex();","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"    private Set\u003cTag\u003e targetTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"    public DeleteCommand(Set\u003cTag\u003e tagsIndex) {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"        this.targetTags \u003d tagsIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"        // Delete by index","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"        if (targetIndex.isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"        // Delete by tags","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"        if (!targetTags.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"            List\u003cPerson\u003e personsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"            for (Person person : lastShownList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"                for (Tag tag : targetTags) {","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"                    if (person.getTags().contains(tag) \u0026\u0026 !personsToDelete.contains(person)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"                        personsToDelete.add(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"                    }","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"            if (personsToDelete.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"                throw new CommandException(MESSAGE_PERSONS_NOT_FOUND);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"            for (Person person : personsToDelete) {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"                model.deletePerson(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personsToDelete.size() \u003d\u003d 1","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"                    ? Messages.format(personsToDelete.get(0)) : personsToDelete.size() + \" persons\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"        throw new CommandException(MESSAGE_NO_INDEX_OR_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex) \u0026\u0026 targetTags.equals(otherDeleteCommand.targetTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"ketweeen"},"content":"        ToStringBuilder stringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"ketweeen"},"content":"        if (targetIndex.isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"ketweeen"},"content":"            return stringBuilder.add(\"targetIndex\", targetIndex).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"ketweeen"},"content":"        if (!targetTags.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"ketweeen"},"content":"            return stringBuilder.add(\"targetTags\", targetTags).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"ketweeen"},"content":"        return stringBuilder.add(\"invalid\", \"No valid target specified\").toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ketweeen":55,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"            + \"[\" + PREFIX_SCORE + \"SCORE] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark();","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"        Person editedPerson \u003d new Person(updatedName, updatedPhone,","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"                updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"        editedPerson.setScore(editPersonDescriptor.getScore().orElse(personToEdit.getScore()));","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"        return editedPerson;","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"sk2001git"},"content":"        private Score score;","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"sk2001git"},"content":"            setScore(toCopy.score);","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"sk2001git"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, score, tags);","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"sk2001git"},"content":"        public void setScore(Score score) {","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"sk2001git"},"content":"            this.score \u003d score;","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"sk2001git"},"content":"        public Optional\u003cScore\u003e getScore() {","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"sk2001git"},"content":"            return Optional.ofNullable(score);","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":247,"author":{"gitId":"sk2001git"},"content":"                    \u0026\u0026 Objects.equals(score, otherEditPersonDescriptor.score)","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":258,"author":{"gitId":"sk2001git"},"content":"                    .add(\"score\", score)","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"sk2001git":25,"-":238}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"sk2001git":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":" * Exports the current dataset into Excel (.csv) format -- into the /data folder","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exports the current address book to Excel format \"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"            + \"export\";","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sucessfully Exported\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"    private String defaulltPath \u003d \"data/export.csv\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"     * Empty constructor,","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"    public ExportCommand() {}","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"     * Uses escape quotations to specify a string as a string","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"     * @param str","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"     * @return","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"    public String treatAsString(String str) {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"        return \"\\\"\" + str + \"\\\"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"     * Appends the persons to a StringBuilder","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"     * @param model the model in use","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"     * @return returns the StringBuilder containing all the data of Persons","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"    public StringBuilder appendPersons(Model model) {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Name,Phone,Email,Address,Tags,LinkedIn,Github,Remark,Status\\n\");","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"        for (Person p : model.getAddressBook().getPersonList()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"            String name \u003d treatAsString(p.getName().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"            String phone \u003d treatAsString(p.getPhone().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"            String email \u003d treatAsString(p.getEmail().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"            String address \u003d treatAsString(p.getAddress().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"            String tags \u003d treatAsString(p.getTags().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"            String linkedIn \u003d treatAsString(p.getLinkedIn().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"            String github \u003d treatAsString(p.getGithub().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"            String remark \u003d treatAsString(p.getRemark().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"            String status \u003d treatAsString(p.getStatus().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"            sb.append(name)","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(phone)","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(email)","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(address)","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(tags)","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(linkedIn)","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(github)","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(remark)","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\",\").append(status)","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"        return sb;","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"        try (FileWriter writer \u003d new FileWriter(defaulltPath)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"            writer.append(appendPersons(model));","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"ScarletBlanks"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"            throw new CommandException(\"Error exporting data: \" + e.getMessage());","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"     * Checks if the other command is an equivalent ExportCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"     * @param other the other object to be compared","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"        return other instanceof ExportCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"        return \"ExportCommand\";","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ScarletBlanks":101}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    public static final String COMMAND_WORD \u003d \"search\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Searches users by categories (e.g. name, status, tags)\"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"            + \" whose details match the given keywords (case-insensitive) \"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alex bernice st/interviewed t/software engineer\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    private final List\u003cPredicate\u003cPerson\u003e\u003e predicatesList;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * Creates an FindCommand to find the specified {@code Person}","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    public FindCommand(List\u003cPredicate\u003cPerson\u003e\u003e predicatesList) {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        this.predicatesList \u003d predicatesList;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        model.updateFilteredPersonList(predicatesList);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        Boolean isListEqual \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e otherPredicates \u003d otherFindCommand.predicatesList;","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"        if (predicatesList.size() !\u003d otherPredicates.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"        for (int i \u003d 0; i \u003c predicatesList.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"            isListEqual \u003d predicatesList.get(i).equals(otherPredicates.get(i));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"        return isListEqual;","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"                .add(\"predicates list\", predicatesList)","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"AriellaCallista":30,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/GithubCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.awt.Desktop;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.net.URI;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * Redirects user to the Github account of a specific candidates.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"public class GithubCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    public static final String COMMAND_WORD \u003d \"github\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Redirects to user\u0027s Github account. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            + \"Parameters: \" + \"[\" + COMMAND_WORD + \" \u003cUSERID\u003e]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redirecting to Github ...\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    public GithubCommand(Index index) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        String username \u003d personToEdit.getGithub().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        String githubUrl \u003d \"https://github.com/\" + username;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"            Desktop.getDesktop().browse(new URI(githubUrl));","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":51}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/LinkedInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import java.awt.Desktop;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import java.net.URI;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":" * Redirects the user to the LinkedIn account of a specific candidate.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"public class LinkedInCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"    public static final String COMMAND_WORD \u003d \"linkedin\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Redirects to user\u0027s LinkedIn account. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"            + \"Parameters: \" + \"[\" + COMMAND_WORD + \" \u003cUSERID\u003e]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redirecting to LinkedIn ...\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    public LinkedInCommand(Index index) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        String username \u003d personToEdit.getLinkedIn().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"        String linkedInUrl \u003d \"https://www.linkedin.com/in/\" + username;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"            Desktop.getDesktop().browse(new URI(linkedInUrl));","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":51}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all persons. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"            + \"Parameters: [so/ATTRIBUTE]\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"            + \"Optional: ATTRIBUTE can be \u0027name\u0027 or other attributes for sorting.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_SORT + \"name\";","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"    public static final Comparator\u003cPerson\u003e DEFAULT_COMPARATOR \u003d (person1, person2) -\u003e 0; // Comparator that does nothing","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    private final Comparator\u003cPerson\u003e sortingComparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"     * Creates a ListCommand with the specified sorting comparator.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"     * @param sortingComparator The comparator to be used for sorting the person list.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"    public ListCommand(Comparator\u003cPerson\u003e sortingComparator) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"        this.sortingComparator \u003d sortingComparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"     * Gets the sorting comparator currently set for sorting the list of persons.","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"     * @return The comparator used for sorting the list.","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"    public Comparator\u003cPerson\u003e getSortingComparator() {","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"        return sortingComparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"        model.sortPersonList(sortingComparator);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ketweeen":29,"-":25}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import java.util.List;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.parser.RemarkSyntaxHandler;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    private final Index index;","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    private final Remark remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    private final boolean isKeepRemark;","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        this.isKeepRemark \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"     * @param isKeepRemark whether to keep the old remark","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"    public RemarkCommand(Index index, Remark remark, boolean isKeepRemark) {","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        this.isKeepRemark \u003d isKeepRemark;","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"        Remark newRemark \u003d remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"        if (isKeepRemark) {","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"            Remark currentRemark \u003d personToEdit.getRemark();","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"            newRemark \u003d RemarkSyntaxHandler.generateKeepRemarkCommand(remark.value, currentRemark);","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"                personToEdit.getAddress(), newRemark, personToEdit.getTags());","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-09-25"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson), true);","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"        return String.format(message, Messages.format(personToEdit));","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-09-25"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 remark.equals(e.remark) \u0026\u0026 isKeepRemark \u003d\u003d e.isKeepRemark;","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"sk2001git":117}},{"path":"src/main/java/seedu/address/logic/commands/SetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":" * Sets the status of a person in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"public class SetCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String MESSAGE_SET_PERSON_SUCCESS \u003d \"SET Person: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String COMMAND_WORD \u003d \"set\";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"            + \": Sets the status of a person. \" + \"Parameters: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"            + \"[\" + COMMAND_WORD + \" \u003cUSERID\u003e \u003cSTATUS\u003e]...\\n\" + \"Example: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"            + COMMAND_WORD + \" 5 Interviewed\";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Status set for: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    private final StatusTypes newStatus;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    private final Index index;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates a SetCommand to set the status of the person at the specified target index.","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"     * @param index     The index of the person to set the status.","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"     * @param newStatus The new status to set.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"    public SetCommand(Index index, StatusTypes newStatus) {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"        requireNonNull(newStatus);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"        this.newStatus \u003d newStatus;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"        personToEdit.getStatus().setStatusType(newStatus);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(String.format(MESSAGE_SET_PERSON_SUCCESS, Messages.format(personToEdit)), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"                .add(\"targetIndex\", index)","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"                .add(\"newStatus\", newStatus)","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"    public boolean equals(SetCommand this, SetCommand other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"        return this.index.equals(other.index) \u0026\u0026 this.newStatus.equals(other.newStatus);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"sk2001git":2,"ScarletBlanks":77}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":" * Views a person identified using it\u0027s last displayed index from the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"            + \": Views the details of the person identified \"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"            + \"by the index number used in the last person listing. \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"            + \"Parameters: INDEX (must be a positive integer) \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_SUCCESSFUL_VIEW \u003d \"Full-view shown for  Person: %1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    private final Index index;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"     * Constructor for ViewCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"     * @param index of the person in the filtered person list to view","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        model.setLastViewedPersonIndex(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        Person personToView \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        return new CommandResult(generateSuccessMessage(personToView), true);","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"     * Generates a command execution success message for viewing {@code personToView}.","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    private String generateSuccessMessage(Person personToView) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        return String.format(MESSAGE_SUCCESSFUL_VIEW, Messages.format(personToView));","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"        ViewCommand v \u003d (ViewCommand) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        return index.equals(v.index);","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"sk2001git":71}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        Remark remark \u003d new Remark(\"\");","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"sk2001git":3,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/AddGCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddGCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":" * Parses input arguments and creates a new AddLCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"public class AddGCommandParser implements Parser\u003cAddGCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"     * Parses the given {@code String} of arguments in the context of the AddLCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"     * and returns an AddLCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public AddGCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, PREFIX_USERNAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"            index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        String username \u003d argMultiMap.getValue(PREFIX_USERNAME).orElse(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        return new AddGCommand(index, new Github(username));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":39}},{"path":"src/main/java/seedu/address/logic/parser/AddLCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddLCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":" * Parses input arguments and creates a new AddLCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"public class AddLCommandParser implements Parser\u003cAddLCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"     * Parses the given {@code String} of arguments in the context of the AddLCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"     * and returns an AddLCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public AddLCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, PREFIX_USERNAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"            index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        String username \u003d argMultiMap.getValue(PREFIX_USERNAME).orElse(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        return new AddLCommand(index, new LinkedIn(username));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":38}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddGCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddLCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.GithubCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.LinkedInCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"        case AddLCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"            return new AddLCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"MadLamprey"},"content":"        case AddGCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"MadLamprey"},"content":"            return new AddGCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"        case LinkedInCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"            return new LinkedInCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"        case GithubCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"            return new GithubCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"ScarletBlanks"},"content":"        case SetCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"ScarletBlanks"},"content":"            return new SetCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"ScarletBlanks"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"ScarletBlanks"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":7,"ScarletBlanks":9,"ketweeen":1,"MadLamprey":16,"-":85}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"    public static final Prefix PREFIX_VIEW \u003d new Prefix(\"v/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    public static final Prefix PREFIX_SORT \u003d new Prefix(\"so/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"st/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public static final Prefix PREFIX_USERNAME \u003d new Prefix(\"u/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    public static final Prefix PREFIX_SCORE \u003d new Prefix(\"sc/\");","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sk2001git":4,"ketweeen":2,"MadLamprey":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"        // Check if the input contains the tag prefix","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"            try {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"                Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"                return new DeleteCommand(tagList);","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"        // If not a tag-based deletion, attempt to parse it as an index-based deletion","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ketweeen":18,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"                        PREFIX_ADDRESS, PREFIX_SCORE, PREFIX_TAG);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_SCORE);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        if (argMultimap.getValue(PREFIX_SCORE).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"            editPersonDescriptor.setScore(ParserUtil.parseScore(argMultimap.getValue(PREFIX_SCORE).get()));","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"sk2001git":7,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"public class ExportCommandParser implements Parser\u003cExportCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"     * Parses the given {@code String} of arguments in the context of the SetCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"     * and returns a SetCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    public ExportCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"        return new ExportCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ScarletBlanks":24}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cString\u003e nameKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cString\u003e statusKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cString\u003e tagKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        if (!(arePrefixesPresent(argMultimap, PREFIX_NAME) || arePrefixesPresent(argMultimap, PREFIX_STATUS)","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_TAG))","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"            setKeywords(nameKeywords, statusKeywords, tagKeywords, argMultimap, PREFIX_NAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_STATUS)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"            setKeywords(nameKeywords, statusKeywords, tagKeywords, argMultimap, PREFIX_STATUS);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"            setKeywords(nameKeywords, statusKeywords, tagKeywords, argMultimap, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(nameKeywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d new StatusContainsKeywordsPredicate(statusKeywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d new TagContainsKeywordsPredicate(tagKeywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"        return new FindCommand(getPredicatesList(nameKeywords, statusKeywords, tagKeywords,","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"                namePredicate, statusPredicate, tagPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"    private List\u003cPredicate\u003cPerson\u003e\u003e getPredicatesList(List\u003cString\u003e nameKeywords,","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"                                                      List\u003cString\u003e statusKeywords,","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"                                                      List\u003cString\u003e tagKeywords,","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"                                                      NameContainsKeywordsPredicate namePredicate,","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"                                                      StatusContainsKeywordsPredicate statusPredicate,","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"                                                      TagContainsKeywordsPredicate tagPredicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicatesList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"                if (!nameKeywords.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"                    add(namePredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"                if (!statusKeywords.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"                    add(statusPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"                if (!tagKeywords.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"                    add(tagPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"            }};","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"        return predicatesList;","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"    private void setKeywords(List\u003cString\u003e nameKeywords,","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"                             List\u003cString\u003e statusKeywords,","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"                             List\u003cString\u003e tagKeywords,","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"                             ArgumentMultimap argMultimap,","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"                             Prefix prefix) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"            List\u003cString\u003e keywords \u003d ParserUtil.parseSearchNameParams(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"                nameKeywords.add(keyword);","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"        if (prefix.equals(PREFIX_STATUS)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"            List\u003cString\u003e keywords \u003d ParserUtil.parseSearchStatusParams(argMultimap.getAllValues(PREFIX_STATUS));","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"                statusKeywords.add(keyword);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"        if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"            List\u003cString\u003e keywords \u003d ParserUtil.parseSearchTagParams(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"                tagKeywords.add(keyword);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"AriellaCallista":84,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/GithubCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.GithubCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":" * Parses input arguments and creates a new GithubCommand object.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"public class GithubCommandParser implements Parser\u003cGithubCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     * Parses the given {@code String} of arguments in the context of the GithubCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"     * and returns a GithubCommand object.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    public GithubCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"            return new GithubCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GithubCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":27}},{"path":"src/main/java/seedu/address/logic/parser/LinkedInCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.LinkedInCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":" * Parses input arguments and creates a new GithubCommand object.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"public class LinkedInCommandParser implements Parser\u003cLinkedInCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"     * Parses the given {@code String} of arguments in the context of the LinkedInCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"     * and returns a LinkedInCommand object.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    public LinkedInCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"            return new LinkedInCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkedInCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":27}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":" * Parses input arguments and creates a new ListCommand object with sorting options.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     * and returns an ListCommand object for execution.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_SORT);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        String sortingAttribute \u003d argMultimap.getValue(CliSyntax.PREFIX_SORT).orElse(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"        // Create the sorting comparator based on the sorting attribute","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"        Comparator\u003cPerson\u003e sortingComparator \u003d createSortingComparator(sortingAttribute);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"        return new ListCommand(sortingComparator);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"     * Creates a sorting comparator based on the specified sorting attribute.","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"     * @param sortingAttribute The attribute by which the list should be sorted (e.g., \"name\" or \"email\").","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"     * @return A comparator for sorting based on the specified attribute.","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"    private Comparator\u003cPerson\u003e createSortingComparator(String sortingAttribute) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"        if (\"name\".equalsIgnoreCase(sortingAttribute)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"            return Comparator.comparing(Person::getName);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"        } else if (\"email\".equalsIgnoreCase(sortingAttribute)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"            return Comparator.comparing(Person::getEmail);","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"            return ListCommand.DEFAULT_COMPARATOR; // A comparator that does nothing","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"sk2001git":1,"ketweeen":52}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"     * Parses a {@code String statusType} into a {@code StatusType}.","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"     * @throws ParseException if the given {@code statusType} is invalid.","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"    public static StatusTypes parseStatusType(String statusType) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"        requireNonNull(statusType);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"        String trimmedStatus \u003d statusType.trim().toLowerCase();","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"        if (!StatusTypes.isValidStatusType(trimmedStatus)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"            throw new ParseException(\"PLACEHOLDER: PARSE_EXCEPTION STATUS TYPE\");","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"        switch (trimmedStatus) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"        case \"interviewed\":","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"            return StatusTypes.INTERVIEWED;","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"        case \"offered\":","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"            return StatusTypes.OFFERED;","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"ScarletBlanks"},"content":"        case \"rejected\":","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"            return StatusTypes.REJECTED;","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"        case \"preliminary\":","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"            return StatusTypes.PRELIMINARY;","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"        default:","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"            throw new ParseException(\"e\");","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"AriellaCallista"},"content":"     * Parses {@code Collection\u003cString\u003e search status parameters} into a {@code List\u003cString\u003e of status}.","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"AriellaCallista"},"content":"    public static List\u003cString\u003e parseSearchStatusParams(Collection\u003cString\u003e statuses) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(statuses);","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"AriellaCallista"},"content":"        String[] statusArr \u003d parseSearchParams(statuses);","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"AriellaCallista"},"content":"        final List\u003cString\u003e statusList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"AriellaCallista"},"content":"        for (String status : statusArr) {","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"AriellaCallista"},"content":"            status \u003d status.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"AriellaCallista"},"content":"            if (!StatusTypes.isValidStatusType(status.toLowerCase())) {","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"AriellaCallista"},"content":"                throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"AriellaCallista"},"content":"            statusList.add(status);","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"AriellaCallista"},"content":"        return statusList;","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"AriellaCallista"},"content":"     * Parses {@code Collection\u003cString\u003e search name parameters} into a {@code List\u003cString\u003e of names}.","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"AriellaCallista"},"content":"    public static List\u003cString\u003e parseSearchNameParams(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"AriellaCallista"},"content":"        String[] nameArr \u003d parseSearchParams(names);","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"AriellaCallista"},"content":"        final List\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"AriellaCallista"},"content":"        for (String name : nameArr) {","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"AriellaCallista"},"content":"            name \u003d name.trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"AriellaCallista"},"content":"            if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"AriellaCallista"},"content":"                throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"AriellaCallista"},"content":"            nameList.add(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"AriellaCallista"},"content":"        return nameList;","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"AriellaCallista"},"content":"     * Parses {@code Collection\u003cString\u003e search tag parameters} into a {@code List\u003cString\u003e of tags}.","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"AriellaCallista"},"content":"    public static List\u003cString\u003e parseSearchTagParams(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"AriellaCallista"},"content":"        String[] tagArr \u003d parseSearchParams(tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"AriellaCallista"},"content":"        final List\u003cString\u003e tagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"AriellaCallista"},"content":"        for (String tag : tagArr) {","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"AriellaCallista"},"content":"            tag \u003d tag.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"AriellaCallista"},"content":"            if (!Tag.isValidTagName(tag)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"AriellaCallista"},"content":"                throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"AriellaCallista"},"content":"            tagList.add(tag);","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"AriellaCallista"},"content":"        return tagList;","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"AriellaCallista"},"content":"     * Parses a list of keywords into an array of strings.","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"AriellaCallista"},"content":"     * @param keywordsList A list of keywords, where each element may contain multiple words.","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"AriellaCallista"},"content":"     * @return An array of strings where each element represents an individual keyword.","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"AriellaCallista"},"content":"     * @throws ParseException if any of the search parameters contain non-alphanumeric characters e.g. commas","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"AriellaCallista"},"content":"     *     The method first converts the list of keywords into a string representation,","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"AriellaCallista"},"content":"     *     e.g., [Alex, Yeoh] (including square brackets). It then removes the square brackets","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"AriellaCallista"},"content":"     *     from the string representation, resulting in a cleaned string, e.g., Alex, Yeoh (no square brackets).","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"AriellaCallista"},"content":"     *     Finally, the cleaned string is split into an array of strings, where each word separated","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"AriellaCallista"},"content":"     *     by a whitespace or comma is considered a single element.","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"AriellaCallista"},"content":"     *     Example:","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"AriellaCallista"},"content":"     *     If keywordsList is [\"John Doe\"], the returned array will be [\"John\", \"Doe\"].","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"AriellaCallista"},"content":"    private static String[] parseSearchParams(Collection\u003cString\u003e keywordsList) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"AriellaCallista"},"content":"        String list \u003d keywordsList.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":232,"author":{"gitId":"AriellaCallista"},"content":"        String cleanedList \u003d list.replaceAll(\"[\\\\[\\\\]]\", \"\");","lastModifiedDate":"2023-10-19"},{"lineNumber":233,"author":{"gitId":"AriellaCallista"},"content":"        String[] searchParams \u003d cleanedList.split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"AriellaCallista"},"content":"        for (String searchParam : searchParams) {","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"AriellaCallista"},"content":"            Pattern pattern \u003d Pattern.compile(\"[^a-zA-Z0-9]\");","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"AriellaCallista"},"content":"            Matcher matcher \u003d pattern.matcher(searchParam);","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"AriellaCallista"},"content":"            if (matcher.find()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"AriellaCallista"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"AriellaCallista"},"content":"        return searchParams;","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":244,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"AriellaCallista"},"content":"     * Parses a {@code String score} into a {@code Score}.","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"sk2001git"},"content":"     * @param score String to be parsed","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"sk2001git"},"content":"     * @return Score object","lastModifiedDate":"2023-10-23"},{"lineNumber":249,"author":{"gitId":"sk2001git"},"content":"     * @throws ParseException if the given {@code score} is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"sk2001git"},"content":"    public static Score parseScore(String score) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(score);","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"sk2001git"},"content":"        String trimmedScore \u003d score.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"sk2001git"},"content":"        if (!StringUtil.isNonNegativeInteger(trimmedScore)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"sk2001git"},"content":"        return new Score(Integer.parseInt(trimmedScore));","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sk2001git":14,"ScarletBlanks":27,"AriellaCallista":93,"-":125}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        Index index;","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"        String remarkText \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        Remark remark \u003d new Remark(remarkText);","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        if (RemarkSyntaxHandler.isKeepRemark(args)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"            return new RemarkCommand(index, remark, true);","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"sk2001git":46}},{"path":"src/main/java/seedu/address/logic/parser/RemarkSyntaxHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":" * Parses special input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"public class RemarkSyntaxHandler {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"    public static final String REGEX_KEEP_REMARK \u003d \"\\\\*\\\\*REMARK\\\\*\\\\*\";","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"     * @param args the string to be parsed","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"     * @return true if the string contains the special syntax for keeping the remark","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    public static boolean isKeepRemark(String args) {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_KEEP_REMARK);","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"     * Generates a new remark based on the current remark and the special syntax **remark**","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"     * @param args the string to be parsed","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"     * @param currentRemark the current remark of the person","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"     * @return the new remark where **remark** is replaced by the current remark","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    public static Remark generateKeepRemarkCommand(String args, Remark currentRemark) {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        String resultString \u003d args.replaceAll(REGEX_KEEP_REMARK, currentRemark.value);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        return new Remark(resultString);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"sk2001git":44}},{"path":"src/main/java/seedu/address/logic/parser/SetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"public class SetCommandParser implements Parser\u003cSetCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"     * Parses the given {@code String} of arguments in the context of the SetCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     * and returns a SetCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    public SetCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"            String[] splitArgs \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"            if (splitArgs.length \u003c 2) {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"                throw new ParseException(SetCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"            StatusTypes newStatusType \u003d ParserUtil.parseStatusType((splitArgs[1]));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"            return new SetCommand(index, newStatusType);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"            throw new ParseException(SetCommand.MESSAGE_USAGE, e);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ScarletBlanks":39}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VIEW;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":" * Parses input arguments and creates a new {@code ViewCommand} object","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":" *","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code ViewCommand}","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"     * and returns a {@code ViewCommand} object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_VIEW);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        Index index;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"        return new ViewCommand(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"sk2001git":36}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"ketweeen"},"content":"     * Sorts the address book using the provided comparator.","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"     * @param comparator The comparator used to determine the sorting order.","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"    public void sortAddressBook(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"ketweeen"},"content":"        ObservableList\u003cPerson\u003e personObservableList \u003d getPersonList();","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"ketweeen"},"content":"        List\u003cPerson\u003e sortedList \u003d personObservableList.sorted(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"ketweeen"},"content":"        setPersons(sortedList);","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ketweeen":12,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"     * Updates the filter of the filtered person list to filter by all the given {@code predicates}.","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"     * @throws NullPointerException if any of the {@code predicatesList} is null.","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"    void updateFilteredPersonList(List\u003cPredicate\u003cPerson\u003e\u003e predicatesList);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"ketweeen"},"content":"     * Sorts the list of persons using the provided comparator.","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"ketweeen"},"content":"     * @param comparator The comparator used to determine the sorting order.","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"    void sortPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"     * Returns the Index of the last view command called.","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"    Index getLastViewedPersonIndex();","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"     * Sets the Index of the last view command called.","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"    void setLastViewedPersonIndex(Index index);","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sk2001git":10,"AriellaCallista":6,"ketweeen":11,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    private Index lastViewedPersonIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"AriellaCallista"},"content":"    public void updateFilteredPersonList(List\u003cPredicate\u003cPerson\u003e\u003e predicatesList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"AriellaCallista"},"content":"        requireNonNull(predicatesList);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"AriellaCallista"},"content":"        Predicate\u003cPerson\u003e combinedPredicate \u003d predicatesList.stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"AriellaCallista"},"content":"                .reduce(Predicate::and)","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"AriellaCallista"},"content":"                .orElse(person -\u003e true);","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"AriellaCallista"},"content":"        filteredPersons.setPredicate(combinedPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"ketweeen"},"content":"    public void sortPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"ketweeen"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"ketweeen"},"content":"        addressBook.sortAddressBook(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"sk2001git"},"content":"    public void setLastViewedPersonIndex(Index index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"sk2001git"},"content":"        lastViewedPersonIndex \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"sk2001git"},"content":"    public Index getLastViewedPersonIndex() {","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"sk2001git"},"content":"        return lastViewedPersonIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sk2001git":17,"AriellaCallista":9,"ketweeen":8,"-":148}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"public class Email implements Comparable\u003cEmail\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"    public int compareTo(Email other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"        return this.value.compareTo(other.value);","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ketweeen":6,"-":78}},{"path":"src/main/java/seedu/address/model/person/Github.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * Represents a person\u0027s Github details in JABPro.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class Github {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"     * Constructs a {@code Github}.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"     * @param github A valid Github username","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    public Github(String github) {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"        value \u003d github;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        return value !\u003d null ? value : \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof Github)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        Github otherGithub \u003d (Github) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        return value.equals(otherGithub.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"MadLamprey":37}},{"path":"src/main/java/seedu/address/model/person/LinkedIn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":" * Represents a person\u0027s LinkedIn details in JABPro.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"public class LinkedIn {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"     * Constructs a {@code LinkedIn}.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"     * @param linkedin","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    public LinkedIn(String linkedin) {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"        value \u003d linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        if (!(other instanceof LinkedIn)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"        LinkedIn otherLinkedIn \u003d (LinkedIn) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        return value.equals(otherLinkedIn.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"MadLamprey":37}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"    public int compareTo(Name other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"        return this.fullName.compareTo(other.fullName);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ketweeen":6,"-":66}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    private LinkedIn linkedIn \u003d new LinkedIn(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    private Github github \u003d new Github(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    private Score score \u003d new Score(0);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"    private Status currentStatus \u003d new Status();","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        requireAllNonNull(name, phone, email, address, tags, remark);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        return remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"        return currentStatus;","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"    public void setStatus(Status newStatus) {","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"        this.currentStatus \u003d newStatus;","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"    public LinkedIn getLinkedIn() {","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"        return linkedIn;","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"    public Github getGithub() {","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"MadLamprey"},"content":"        return github;","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"    public Score getScore() {","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"        return score;","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"MadLamprey"},"content":"    public void setLinkedIn(LinkedIn linkedIn) {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"        this.linkedIn \u003d linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"MadLamprey"},"content":"    public void setGithub(Github github) {","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"MadLamprey"},"content":"        this.github \u003d github;","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"    public void setScore(Score score) {","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"ScarletBlanks"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 remark.equals(otherPerson.remark)","lastModifiedDate":"2023-09-25"},{"lineNumber":146,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 score.equals(otherPerson.score)","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"sk2001git"},"content":"        return Objects.hash(name, phone, email, address, tags, remark);","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"MadLamprey"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"MadLamprey"},"content":"        builder.add(\"name\", name)","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"sk2001git"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"sk2001git"},"content":"                .add(\"status\", currentStatus)","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"sk2001git"},"content":"                .add(\"score\", score);","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"MadLamprey"},"content":"        if (!linkedIn.value.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"MadLamprey"},"content":"            builder.add(\"linkedin\", linkedIn);","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"MadLamprey"},"content":"        if (!github.value.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"MadLamprey"},"content":"            builder.add(\"github\", github);","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":29,"ScarletBlanks":11,"MadLamprey":31,"-":109}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"public class Remark {","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"    public final String value;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"        value \u003d remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    public String toString() {","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"        return value;","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        return value.hashCode();","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"sk2001git":37}},{"path":"src/main/java/seedu/address/model/person/Score.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":" * Represents a Person\u0027s score in JABPro.","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"public class Score implements Comparable\u003cScore\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Score should be a non-negative integer\";","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"    public final int value;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"     * Constructs a {@code Score}.","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"     * @param value","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    public Score(int value) {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"        checkArgument(isValidScore(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"     * Returns if a given integer is a valid score.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"     * @param test integer to be tested","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"     * @return true if test is a non-negative integer","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    public static boolean isValidScore(int test) {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        return Integer.toString(value);","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        if (!(other instanceof Score)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        Score otherScore \u003d (Score) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        return value \u003d\u003d otherScore.value;","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        return Integer.hashCode(value);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"    public int compareTo(Score other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        return Integer.compare(this.value, other.value);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"sk2001git":63}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":" * Represents a Status in the Person class","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"public class Status {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status should be either one of the following: \u0027Preliminary\u0027,\"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"            + \"\u0027Interviewed\u0027, \u0027Offered\u0027, \u0027Rejected\u0027 and it should not be blank\";","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    private String value;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    private StatusTypes statusType;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates a default Status - Preliminary","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    public Status() {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"        this.statusType \u003d StatusTypes.PRELIMINARY;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"        this.value \u003d \"Preliminary\";","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates a Status from String","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"     * @param value The status type string to used","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    public Status(String value) {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"        switch (value.toLowerCase()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"        case \"offered\":","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"            this.statusType \u003d StatusTypes.OFFERED;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"        case \"rejected\":","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"            this.statusType \u003d StatusTypes.REJECTED;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"        case \"interviewed\":","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"            this.statusType \u003d StatusTypes.INTERVIEWED;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"        case \"preliminary\":","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"            this.statusType \u003d StatusTypes.PRELIMINARY;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"        default:","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates a Status from a StatusType","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"     * @param statusType The StatusType to be used","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"    public Status(StatusTypes statusType) {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"        this.value \u003d statusType.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"        this.statusType \u003d statusType;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    public StatusTypes getStatusType() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"        return this.statusType;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"    public void setStatusType(StatusTypes newStatus) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"        this.statusType \u003d newStatus;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"        this.value \u003d newStatus.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"        return statusType.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"        return this.value;","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"     * Checks the other object is equals to this one","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"     * @param other the other Object","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"     * @return {@code true} if equals, {@code false} otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"            if (other instanceof Status) {","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"                return this.statusType \u003d\u003d ((Status) other).statusType;","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"            } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"                return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"sk2001git":2,"ScarletBlanks":84,"AriellaCallista":5}},{"path":"src/main/java/seedu/address/model/person/StatusContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"public class StatusContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    public StatusContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getStatus().toString(), keyword));","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        if (!(other instanceof StatusContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate otherStatusContainsKeywordsPredicate \u003d (StatusContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        return keywords.equals(otherStatusContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"AriellaCallista":44}},{"path":"src/main/java/seedu/address/model/person/StatusTypes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":" * Represents a StatusType in the Status class.","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"public enum StatusTypes {","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"    PRELIMINARY(\"Preliminary\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"    INTERVIEWED(\"Interviewed\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"    REJECTED(\"Rejected\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    OFFERED(\"Offered\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"    private final String statusName;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    StatusTypes(String statusName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"        this.statusName \u003d statusName;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"        return this.statusName;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"     * Checks if the provided status is a valid status.","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"     * @param input The string status to be checked for validity.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"     * @return {@code true} if the status is valid, {@code false} otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"    public static boolean isValidStatusType(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"        return input.equals(\"interviewed\") || input.equals(\"preliminary\")","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"                || input.equals(\"rejected\")","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"                || input.equals(\"offered\");","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ScarletBlanks":34}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"                .anyMatch(keyword -\u003e person.getTags().stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword))","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"                );","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"        TagContainsKeywordsPredicate otherTagContainsKeywordsPredicate \u003d (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        return keywords.equals(otherTagContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"AriellaCallista":46}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sk2001git":2,"-":150}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"sk2001git":9,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"    private final String linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    private final String github;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    private final String remark;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    private final String status;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"linkedIn\") String linkedIn,","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"                             @JsonProperty(\"github\") String github,","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"                             @JsonProperty(\"remark\") String remark, @JsonProperty(\"status\") String status) {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        this.linkedIn \u003d linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        this.github \u003d github;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        linkedIn \u003d source.getLinkedIn().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        github \u003d source.getGithub().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"        status \u003d source.getStatus().getValue();","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"MadLamprey"},"content":"        Person p \u003d new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"MadLamprey"},"content":"        if (linkedIn !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"MadLamprey"},"content":"            p.setLinkedIn(new LinkedIn(linkedIn));","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"MadLamprey"},"content":"        if (github !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"MadLamprey"},"content":"            p.setGithub(new Github(github));","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"ScarletBlanks"},"content":"        if (status !\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"ScarletBlanks"},"content":"            p.setStatus(new Status(status));","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"        return p;","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sk2001git":8,"ScarletBlanks":9,"MadLamprey":17,"-":107}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    private PersonInformationPanel personInformationPanel;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"    private StackPane personInformationPanelPlaceholder;","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"sk2001git"},"content":"     * Updates the personListPanel based on last View Command entered","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"sk2001git"},"content":"    private void handleView() {","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"sk2001git"},"content":"        Index index \u003d logic.getLastViewedPersonIndex();","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"sk2001git"},"content":"        Person personToView \u003d logic.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"sk2001git"},"content":"        personInformationPanel \u003d new PersonInformationPanel(personToView);","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"sk2001git"},"content":"        personInformationPanelPlaceholder.getChildren().add(personInformationPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"sk2001git"},"content":"            if (commandResult.isView()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"sk2001git"},"content":"                handleView();","lastModifiedDate":"2023-10-15"},{"lineNumber":213,"author":{"gitId":"sk2001git"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":214,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sk2001git":26,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    private Label linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    private Label github;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"    private Label score;","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"        linkedIn.setText(person.getLinkedIn().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"        github.setText(person.getGithub().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        score.setText(\"interview score: \" + person.getScore().toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sk2001git":4,"MadLamprey":6,"-":60}},{"path":"src/main/java/seedu/address/ui/PersonInformationPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import javafx.scene.control.ToggleButton;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":" * An UI component that displays information of a {@code Person}","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"public class PersonInformationPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    private static final String FXML \u003d \"PersonInformationPanel.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    private final Person person;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    private Label name;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    private Label phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"    private Label address;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"    private Label email;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    private Label remark;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    private ToggleButton preliminary;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    private ToggleButton interviewed;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    private ToggleButton status;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"    private Label linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"    private Label github;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"     * Creates a {@code PersonInformationPanel} with the given {@code Person}.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"     * @param person the person to display","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    public PersonInformationPanel(Person person) {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"                .sorted(java.util.Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        linkedIn.setText(person.getLinkedIn().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"        github.setText(person.getGithub().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        setResultButton(person.getStatus(), status);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        setButton(person.getStatus());","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"    private static void setResultButton(Status status, ToggleButton statusButton) {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        StatusTypes statusType \u003d status.getStatusType();","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"        if (statusType \u003d\u003d StatusTypes.OFFERED) {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"            statusButton.setText(\"Offered\");","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"        } else if (statusType \u003d\u003d StatusTypes.REJECTED) {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"            statusButton.setText(\"Rejected\");","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"            statusButton.setText(\"Pending\");","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"    private void setButton(Status currentStatus) {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        StatusTypes statusType \u003d currentStatus.getStatusType();","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"        if (statusType \u003d\u003d StatusTypes.OFFERED) {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"            status.getStyleClass().clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"            status.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().clear();;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"            interviewed.getStyleClass().clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"            interviewed.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"        } else if (statusType \u003d\u003d StatusTypes.REJECTED) {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"            status.getStyleClass().clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"            status.getStyleClass().add(\"rejected-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"        } else if (statusType \u003d\u003d StatusTypes.INTERVIEWED) {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().clear();;","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"            interviewed.getStyleClass().clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"            interviewed.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().clear();;","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"            preliminary.getStyleClass().add(\"offered-button\");","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"sk2001git":107,"MadLamprey":5}},{"path":"src/main/resources/view/Form.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":".white-box {","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #fff;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"    -fx-border-color: #ccc;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 20px;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"    -fx-pref-width: 300px;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"    -fx-margin: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"    -fx-effect: drop shadow(three-pass-box, #888, 2, 2, 5, 0);","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":".text-field {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #333333;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"    -fx-border-color: #fff;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 3px;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"    -fx-margin: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 3px;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    -fx-text-fill: #fff;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":".box {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #0074d9;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    -fx-text-fill: #fff;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 3px;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":".box:hover {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #0056b3;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":".stage-button {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #ccc;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 50;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":".offered-button {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #00FF00;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 50;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":".rejected-button {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"    -fx-background-color: #ff0000;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"    -fx-background-radius: 50;","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":".connection-line {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"    -fx-border-style: solid;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"    -fx-border-color: grey;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":".connection-box {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"    -fx-padding: 5 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":".connection-line {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"    -fx-fill: #ccc;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"    -fx-stroke: #ccc;","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"    -fx-stroke-width: 4px;","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"    -fx-min-width: 100px;","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"    -fx-max-width: 200px;","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"    -fx-min-height: 2px;","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"    -fx-max-height: 2px;","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"sk2001git":77}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"         title\u003d\"Address App\" minWidth\u003d\"1000\" minHeight\u003d\"800\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        \u003cURL value\u003d\"@Form.css\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox fx:id\u003d\"mainWindow\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"          \u003cSplitPane fx:id\u003d\"splitPane\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"150\" prefWidth\u003d\"150\"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"                       VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"            \u003cStackPane fx:id\u003d\"personInformationPanelPlaceholder\"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"                       styleClass\u003d\"pane-with-border\" minWidth\u003d\"400\" prefWidth\u003d\"400\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"          \u003c/SplitPane\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"sk2001git":22,"-":56}},{"path":"src/main/resources/view/PersonInformationPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.control.ToggleButton?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"\u003cListView id\u003d\"personInformationPanel\" fx:id\u003d\"personListPanelPlaceholder\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" VBox.vgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" \u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"                \u003cInsets top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"30\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"                \u003cLabel text\u003d\"Name: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"text-field\" wrapText\u003d\"true\" minWidth\u003d\"170\"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"                       alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"30\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"                \u003cLabel text\u003d\"Phone: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"text-field\" text\u003d\"\\$phone\" wrapText\u003d\"true\" minWidth\u003d\"170\"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"                       alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"34\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"Email: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"text-field\" text\u003d\"\\$email\" wrapText\u003d\"true\"  prefWidth\u003d\"450\"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"                   alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"15\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"Address: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"text-field\" text\u003d\"\\$address\" wrapText\u003d\"true\" prefWidth\u003d\"450\"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"                   alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"11\" \u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"LinkedIn: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel fx:id\u003d\"linkedIn\" styleClass\u003d\"text-field\" text\u003d\"\\$linkedIn\" wrapText\u003d\"true\" prefWidth\u003d\"450\"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"            alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"24\" \u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"Github: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"text-field\" text\u003d\"\\$github\" wrapText\u003d\"true\" prefWidth\u003d\"450\"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"                   alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"40\" \u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"Tags: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"0\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"                \u003cInsets left\u003d\"30\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"            \u003cToggleButton fx:id\u003d\"preliminary\" text\u003d\"Preliminary\" styleClass\u003d\"stage-button\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"            \u003cRectangle styleClass\u003d\"connection-line\" width\u003d\"120\" strokeWidth\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"            \u003cToggleButton fx:id\u003d\"interviewed\" text\u003d\"Interviewed\" styleClass\u003d\"stage-button\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"            \u003cRectangle styleClass\u003d\"connection-line\" width\u003d\"120\" strokeWidth\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"            \u003cToggleButton fx:id\u003d\"status\" text\u003d\"\\$status\" styleClass\u003d\"stage-button\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" VBox.vgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel text\u003d\"Remark: \" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"            \u003cLabel fx:id\u003d\"remark\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"text-field\" text\u003d\"\\$remark\" wrapText\u003d\"true\" prefWidth\u003d\"555\"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"            minHeight\u003d\"250\"  /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"\u003c/ListView\u003e","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"sk2001git":88}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"      \u003cLabel fx:id\u003d\"linkedIn\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$linkedIn\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"      \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$github\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"      \u003cLabel fx:id\u003d\"score\" styleClass\u003d\"cell_small_label\" text\u003d\"$score\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sk2001git":1,"MadLamprey":2,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"                expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"sk2001git":1,"-":47}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"AriellaCallista"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"AriellaCallista"},"content":"        public void updateFilteredPersonList(List\u003cPredicate\u003cPerson\u003e\u003e predicatesList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"AriellaCallista"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"ketweeen"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"ketweeen"},"content":"        public void sortPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"ketweeen"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"AriellaCallista"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"sk2001git"},"content":"        public Index getLastViewedPersonIndex() {","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"sk2001git"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"sk2001git"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"sk2001git"},"content":"        public void setLastViewedPersonIndex(Index index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"AriellaCallista"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"sk2001git"},"content":"        private Index index;","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"sk2001git"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"sk2001git"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"sk2001git"},"content":"            ObservableList\u003cPerson\u003e filteredList \u003d FXCollections.observableArrayList(personsAdded);","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"sk2001git"},"content":"            return filteredList;","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"sk2001git"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":231,"author":{"gitId":"sk2001git"},"content":"        public void setLastViewedPersonIndex(Index index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":232,"author":{"gitId":"sk2001git"},"content":"            this.index \u003d index;","lastModifiedDate":"2023-10-19"},{"lineNumber":233,"author":{"gitId":"sk2001git"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":234,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":235,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"sk2001git":22,"AriellaCallista":6,"ketweeen":10,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/AddGCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"public class AddGCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    private static final String GITHUB_STUB \u003d \"Someusername\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withGithub(GITHUB_STUB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        editedPerson.setGithub(new Github(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand addGCommand \u003d new AddGCommand(INDEX_FIRST_PERSON, new Github(editedPerson.getGithub().value));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(AddGCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(addGCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand addGCommand \u003d new AddGCommand(outOfBoundIndex, new Github(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        assertCommandFailure(addGCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand addGCommand \u003d new AddGCommand(outOfBoundIndex, new Github(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        assertCommandFailure(addGCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        final AddGCommand standardCommand \u003d new AddGCommand(INDEX_FIRST_PERSON, new Github(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand commandWithSameValues \u003d new AddGCommand(INDEX_FIRST_PERSON, new Github(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(new AddGCommand(INDEX_SECOND_PERSON, new Github(\"xyz\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        // different remark, same value-\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(new AddGCommand(INDEX_FIRST_PERSON, new Github(\"xyz\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"sk2001git":1,"MadLamprey":88}},{"path":"src/test/java/seedu/address/logic/commands/AddLCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"public class AddLCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"    private static final String LINKEDIN_STUB \u003d \"Someusername\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withLinkedIn(LINKEDIN_STUB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"        editedPerson.setLinkedIn(new LinkedIn(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand addLCommand \u003d new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(editedPerson.getLinkedIn().value));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(AddLCommand.MESSAGE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(addLCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand addLCommand \u003d new AddLCommand(outOfBoundIndex, new LinkedIn(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"        assertCommandFailure(addLCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand addLCommand \u003d new AddLCommand(outOfBoundIndex, new LinkedIn(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"        assertCommandFailure(addLCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"MadLamprey"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"        final AddLCommand standardCommand \u003d new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"MadLamprey"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand commandWithSameValues \u003d new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(\"xyz\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"MadLamprey"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"MadLamprey"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"MadLamprey"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"MadLamprey"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(standardCommand.equals(new AddLCommand(INDEX_SECOND_PERSON, new LinkedIn(\"xyz\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"MadLamprey"},"content":"        // different remark, same value-\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(standardCommand.equals(new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(\"xyz\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"sk2001git":1,"MadLamprey":88}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        // different isView value -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        // different isView value -\u003e returns different hashcode","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \", isView\u003d\" + commandResult.isView() + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"sk2001git":12,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"    public static final int VALID_SCORE_AMY \u003d 100;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    public static final String SCORE_DESC_AMY \u003d \" \" + PREFIX_SCORE + VALID_SCORE_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"    public static final String INVALID_SCORE_DESC \u003d \" \" + PREFIX_SCORE + \"-1\"; // Negative score not allowed for score;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"     * that takes a string {@code expectedMessage} and a boolean {@code isView}.","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"            Model expectedModel, boolean isView) {","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, isView);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"sk2001git":18,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTagPerson;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalTags.EMPTY_TAG_SET;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalTags.NO_MATCHING_TAG_SET;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalTags.TEST_TAG_SET;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"    public void execute_validTagsUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"        Person personToDelete \u003d getTypicalTagPerson();","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TEST_TAG_SET);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"   public void execute_emptyTagsUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(EMPTY_TAG_SET);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"        assertCommandFailure(deleteCommand, model, DeleteCommand.MESSAGE_NO_INDEX_OR_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"    public void execute_noMatchingTagsUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(NO_MATCHING_TAG_SET);","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"        assertCommandFailure(deleteCommand, model, DeleteCommand.MESSAGE_PERSONS_NOT_FOUND);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByIndexFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByIndexSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByTagsFirstCommand \u003d new DeleteCommand(TEST_TAG_SET);","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByTagsSecondCommand \u003d new DeleteCommand(NO_MATCHING_TAG_SET);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByIndexFirstCommand.equals(deleteByIndexFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByTagsFirstCommand.equals(deleteByTagsFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"ketweeen"},"content":"        // same values (delete by index) -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByIndexFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"ketweeen"},"content":"        // same values (delete by tags) -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteByTagsCommandCopy \u003d new DeleteCommand(TEST_TAG_SET);","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"ketweeen"},"content":"        assertTrue(deleteByTagsFirstCommand.equals(deleteByTagsCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByIndexFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByTagsFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByIndexFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByTagsFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"ketweeen"},"content":"        // different person or set of tags -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByIndexFirstCommand.equals(deleteByIndexSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"ketweeen"},"content":"        assertFalse(deleteByTagsFirstCommand.equals(deleteByTagsSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"ketweeen"},"content":"    public void toString_index() {","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"ketweeen"},"content":"        String expectedToString \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"ketweeen"},"content":"        assertEquals(expectedToString, deleteCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"ketweeen"},"content":"    public void toString_tags() {","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TEST_TAG_SET);","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"ketweeen"},"content":"        String expectedString \u003d DeleteCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"ketweeen"},"content":"                + String.format(\"{targetTags\u003d%s}\", TEST_TAG_SET.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"ketweeen"},"content":"        assertEquals(expectedString, deleteCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"ketweeen"},"content":"    public void toString_invalid() {","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Index.getDefaultIndex());","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"ketweeen"},"content":"        String expectedToString \u003d \"seedu.address.logic.commands.DeleteCommand{invalid\u003dNo valid target specified}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"ketweeen"},"content":"        assertEquals(expectedToString, deleteCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ketweeen":70,"-":108}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"sk2001git":4,"-":180}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", score\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"                + editPersonDescriptor.getScore().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"sk2001git":2,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"sk2001git":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"public class ExportCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    private final ExportCommand exportCommand \u003d new ExportCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new ExportCommand().equals(new ExportCommand()));","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(new ExportCommand().toString(), \"ExportCommand\");","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"    public void execute_validExport_successful() {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"            CommandResult result \u003d exportCommand.execute(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"            assert(ExportCommand.MESSAGE_SUCCESS.equals(result.getFeedbackToUser())","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"                    || result.getFeedbackToUser().contains(\"Error exporting data\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"            //This exception is expected","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"            fail(\"This test has failed because of a failed export\");","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    public void testAppendPersons() {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"        assert(exportCommand.appendPersons(model) instanceof StringBuilder);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"    public void testAppendPersons_two() {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(exportCommand.appendPersons(model).toString(),","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"                 \"Name,Phone,Email,Address,Tags,LinkedIn,Github,Remark,Status\\n\");","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"    public void testString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"        assert(exportCommand.treatAsString(\"5\").equals(\"\\\"5\\\"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(exportCommand, new ExportCommand());","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"    public void equals_null_false() {","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(false, exportCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ScarletBlanks":67}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"firstName\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate firstStatusPredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"                new StatusContainsKeywordsPredicate(Collections.singletonList(\"firstStatus\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"secondName\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate secondStatusPredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"                new StatusContainsKeywordsPredicate(Collections.singletonList(\"secondStatus\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e firstPredicatesList \u003d Arrays.asList(firstNamePredicate, firstStatusPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e secondPredicatesList \u003d Arrays.asList(secondNamePredicate, secondStatusPredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicatesList);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicatesList);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicatesList);","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d prepareStatusPredicate(\"\");","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand command \u003d new FindCommand(Arrays.asList(namePredicate, statusPredicate));","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"        expectedModel.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_multipleNameKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand command \u003d new FindCommand(preparePredicateList(\"Kurz Elle Kunz\", \"\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"        expectedModel.updateFilteredPersonList(preparePredicateList(\"Kurz Elle Kunz\", \"\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_multipleStatusKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand command \u003d new FindCommand(preparePredicateList(\"\", \"preliminary\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"        expectedModel.updateFilteredPersonList(preparePredicateList(\"\", \"preliminary\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"        StatusContainsKeywordsPredicate statusPredicate \u003d new StatusContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand findCommand \u003d new FindCommand(Arrays.asList(namePredicate, statusPredicate));","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicates list\u003d[\" + namePredicate + \", \"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"                + statusPredicate + \"]}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"     * Parses {@code userInput} into a {@code StatusContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"AriellaCallista"},"content":"    private StatusContainsKeywordsPredicate prepareStatusPredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"AriellaCallista"},"content":"        return new StatusContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"AriellaCallista"},"content":"    private List\u003cPredicate\u003cPerson\u003e\u003e preparePredicateList(String nameKeywords, String statusKeywords) {","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"AriellaCallista"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicatesList \u003d new ArrayList\u003c\u003e() {{","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"AriellaCallista"},"content":"                if (!nameKeywords.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"AriellaCallista"},"content":"                    add(prepareNamePredicate(nameKeywords));","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"AriellaCallista"},"content":"                if (!statusKeywords.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"AriellaCallista"},"content":"                    add(prepareStatusPredicate(statusKeywords));","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"AriellaCallista"},"content":"                }","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"AriellaCallista"},"content":"            }};","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"AriellaCallista"},"content":"        return predicatesList;","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AriellaCallista":66,"-":73}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"sk2001git":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        assertCommandSuccess(new ListCommand(ListCommand.DEFAULT_COMPARATOR), model,","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"                ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"        assertCommandSuccess(new ListCommand(ListCommand.DEFAULT_COMPARATOR), model,","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"                ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ketweeen":4,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"    private static final String KEEP_REMARK_STUB \u003d \"**REMARK** remark v2.0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    private static final String REPLACED_REMARK \u003d \"Some remark remark v2.0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS,","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"    public void execute_keepRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        // Set base person to have a remark same as REMARK_STUB","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"        Person basePerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        model.setPerson(firstPerson, basePerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        // Create a remark command with keep remark","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(KEEP_REMARK_STUB),","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"                true);","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"sk2001git"},"content":"        Person expectedPerson \u003d new PersonBuilder(firstPerson).withRemark(REPLACED_REMARK).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"sk2001git"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"sk2001git"},"content":"                Messages.format(expectedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"sk2001git"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"sk2001git"},"content":"        expectedModel.setPerson(basePerson, expectedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"sk2001git"},"content":"        // Execute the command and see how they compare","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel, true);","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"sk2001git"},"content":"    public void equals() {","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"sk2001git"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"sk2001git"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"sk2001git"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"sk2001git"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"sk2001git"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-09-25"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":116,"author":{"gitId":"sk2001git"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON, new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"        // different remark, same value-\u003e returns true","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"        assertTrue(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"sk2001git":126}},{"path":"src/test/java/seedu/address/logic/commands/SetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"public class SetCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    public void execute_validIndexAndStatus_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"        // Check if the status of the person in the model has been updated","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals((new Status()).toString(), \"Preliminary\");","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"    public void setCommandString_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals((new SetCommand(Index.fromOneBased(1), StatusTypes.INTERVIEWED)).toString(),","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"                \"seedu.address.logic.commands.\"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"                        + \"SetCommand{targetIndex\u003dseedu.address.commons.core.index.Index{zeroBasedIndex\u003d0},\"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"                        + \" newStatus\u003dInterviewed}\");","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"    public void exceptionChecks() {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"        SetCommand command \u003d new SetCommand(Index.fromZeroBased(99), StatusTypes.INTERVIEWED);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ScarletBlanks":42}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    private static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"    public void execute_viewUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"                String.format(ViewCommand.MESSAGE_SUCCESSFUL_VIEW, Messages.format(firstPerson)), true);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"        expectedModel.setLastViewedPersonIndex(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"        assertCommandSuccess(viewCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        final ViewCommand standardCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        ViewCommand commandWithSameValues \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        assertFalse(standardCommand.equals(new ViewCommand(INDEX_SECOND_PERSON)));","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"sk2001git":69}},{"path":"src/test/java/seedu/address/logic/parser/AddGCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddGCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"public class AddGCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private AddGCommandParser parser \u003d new AddGCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    private final String nonEmptyUsername \u003d \"Someusername\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_USERNAME + nonEmptyUsername;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        AddGCommand expectedCommand \u003d new AddGCommand(INDEX_FIRST_PERSON, new Github(nonEmptyUsername));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        expectedCommand \u003d new AddGCommand(INDEX_FIRST_PERSON, new Github(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    public void parse_indexSpecified_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        // Negative numbers","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        String userInput \u003d \" -5\";","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        // Out of bounds check","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        String userInput2 \u003d \" 100000000000\";","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        // Blank field","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        // no index","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        userInput \u003d PREFIX_USERNAME + nonEmptyUsername;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        // no parameters","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, AddGCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        // no index","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, AddGCommand.COMMAND_WORD + \" \" + nonEmptyUsername, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":63}},{"path":"src/test/java/seedu/address/logic/parser/AddLCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.logic.commands.AddLCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"public class AddLCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"    private AddLCommandParser parser \u003d new AddLCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"    private final String nonEmptyUsername \u003d \"Someusername\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_USERNAME + nonEmptyUsername;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        AddLCommand expectedCommand \u003d new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(nonEmptyUsername));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_USERNAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"        expectedCommand \u003d new AddLCommand(INDEX_FIRST_PERSON, new LinkedIn(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"    public void parse_indexSpecified_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"MadLamprey"},"content":"        // Negative numbers","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"MadLamprey"},"content":"        String userInput \u003d \" -5\";","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"MadLamprey"},"content":"        // Out of bounds check","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"MadLamprey"},"content":"        String userInput2 \u003d \" 100000000000\";","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"MadLamprey"},"content":"        // Blank field","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"        // no index","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"        userInput \u003d PREFIX_USERNAME + nonEmptyUsername;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"MadLamprey"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"MadLamprey"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"MadLamprey"},"content":"        // no parameters","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, AddLCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"MadLamprey"},"content":"        // no index","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        assertParseFailure(parser, AddLCommand.COMMAND_WORD + \" \" + nonEmptyUsername, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"MadLamprey":63}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"                FindCommand.COMMAND_WORD + \" \" + \"n/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(new FindCommand(Arrays.asList(new NameContainsKeywordsPredicate(keywords))), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"    public void parseCommand_set() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(parser.parseCommand(SetCommand.COMMAND_WORD + \" 5 Interviewed\") instanceof SetCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(parser.parseCommand(SetCommand.COMMAND_WORD + \" 3 Interviewed\") instanceof SetCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"    public void parseCommand_parseStatusType() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(ParserUtil.parseStatusType(\"Interviewed\").toString().equals(\"Interviewed\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"        // assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"ScarletBlanks"},"content":"    public void parseCommand_export() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD) instanceof ExportCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"ScarletBlanks"},"content":"        // assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"        final String remark \u003d \"Some remark.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark);","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, new Remark(remark)), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ScarletBlanks":18,"AriellaCallista":14,"-":98}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalTags.TEST_TAG_SET;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import static seedu.address.testutil.TypicalTags.TEST_TAG_STRING;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"    // Delete by index tests","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    public void parse_validIndex_returnsDeleteCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"    // Delete by tags tests","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"    public void parse_validTags_returnsDeleteCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + TEST_TAG_STRING;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"        DeleteCommand expectedCommand \u003d new DeleteCommand(TEST_TAG_SET);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"    public void parse_emptyTags_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"        assertParseFailure(parser, PREFIX_TAG.toString(),","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"ketweeen":20,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SCORE_DESC;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SCORE_DESC_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCORE_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SCORE_DESC, Score.MESSAGE_CONSTRAINTS); // invalid score","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":115,"author":{"gitId":"sk2001git"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + SCORE_DESC_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"                .withScore(VALID_SCORE_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"sk2001git"},"content":"        // score","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"sk2001git"},"content":"        userInput \u003d targetIndex.getOneBased() + SCORE_DESC_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"sk2001git"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withScore(VALID_SCORE_AMY).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"sk2001git"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"sk2001git":14,"-":206}},{"path":"src/test/java/seedu/address/logic/parser/ExportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"public class ExportCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    public void execute_validIndexAndStatus_success() throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new ExportCommandParser().parse(\"\").equals(","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"                new ExportCommand()));","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ScarletBlanks":14}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"                new FindCommand(Arrays.asList(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"                        new StatusContainsKeywordsPredicate(Arrays.asList(\"Interviewed\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, \" n/Alice Bob st/Interviewed\", expectedFindCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        assertParseSuccess(parser, \" n/ \\n Alice \\n \\t Bob  \\t st/Interviewed\", expectedFindCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_validArgsWithNoStatus_returnsFindCommand() {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"                new FindCommand(Arrays.asList(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"        assertParseSuccess(parser, \" n/ \\n Alice \\n \\t Bob  \\t \", expectedFindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"sk2001git":1,"AriellaCallista":13,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    private ListCommandParser parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"        parser \u003d new ListCommandParser();","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    public void parse_noSortingAttribute_returnsListCommandWithDefaultComparator() throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"        String args \u003d \"\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"        ListCommand result \u003d parser.parse(args);","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"        // Ensure the ListCommand uses the default sorting comparator","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"        assertEquals(result.getSortingComparator(), ListCommand.DEFAULT_COMPARATOR);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"ketweeen":30}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"sk2001git"},"content":"    public void parseScore_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"sk2001git"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseScore(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"sk2001git"},"content":"    public void parseScore_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseScore(\"a\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"sk2001git"},"content":"    public void parseScore_validValueWithoutWhitespace_returnsScore() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"sk2001git"},"content":"        assertEquals(ParserUtil.parseScore(\"1\"), new Score(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"sk2001git"},"content":"    public void parseScore_negativeValue_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"sk2001git"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseScore(\"-1\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"sk2001git":20,"AriellaCallista":1,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    private final String nonEmptyRemark \u003d \"Some remark.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"        // have remark","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(nonEmptyRemark));","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        // no remark","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"    public void parse_indexSpecified_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"        // Negative numbers","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" -5\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        // Out of bounds check","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"        String userInput2 \u003d \" 100000000000\";","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"sk2001git"},"content":"        // Blank field","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"sk2001git"},"content":"        // no index","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"sk2001git"},"content":"        userInput \u003d PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"sk2001git"},"content":"    public void parse_keepRemark_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"sk2001git"},"content":"        // Important to note that a remark will have trailing white spaces trimmed","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"sk2001git"},"content":"        // That is a remark with trailing white spaces will be treated as a remark without trailing white spaces","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        String expectedRemarkValue \u003d \"**REMARK** \" + nonEmptyRemark;","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + expectedRemarkValue;","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(expectedRemarkValue), true);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"sk2001git"},"content":"        //Not a keep remark, simulate mistype","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"sk2001git"},"content":"        String wrongRemarkValue \u003d \"**REMARK* \" + nonEmptyRemark;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"sk2001git"},"content":"        String userInput2 \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + wrongRemarkValue;","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"sk2001git"},"content":"        RemarkCommand expectedCommand2 \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(wrongRemarkValue));","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput2, expectedCommand2);","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"sk2001git"},"content":"        // No parse failure since it is not a keep remark but an original remark","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"sk2001git"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"        // no parameters","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"        // no index","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"sk2001git":82}},{"path":"src/test/java/seedu/address/logic/parser/SetCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"public class SetCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    public void execute_validIndexAndStatus_success() throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"        // Check if the status of the person in the model has been updated","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new SetCommandParser().parse(\"1 Interviewed\").equals(","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"                new SetCommand(Index.fromOneBased(1), StatusTypes.INTERVIEWED)));","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ScarletBlanks":20}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sk2001git"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"sk2001git"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"sk2001git"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"sk2001git"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"sk2001git"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"sk2001git"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" 1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"sk2001git"},"content":"        ViewCommand expectedCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"sk2001git"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"sk2001git"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"sk2001git"},"content":"    public void parse_indexSpecified_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"sk2001git"},"content":"        // Negative numbers","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"sk2001git"},"content":"        String userInput \u003d \" -5\";","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"        // Out of bounds check","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"        String userInput2 \u003d \" 100000000000\";","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"        // Blank field","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"sk2001git"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"sk2001git":40}},{"path":"src/test/java/seedu/address/model/person/GithubTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public class GithubTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"        Github github \u003d new Github(\"alexyeoh\");","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(github.equals(new Github(\"alexyeoh\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(github.equals(github));","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(github.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(github.equals(new Github(\"zhiwang\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        Github github \u003d new Github(\"alexyeoh\");","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"alexyeoh\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(github.toString(), s);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"MadLamprey":29}},{"path":"src/test/java/seedu/address/model/person/LinkedInTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"public class LinkedInTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"    /*@Test","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LinkedIn(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    }*/","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"MadLamprey"},"content":"        LinkedIn linkedIn \u003d new LinkedIn(\"alexyeoh\");","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(linkedIn.equals(new LinkedIn(\"alexyeoh\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"MadLamprey"},"content":"        assertTrue(linkedIn.equals(linkedIn));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(linkedIn.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"MadLamprey"},"content":"        assertFalse(linkedIn.equals(new LinkedIn(\"zhiwang\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"MadLamprey"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"MadLamprey"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"        LinkedIn linkedIn \u003d new LinkedIn(\"alexyeoh\");","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"        String s \u003d \"alexyeoh\";","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"        assertEquals(linkedIn.toString(), s);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"MadLamprey"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"MadLamprey":34}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"sk2001git"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"sk2001git"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRemark(\"Some remark\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"sk2001git"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"sk2001git"},"content":"        // different score -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"sk2001git"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withScore(100).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"sk2001git"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"ScarletBlanks"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"sk2001git"},"content":"                + \", remark\u003d\" + ALICE.getRemark() + \", status\u003d\" + ALICE.getStatus() + \", score\u003d\" + ALICE.getScore()","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"MadLamprey"},"content":"                + (!ALICE.getLinkedIn().value.isEmpty() ? \", linkedin\u003d\" + ALICE.getLinkedIn() : \"\")","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"MadLamprey"},"content":"                + (!ALICE.getGithub().value.isEmpty() ? \", github\u003d\" + ALICE.getGithub() : \"\") + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"sk2001git":10,"ScarletBlanks":1,"MadLamprey":2,"-":98}},{"path":"src/test/java/seedu/address/model/person/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"public class StatusTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(new Status().toString(), \"Preliminary\");","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    public void constructorTestingOffered() {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(new Status(\"offered\"), new Status(StatusTypes.OFFERED));","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    public void constructorTestingPrelim() {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new Status(\"preliminary\").equals(new Status(StatusTypes.PRELIMINARY)));","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    public void constructorTestingInt() {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new Status(\"interviewed\").equals(","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"            new Status(StatusTypes.INTERVIEWED)));","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"    public void constructorTestingRej() {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new Status(\"rejected\").equals(","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"            new Status(StatusTypes.REJECTED)));","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"    public void getStatusTypeTestR() {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new Status(\"rejected\").getStatusType().equals(","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"            StatusTypes.REJECTED));","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"    public void getStatusTypeTestI() {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"        assert(new Status(\"interviewed\").getStatusType().equals(","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"            StatusTypes.INTERVIEWED));","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"    public void getStatusTypeTestP() {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(new Status(\"preliminary\").getStatusType(), (StatusTypes.PRELIMINARY));","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    public void getStatusTypeTestO() {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(new Status(\"offered\").getStatusType(),","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"            StatusTypes.OFFERED);","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"    public void setStatusTypeTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"        Status testStatus \u003d new Status();","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"        testStatus.setStatusType(StatusTypes.INTERVIEWED);","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(testStatus.getStatusType(), StatusTypes.INTERVIEWED);","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ScarletBlanks":60}},{"path":"src/test/java/seedu/address/model/person/StatusTypesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"public class StatusTypesTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    public void isValidInterviewed() {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(StatusTypes.isValidStatusType(\"interviewed\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    public void isValidPreliminary() {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(StatusTypes.isValidStatusType(\"preliminary\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    public void isValidOffered() {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(StatusTypes.isValidStatusType(\"offered\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"    public void isValidRejected() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"        assertTrue(StatusTypes.isValidStatusType(\"rejected\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ScarletBlanks":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"MadLamprey"},"content":"    private static final String VALID_LINKEDIN \u003d BENSON.getLinkedIn().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"MadLamprey"},"content":"    private static final String VALID_GITHUB \u003d BENSON.getGithub().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"MadLamprey"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"                        VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"                VALID_TAGS, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"MadLamprey"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"                        VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"                VALID_TAGS, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"MadLamprey"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"                        VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"                VALID_TAGS, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"MadLamprey"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"ScarletBlanks"},"content":"                        VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"MadLamprey"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"ScarletBlanks"},"content":"                VALID_TAGS, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"MadLamprey"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"ScarletBlanks"},"content":"                        invalidTags, VALID_LINKEDIN, VALID_GITHUB, VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sk2001git":3,"ScarletBlanks":10,"MadLamprey":11,"-":101}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"        descriptor.setScore(person.getScore());","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"sk2001git"},"content":"     * Sets the {@code Score} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"sk2001git"},"content":"    public EditPersonDescriptorBuilder withScore(int score) {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"sk2001git"},"content":"        descriptor.setScore(new Score(score));","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"sk2001git"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"sk2001git":10,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"sk2001git"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"import seedu.address.model.person.StatusTypes;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"sk2001git"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"MadLamprey"},"content":"    public static final String DEFAULT_LINKEDIN \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"MadLamprey"},"content":"    public static final String DEFAULT_GITHUB \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"sk2001git"},"content":"    public static final int DEFAULT_SCORE_VALUE \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"sk2001git"},"content":"    private Remark remark;","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"sk2001git"},"content":"    private Score score;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    private Status status;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"MadLamprey"},"content":"    private LinkedIn linkedIn;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"MadLamprey"},"content":"    private Github github;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"sk2001git"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"sk2001git"},"content":"        score \u003d new Score(DEFAULT_SCORE_VALUE);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"        status \u003d new Status(); // default status is preliminary","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"MadLamprey"},"content":"        linkedIn \u003d new LinkedIn(DEFAULT_LINKEDIN);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"sk2001git"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"sk2001git"},"content":"        score \u003d personToCopy.getScore();","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"MadLamprey"},"content":"        linkedIn \u003d personToCopy.getLinkedIn();","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"sk2001git"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"sk2001git"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"sk2001git"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"sk2001git"},"content":"        return this;","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"sk2001git"},"content":"     * Sets the {@code Score} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"sk2001git"},"content":"     * @param score integer value of score","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"sk2001git"},"content":"     * @return PersonBuilder","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"sk2001git"},"content":"    public PersonBuilder withScore(int score) {","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"sk2001git"},"content":"        this.score \u003d new Score(score);","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"sk2001git"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"sk2001git"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"sk2001git"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"MadLamprey"},"content":"     * Sets the {@code LinkedIn} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"MadLamprey"},"content":"     * @param username","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"sk2001git"},"content":"     * @return PersonBuilder","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"MadLamprey"},"content":"    public PersonBuilder withLinkedIn(String username) {","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"MadLamprey"},"content":"        this.linkedIn \u003d new LinkedIn(username);","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"MadLamprey"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"MadLamprey"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"AriellaCallista"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"AriellaCallista"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"AriellaCallista"},"content":"        switch (status.toLowerCase()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"AriellaCallista"},"content":"        case \"interviewed\":","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"AriellaCallista"},"content":"            this.status.setStatusType(StatusTypes.INTERVIEWED);","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"AriellaCallista"},"content":"            break;","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"AriellaCallista"},"content":"        case \"rejected\":","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"AriellaCallista"},"content":"            this.status.setStatusType(StatusTypes.REJECTED);","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"AriellaCallista"},"content":"            break;","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"AriellaCallista"},"content":"        case \"offered\":","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"AriellaCallista"},"content":"            this.status.setStatusType(StatusTypes.OFFERED);","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"AriellaCallista"},"content":"            break;","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"AriellaCallista"},"content":"        default:","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"AriellaCallista"},"content":"            this.status.setStatusType(StatusTypes.PRELIMINARY);","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"AriellaCallista"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"sk2001git"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"sk2001git"},"content":"     * Builds a person with the given parameters.","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"sk2001git"},"content":"     * @return Person","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"sk2001git"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":171,"author":{"gitId":"sk2001git"},"content":"        Person createdPerson \u003d new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"sk2001git"},"content":"        createdPerson.setScore(score);","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"sk2001git"},"content":"        return createdPerson;","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":176,"author":{"gitId":"MadLamprey"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"MadLamprey"},"content":"     * Sets the {@code Github} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"MadLamprey"},"content":"     * @param username","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"MadLamprey"},"content":"     * @return","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"MadLamprey"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"MadLamprey"},"content":"    public PersonBuilder withGithub(String username) {","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"MadLamprey"},"content":"        this.github \u003d new Github(username);","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"MadLamprey"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"MadLamprey"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"sk2001git":39,"AriellaCallista":25,"MadLamprey":26,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"sk2001git"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"sk2001git"},"content":"        descriptor.getScore().ifPresent(score -\u003e sb.append(PREFIX_SCORE).append(score.toString()).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"sk2001git":2,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"sk2001git"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"sk2001git"},"content":"            .withRemark(\"Benson the builder\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"    public static Person getTypicalTagPerson() {","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"        return BENSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"sk2001git":2,"AriellaCallista":4,"ketweeen":3,"-":74}},{"path":"src/test/java/seedu/address/testutil/TypicalTags.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":" * A utility class for providing typical Tag objects and sets of tags for testing.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":" * This class contains constants for typical tag strings and predefined Tag objects","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":" * and sets of tags used in testing scenarios.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"public class TypicalTags {","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    public static final String TEST_TAG_STRING \u003d \"owesMoney\";","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    public static final String NO_MATCHING_TAG_STRING \u003d \"NoMatchingTag\";","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    public static final Tag TEST_TAG \u003d new Tag(TEST_TAG_STRING);","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    public static final Tag NO_MATCHING_TAG \u003d new Tag(NO_MATCHING_TAG_STRING);","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    // A set of typical tags, used by Typical Tag Person","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    public static final Set\u003cTag\u003e TEST_TAG_SET \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"            add(TEST_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"        }};","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    // An empty set of tags","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"    public static final Set\u003cTag\u003e EMPTY_TAG_SET \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    // A set of tags used by no person","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    public static final Set\u003cTag\u003e NO_MATCHING_TAG_SET \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"            add(NO_MATCHING_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        }};","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ketweeen":31}}]

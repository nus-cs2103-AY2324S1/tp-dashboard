[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T08-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T08-4/tp/actions)","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"## Welcome to MediFlowR","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"Too many patients to handle? Mixing up your patient appointments?","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"Don\u0027t worry, we got you! Taking control of your patient records management is now made easier with **MediFlowR**, and","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"this user guide will help you master the application in no time!","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"### About MediFlowR:","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"MediFlowR is a desktop application built for medical practitioners to manage their day-to-day operations. It is a","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"user-friendly and efficient patient records management system designed to help you streamline your patient management","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"processes. In the fast-paced world of healthcare, we understand the importance of keeping patient information organised","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"and appointments on track. MediFlowR is your solution!","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"### Key Features:","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"To simplify your administrative tasks, our application provides a range of features, but not limited to:","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"1. **Patient Information Management:** Easily store, access and edit patient data, making it simple to track patient\u0027s vital information and history.","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"2. **Appointment Scheduling:** Efficiently manage patient appointments and eliminate the risk of scheduling conflicting appointments.","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"3. **Integration:** Seamlessly integrate patient records across multiple departments by allowing users to update patient information, allowing for the doctor to follow up and ensuring continuity of care.","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"Here at MediFlowR, we believe in keeping things simple and efficient.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"_**Simple:**_","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"Navigating MediFlowR is a breeze. Our intuitive user interface just displays essential information allowing","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"you to quickly access the information you need. Moreover, this user guide together with the in-application guidance","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"minimises the learning curve for your administrative staff.","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"_**Efficient:**_","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"On top of these functionalities, we believe that patient management must be efficient.","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"Therefore, MediFlowR is optimised for keyboard users. By simply typing, MediFlowR can get your","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"hospital management tasks done faster than the other apps in the industry.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"* For the detailed documentation of this project, see the [MediFlowR Product Website](https://ay2324s1-cs2103t-t08-4.github.io/tp/).","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"* The logo for the application is taken from here: [Hospital icons created by Pixel Buddha - Flaticon](https://www.flaticon.com/free-icons/hospital)","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"-":2,"trgao":39}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"    archiveFileName \u003d \u0027mediflowr.jar\u0027","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"run {","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"-":71,"trgao":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"### Gao Tianrun","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"\u003cimg src\u003d\"images/trgao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"[[github](https://github.com/trgao)]","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"[[portfolio](team/trgao.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"* Role: Team Lead","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"### Shen Licong","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"\u003cimg src\u003d\"images/licongshen12.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"[[github](http://github.com/licongshen12)]","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"[[portfolio](team/licongshen12.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"### Stalin Muthukumar Bill Kirankumar","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"\u003cimg src\u003d\"images/billieboy7.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"[[github](http://github.com/billieboy7)]","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"[[portfolio](team/billieboy7.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"### Doan Quoc Thinh","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"\u003cimg src\u003d\"images/dinde2004.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"[[github](http://github.com/dinde2004)]","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"dinde2004"},"content":"[[portfolio](team/dinde2004.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"### Kwang Thiag","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"\u003cimg src\u003d\"images/kwangthiag.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"[[github](http://github.com/kwangthiag)]","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"[[portfolio](team/kwangthiag.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"dinde2004":1,"kwangthiag":5,"licongshen12":5,"-":33,"trgao":16}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"* The logo for the application is taken from here: [Hospital icons created by Pixel Buddha - Flaticon](https://www.flaticon.com/free-icons/hospital)","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"dinde2004"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"trgao"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"trgao"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"trgao"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"billieboy7"},"content":"### Implementation of patient commands","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"billieboy7"},"content":"### Find patient by illness feature","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"billieboy7"},"content":"[FindIllnessCommandParser.java]: https://github.com/billieboy7/tp/blob/master/src/main/java/seedu/address/logic/parser/personparser/FindIllnessCommandParser.java","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"billieboy7"},"content":"[FindIllnessCommand.java]: https://github.com/billieboy7/tp/blob/master/src/main/java/seedu/address/logic/commands/personcommands/FindIllnessCommand.java","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"billieboy7"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"billieboy7"},"content":"For _Find Illness_ command, the noteworthy classes are:","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"billieboy7"},"content":"- `LogicManager.java` - Calls the address book parser. ","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"billieboy7"},"content":"- `AddressBookParser.java` - For passing the arguments to `FindIllnessCommandParser`.","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"billieboy7"},"content":"- [`FindIllnessCommandParser.java`][FindIllnessCommandParser.java] - For passing the arguments to `FindIllnessCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"billieboy7"},"content":"- [`FindIllnessCommand.java`][FindIllnessCommand.java] - For execution of the find illness command.","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"billieboy7"},"content":"Let\u0027s take a valid user input, `find-i flu`, as an example. ","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"billieboy7"},"content":"-- user input: `find-i flu` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"billieboy7"},"content":"Step 1. Logic Manager parses the user input through the AddressBookParser. ","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"billieboy7"},"content":"-- `AddressBookParser` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"billieboy7"},"content":"Step 2. AddressBookParser identifies the command word `find-i`.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"billieboy7"},"content":"Step 3. Returns FindIllnessCommandParser().parse(arguments) (in this case arguments \u003d `flu`)","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"billieboy7"},"content":"-- `FindIllnessCommandParser` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"billieboy7"},"content":"Step 4. FindIllnessCommandParser takes in arguments (`flu`) and uses the arguments to create the IllnessContainsKeywordsPredicate object.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"billieboy7"},"content":"Step 5. Returns a FindIllnessCommand object which takes in the IllnessContainsKeywordsPredicate object as a parameter.","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"billieboy7"},"content":"-- `FindIllnessCommand` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"billieboy7"},"content":"Step 6. The IllnessContainsKeywordsPredicate object is saved in the FindIllnessCommand object. ","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"billieboy7"},"content":"-- `LogicManager` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"billieboy7"},"content":"Step 7. The FindIllnessCommand object is returned and its execute(model) method is triggered.   ","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"billieboy7"},"content":"Step 8. The filtered person list in the model is updated using the IllnessContainsKeywordPredicate.   ","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"billieboy7"},"content":"Step 9. Returns a CommandResult which then leads to the updated filtered person list to be displayed.   ","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"billieboy7"},"content":"The following sequence diagram shows how the find patient by illness operation works:","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"billieboy7"},"content":"![FindIllnessCommandSequenceDiagram](images/FindIllnessCommandSequenceDiagram.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"trgao"},"content":"### Implementation of appointments commands","lastModifiedDate":"2023-11-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"trgao"},"content":"The following diagram shows the overview of a generic appointment command `AppointmentXYZCommand` and the associated classes.","lastModifiedDate":"2023-11-12"},{"lineNumber":203,"author":{"gitId":"trgao"},"content":"The generic appointment command can be `Schedule`, `Reschedule`, etc..","lastModifiedDate":"2023-11-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"trgao"},"content":"![AppointmentCommandClassDiagram](images/AppointmentCommandClassDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"dinde2004"},"content":"### View all appointments feature","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"trgao"},"content":"#### Implementation","lastModifiedDate":"2023-11-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"dinde2004"},"content":"For _Appointments_ command, the noteworthy class is:","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"dinde2004"},"content":"- `AppointmentsCommand.java` - For execution of the view all appointments command.","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"dinde2004"},"content":"-- user input --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"dinde2004"},"content":"Step 1. User executes appointments command to view all appointments.","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"dinde2004"},"content":"-- `AddressBookParser` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"dinde2004"},"content":"Step 2. Returns new `AppointmentsCommand`","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"dinde2004"},"content":"-- `AppointmentsCommand` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"dinde2004"},"content":"Step 3. Shows all appointments.","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"dinde2004"},"content":"The following activity diagram shows how the view appointments operation works:","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"dinde2004"},"content":"![AppointmentsCommandActivityDiagram](images/AppointmentsCommandActivityDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"dinde2004"},"content":"### Cancel feature","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"trgao"},"content":"#### Implementation","lastModifiedDate":"2023-11-12"},{"lineNumber":230,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"dinde2004"},"content":"For _Cancel_ command, the noteworthy classes are:","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"dinde2004"},"content":"- `CancelCommandParser.java` - For passing the arguments to `CancelCommand`.","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"dinde2004"},"content":"- `CancelCommand.java` - For execution of the cancel appointment command.","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"dinde2004"},"content":"The following exceptions may be thrown during this process, namely:","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"dinde2004"},"content":"- ParseException for invalid index format","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"dinde2004"},"content":"- CommandException for index out of range","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"dinde2004"},"content":"  ","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"dinde2004"},"content":"-- user input --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"dinde2004"},"content":"Step 1. User executes cancel command with a valid appointment index.","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"dinde2004"},"content":"-- `AddressBookParser` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"dinde2004"},"content":"Step 2. Returns new `CancelCommandParser`.","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"dinde2004"},"content":"-- `CancelCommandParser` --   ","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"dinde2004"},"content":"Step 3. Verify that the index is correct.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"dinde2004"},"content":"Step 4. Returns new `CancelCommand`.","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"dinde2004"},"content":"-- `CancelCommand` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"dinde2004"},"content":"Step 5. Verify that the index is not out of range in the appointments list.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"dinde2004"},"content":"Step 6. Appointment is cancelled and deleted from the appointments list.","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"dinde2004"},"content":"The following activity diagram shows how the cancel operation works:","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"dinde2004"},"content":"![CancelCommandActivityDiagram](images/CancelCommandActivityDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"billieboy7"},"content":"### Schedule feature ","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"billieboy7"},"content":"[ScheduleCommandParser.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/parser/appointmentparser/ScheduleCommandParser.java","lastModifiedDate":"2023-11-11"},{"lineNumber":262,"author":{"gitId":"billieboy7"},"content":"[ScheduleCommand.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/commands/appointmentcommands/ScheduleCommand.java","lastModifiedDate":"2023-11-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":264,"author":{"gitId":"billieboy7"},"content":"#### Implementation","lastModifiedDate":"2023-11-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"billieboy7"},"content":"The implementation of the schedule feature is similar to the implementation for adding a patient. The Schedule command ","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"billieboy7"},"content":"takes in an _Appointment object_ (containing the Start Time, End Time and Appointment Description) and _Name object_ ","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"billieboy7"},"content":"(containing the name of the patient for whom the appointment is booked). ","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"billieboy7"},"content":"For _Schedule_ command, the noteworthy classes are:","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"billieboy7"},"content":"- [`ScheduleCommandParser.java`][ScheduleCommandParser.java] - For parsing the arguments to `ScheduleCommand`.","lastModifiedDate":"2023-10-25"},{"lineNumber":272,"author":{"gitId":"billieboy7"},"content":"- [`ScheduleCommand.java`][ScheduleCommand.java] - For execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"billieboy7"},"content":"The following exceptions may be thrown during this process, namely:","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"billieboy7"},"content":"- ParseException for missing arguments","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"billieboy7"},"content":"- ParseException for invalid arguments","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"billieboy7"},"content":"- ParseException for Appointment Start Time after Appointment End Time","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"billieboy7"},"content":"- CommandException for creating appointments for patients not in MediFlowR\u0027s records","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"billieboy7"},"content":"- CommandException for identical appointments","lastModifiedDate":"2023-10-25"},{"lineNumber":280,"author":{"gitId":"billieboy7"},"content":"- CommandException for appointments with clashing timeslots","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"billieboy7"},"content":"-- user input --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"billieboy7"},"content":"Step 1. User executes schedule command by starting command with the \u0027schedule\u0027 keyword, followed by ","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"billieboy7"},"content":"correct and valid arguments.","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"billieboy7"},"content":"-- `AddressBookParser` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"billieboy7"},"content":"Step 2. Returns new `ScheduleCommandParser`.","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"billieboy7"},"content":"-- `ScheduleCommandParser` --   ","lastModifiedDate":"2023-10-25"},{"lineNumber":290,"author":{"gitId":"billieboy7"},"content":"Step 3. Verify that all argument prefixes are present and that no duplicates exist.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"billieboy7"},"content":"Step 4. Verify that provided arguments are valid.     ","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"billieboy7"},"content":"Step 5. Returns new `ScheduleCommand`.","lastModifiedDate":"2023-10-25"},{"lineNumber":293,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":294,"author":{"gitId":"billieboy7"},"content":"-- `ScheduleCommand` --   ","lastModifiedDate":"2023-10-25"},{"lineNumber":295,"author":{"gitId":"billieboy7"},"content":"Step 6. Verify that the patient for whom the Appointment is created exists in MediFlowR\u0027s records.   ","lastModifiedDate":"2023-10-25"},{"lineNumber":296,"author":{"gitId":"billieboy7"},"content":"Step 7. Verify that the Appointment Start Time appears before the Appointment End Time.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":297,"author":{"gitId":"billieboy7"},"content":"Step 8. Verify that the same appointment has not already been added.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":298,"author":{"gitId":"billieboy7"},"content":"Step 9. Verify that the new appointment to be added does not have time conflict with another appointment on the ","lastModifiedDate":"2023-10-25"},{"lineNumber":299,"author":{"gitId":"billieboy7"},"content":"same day.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":300,"author":{"gitId":"billieboy7"},"content":"Step 10. Appointment is scheduled. ","lastModifiedDate":"2023-10-25"},{"lineNumber":301,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":302,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":303,"author":{"gitId":"billieboy7"},"content":"The following activity diagram shows how the schedule operation works:","lastModifiedDate":"2023-10-25"},{"lineNumber":304,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"billieboy7"},"content":"![ScheduleCommandActivityDiagram](images/ScheduleCommandActivityDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2023-11-13"},{"lineNumber":308,"author":{"gitId":"billieboy7"},"content":"1. We decided to make the Schedule Feature case-sensitive. The patient name provided by the user must match the patient name in MediFlowR\u0027s","lastModifiedDate":"2023-11-13"},{"lineNumber":309,"author":{"gitId":"billieboy7"},"content":"records (even case sensitivity). The rationale is as such:","lastModifiedDate":"2023-11-13"},{"lineNumber":310,"author":{"gitId":"billieboy7"},"content":"   * Currently, in our application, it is possible for 2 patients to be created with names \u0027John Doe\u0027 and \u0027John doe\u0027. ","lastModifiedDate":"2023-11-13"},{"lineNumber":311,"author":{"gitId":"billieboy7"},"content":"A case-insensitive Schedule command for \u0027John Doe\u0027 will cause a conflict. Thus, we have mandated that for the Schedule Feature, ","lastModifiedDate":"2023-11-13"},{"lineNumber":312,"author":{"gitId":"billieboy7"},"content":"the patient name have an exact match with the patient name in our database. This also reduces the chances of the user accidentally","lastModifiedDate":"2023-11-13"},{"lineNumber":313,"author":{"gitId":"billieboy7"},"content":"scheduling an appointment for the wrong patient but ensuring that the user conscientiously schedules an appointment for the specific patient.","lastModifiedDate":"2023-11-13"},{"lineNumber":314,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":315,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":316,"author":{"gitId":"kwangthiag"},"content":"### Reschedule feature","lastModifiedDate":"2023-10-25"},{"lineNumber":317,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":318,"author":{"gitId":"trgao"},"content":"[RescheduleCommandParser.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/parser/appointmentparser/RescheduleCommandParser.java","lastModifiedDate":"2023-10-25"},{"lineNumber":319,"author":{"gitId":"trgao"},"content":"[RescheduleCommand.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/commands/appointmentcommands/RescheduleCommand.java","lastModifiedDate":"2023-10-25"},{"lineNumber":320,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":321,"author":{"gitId":"trgao"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":322,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":323,"author":{"gitId":"kwangthiag"},"content":"For _Reschedule_ command, the noteworthy classes are:","lastModifiedDate":"2023-10-25"},{"lineNumber":324,"author":{"gitId":"kwangthiag"},"content":"- [`RescheduleCommandParser.java`][RescheduleCommandParser.java] - For parsing the arguments to `RescheduleCommand`.","lastModifiedDate":"2023-10-25"},{"lineNumber":325,"author":{"gitId":"kwangthiag"},"content":"- [`RescheduleCommand.java`][RescheduleCommand.java] - For execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":326,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":327,"author":{"gitId":"kwangthiag"},"content":"The following exceptions may be thrown during this process, namely:","lastModifiedDate":"2023-10-25"},{"lineNumber":328,"author":{"gitId":"kwangthiag"},"content":"- ParseException for missing arguments","lastModifiedDate":"2023-10-25"},{"lineNumber":329,"author":{"gitId":"kwangthiag"},"content":"- ParseException for invalid arguments","lastModifiedDate":"2023-10-25"},{"lineNumber":330,"author":{"gitId":"kwangthiag"},"content":"- CommandException for index out of range","lastModifiedDate":"2023-10-25"},{"lineNumber":331,"author":{"gitId":"kwangthiag"},"content":"- CommandException for identical appointments","lastModifiedDate":"2023-10-25"},{"lineNumber":332,"author":{"gitId":"kwangthiag"},"content":"- CommandException for appointments with clashing timeslots","lastModifiedDate":"2023-10-25"},{"lineNumber":333,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":334,"author":{"gitId":"kwangthiag"},"content":"-- user input --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":335,"author":{"gitId":"kwangthiag"},"content":"Step 1. User executes reschedule command with correct and valid arguments.","lastModifiedDate":"2023-10-25"},{"lineNumber":336,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":337,"author":{"gitId":"kwangthiag"},"content":"-- `AddressBookParser` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":338,"author":{"gitId":"kwangthiag"},"content":"Step 2. Returns new `RescheduleCommandParser`.","lastModifiedDate":"2023-10-25"},{"lineNumber":339,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":340,"author":{"gitId":"kwangthiag"},"content":"-- `RescheduleCommandParser` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":341,"author":{"gitId":"kwangthiag"},"content":"Step 3. Verify that all argument prefixes are present.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":342,"author":{"gitId":"kwangthiag"},"content":"Step 4. Verify that provided arguments are valid.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":343,"author":{"gitId":"kwangthiag"},"content":"Step 5. Returns new `RescheduleCommand`.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":344,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":345,"author":{"gitId":"kwangthiag"},"content":"-- `RescheduleCommand` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":346,"author":{"gitId":"kwangthiag"},"content":"Step 6. Verify that the given index exist in UniqueAppointmentList.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":347,"author":{"gitId":"kwangthiag"},"content":"Step 7. Verify that the new appointment to be added does not have time conflict with another appointment on the same day.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":348,"author":{"gitId":"kwangthiag"},"content":"Step 8. Verify that the same appointment has not already been added.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":349,"author":{"gitId":"kwangthiag"},"content":"Step 9. Appointment is rescheduled.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":350,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":351,"author":{"gitId":"kwangthiag"},"content":"The following activity diagram shows how the reschedule operation works:","lastModifiedDate":"2023-10-25"},{"lineNumber":352,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":353,"author":{"gitId":"kwangthiag"},"content":"![RescheduleCommandActivityDiagram](images/RescheduleCommandActivityDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":354,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":355,"author":{"gitId":"billieboy7"},"content":"### Find patient appointments feature","lastModifiedDate":"2023-11-11"},{"lineNumber":356,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":357,"author":{"gitId":"billieboy7"},"content":"[FindAppointmentCommandParser.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/parser/appointmentparser/FindAppointmentCommandParser.java","lastModifiedDate":"2023-11-11"},{"lineNumber":358,"author":{"gitId":"billieboy7"},"content":"[FindAppointmentCommand.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/commands/appointmentcommands/FindAppointmentCommand.java","lastModifiedDate":"2023-11-11"},{"lineNumber":359,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":360,"author":{"gitId":"licongshen12"},"content":"#### Implementation","lastModifiedDate":"2023-11-12"},{"lineNumber":361,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":362,"author":{"gitId":"billieboy7"},"content":"For _FindAppointment_ command, the noteworthy classes involved are:","lastModifiedDate":"2023-11-11"},{"lineNumber":363,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":364,"author":{"gitId":"billieboy7"},"content":"- `LogicManager.java` - Calls the address book parser.","lastModifiedDate":"2023-11-13"},{"lineNumber":365,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":366,"author":{"gitId":"billieboy7"},"content":"- `AddressBookParser.java` - For passing the arguments to `FindAppointmentCommandParser`.","lastModifiedDate":"2023-11-13"},{"lineNumber":367,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":368,"author":{"gitId":"billieboy7"},"content":"- [`FindAppointmentCommandParser.java`][FindAppointmentCommandParser.java] - This parses the user input, checks for its validity and creates a new `FindAppointmentCommand` object.","lastModifiedDate":"2023-11-11"},{"lineNumber":369,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":370,"author":{"gitId":"billieboy7"},"content":"- [`FindAppointmentCommand.java`][FindAppointmentCommand.java] - This command object executes to update the filtered appointments list to show all appointments that is tagged to a patient whose named is specified through the keyword. ","lastModifiedDate":"2023-11-11"},{"lineNumber":371,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":372,"author":{"gitId":"billieboy7"},"content":"Let\u0027s take a valid user input, `find-a John`, as an example.","lastModifiedDate":"2023-11-13"},{"lineNumber":373,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":374,"author":{"gitId":"billieboy7"},"content":"-- user input: `find-a John` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":375,"author":{"gitId":"billieboy7"},"content":"Step 1. Logic Manager parses the user input through the AddressBookParser.","lastModifiedDate":"2023-11-13"},{"lineNumber":376,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":377,"author":{"gitId":"billieboy7"},"content":"-- `AddressBookParser` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":378,"author":{"gitId":"billieboy7"},"content":"Step 2. AddressBookParser identifies the command word `find-a`.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":379,"author":{"gitId":"billieboy7"},"content":"Step 3. Returns FindAppointmentCommandParser().parse(arguments) (in this case arguments \u003d `John`)","lastModifiedDate":"2023-11-13"},{"lineNumber":380,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":381,"author":{"gitId":"billieboy7"},"content":"-- `FindAppointmentCommandParser` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":382,"author":{"gitId":"billieboy7"},"content":"Step 4. FindAppointmentCommandParser takes in arguments (`John`) and uses the arguments to create the PatientContainsKeywordsPredicate object.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":383,"author":{"gitId":"billieboy7"},"content":"Step 5. Returns a FindAppointmentCommand object which takes in the PatientContainsKeywordsPredicate object as a parameter.","lastModifiedDate":"2023-11-13"},{"lineNumber":384,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":385,"author":{"gitId":"billieboy7"},"content":"-- `FindAppointmentCommand` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":386,"author":{"gitId":"billieboy7"},"content":"Step 6. The PatientContainsKeywordsPredicate object is saved in the FindAppointmentCommand object.","lastModifiedDate":"2023-11-13"},{"lineNumber":387,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":388,"author":{"gitId":"billieboy7"},"content":"-- `LogicManager` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":389,"author":{"gitId":"billieboy7"},"content":"Step 7. The FindAppointmentCommand object is returned and its execute(model) method is triggered.   ","lastModifiedDate":"2023-11-13"},{"lineNumber":390,"author":{"gitId":"billieboy7"},"content":"Step 8. The filtered appointment list in the model is updated using the PatientContainsKeywordsPredicate.   ","lastModifiedDate":"2023-11-13"},{"lineNumber":391,"author":{"gitId":"billieboy7"},"content":"Step 9. Returns a CommandResult which then leads to the updated filtered appointment list to be displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":392,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":393,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":394,"author":{"gitId":"billieboy7"},"content":"Note: ","lastModifiedDate":"2023-11-11"},{"lineNumber":395,"author":{"gitId":"billieboy7"},"content":"1) Multiple keywords, denoted by a space, can be used. ","lastModifiedDate":"2023-11-11"},{"lineNumber":396,"author":{"gitId":"billieboy7"},"content":"2) Patient name must be an exact match to any one of the keywords keyed into the program (CASE-INSENSITIVE). ","lastModifiedDate":"2023-11-11"},{"lineNumber":397,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":398,"author":{"gitId":"billieboy7"},"content":"The following sequence diagram shows how the find appointment command works:","lastModifiedDate":"2023-11-11"},{"lineNumber":399,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":400,"author":{"gitId":"billieboy7"},"content":"![FindAppointmentCommandSequenceDiagram](images/FindAppointmentCommandSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":401,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":402,"author":{"gitId":"trgao"},"content":"### Display upcoming appointments feature","lastModifiedDate":"2023-10-25"},{"lineNumber":403,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":404,"author":{"gitId":"trgao"},"content":"[UpcomingCommandParser.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/parser/appointmentparser/UpcomingCommandParser.java","lastModifiedDate":"2023-10-25"},{"lineNumber":405,"author":{"gitId":"trgao"},"content":"[UpcomingCommand.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/commands/appointmentcommands/UpcomingCommand.java","lastModifiedDate":"2023-10-25"},{"lineNumber":406,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":407,"author":{"gitId":"trgao"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":408,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":409,"author":{"gitId":"trgao"},"content":"For _Upcoming_ command, the noteworthy classes involved are:","lastModifiedDate":"2023-10-25"},{"lineNumber":410,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":411,"author":{"gitId":"trgao"},"content":"- [`UpcomingCommandParser.java`][UpcomingCommandParser.java] - This parses the user input and creates a new `UpcomingCommand` object.","lastModifiedDate":"2023-10-25"},{"lineNumber":412,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":413,"author":{"gitId":"trgao"},"content":"- [`UpcomingCommand.java`][UpcomingCommand.java] - This command object executes to update the filtered appointments list to show all upcoming appointments (appointments after the current time) in the application.","lastModifiedDate":"2023-10-25"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":415,"author":{"gitId":"trgao"},"content":"The feature is implemented by updating the filtered appointment list stored in the model with a predicate that will only display","lastModifiedDate":"2023-10-25"},{"lineNumber":416,"author":{"gitId":"trgao"},"content":"appointments with start date times after the current date time.","lastModifiedDate":"2023-10-25"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":418,"author":{"gitId":"trgao"},"content":"The following sequence diagram shows how the upcoming command works:","lastModifiedDate":"2023-10-25"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":420,"author":{"gitId":"trgao"},"content":"![UpcomingCommandSequenceDiagram](images/UpcomingCommandSequenceDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":422,"author":{"gitId":"kwangthiag"},"content":"### Sort patients/appointment features","lastModifiedDate":"2023-11-13"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":424,"author":{"gitId":"kwangthiag"},"content":"[SortPatientCommandParser.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/parser/personparser/SortPatientCommandParser.java","lastModifiedDate":"2023-11-11"},{"lineNumber":425,"author":{"gitId":"kwangthiag"},"content":"[SortPatientCommand.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/commands/personcommands/SortPatientCommand.java","lastModifiedDate":"2023-11-11"},{"lineNumber":426,"author":{"gitId":"kwangthiag"},"content":"[SortCommandParser.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/parser/appointmentparser/SortCommandParser.java","lastModifiedDate":"2023-11-13"},{"lineNumber":427,"author":{"gitId":"kwangthiag"},"content":"[SortCommand.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/commands/appointmentcommands/SortCommand.java","lastModifiedDate":"2023-11-13"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":429,"author":{"gitId":"kwangthiag"},"content":"#### Implementation","lastModifiedDate":"2023-11-11"},{"lineNumber":430,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":431,"author":{"gitId":"kwangthiag"},"content":"For _sort-p_ and _sort-a_ commands, the noteworthy classes involved are:","lastModifiedDate":"2023-11-13"},{"lineNumber":432,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":433,"author":{"gitId":"kwangthiag"},"content":"- [`SortPatientCommandParser.java`][SortPatientCommandParser.java] - This parses the user input and creates a new `SortPatientCommand` object.  ","lastModifiedDate":"2023-11-11"},{"lineNumber":434,"author":{"gitId":"kwangthiag"},"content":"- [`SortPatientCommand.java`][SortPatientCommand.java] - This command object executes to sort the patient list by ascending or descending order and by the given attribute to sort by.","lastModifiedDate":"2023-11-11"},{"lineNumber":435,"author":{"gitId":"kwangthiag"},"content":"- [`SortCommandParser.java`][SortCommandParser.java] - This parses the user input and creates a new `SortCommand` object.","lastModifiedDate":"2023-11-13"},{"lineNumber":436,"author":{"gitId":"kwangthiag"},"content":"- [`SortCommand.java`][SortCommand.java] - This command object executes to sort the appointment list by ascending or descending order and by the given attribute to sort by.","lastModifiedDate":"2023-11-13"},{"lineNumber":437,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":438,"author":{"gitId":"kwangthiag"},"content":"The following exceptions may be thrown during this process, namely:","lastModifiedDate":"2023-11-13"},{"lineNumber":439,"author":{"gitId":"kwangthiag"},"content":"- ParseException for missing arguments","lastModifiedDate":"2023-11-13"},{"lineNumber":440,"author":{"gitId":"kwangthiag"},"content":"- ParseException for invalid arguments","lastModifiedDate":"2023-11-13"},{"lineNumber":441,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":442,"author":{"gitId":"kwangthiag"},"content":"The feature is implemented by sorting the unfiltered patient/appointment list stored in the model with using a custom comparator depending on each attribute.","lastModifiedDate":"2023-11-13"},{"lineNumber":443,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":444,"author":{"gitId":"kwangthiag"},"content":"Given below is an example usage scenario and how the sort-p/sort-a mechanism behaves at each step.","lastModifiedDate":"2023-11-13"},{"lineNumber":445,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":446,"author":{"gitId":"kwangthiag"},"content":"-- user input --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":447,"author":{"gitId":"kwangthiag"},"content":"Step 1. User executes sort-p/sort-a command with correct and valid arguments.","lastModifiedDate":"2023-11-13"},{"lineNumber":448,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":449,"author":{"gitId":"kwangthiag"},"content":"-- `AddressBookParser` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":450,"author":{"gitId":"kwangthiag"},"content":"Step 2. Returns new `SortPatientCommandParser`/`SortCommandParser`.","lastModifiedDate":"2023-11-13"},{"lineNumber":451,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":452,"author":{"gitId":"kwangthiag"},"content":"-- `SortPatientCommandParser`/`SortCommandParser` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":453,"author":{"gitId":"kwangthiag"},"content":"Step 3. Verify that all argument prefixes are present.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":454,"author":{"gitId":"kwangthiag"},"content":"Step 4. Verify that provided arguments are valid.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":455,"author":{"gitId":"kwangthiag"},"content":"Step 5. Returns new `SortPatientCommand`/`SortCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":456,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":457,"author":{"gitId":"kwangthiag"},"content":"-- `SortPatientCommand`/`SortCommand` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":458,"author":{"gitId":"kwangthiag"},"content":"Step 6. Patient/Appointment list is sorted.","lastModifiedDate":"2023-11-13"},{"lineNumber":459,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":460,"author":{"gitId":"kwangthiag"},"content":"The following sequence diagram shows how the sort patient command works:","lastModifiedDate":"2023-11-11"},{"lineNumber":461,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":462,"author":{"gitId":"kwangthiag"},"content":"![SortPatientCommandSequenceDiagram](images/SortPatientCommandSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":463,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":464,"author":{"gitId":"kwangthiag"},"content":"#### Design considerations:","lastModifiedDate":"2023-11-11"},{"lineNumber":465,"author":{"gitId":"kwangthiag"},"content":"1. We decided to implement the comparator for names to compare the names after the names have been converted to lower case. This is as we want it to be sorted in that order, where john doe is considered smaller than Kevin Porter Jr.","lastModifiedDate":"2023-11-11"},{"lineNumber":466,"author":{"gitId":"kwangthiag"},"content":"2. We eventually want to sort from distance from the current location of the machine so we made the attributes easily expandable for future support.","lastModifiedDate":"2023-11-11"},{"lineNumber":467,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":468,"author":{"gitId":"kwangthiag"},"content":"#### Additional Info:","lastModifiedDate":"2023-11-11"},{"lineNumber":469,"author":{"gitId":"kwangthiag"},"content":"1. The sort command under appointments is implemented similarly but sorts the appointment list either by priority or time.","lastModifiedDate":"2023-11-11"},{"lineNumber":470,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":471,"author":{"gitId":"kwangthiag"},"content":"### Diagnose/Undiagnose Feature","lastModifiedDate":"2023-11-13"},{"lineNumber":472,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":473,"author":{"gitId":"kwangthiag"},"content":"[DiagnoseCommandParser.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/parser/personparser/DiagnoseCommandParser.java","lastModifiedDate":"2023-11-13"},{"lineNumber":474,"author":{"gitId":"kwangthiag"},"content":"[DiagnoseCommand.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/commands/personcommands/DiagnoseCommand.java","lastModifiedDate":"2023-11-13"},{"lineNumber":475,"author":{"gitId":"kwangthiag"},"content":"[UndiagnoseCommandParser.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/parser/personparser/UndiagnoseCommandParser.java","lastModifiedDate":"2023-11-13"},{"lineNumber":476,"author":{"gitId":"kwangthiag"},"content":"[UndiagnoseCommand.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/commands/personcommands/UndiagnoseCommand.java","lastModifiedDate":"2023-11-13"},{"lineNumber":477,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":478,"author":{"gitId":"kwangthiag"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":479,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":480,"author":{"gitId":"kwangthiag"},"content":"For _Diagnose/Undiagnose_ command, the noteworthy classes are:","lastModifiedDate":"2023-11-13"},{"lineNumber":481,"author":{"gitId":"kwangthiag"},"content":"- [`DiagnoseCommandParser.java`][DiagnoseCommandParser.java] - For parsing the arguments to `DiagnoseCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":482,"author":{"gitId":"kwangthiag"},"content":"- [`UndiagnoseCommandParser.java`][UndiagnoseCommandParser.java]- For parsing the arguments to `UndiagnoseCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":483,"author":{"gitId":"kwangthiag"},"content":"- [`DiagnoseCommand.java`][DiagnoseCommand.java] - For execution.","lastModifiedDate":"2023-11-13"},{"lineNumber":484,"author":{"gitId":"kwangthiag"},"content":"- [`UndiagnoseCommand.java`][UndiagnoseCommand.java] - For execution.","lastModifiedDate":"2023-11-13"},{"lineNumber":485,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":486,"author":{"gitId":"kwangthiag"},"content":"The following exceptions may be thrown during this process, namely:","lastModifiedDate":"2023-11-13"},{"lineNumber":487,"author":{"gitId":"kwangthiag"},"content":"- ParseException for missing arguments","lastModifiedDate":"2023-11-13"},{"lineNumber":488,"author":{"gitId":"kwangthiag"},"content":"- ParseException for invalid arguments","lastModifiedDate":"2023-11-13"},{"lineNumber":489,"author":{"gitId":"kwangthiag"},"content":"- CommandException for invalid index","lastModifiedDate":"2023-11-13"},{"lineNumber":490,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":491,"author":{"gitId":"kwangthiag"},"content":"Given below is an example usage scenario and how the diagnose mechanism behaves at each step.","lastModifiedDate":"2023-11-13"},{"lineNumber":492,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":493,"author":{"gitId":"kwangthiag"},"content":"-- user input --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":494,"author":{"gitId":"kwangthiag"},"content":"Step 1. User executes diagnose command with correct and valid arguments.","lastModifiedDate":"2023-11-13"},{"lineNumber":495,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":496,"author":{"gitId":"kwangthiag"},"content":"-- `AddressBookParser` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":497,"author":{"gitId":"kwangthiag"},"content":"Step 2. Returns new `DiagnoseCommandParser`.","lastModifiedDate":"2023-11-13"},{"lineNumber":498,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":499,"author":{"gitId":"kwangthiag"},"content":"-- `DiagnoseCommandParser` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":500,"author":{"gitId":"kwangthiag"},"content":"Step 3. Verify that all argument prefixes are present.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":501,"author":{"gitId":"kwangthiag"},"content":"Step 4. Verify that provided arguments are valid.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":502,"author":{"gitId":"kwangthiag"},"content":"Step 5. Calls ParserUtil#parseIllnesses() to create the set of illnesses.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":503,"author":{"gitId":"kwangthiag"},"content":"Step 6. Returns new `DiagnoseCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":504,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":505,"author":{"gitId":"kwangthiag"},"content":"-- `DiagnoseCommand` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":506,"author":{"gitId":"kwangthiag"},"content":"Step 7. Calls DiagnoseCommand#createDiagnosedPerson() to add the set of illnesses to the patients existing set of illnesses.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":507,"author":{"gitId":"kwangthiag"},"content":"Step 8. Check which illnesses were already inside to feedback to user.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":508,"author":{"gitId":"kwangthiag"},"content":"Step 9. Patient is diagnosed.","lastModifiedDate":"2023-11-13"},{"lineNumber":509,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":510,"author":{"gitId":"kwangthiag"},"content":"Given below is an example usage scenario and how the undiagnose mechanism behaves at each step.","lastModifiedDate":"2023-11-13"},{"lineNumber":511,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":512,"author":{"gitId":"kwangthiag"},"content":"-- user input --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":513,"author":{"gitId":"kwangthiag"},"content":"Step 1. User executes undiagnose command with correct and valid arguments.","lastModifiedDate":"2023-11-13"},{"lineNumber":514,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":515,"author":{"gitId":"kwangthiag"},"content":"-- `AddressBookParser` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":516,"author":{"gitId":"kwangthiag"},"content":"Step 2. Returns new `UndiagnoseCommandParser`.","lastModifiedDate":"2023-11-13"},{"lineNumber":517,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":518,"author":{"gitId":"kwangthiag"},"content":"-- `UndiagnoseCommandParser` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":519,"author":{"gitId":"kwangthiag"},"content":"Step 3. Verify that all argument prefixes are present.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":520,"author":{"gitId":"kwangthiag"},"content":"Step 4. Verify that provided arguments are valid.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":521,"author":{"gitId":"kwangthiag"},"content":"Step 5. Calls ParserUtil#parseIllnesses() to create the set of illnesses.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":522,"author":{"gitId":"kwangthiag"},"content":"Step 6. Returns new `UndiagnoseCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":523,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":524,"author":{"gitId":"kwangthiag"},"content":"-- `UndiagnoseCommand` --  ","lastModifiedDate":"2023-11-13"},{"lineNumber":525,"author":{"gitId":"kwangthiag"},"content":"Step 7. Calls UndiagnoseCommand#createUndiagnosedPerson() to remove the set of illnesses to the patients existing set of illnesses.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":526,"author":{"gitId":"kwangthiag"},"content":"Step 8. Check which illnesses were never inside to feedback to user.  ","lastModifiedDate":"2023-11-13"},{"lineNumber":527,"author":{"gitId":"kwangthiag"},"content":"Step 9. Patient is undiagnosed.","lastModifiedDate":"2023-11-13"},{"lineNumber":528,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":529,"author":{"gitId":"kwangthiag"},"content":"The following sequence diagram shows how the diagnose patient command works:","lastModifiedDate":"2023-11-13"},{"lineNumber":530,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":531,"author":{"gitId":"kwangthiag"},"content":"![DiagnoseCommandSequenceDiagram](images/DiagnoseCommandSequenceDiagram.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":532,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":533,"author":{"gitId":"trgao"},"content":"### Undo/Redo Feature","lastModifiedDate":"2023-10-25"},{"lineNumber":534,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":535,"author":{"gitId":"licongshen12"},"content":"[UndoCommandParser.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/parser/UndoCommandParser.java","lastModifiedDate":"2023-10-25"},{"lineNumber":536,"author":{"gitId":"licongshen12"},"content":"[UndoCommand.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/commands/UndoCommand.java","lastModifiedDate":"2023-10-25"},{"lineNumber":537,"author":{"gitId":"licongshen12"},"content":"[RedoCommandParser.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/parser/RedoCommandParser.java","lastModifiedDate":"2023-10-25"},{"lineNumber":538,"author":{"gitId":"licongshen12"},"content":"[RedoCommand.java]: https://github.com/AY2324S1-CS2103T-T08-4/tp/blob/master/src/main/java/seedu/address/logic/commands/RedoCommand.java","lastModifiedDate":"2023-10-25"},{"lineNumber":539,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":540,"author":{"gitId":"trgao"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":541,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":542,"author":{"gitId":"licongshen12"},"content":"For _Undo/Redo_ command, the noteworthy classes are:","lastModifiedDate":"2023-10-25"},{"lineNumber":543,"author":{"gitId":"licongshen12"},"content":"- [`UndoCommandParser.java`][UndoCommandParser.java] - For parsing the arguments to `UndoCommand`.","lastModifiedDate":"2023-10-25"},{"lineNumber":544,"author":{"gitId":"kwangthiag"},"content":"- [`RedoCommandParser.java`][RedoCommandParser.java] - For parsing the arguments to `RedoCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":545,"author":{"gitId":"licongshen12"},"content":"- [`UndoCommand.java`][UndoCommand.java] - For execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":546,"author":{"gitId":"kwangthiag"},"content":"- [`RedoCommand.java`][RedoCommand.java] - For execution.","lastModifiedDate":"2023-11-13"},{"lineNumber":547,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":548,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":549,"author":{"gitId":"kwangthiag"},"content":"The following sequence diagram shows how the undo command works:","lastModifiedDate":"2023-11-13"},{"lineNumber":550,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":551,"author":{"gitId":"licongshen12"},"content":"![UndoCommandSequenceDiagram](images/UndoCommandSequenceDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":552,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":553,"author":{"gitId":"licongshen12"},"content":"The following exceptions may be thrown during this process, namely:","lastModifiedDate":"2023-10-25"},{"lineNumber":554,"author":{"gitId":"licongshen12"},"content":"- ParseException for additional arguments with undo/redo command","lastModifiedDate":"2023-10-25"},{"lineNumber":555,"author":{"gitId":"licongshen12"},"content":"- CommandException for attempting to execute undo when there is no command to undo","lastModifiedDate":"2023-10-25"},{"lineNumber":556,"author":{"gitId":"licongshen12"},"content":"- CommandException for attempting to execute redo when there is no undone command to redo","lastModifiedDate":"2023-10-25"},{"lineNumber":557,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":558,"author":{"gitId":"licongshen12"},"content":"Given below is an example usage scenario of how the _Undo_ command executes.","lastModifiedDate":"2023-10-25"},{"lineNumber":559,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":560,"author":{"gitId":"licongshen12"},"content":"-- user input --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":561,"author":{"gitId":"licongshen12"},"content":"Step 1. User executes a valid `add` command.","lastModifiedDate":"2023-10-25"},{"lineNumber":562,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":563,"author":{"gitId":"licongshen12"},"content":"-- `AddCommand` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":564,"author":{"gitId":"licongshen12"},"content":"Step 2. Adds the `add` command as recent command.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":565,"author":{"gitId":"licongshen12"},"content":"Step 3. Adds the added `person` as new patient.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":566,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":567,"author":{"gitId":"licongshen12"},"content":"-- user input --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":568,"author":{"gitId":"licongshen12"},"content":"Step 4. User executes `undo` command.","lastModifiedDate":"2023-10-25"},{"lineNumber":569,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":570,"author":{"gitId":"licongshen12"},"content":"-- `UndoCommand` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":571,"author":{"gitId":"licongshen12"},"content":"Step 5. Verify that there is a command to undo.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":572,"author":{"gitId":"licongshen12"},"content":"Step 6. Undo the most recent command (deletes the new patient).  ","lastModifiedDate":"2023-10-25"},{"lineNumber":573,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":574,"author":{"gitId":"licongshen12"},"content":"-- `RedoCommand` --  ","lastModifiedDate":"2023-10-25"},{"lineNumber":575,"author":{"gitId":"licongshen12"},"content":"Step 7. Verify that there is an undone command to undo.  ","lastModifiedDate":"2023-10-25"},{"lineNumber":576,"author":{"gitId":"licongshen12"},"content":"Step 8. Redo the most recent undone command (restores the deleted patient).  ","lastModifiedDate":"2023-10-25"},{"lineNumber":577,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":578,"author":{"gitId":"licongshen12"},"content":"The execution can be seen in the activity diagram given below.","lastModifiedDate":"2023-10-25"},{"lineNumber":579,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":580,"author":{"gitId":"licongshen12"},"content":"_Activity Diagram for a typical `undo` command_","lastModifiedDate":"2023-10-25"},{"lineNumber":581,"author":{"gitId":"licongshen12"},"content":"![UndoCommandActivityDiagram.png](images/UndoCommandActivityDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":582,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":583,"author":{"gitId":"licongshen12"},"content":"#### Design considerations:","lastModifiedDate":"2023-11-12"},{"lineNumber":584,"author":{"gitId":"licongshen12"},"content":"1. undoHistory and redoHistory are implemented with stacks as the behavior of always operating on the most recent action is consistent with the Last-In-First-Out (LIFO) nature of a stack.","lastModifiedDate":"2023-11-14"},{"lineNumber":585,"author":{"gitId":"licongshen12"},"content":"2. Although storing the state of the program after every user action is not memory efficient, our test runs revealed that the memory usage was insignificant and thus this design can be safely implemented.","lastModifiedDate":"2023-11-12"},{"lineNumber":586,"author":{"gitId":"licongshen12"},"content":"3. The undo/redo commands does not support the following commands: `appointments`, `find`, `today`, `upcoming`, `find-i`, `find-p`, `patients`, `exit`, `help` and `list`. The rationale is as such:","lastModifiedDate":"2023-11-12"},{"lineNumber":587,"author":{"gitId":"licongshen12"},"content":"    * The `find`, `today` and `upcoming` commands can be undone by the `appointments` and `list` command and vice versa.","lastModifiedDate":"2023-11-12"},{"lineNumber":588,"author":{"gitId":"licongshen12"},"content":"    * The `find-i` and `find-p` commands can be undone by the `patients` and `list` vice versa.","lastModifiedDate":"2023-11-12"},{"lineNumber":589,"author":{"gitId":"licongshen12"},"content":"    * The `exit` and `help` commands do not operate on the data, hence there is no need for them to be undone","lastModifiedDate":"2023-11-12"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":592,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":597,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":598,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":599,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":600,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2023-10-04"},{"lineNumber":609,"author":{"gitId":"trgao"},"content":"Healthcare Professionals who","lastModifiedDate":"2023-10-04"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"trgao"},"content":"* have a need to manage a significant number of patients at any given time","lastModifiedDate":"2023-11-12"},{"lineNumber":612,"author":{"gitId":"trgao"},"content":"* can add, update, delete and search patient records","lastModifiedDate":"2023-10-04"},{"lineNumber":613,"author":{"gitId":"trgao"},"content":"* are required to update, access and track multiple patients\u0027 treatment history","lastModifiedDate":"2023-10-04"},{"lineNumber":614,"author":{"gitId":"billieboy7"},"content":"* manage the scheduling, rescheduling and cancelling of appointments","lastModifiedDate":"2023-10-04"},{"lineNumber":615,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"trgao"},"content":"* prefer typing to mouse interactions","lastModifiedDate":"2023-10-04"},{"lineNumber":618,"author":{"gitId":"trgao"},"content":"* are reasonably comfortable using CLI apps","lastModifiedDate":"2023-10-04"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"billieboy7"},"content":"**Value proposition**: manage patients\u0027 medical records faster than a typical GUI driven app in a systematic manner","lastModifiedDate":"2023-10-04"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"trgao"},"content":"| Priority | As a …                  | I want to …                                                                                    | So that I can…                                                                   |","lastModifiedDate":"2023-10-25"},{"lineNumber":627,"author":{"gitId":"trgao"},"content":"|----------|-------------------------|------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-25"},{"lineNumber":628,"author":{"gitId":"trgao"},"content":"| `* * *`  | healthcare professional | create new patient records with relevant demographic information                               | add new patient records into the system                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":629,"author":{"gitId":"trgao"},"content":"| `* * *`  | healthcare professional | update patient records as needed                                                               | keep the patient\u0027s information accurate and up to date                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":630,"author":{"gitId":"trgao"},"content":"| `* * *`  | healthcare professional | delete patient records as needed                                                               | remove unused/outdated patient records                                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":631,"author":{"gitId":"trgao"},"content":"| `* * *`  | healthcare professional | search and retrieve patient records using their name quickly                                   | find the necessary information efficiently without going through the entire list |","lastModifiedDate":"2023-10-04"},{"lineNumber":632,"author":{"gitId":"trgao"},"content":"| `* * *`  | healthcare professional | list all patients currently recorded in the system                                             | see the general workload of the service.                                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":633,"author":{"gitId":"trgao"},"content":"| `* * *`  | healthcare professional | sort patients by their name or birthdate                                                       | quickly organise the patients in the order I want                                |","lastModifiedDate":"2023-11-12"},{"lineNumber":634,"author":{"gitId":"trgao"},"content":"| `* * *`  | healthcare professional | schedule appointments for patients                                                             | set the date and time of patients\u0027 next appointment                              |","lastModifiedDate":"2023-10-04"},{"lineNumber":635,"author":{"gitId":"trgao"},"content":"| `* * *`  | healthcare professional | reschedule appointments when necessary                                                         | make sure my schedule does not clash with the appointments                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":636,"author":{"gitId":"trgao"},"content":"| `* * *`  | healthcare professional | cancel appointments when necessary                                                             | clear up my schedule if a patient is not able to make it                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":637,"author":{"gitId":"trgao"},"content":"| `* * *`  | healthcare professional | sort appointments by date or patient name                                                      | quickly organise the appointments in a chronological order                       |","lastModifiedDate":"2023-11-12"},{"lineNumber":638,"author":{"gitId":"trgao"},"content":"| `* *`    | healthcare professional | add custom remarks to a patient\u0027s appointment                                                  | give them detailed instructions and feedback after consultation                  |","lastModifiedDate":"2023-11-12"},{"lineNumber":639,"author":{"gitId":"trgao"},"content":"| `* *`    | healthcare professional | view a calendar with all scheduled appointments                                                | plan my day effectively                                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":640,"author":{"gitId":"trgao"},"content":"| `*`      | healthcare professional | schedule appointments for patients and assign them to specific doctors with matching schedules | efficiently match patients with free doctors                                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":641,"author":{"gitId":"trgao"},"content":"| `*`      | healthcare professional | set reminders to patients for follow-up appointments                                           | ensure that patients know about the follow-up appointments                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"kwangthiag"},"content":"(For all use cases below, the **System** is the `MediFlowR (MFR)` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-04"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"licongshen12"},"content":"**Use case 1 (UC1): Add a patient**","lastModifiedDate":"2023-11-12"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"kwangthiag"},"content":"1.  User requests to add a patient with name","lastModifiedDate":"2023-10-04"},{"lineNumber":652,"author":{"gitId":"kwangthiag"},"content":"2.  MFR adds the patient and displays a confirmation message","lastModifiedDate":"2023-10-04"},{"lineNumber":653,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":657,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":659,"author":{"gitId":"trgao"},"content":"* 1a. Another patient with the same name already exists in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":661,"author":{"gitId":"trgao"},"content":"    * 1a1. MFR shows duplicate patient error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":663,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":665,"author":{"gitId":"trgao"},"content":"* 1b. The user inputs are invalid/incomplete.","lastModifiedDate":"2023-11-12"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":667,"author":{"gitId":"trgao"},"content":"    * 1b1. MFR shows an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":669,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":670,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":671,"author":{"gitId":"licongshen12"},"content":"**Use case 2 (UC2): Edit a patient**","lastModifiedDate":"2023-11-12"},{"lineNumber":672,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":673,"author":{"gitId":"kwangthiag"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":674,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":675,"author":{"gitId":"trgao"},"content":"1.  User requests to edit a patient\u0027s information at an index","lastModifiedDate":"2023-11-12"},{"lineNumber":676,"author":{"gitId":"trgao"},"content":"2.  MFR edits the patient\u0027s information and displays a confirmation message","lastModifiedDate":"2023-11-12"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":679,"author":{"gitId":"kwangthiag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":680,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":681,"author":{"gitId":"trgao"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":682,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":683,"author":{"gitId":"trgao"},"content":"* 1a. The given index is invalid","lastModifiedDate":"2023-11-12"},{"lineNumber":684,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":685,"author":{"gitId":"trgao"},"content":"    * 1a1. MFR shows invalid index error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":686,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":687,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":688,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":689,"author":{"gitId":"trgao"},"content":"* 1b. Another patient with the same name already exists in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":690,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":691,"author":{"gitId":"trgao"},"content":"    * 1b1. MFR shows duplicate patient error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":692,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":693,"author":{"gitId":"trgao"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":694,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":695,"author":{"gitId":"trgao"},"content":"* 1c. The user inputs are invalid/incomplete.","lastModifiedDate":"2023-11-12"},{"lineNumber":696,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":697,"author":{"gitId":"trgao"},"content":"    * 1c1. MFR shows an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":698,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":699,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":700,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":701,"author":{"gitId":"licongshen12"},"content":"**Use case 3 (UC3): Delete a patient**","lastModifiedDate":"2023-11-12"},{"lineNumber":702,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":703,"author":{"gitId":"kwangthiag"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":704,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":705,"author":{"gitId":"trgao"},"content":"1. User requests to delete a patient at an index","lastModifiedDate":"2023-11-12"},{"lineNumber":706,"author":{"gitId":"trgao"},"content":"2. MFR deletes the patient and displays a confirmation message","lastModifiedDate":"2023-11-12"},{"lineNumber":707,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":708,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":709,"author":{"gitId":"kwangthiag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":710,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":711,"author":{"gitId":"kwangthiag"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":712,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":713,"author":{"gitId":"trgao"},"content":"* 1a. The given index is invalid","lastModifiedDate":"2023-11-12"},{"lineNumber":714,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":715,"author":{"gitId":"trgao"},"content":"    * 1a1. MFR shows invalid index error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":716,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":717,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":718,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":719,"author":{"gitId":"licongshen12"},"content":"**Use case 4 (UC4): List all patients**","lastModifiedDate":"2023-11-12"},{"lineNumber":720,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":721,"author":{"gitId":"kwangthiag"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":722,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":723,"author":{"gitId":"kwangthiag"},"content":"1.  User asks for a list of all patients","lastModifiedDate":"2023-10-04"},{"lineNumber":724,"author":{"gitId":"kwangthiag"},"content":"2.  MFR displays a list of all patients","lastModifiedDate":"2023-10-04"},{"lineNumber":725,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":726,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":727,"author":{"gitId":"trgao"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":728,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":729,"author":{"gitId":"licongshen12"},"content":"**Use case 5 (UC5): Search for a patient**","lastModifiedDate":"2023-11-12"},{"lineNumber":730,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":731,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":732,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":733,"author":{"gitId":"trgao"},"content":"1.  User searches for a name of a patient","lastModifiedDate":"2023-11-12"},{"lineNumber":734,"author":{"gitId":"trgao"},"content":"2.  MFR displays a list of patients which contain that name","lastModifiedDate":"2023-11-12"},{"lineNumber":735,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":736,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":737,"author":{"gitId":"trgao"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":738,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":739,"author":{"gitId":"licongshen12"},"content":"**Use case 6 (UC6): Search for a patient with a certain illness**","lastModifiedDate":"2023-11-12"},{"lineNumber":740,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":741,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":742,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":743,"author":{"gitId":"trgao"},"content":"1.  User searches for an illness name","lastModifiedDate":"2023-11-12"},{"lineNumber":744,"author":{"gitId":"trgao"},"content":"2.  MFR displays a list of patients which have an illness with that name","lastModifiedDate":"2023-11-12"},{"lineNumber":745,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":746,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":747,"author":{"gitId":"trgao"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":748,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":749,"author":{"gitId":"licongshen12"},"content":"**Use case 7 (UC7): Add illness to a patient**","lastModifiedDate":"2023-11-12"},{"lineNumber":750,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":751,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":752,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":753,"author":{"gitId":"trgao"},"content":"1.  User uses the command to add one or more new illnesses to a patient at an index","lastModifiedDate":"2023-11-12"},{"lineNumber":754,"author":{"gitId":"trgao"},"content":"2.  MFR displays a confirmation message","lastModifiedDate":"2023-11-12"},{"lineNumber":755,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":756,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":757,"author":{"gitId":"kwangthiag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":758,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":759,"author":{"gitId":"kwangthiag"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":760,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":761,"author":{"gitId":"trgao"},"content":"* 1a. The given index is invalid","lastModifiedDate":"2023-11-12"},{"lineNumber":762,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":763,"author":{"gitId":"trgao"},"content":"    * 1a1. MFR shows invalid index error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":764,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":765,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":766,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":767,"author":{"gitId":"trgao"},"content":"* 1b. The given illness is not valid","lastModifiedDate":"2023-11-12"},{"lineNumber":768,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":769,"author":{"gitId":"trgao"},"content":"    * 1b1. MFR shows invalid illness error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":770,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":771,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":772,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":773,"author":{"gitId":"licongshen12"},"content":"**Use case 8 (UC8): Remove illness from a patient**","lastModifiedDate":"2023-11-12"},{"lineNumber":774,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":775,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":776,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":777,"author":{"gitId":"trgao"},"content":"1.  User uses the command to remove one or more new illnesses from a patient at an index","lastModifiedDate":"2023-11-12"},{"lineNumber":778,"author":{"gitId":"trgao"},"content":"2.  MFR displays a confirmation message","lastModifiedDate":"2023-11-12"},{"lineNumber":779,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":780,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":781,"author":{"gitId":"kwangthiag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":782,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":783,"author":{"gitId":"trgao"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":784,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":785,"author":{"gitId":"trgao"},"content":"* 1a. The given index is invalid","lastModifiedDate":"2023-11-12"},{"lineNumber":786,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":787,"author":{"gitId":"trgao"},"content":"    * 1a1. MFR shows invalid index error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":788,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":789,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":790,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":791,"author":{"gitId":"trgao"},"content":"* 1b. The given illness is not valid","lastModifiedDate":"2023-11-12"},{"lineNumber":792,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":793,"author":{"gitId":"trgao"},"content":"    * 1b1. MFR shows invalid illness error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":794,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":795,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":796,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":797,"author":{"gitId":"licongshen12"},"content":"**Use case 9 (UC9): Sort patients**","lastModifiedDate":"2023-11-12"},{"lineNumber":798,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":799,"author":{"gitId":"kwangthiag"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":800,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":801,"author":{"gitId":"trgao"},"content":"1.  User wants the current list of patients to be sorted by an attribute","lastModifiedDate":"2023-11-12"},{"lineNumber":802,"author":{"gitId":"trgao"},"content":"2.  MFR displays a list of patients sorted by the given attribute","lastModifiedDate":"2023-11-12"},{"lineNumber":803,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"trgao"},"content":"* 1a. The user inputs are invalid/incomplete.","lastModifiedDate":"2023-11-12"},{"lineNumber":810,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":811,"author":{"gitId":"trgao"},"content":"    * 1a1. MFR shows an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":812,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":813,"author":{"gitId":"trgao"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":814,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":815,"author":{"gitId":"licongshen12"},"content":"**Use case 10 (UC10): Schedule an appointment**","lastModifiedDate":"2023-11-12"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":818,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":819,"author":{"gitId":"trgao"},"content":"1.  User requests to schedule an appointment for a patient","lastModifiedDate":"2023-11-12"},{"lineNumber":820,"author":{"gitId":"trgao"},"content":"2.  MFR adds the appointment and displays a confirmation message","lastModifiedDate":"2023-11-12"},{"lineNumber":821,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":822,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"trgao"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":826,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":827,"author":{"gitId":"trgao"},"content":"* 1a. The patient does not exist in the list","lastModifiedDate":"2023-11-12"},{"lineNumber":828,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":829,"author":{"gitId":"trgao"},"content":"    * 1a1. MFR shows patient does not exist error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":830,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":831,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":832,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":833,"author":{"gitId":"trgao"},"content":"* 1b. Another appointment with the same start and end already exists in the list","lastModifiedDate":"2023-11-12"},{"lineNumber":834,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":835,"author":{"gitId":"trgao"},"content":"    * 1b1. MFR shows duplicate timeslot error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":836,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":837,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":838,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":839,"author":{"gitId":"trgao"},"content":"* 1c. The user inputs are invalid/incomplete.","lastModifiedDate":"2023-11-12"},{"lineNumber":840,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":841,"author":{"gitId":"trgao"},"content":"    * 1c1. MFR shows an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":842,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":843,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":844,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":845,"author":{"gitId":"licongshen12"},"content":"**Use case 11 (UC11): Reschedule an appointment**","lastModifiedDate":"2023-11-12"},{"lineNumber":846,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":847,"author":{"gitId":"kwangthiag"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"trgao"},"content":"1.  User requests to reschedule an appointment\u0027s start and end at an index","lastModifiedDate":"2023-11-12"},{"lineNumber":850,"author":{"gitId":"trgao"},"content":"2.  MFR edits the appointment\u0027s start and end and displays a confirmation message","lastModifiedDate":"2023-11-12"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":853,"author":{"gitId":"kwangthiag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":854,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":855,"author":{"gitId":"kwangthiag"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":857,"author":{"gitId":"trgao"},"content":"* 1a. The given index is invalid","lastModifiedDate":"2023-11-12"},{"lineNumber":858,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":859,"author":{"gitId":"trgao"},"content":"    * 1a1. MFR shows invalid index error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":860,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":861,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":862,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":863,"author":{"gitId":"trgao"},"content":"* 1b. Another appointment with the same start and end already exists in the list","lastModifiedDate":"2023-11-12"},{"lineNumber":864,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":865,"author":{"gitId":"trgao"},"content":"    * 1b1. MFR shows duplicate timeslot error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":866,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":867,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":868,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":869,"author":{"gitId":"trgao"},"content":"* 1c. The user inputs are invalid/incomplete.","lastModifiedDate":"2023-11-12"},{"lineNumber":870,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":871,"author":{"gitId":"trgao"},"content":"    * 1c1. MFR shows an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":872,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":873,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":874,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":875,"author":{"gitId":"licongshen12"},"content":"**Use case 12 (UC12): Cancel an appointment**","lastModifiedDate":"2023-11-12"},{"lineNumber":876,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":877,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":878,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":879,"author":{"gitId":"trgao"},"content":"1. User requests to cancel an appointment at an index","lastModifiedDate":"2023-11-12"},{"lineNumber":880,"author":{"gitId":"trgao"},"content":"2. MFR deletes the appointment and displays a confirmation message","lastModifiedDate":"2023-11-12"},{"lineNumber":881,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":882,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":883,"author":{"gitId":"kwangthiag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":884,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":885,"author":{"gitId":"trgao"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":886,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":887,"author":{"gitId":"trgao"},"content":"* 1a. The given index is invalid","lastModifiedDate":"2023-11-12"},{"lineNumber":888,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":889,"author":{"gitId":"trgao"},"content":"    * 1a1. MFR shows invalid index error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":890,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":891,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":892,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":893,"author":{"gitId":"licongshen12"},"content":"**Use case 13 (UC13): List all appointments**","lastModifiedDate":"2023-11-12"},{"lineNumber":894,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":895,"author":{"gitId":"kwangthiag"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":896,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":897,"author":{"gitId":"trgao"},"content":"1.  User asks for a list of all appointments","lastModifiedDate":"2023-11-12"},{"lineNumber":898,"author":{"gitId":"trgao"},"content":"2.  MFR displays a list of all appointments","lastModifiedDate":"2023-11-12"},{"lineNumber":899,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":900,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":901,"author":{"gitId":"kwangthiag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"licongshen12"},"content":"**Use case 14 (UC14): Sort appointments**","lastModifiedDate":"2023-11-12"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":906,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":907,"author":{"gitId":"trgao"},"content":"1.  User wants the current list of appointments to be sorted by an attribute","lastModifiedDate":"2023-11-12"},{"lineNumber":908,"author":{"gitId":"trgao"},"content":"2.  MFR displays a list of appointments sorted by the given attribute","lastModifiedDate":"2023-11-12"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"trgao"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"trgao"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"trgao"},"content":"* 1a. The user inputs are invalid/incomplete.","lastModifiedDate":"2023-11-12"},{"lineNumber":916,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":917,"author":{"gitId":"trgao"},"content":"    * 1a1. MFR shows an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":918,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":919,"author":{"gitId":"trgao"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":920,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":921,"author":{"gitId":"licongshen12"},"content":"**Use case 15 (UC15): Search for appointment for a patient**","lastModifiedDate":"2023-11-12"},{"lineNumber":922,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":923,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":924,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":925,"author":{"gitId":"trgao"},"content":"1.  User searches for a name of a patient","lastModifiedDate":"2023-11-12"},{"lineNumber":926,"author":{"gitId":"trgao"},"content":"2.  MFR displays a list of appointments scheduled for patients which contain that name","lastModifiedDate":"2023-11-12"},{"lineNumber":927,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":928,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":929,"author":{"gitId":"trgao"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":930,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":931,"author":{"gitId":"licongshen12"},"content":"**Use case 16 (UC16): Undo a command**","lastModifiedDate":"2023-11-12"},{"lineNumber":932,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":933,"author":{"gitId":"licongshen12"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":934,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":935,"author":{"gitId":"licongshen12"},"content":"1.  User requests to undo previous command","lastModifiedDate":"2023-11-12"},{"lineNumber":936,"author":{"gitId":"licongshen12"},"content":"2.  MFR displays a confirmation message","lastModifiedDate":"2023-11-12"},{"lineNumber":937,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":938,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":939,"author":{"gitId":"licongshen12"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":940,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":941,"author":{"gitId":"licongshen12"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":942,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":943,"author":{"gitId":"licongshen12"},"content":"* 1a. User has not executed any commands that are undo-able.","lastModifiedDate":"2023-11-12"},{"lineNumber":944,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":945,"author":{"gitId":"licongshen12"},"content":"    * 1a1. MFR shows an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":946,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":947,"author":{"gitId":"licongshen12"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":948,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":949,"author":{"gitId":"licongshen12"},"content":"**Use case 17 (UC17): Redo a command**","lastModifiedDate":"2023-11-12"},{"lineNumber":950,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":951,"author":{"gitId":"licongshen12"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":952,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":953,"author":{"gitId":"licongshen12"},"content":"1.  User requests to redo a command that was undone","lastModifiedDate":"2023-11-12"},{"lineNumber":954,"author":{"gitId":"licongshen12"},"content":"2.  MFR displays a confirmation message","lastModifiedDate":"2023-11-12"},{"lineNumber":955,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":956,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":957,"author":{"gitId":"licongshen12"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":958,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":959,"author":{"gitId":"licongshen12"},"content":"**Extensions**","lastModifiedDate":"2023-11-12"},{"lineNumber":960,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":961,"author":{"gitId":"licongshen12"},"content":"* 1a. User has not undone any command.","lastModifiedDate":"2023-11-12"},{"lineNumber":962,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":963,"author":{"gitId":"licongshen12"},"content":"    * 1a1. MFR shows an error message.","lastModifiedDate":"2023-11-12"},{"lineNumber":964,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":965,"author":{"gitId":"licongshen12"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-12"},{"lineNumber":966,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":967,"author":{"gitId":"licongshen12"},"content":"**Use case 18 (UC18): Toggle dark/light mode**","lastModifiedDate":"2023-11-12"},{"lineNumber":968,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":969,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":970,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":971,"author":{"gitId":"trgao"},"content":"1. User requests to toggle dark/light mode","lastModifiedDate":"2023-11-12"},{"lineNumber":972,"author":{"gitId":"trgao"},"content":"2. MFR changes the display to dark/light mode","lastModifiedDate":"2023-11-12"},{"lineNumber":973,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":974,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":975,"author":{"gitId":"trgao"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":976,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":977,"author":{"gitId":"licongshen12"},"content":"**Use case 19 (UC19): Clear Database**","lastModifiedDate":"2023-11-12"},{"lineNumber":978,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":979,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":980,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":981,"author":{"gitId":"trgao"},"content":"1.  User requests clear all patients","lastModifiedDate":"2023-11-12"},{"lineNumber":982,"author":{"gitId":"trgao"},"content":"2.  MFR clears the list and displays a confirmation message","lastModifiedDate":"2023-11-12"},{"lineNumber":983,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":984,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":985,"author":{"gitId":"trgao"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":986,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":987,"author":{"gitId":"licongshen12"},"content":"**Use case 20 (UC20): Ask For Help**","lastModifiedDate":"2023-11-12"},{"lineNumber":988,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":989,"author":{"gitId":"trgao"},"content":"**MSS**","lastModifiedDate":"2023-11-12"},{"lineNumber":990,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":991,"author":{"gitId":"trgao"},"content":"1. User asks for help","lastModifiedDate":"2023-11-12"},{"lineNumber":992,"author":{"gitId":"trgao"},"content":"2. MFR displays a link to the help page","lastModifiedDate":"2023-11-12"},{"lineNumber":993,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":994,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":995,"author":{"gitId":"trgao"},"content":"    Use case ends.","lastModifiedDate":"2023-11-12"},{"lineNumber":996,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":997,"author":{"gitId":"trgao"},"content":"### Non-Functional Requirements","lastModifiedDate":"2023-11-12"},{"lineNumber":998,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":999,"author":{"gitId":"trgao"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-11-12"},{"lineNumber":1000,"author":{"gitId":"trgao"},"content":"2. Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-11-12"},{"lineNumber":1001,"author":{"gitId":"trgao"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-11-12"},{"lineNumber":1002,"author":{"gitId":"trgao"},"content":"4. The application should be able to be resized horizontally and vertically.","lastModifiedDate":"2023-11-12"},{"lineNumber":1003,"author":{"gitId":"trgao"},"content":"5. The app should be able to handle unexpected input and edge cases, without making the app to crash or any data loss.","lastModifiedDate":"2023-11-12"},{"lineNumber":1004,"author":{"gitId":"trgao"},"content":"6. The user interface should be friendly enough for users who are not tech-savvy.","lastModifiedDate":"2023-11-12"},{"lineNumber":1005,"author":{"gitId":"trgao"},"content":"7. The application does not require for internet connection to work properly.","lastModifiedDate":"2023-11-12"},{"lineNumber":1006,"author":{"gitId":"trgao"},"content":"8. The size of the application in the hard disk should be no larger than 100MB, exclusive of the data.","lastModifiedDate":"2023-11-12"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2023-11-12"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1010,"author":{"gitId":"trgao"},"content":"- **Mainstream OS**:","lastModifiedDate":"2023-11-12"},{"lineNumber":1011,"author":{"gitId":"trgao"},"content":"  - Refers to the most commonly used operating systems in the market, including Windows, Linux, Unix, and OS-X (MacOS). ","lastModifiedDate":"2023-11-12"},{"lineNumber":1012,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1013,"author":{"gitId":"trgao"},"content":"- **Command Line Interface (CLI)**:","lastModifiedDate":"2023-11-12"},{"lineNumber":1014,"author":{"gitId":"trgao"},"content":"  - A text-based interface way of interacting with a software by inputting commands.","lastModifiedDate":"2023-11-12"},{"lineNumber":1015,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1016,"author":{"gitId":"trgao"},"content":"- **User Interface (UI)**:","lastModifiedDate":"2023-11-12"},{"lineNumber":1017,"author":{"gitId":"trgao"},"content":"  - Refers to the application that the user interacts with.","lastModifiedDate":"2023-11-12"},{"lineNumber":1018,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1019,"author":{"gitId":"trgao"},"content":"- **Command**:","lastModifiedDate":"2023-11-12"},{"lineNumber":1020,"author":{"gitId":"trgao"},"content":"  - Refers to the input given by the user to perform certain operations or functions in the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1026,"author":{"gitId":"licongshen12"},"content":"Given below are a series of instructions that can be followed to perform manual testing of the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1038,"author":{"gitId":"licongshen12"},"content":"   2. Double-click the jar file  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1039,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1040,"author":{"gitId":"licongshen12"},"content":"      **Expected**: Shows the GUI with a set of sample contacts and appointments.","lastModifiedDate":"2023-11-12"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1042,"author":{"gitId":"licongshen12"},"content":"2. Normal launch","lastModifiedDate":"2023-11-12"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1044,"author":{"gitId":"licongshen12"},"content":"   1. Launch the application again  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1045,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1046,"author":{"gitId":"licongshen12"},"content":"      **Expected**: Shows the GUI with a set of sample contacts and appointments.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1048,"author":{"gitId":"licongshen12"},"content":"3. Restarting the application with existing data","lastModifiedDate":"2023-11-12"},{"lineNumber":1049,"author":{"gitId":"licongshen12"},"content":"   1. Click on the ‘X’ button located in the top-right corner of the screen","lastModifiedDate":"2023-11-12"},{"lineNumber":1050,"author":{"gitId":"licongshen12"},"content":"   2. Double-click the jar file  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1051,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1052,"author":{"gitId":"licongshen12"},"content":"      **Expected**: Shows the GUI with the existing data unchanged.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1054,"author":{"gitId":"licongshen12"},"content":"### Adding a patient","lastModifiedDate":"2023-11-12"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1056,"author":{"gitId":"licongshen12"},"content":"1. Adding a patient that has not yet been added to the patient list","lastModifiedDate":"2023-11-12"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1058,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `add name\u003dJohn Doe gender\u003dMALE ","lastModifiedDate":"2023-11-12"},{"lineNumber":1059,"author":{"gitId":"licongshen12"},"content":"       birthdate\u003d2000/10/20 phone\u003d98765432 email\u003djohnd@example.com ","lastModifiedDate":"2023-11-12"},{"lineNumber":1060,"author":{"gitId":"licongshen12"},"content":"       address\u003d311, Clementi Ave 2, #02-25 illnesses\u003dfever`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1061,"author":{"gitId":"licongshen12"},"content":"       ","lastModifiedDate":"2023-11-14"},{"lineNumber":1062,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The patient has been successfully added to the patient list  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":1064,"author":{"gitId":"licongshen12"},"content":"2. Adding a patient that already exists in patient list","lastModifiedDate":"2023-11-12"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1066,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `add name\u003dJohn Doe gender\u003dMALE","lastModifiedDate":"2023-11-12"},{"lineNumber":1067,"author":{"gitId":"licongshen12"},"content":"       birthdate\u003d2000/10/20 phone\u003d98765432 email\u003djohnd@example.com","lastModifiedDate":"2023-11-12"},{"lineNumber":1068,"author":{"gitId":"licongshen12"},"content":"       address\u003d311, Clementi Ave 2, #02-25 illnesses\u003dfever`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1069,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1070,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The Status Box displays the message \"This patient already exists in the records\"  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1072,"author":{"gitId":"licongshen12"},"content":"### Deleting a patient","lastModifiedDate":"2023-11-12"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1074,"author":{"gitId":"licongshen12"},"content":"1. Deleting a patient from a patient list with 3 patients","lastModifiedDate":"2023-11-12"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1076,"author":{"gitId":"licongshen12"},"content":"   1. Prerequisites: List all patients using the `list` command. 3 patients in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1077,"author":{"gitId":"licongshen12"},"content":"   2. Execute the command: `delete 1`\u003cbr\u003e  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1078,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1079,"author":{"gitId":"licongshen12"},"content":"      **Expected**: First contact is deleted from the list. Details of the deleted contact shown in the status box.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1080,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1081,"author":{"gitId":"licongshen12"},"content":"   3. Execute the command: `delete 0`\u003cbr\u003e  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1082,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1083,"author":{"gitId":"licongshen12"},"content":"      **Expected**: No person is deleted. Error details shown in the status box. Patient list remains the same.","lastModifiedDate":"2023-11-12"},{"lineNumber":1084,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1085,"author":{"gitId":"licongshen12"},"content":"   4. Execute the command: `delete 10`\u003cbr\u003e  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1086,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1087,"author":{"gitId":"licongshen12"},"content":"      **Expected**: No person is deleted. Error details shown in the status box. Patient list remains the same.","lastModifiedDate":"2023-11-12"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1089,"author":{"gitId":"licongshen12"},"content":"### Updating a patient’s details","lastModifiedDate":"2023-11-12"},{"lineNumber":1090,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1091,"author":{"gitId":"licongshen12"},"content":"1. Updating a patient\u0027s details with valid data","lastModifiedDate":"2023-11-12"},{"lineNumber":1092,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1093,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure that at least one patient is displayed in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1094,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `edit 1 birthdate\u003d2001/12/14 phone\u003d93842738`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1095,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1096,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The patient at index 1 is updated with the new birthdate and phone number. The updated details are reflected in the patient list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1097,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1098,"author":{"gitId":"licongshen12"},"content":"2. Updating a patient\u0027s details with invalid data","lastModifiedDate":"2023-11-12"},{"lineNumber":1099,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1100,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure that at least one patient is displayed in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1101,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `edit 1 birthdate\u003d14/12/2001 phone\u003d93842738`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1102,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1103,"author":{"gitId":"licongshen12"},"content":"       **Expected**: No details are updated. Error details are shown in the status box indicating the date format is incorrect.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1105,"author":{"gitId":"licongshen12"},"content":"### Diagnosing a patient","lastModifiedDate":"2023-11-12"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1107,"author":{"gitId":"licongshen12"},"content":"1. Diagnosing a patient with valid illness data","lastModifiedDate":"2023-11-12"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1109,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure that at least one patient is displayed in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1110,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `diagnose 1 illnesses\u003dfever`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1112,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The patient at index 1 has \u0027fever\u0027 added to their list of illnesses. The updated illness list is reflected in the patient details.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1114,"author":{"gitId":"licongshen12"},"content":"2. Diagnosing a patient with multiple illnesses","lastModifiedDate":"2023-11-12"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1116,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure that at least one patient is displayed in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1117,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `diagnose 1 illnesses\u003dfever,flu`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1119,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The patient at index 1 has both \u0027fever\u0027 and \u0027flu\u0027 added to their list of illnesses.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1121,"author":{"gitId":"licongshen12"},"content":"### Undiagnosing a patient","lastModifiedDate":"2023-11-12"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1123,"author":{"gitId":"licongshen12"},"content":"1. Removing an illness from a patient","lastModifiedDate":"2023-11-12"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1125,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure that at least one patient with the illness \u0027fever\u0027 is displayed in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1126,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `undiagnose 1 illnesses\u003dfever`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1127,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1128,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The illness \u0027fever\u0027 is removed from the patient at index 1. The updated illness list is reflected in the patient details.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1129,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1130,"author":{"gitId":"licongshen12"},"content":"### Finding patients","lastModifiedDate":"2023-11-12"},{"lineNumber":1131,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1132,"author":{"gitId":"licongshen12"},"content":"1. Finding patients by name","lastModifiedDate":"2023-11-12"},{"lineNumber":1133,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1134,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `find-p alex david`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1135,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1136,"author":{"gitId":"licongshen12"},"content":"       **Expected**: All patients with names containing \u0027alex\u0027 or \u0027david\u0027 are displayed in the list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1137,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1138,"author":{"gitId":"licongshen12"},"content":"2. Finding patients by illness","lastModifiedDate":"2023-11-12"},{"lineNumber":1139,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1140,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `find-i fever flu`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1141,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1142,"author":{"gitId":"licongshen12"},"content":"       **Expected**: All patients with illnesses containing \u0027fever\u0027 or \u0027flu\u0027 are displayed in the list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1143,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1144,"author":{"gitId":"licongshen12"},"content":"### Sorting patients","lastModifiedDate":"2023-11-12"},{"lineNumber":1145,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1146,"author":{"gitId":"licongshen12"},"content":"1. Sorting patients by name","lastModifiedDate":"2023-11-12"},{"lineNumber":1147,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1148,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `sort-p asc by\u003dname`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1149,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1150,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The patients are sorted by name in ascending order.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1151,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1152,"author":{"gitId":"licongshen12"},"content":"2. Sorting patients by birthdate","lastModifiedDate":"2023-11-12"},{"lineNumber":1153,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1154,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `sort-p desc by\u003dbirthday`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1155,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1156,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The patients are sorted by birthday in descending order.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1157,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1158,"author":{"gitId":"licongshen12"},"content":"### Viewing all patients","lastModifiedDate":"2023-11-12"},{"lineNumber":1159,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1160,"author":{"gitId":"licongshen12"},"content":"1. Displaying all patients","lastModifiedDate":"2023-11-12"},{"lineNumber":1161,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1162,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `patients`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1163,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1164,"author":{"gitId":"licongshen12"},"content":"       **Expected**: A list of all patients currently recorded in the application is displayed.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1165,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1166,"author":{"gitId":"licongshen12"},"content":"### Scheduling a new appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":1167,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1168,"author":{"gitId":"licongshen12"},"content":"1. Scheduling an appointment for an existing patient","lastModifiedDate":"2023-11-12"},{"lineNumber":1169,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1170,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure that a patient with name \"Alex Yeoh\" is displayed in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1171,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `schedule patient\u003dAlex Yeoh start\u003d2023/10/20 12:00 end\u003d2023/10/20 13:00 description\u003dFollow up on Chest X-Ray priority\u003dhigh`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1172,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1173,"author":{"gitId":"licongshen12"},"content":"       **Expected**: A new high priority appointment for Alex Yeoh on 20 October 2023 from 12pm to 1pm is scheduled and displayed in the appointments list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1174,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1175,"author":{"gitId":"licongshen12"},"content":"2. Scheduling an appointment with overlapping times","lastModifiedDate":"2023-11-12"},{"lineNumber":1176,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1177,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure an appointment exists for a patient at a given time.","lastModifiedDate":"2023-11-12"},{"lineNumber":1178,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `schedule patient\u003dAlex Yeoh start\u003d2023/10/20 12:00 end\u003d2023/10/20 13:00 description\u003dFollow up on Chest X-Ray priority\u003dhigh`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1179,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1180,"author":{"gitId":"licongshen12"},"content":"       **Expected**: No new appointment is scheduled. Error details are shown in the status box indicating the time conflict.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1181,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1182,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1183,"author":{"gitId":"licongshen12"},"content":"### Rescheduling an appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":1184,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1185,"author":{"gitId":"licongshen12"},"content":"1. Rescheduling an existing appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":1186,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1187,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure at least one appointment is displayed in the appointments list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1188,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `reschedule 1 start\u003d2023/05/02 09:00 end\u003d2023/05/02 11:00`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1189,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1190,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The appointment with index 1 is rescheduled to 2 May 2023, from 9am to 11am, and the change is reflected in the appointments list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1191,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1192,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1193,"author":{"gitId":"licongshen12"},"content":"2. Rescheduling an appointment to an invalid time","lastModifiedDate":"2023-11-12"},{"lineNumber":1194,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1195,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure at least one appointment is displayed in the appointments list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1196,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `reschedule 1 start\u003d2023/10/20 13:00 end\u003d2023/10/20 12:00`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1197,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1198,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The appointment is not rescheduled. Error details are shown in the status box indicating that the start time is after the end time.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1199,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1200,"author":{"gitId":"licongshen12"},"content":"### Triaging an appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":1201,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1202,"author":{"gitId":"licongshen12"},"content":"1. Changing the priority of an existing appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":1203,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1204,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure at least one appointment is displayed in the appointments list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1205,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `triage 1 priority\u003dhigh`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1206,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1207,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The priority of the appointment with index 1 is changed to high, and the update is reflected in the appointments list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1208,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1209,"author":{"gitId":"licongshen12"},"content":"2. Changing the priority of a non-existent appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":1210,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1211,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure the appointments list is empty or the index provided does not exist.","lastModifiedDate":"2023-11-12"},{"lineNumber":1212,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `triage 2 priority\u003dhigh` where index 2 does not exist  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1213,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1214,"author":{"gitId":"licongshen12"},"content":"       **Expected**: Priority is not changed. Error details are shown in the status box indicating an invalid index.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1215,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1216,"author":{"gitId":"licongshen12"},"content":"### Cancelling an appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":1217,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1218,"author":{"gitId":"licongshen12"},"content":"1. Cancelling an existing appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":1219,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1220,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure at least one appointment is displayed in the appointments list.","lastModifiedDate":"2023-11-12"},{"lineNumber":1221,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `cancel 1`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1222,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1223,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The appointment with index 1 is cancelled and removed from the appointments list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1224,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1225,"author":{"gitId":"licongshen12"},"content":"2. Cancelling an appointment with an invalid index","lastModifiedDate":"2023-11-12"},{"lineNumber":1226,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1227,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Ensure the appointments list is empty or the index provided does not exist.","lastModifiedDate":"2023-11-12"},{"lineNumber":1228,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `cancel 3` where index 3 does not exist  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1229,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1230,"author":{"gitId":"licongshen12"},"content":"       **Expected**: No appointment is cancelled. Error details are shown in the status box indicating an invalid index.","lastModifiedDate":"2023-11-12"},{"lineNumber":1231,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1232,"author":{"gitId":"licongshen12"},"content":"### Displaying all appointments","lastModifiedDate":"2023-11-12"},{"lineNumber":1233,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1234,"author":{"gitId":"licongshen12"},"content":"1. Displaying the full list of appointments","lastModifiedDate":"2023-11-12"},{"lineNumber":1235,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1236,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `appointments`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1237,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1238,"author":{"gitId":"licongshen12"},"content":"       **Expected**: All scheduled appointments are displayed in the appointments list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1239,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1240,"author":{"gitId":"licongshen12"},"content":"### Finding appointments by patient name","lastModifiedDate":"2023-11-12"},{"lineNumber":1241,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1242,"author":{"gitId":"licongshen12"},"content":"1. Finding appointments by patient name","lastModifiedDate":"2023-11-12"},{"lineNumber":1243,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1244,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `find-a alex david`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1245,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1246,"author":{"gitId":"licongshen12"},"content":"       **Expected**: All appointments with patient names containing \u0027alex\u0027 or \u0027david\u0027 are displayed in the appointments list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1247,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1248,"author":{"gitId":"licongshen12"},"content":"### Displaying today\u0027s appointments","lastModifiedDate":"2023-11-12"},{"lineNumber":1249,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1250,"author":{"gitId":"licongshen12"},"content":"1. Displaying appointments for today","lastModifiedDate":"2023-11-12"},{"lineNumber":1251,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1252,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `today`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1253,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1254,"author":{"gitId":"licongshen12"},"content":"       **Expected**: All appointments scheduled to start on the current date are displayed in the appointments list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1255,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1256,"author":{"gitId":"licongshen12"},"content":"### Displaying upcoming appointments","lastModifiedDate":"2023-11-12"},{"lineNumber":1257,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1258,"author":{"gitId":"licongshen12"},"content":"1. Displaying upcoming appointments","lastModifiedDate":"2023-11-12"},{"lineNumber":1259,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1260,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `upcoming`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1261,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1262,"author":{"gitId":"licongshen12"},"content":"       **Expected**: All upcoming appointments are displayed in the appointments list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1263,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1264,"author":{"gitId":"licongshen12"},"content":"### Sorting appointments","lastModifiedDate":"2023-11-12"},{"lineNumber":1265,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1266,"author":{"gitId":"licongshen12"},"content":"1. Sorting appointments by date or priority","lastModifiedDate":"2023-11-12"},{"lineNumber":1267,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1268,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `sort-a asc by\u003dtime`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1269,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1270,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The appointments are sorted by their start times in ascending order and displayed in the appointments list.  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1271,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1272,"author":{"gitId":"licongshen12"},"content":"### Undoing a command","lastModifiedDate":"2023-11-12"},{"lineNumber":1273,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1274,"author":{"gitId":"licongshen12"},"content":"1. Undoing a command that changes data","lastModifiedDate":"2023-11-14"},{"lineNumber":1275,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1276,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Perform a command that changes data, such as `add`, `delete`, `schedule`, `reschedule`, `triage`, or `cancel`.","lastModifiedDate":"2023-11-12"},{"lineNumber":1277,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `undo`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1278,"author":{"gitId":"licongshen12"},"content":"   ","lastModifiedDate":"2023-11-14"},{"lineNumber":1279,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The most recent data-changing command is undone. The application\u0027s state reverts to before the command was executed.","lastModifiedDate":"2023-11-12"},{"lineNumber":1280,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1281,"author":{"gitId":"licongshen12"},"content":"2. Undoing a command that does not change data","lastModifiedDate":"2023-11-14"},{"lineNumber":1282,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1283,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Perform a command that does not change data, such as `find`, `today`, `upcoming`, `find-i`, `find-p`, `patients`, `exit`, `help`, or `list`.","lastModifiedDate":"2023-11-14"},{"lineNumber":1284,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `undo`  ","lastModifiedDate":"2023-11-14"},{"lineNumber":1285,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1286,"author":{"gitId":"licongshen12"},"content":"       **Expected**: No changes occur. An appropriate message indicating that the command cannot be undone is displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":1287,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1288,"author":{"gitId":"licongshen12"},"content":"### Redoing a command","lastModifiedDate":"2023-11-12"},{"lineNumber":1289,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1290,"author":{"gitId":"licongshen12"},"content":"1. Redoing a previously undone command","lastModifiedDate":"2023-11-14"},{"lineNumber":1291,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1292,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Perform an `undo` operation.","lastModifiedDate":"2023-11-12"},{"lineNumber":1293,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `redo`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1294,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1295,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The previously undone command is redone. The application\u0027s state updates to reflect the redone command.","lastModifiedDate":"2023-11-12"},{"lineNumber":1296,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1297,"author":{"gitId":"licongshen12"},"content":"2. Redoing a command without an `undo`","lastModifiedDate":"2023-11-14"},{"lineNumber":1298,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1299,"author":{"gitId":"licongshen12"},"content":"    1. Prerequisites: Without having used `undo`, attempt to `redo`.","lastModifiedDate":"2023-11-12"},{"lineNumber":1300,"author":{"gitId":"licongshen12"},"content":"    2. Execute the command: `redo`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1301,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1302,"author":{"gitId":"licongshen12"},"content":"       **Expected**: No changes occur. An appropriate message indicating that there is no command to redo is displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":1303,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1304,"author":{"gitId":"licongshen12"},"content":"### Listing all records","lastModifiedDate":"2023-11-12"},{"lineNumber":1305,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1306,"author":{"gitId":"licongshen12"},"content":"1. Displaying all patient records and appointments","lastModifiedDate":"2023-11-14"},{"lineNumber":1307,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1308,"author":{"gitId":"licongshen12"},"content":"   1. Execute the command: `list`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1309,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1310,"author":{"gitId":"licongshen12"},"content":"      **Expected**: All patient records and all appointments are displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":1311,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1312,"author":{"gitId":"licongshen12"},"content":"### Clearing all records","lastModifiedDate":"2023-11-12"},{"lineNumber":1313,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1314,"author":{"gitId":"licongshen12"},"content":"1. Clearing all patient records and appointments","lastModifiedDate":"2023-11-12"},{"lineNumber":1315,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1316,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `clear`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1317,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1318,"author":{"gitId":"licongshen12"},"content":"       **Expected**: All patient records and appointments are cleared from the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":1319,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1320,"author":{"gitId":"licongshen12"},"content":"### Toggling dark/light mode","lastModifiedDate":"2023-11-12"},{"lineNumber":1321,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1322,"author":{"gitId":"licongshen12"},"content":"1. Toggling between dark and light modes","lastModifiedDate":"2023-11-12"},{"lineNumber":1323,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1324,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `mode`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1325,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1326,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The application\u0027s theme toggles between dark and light mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":1327,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1328,"author":{"gitId":"licongshen12"},"content":"### Exiting the program","lastModifiedDate":"2023-11-12"},{"lineNumber":1329,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1330,"author":{"gitId":"licongshen12"},"content":"1. Exiting the program","lastModifiedDate":"2023-11-12"},{"lineNumber":1331,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1332,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `exit`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1333,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1334,"author":{"gitId":"licongshen12"},"content":"       **Expected**: The application closes.","lastModifiedDate":"2023-11-12"},{"lineNumber":1335,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1336,"author":{"gitId":"licongshen12"},"content":"### Viewing help","lastModifiedDate":"2023-11-12"},{"lineNumber":1337,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1338,"author":{"gitId":"licongshen12"},"content":"1. Viewing help information","lastModifiedDate":"2023-11-12"},{"lineNumber":1339,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1340,"author":{"gitId":"licongshen12"},"content":"    1. Execute the command: `help`  ","lastModifiedDate":"2023-11-12"},{"lineNumber":1341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1342,"author":{"gitId":"licongshen12"},"content":"       **Expected**: Help information is displayed, explaining how to access the help page.","lastModifiedDate":"2023-11-14"},{"lineNumber":1343,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":1344,"author":{"gitId":"trgao"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-08"},{"lineNumber":1345,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":1346,"author":{"gitId":"trgao"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2023-11-08"},{"lineNumber":1347,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":1348,"author":{"gitId":"trgao"},"content":"1. The current success message after executing an undo or redo command is `Undo Successful.` or `Redo Successful.`, but","lastModifiedDate":"2023-11-08"},{"lineNumber":1349,"author":{"gitId":"trgao"},"content":"this is too general and does not provide any useful information. We plan to add the exact command that was undone or redone","lastModifiedDate":"2023-11-08"},{"lineNumber":1350,"author":{"gitId":"trgao"},"content":"to the success message so that the user knows exactly what command was undone or redone.","lastModifiedDate":"2023-11-08"},{"lineNumber":1351,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":1352,"author":{"gitId":"trgao"},"content":"2. Currently, after scheduling an appointment for a patient, the user is not able to change the description of the appointment.","lastModifiedDate":"2023-11-08"},{"lineNumber":1353,"author":{"gitId":"trgao"},"content":"We plan to change the triage command so that it will allow the user to change the appointment description.","lastModifiedDate":"2023-11-08"},{"lineNumber":1354,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":1355,"author":{"gitId":"trgao"},"content":"3. Currently, patients with the same name but with different casing, i.e. same letters but different in uppercase/lowercase,","lastModifiedDate":"2023-11-08"},{"lineNumber":1356,"author":{"gitId":"trgao"},"content":"can be added to the patient records. However, that can be very confusing for users, especially if they had accidentally added","lastModifiedDate":"2023-11-08"},{"lineNumber":1357,"author":{"gitId":"trgao"},"content":"a duplicate patient into the records but with a different casing for the patient name. We plan to make the checking for any","lastModifiedDate":"2023-11-08"},{"lineNumber":1358,"author":{"gitId":"trgao"},"content":"duplicates in patient names case-insensitive so that this will no longer be an issue.","lastModifiedDate":"2023-11-08"},{"lineNumber":1359,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":1360,"author":{"gitId":"trgao"},"content":"4. Currently, illnesses with the same name but with different casing, i.e. same letters but different in uppercase/lowercase,","lastModifiedDate":"2023-11-13"},{"lineNumber":1361,"author":{"gitId":"trgao"},"content":"can be added to the same patient. However, that can be very confusing for users, especially if they had accidentally added","lastModifiedDate":"2023-11-08"},{"lineNumber":1362,"author":{"gitId":"trgao"},"content":"a duplicate illness to the same patient but with a different casing for the illness name. We plan to make the checking for any","lastModifiedDate":"2023-11-08"},{"lineNumber":1363,"author":{"gitId":"trgao"},"content":"duplicates in illness names case-insensitive so that this will no longer be an issue.","lastModifiedDate":"2023-11-08"},{"lineNumber":1364,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":1365,"author":{"gitId":"billieboy7"},"content":"5. Currently, gender can only be `MALE` or `FEMALE`, and the input has to match the words exactly, meaning that the input has to","lastModifiedDate":"2023-11-13"},{"lineNumber":1366,"author":{"gitId":"trgao"},"content":"be uppercase. However, in order to optimise for fast typists, we plan to treat the gender attribute as case-insensitive, so that","lastModifiedDate":"2023-11-08"},{"lineNumber":1367,"author":{"gitId":"trgao"},"content":"any input that is either `male` or `female` will be accepted without worrying about the casing.","lastModifiedDate":"2023-11-08"},{"lineNumber":1368,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":1369,"author":{"gitId":"billieboy7"},"content":"6. Currently, a patient\u0027s birthdate can be set after the current date that the command is executed on. For example, `2023/10/20`","lastModifiedDate":"2023-11-13"},{"lineNumber":1370,"author":{"gitId":"trgao"},"content":"can be added as a patient\u0027s birthdate even though the current date might be `2023/08/08`. We plan to add a validation for birthdates","lastModifiedDate":"2023-11-08"},{"lineNumber":1371,"author":{"gitId":"trgao"},"content":"such that birthdates after the current date will not be considered a valid birthdate.","lastModifiedDate":"2023-11-08"},{"lineNumber":1372,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1373,"author":{"gitId":"billieboy7"},"content":"7. Currently, the find command only is able to find by name. We plan to add the functionality to find anything that ","lastModifiedDate":"2023-11-13"},{"lineNumber":1374,"author":{"gitId":"kwangthiag"},"content":"matches the given conditions that could be other variables of a patient or appointment such as range of birthdays.","lastModifiedDate":"2023-11-11"},{"lineNumber":1375,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1376,"author":{"gitId":"trgao"},"content":"8. Currently, patients with the same name but different amount of spacings, e.g. `John Doe` and `John  Doe` with 2 spaces,","lastModifiedDate":"2023-11-13"},{"lineNumber":1377,"author":{"gitId":"trgao"},"content":"are allowed to be added into the application. We plan to add a validation that will ignore extra spaces when checking for duplicate names.","lastModifiedDate":"2023-11-13"},{"lineNumber":1378,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1379,"author":{"gitId":"licongshen12"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":1380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1381,"author":{"gitId":"billieboy7"},"content":"## **Appendix: Effort**","lastModifiedDate":"2023-11-09"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1383,"author":{"gitId":"billieboy7"},"content":"### Difficulty Level ","lastModifiedDate":"2023-11-09"},{"lineNumber":1384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1385,"author":{"gitId":"billieboy7"},"content":"MediFlowR is a brown-field project that has been inspired from and based upon AB3. We have modified AB3\u0027s existing ","lastModifiedDate":"2023-11-09"},{"lineNumber":1386,"author":{"gitId":"billieboy7"},"content":"model, Person, to accommodate our Patient records management. Moreover, we have extended the Person model to create ","lastModifiedDate":"2023-11-09"},{"lineNumber":1387,"author":{"gitId":"billieboy7"},"content":"an Appointments model to keep track of the appointments scheduled for the patients. Having 2 models (Person and ","lastModifiedDate":"2023-11-09"},{"lineNumber":1388,"author":{"gitId":"billieboy7"},"content":"Appointment) in MediFlowR that interact with each other has made it more complex than AB3. Moreover, we have incorporated","lastModifiedDate":"2023-11-10"},{"lineNumber":1389,"author":{"gitId":"billieboy7"},"content":"Priority Tags into the Appointments model which allows for triaging (sorting) of the appointments. The Appointment model","lastModifiedDate":"2023-11-10"},{"lineNumber":1390,"author":{"gitId":"billieboy7"},"content":"brings additional complexity to the project while also improving its functionality by facilitating interaction between","lastModifiedDate":"2023-11-10"},{"lineNumber":1391,"author":{"gitId":"billieboy7"},"content":"both models. ","lastModifiedDate":"2023-11-10"},{"lineNumber":1392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1393,"author":{"gitId":"billieboy7"},"content":"### Challenges","lastModifiedDate":"2023-11-10"},{"lineNumber":1394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1395,"author":{"gitId":"billieboy7"},"content":"During the initial phase, understanding the codebase was difficult as we were not familiar with it. There were multiple","lastModifiedDate":"2023-11-10"},{"lineNumber":1396,"author":{"gitId":"billieboy7"},"content":"dependencies and layers of abstraction which made it difficult to understand the flow of the project. As time went by,","lastModifiedDate":"2023-11-10"},{"lineNumber":1397,"author":{"gitId":"billieboy7"},"content":"we became more adept at understanding the underlying mechanism to tweak the program and finding bugs in the AB3 program.","lastModifiedDate":"2023-11-10"},{"lineNumber":1398,"author":{"gitId":"billieboy7"},"content":"As we added more functionalities, more dependencies were introduced and the program became increasingly complicated. In","lastModifiedDate":"2023-11-10"},{"lineNumber":1399,"author":{"gitId":"billieboy7"},"content":"light of that we focussed on developing a user-centric, intuitive interface that is direct. For example, under a healthcare system\u0027s","lastModifiedDate":"2023-11-10"},{"lineNumber":1400,"author":{"gitId":"billieboy7"},"content":"standpoint, we wanted to include a variety of ways for users to search for information (through patient name, illness, today\u0027s appointments, etc.). The command words used were designed in a way that the user had to conscientiously specify the way they intended to search. ","lastModifiedDate":"2023-11-10"},{"lineNumber":1401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"dinde2004":43,"kwangthiag":209,"billieboy7":145,"licongshen12":403,"-":295,"trgao":306}},{"path":"docs/ProposedUndoRedo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"than attempting to perform the undo.","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"#### Design considerations:","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"  itself.","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"trgao":79}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"# \u003cspan style\u003d\"color:green\"\u003eMediFlowR\u003c/span\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"## Welcome to MediFlowR","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"Too many patients to handle? Mixing up your patient appointments?","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"Don\u0027t worry, we got you! Taking control of your patient records management is now made easier with **MediFlowR**, and","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"this user guide will help you master the application in no time!","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"### About MediFlowR:","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"MediFlowR is a desktop application built for medical practitioners to manage their day-to-day operations. It is a","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"user-friendly and efficient patient records management system designed to help you streamline your patient management","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"processes. In the fast-paced world of healthcare, we understand the importance of keeping patient information organised","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"and appointments on track. MediFlowR is your solution!","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"### Key Features:","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"To simplify your administrative tasks, our application provides a range of features, but not limited to:","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"1. **Patient Information Management:** Easily store, access and edit patient data, making it simple to track patient\u0027s vital information and history.","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"2. **Appointment Scheduling:** Efficiently manage patient appointments and eliminate the risk of scheduling conflicting appointments.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"3. **Integration:** Seamlessly integrate patient records across multiple departments by allowing users to update patient information, allowing for the doctor to follow up and ensuring continuity of care.","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"Here at MediFlowR, we believe in keeping things simple and efficient.","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"_**Simple:**_","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"Navigating MediFlowR is a breeze. Our intuitive user interface just displays essential information allowing","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"you to quickly access the information you need. Moreover, this user guide together with the in-application guidance","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"minimises the learning curve for your administrative staff.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"_**Efficient:**_","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"On top of these functionalities, we believe that patient management must be efficient.","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"Therefore, MediFlowR is optimised for keyboard users. By simply typing, MediFlowR can get your","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"hospital management tasks done faster than the other apps in the industry.","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"## Table of Contents","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"- [Navigating the application](#navigating-the-application)","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"- [Tutorial for new users](#tutorial-for-new-users)","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"- [Features](#features)","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"    - [Patient Commands](#patient-commands)","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"        - [Adding a new patient: `add`](#adding-a-new-patient-add)","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"        - [Updating a patient\u0027s details: `edit`](#updating-a-patients-details-edit)","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"     ","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"        - [Diagnosing a patient: `diagnose`](#diagnosing-a-patient-diagnose)","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"     ","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"        - [Undiagnosing a patient: `undiagnose`](#undiagnosing-a-patient-undiagnose)","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"        - [Removing a patient: `delete`](#removing-a-patient-delete)","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"        - [Displaying all patients: `patients`](#displaying-all-patients-patients)","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"        - [Finding patients by name: `find-p`](#finding-patients-by-name-find-p)","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"        - [Finding patients by illness: `find-i`](#finding-patients-by-illness-find-i)","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"      ","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"kwangthiag"},"content":"        - [Sorting patients: `sort-p`](#sorting-patients-sort-p)","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"    - [Appointment Commands](#appointment-commands)","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"        - [Scheduling a new appointment: `schedule`](#scheduling-a-new-appointment-schedule)","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"        - [Rescheduling an appointment: `reschedule`](#rescheduling-an-appointment-reschedule)","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        - [Triaging an appointment: `triage`](#triaging-an-appointment-triage)","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"        - [Cancelling an appointment: `cancel`](#cancelling-an-appointment-cancel)","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"        - [Displaying all appointments: `appointments`](#displaying-all-appointments-appointments)","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"        - [Finding appointments by patient name: `find-a`](#finding-appointments-by-patient-name-find-a)","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"     ","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"        - [Displaying all appointments for today: `today`](#displaying-all-appointments-for-today-today)","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"        - [Displaying all upcoming appointments: `upcoming`](#displaying-all-upcoming-appointments-upcoming)","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"kwangthiag"},"content":"        - [Sorting appointments: `sort-a`](#sorting-appointments-sort-a)","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"    - [Miscellaneous Commands](#miscellaneous-commands)","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"        - [Displaying all patient records and appointments: `list`](#displaying-all-patient-records-and-appointments-list)","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"        - [Undoing a previous command: `undo`](#undoing-a-previous-command-undo)","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"        - [Redoing a previous command: `redo`](#redoing-a-previous-command-redo)","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        - [Clearing all records: `clear`](#clearing-all-records-clear)","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"        - [Toggling dark/light mode: `mode`](#toggling-darklight-mode-mode)","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"        - [Exiting the program: `exit`](#exiting-the-program-exit)","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"trgao"},"content":"        - [Viewing help: `help`](#viewing-help-help)","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":"- [Commands summary](#commands-summary)","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"trgao"},"content":"- [Known Issues](#known-issues)","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"dinde2004"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"dinde2004"},"content":":bulb:","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"dinde2004"},"content":"Tips:","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"trgao"},"content":"If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as the format might be different when copied over to the application.","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"trgao"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"trgao"},"content":"## Glossary","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"trgao"},"content":"Here are **some common terms** that you might encounter throughout the user guide:","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"trgao"},"content":"| Term      | Meaning                                                                            |","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"trgao"},"content":"|-----------|------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"trgao"},"content":"| Command   | The instruction that you enter into the application                                |","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"trgao"},"content":"| Parameter | The additional information provided when you enter a command                       |","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"trgao"},"content":"| Attribute | The particular information of the patient/appointment you want to access           |","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"trgao"},"content":"| Index     | The position a patient/appointment is at on the patients records/appointments list |","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"trgao"},"content":"Here are **some common icons** that you might see throughout the user guide:","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"trgao"},"content":"| Icons                     | Meaning                                                                       |","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"trgao"},"content":"|---------------------------|-------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"trgao"},"content":"| :clipboard: **Format**    | Provides you with the format used for a command                               |","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"trgao"},"content":"| :paperclip: **Example**   | Provides you with an example on how to use a command                          |","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"trgao"},"content":"| :pencil2: **Notes**       | Provides you with some additional information on the inputs for a command     |","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"trgao"},"content":"| :bulb: **Tip**            | Provides you with small tips to improve your experience using the application |","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"trgao"},"content":"| :exclamation: **Warning** | Warns you on the potential dangers of not using a command properly            |","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"trgao"},"content":"Here are **some common formats** that you need to follow when entering commands:","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"trgao"},"content":"| Format                            | Meaning                                                                                     |","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"trgao"},"content":"|-----------------------------------|---------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"trgao"},"content":"| `WORDS_IN_CAPITAL_LETTERS`        | The parameters of a command                                                                 |","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"trgao"},"content":"| `[Words between square brackets]` | The parameters that are not necessary for the command to run (i.e. the optional parameters) |","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"trgao"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"trgao"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":159,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"trgao"},"content":"## Navigating the application","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"licongshen12"},"content":"![User Interface for MediFlowR](images/userguide/UserInterface.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"trgao"},"content":"| Name              | Function                                         |","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"trgao"},"content":"|-------------------|--------------------------------------------------|","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"trgao"},"content":"| Patients List     | Displays patient records                         |","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"trgao"},"content":"| Appointments List | Displays appointments that are scheduled         |","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"trgao"},"content":"| Status Box        | Displays the results after a command is executed |","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"trgao"},"content":"| Command Box       | For you to enter the commands                    |","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"trgao"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"trgao"},"content":"    - To check your Java version, open Command Prompt if you are on Windows, or Terminal if you are on MacOS, and run `java --version`. If you do not have Java installed, you can install it [here](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"trgao"},"content":"2. Download the latest `mediflowr.jar` from [here](https://github.com/AY2324S1-CS2103T-T08-4/tp/releases).","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"trgao"},"content":"3. Create a folder in the location where you want the application to stay in, and copy the file into that folder.","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"trgao"},"content":"    - This is necessary as the application will create additional files to store settings and the data itself, so this will nicely organise the files.","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"trgao"},"content":"4. If you are familiar with _Command Prompt on Windows_ or _Terminal on MacOS_, navigate to the folder that you have just created using `cd` command and open the application using the `java -jar mediflowr.jar` command.","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"trgao"},"content":"    - If you are not familiar, follow the instructions listed [here](#faq).","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"trgao"},"content":"5. You should now be able to use the application.","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"trgao"},"content":"    - If you wish to familiarise yourself with the application, you can follow the **tutorial** on how to use MediFlowR in the next section [here](#tutorial-for-new-users).","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"trgao"},"content":"    - If you wish to learn more in depth about the **different features**, you can skip forward to this section [here](#features).","lastModifiedDate":"2023-10-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"trgao"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"trgao"},"content":"## Tutorial for new users","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"trgao"},"content":"If this is your first time using MediFlowR, do not worry as this is a tutorial for you to get familiar with the features","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"trgao"},"content":"of MediFlowR. Please follow the instructions [here](#quick-start) first to set up the application before proceeding with the tutorial.","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"trgao"},"content":"![First screen](images/userguide/FirstScreen.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"trgao"},"content":"- Launch the MediFlowR application. If you are not able to launch the application, follow the instructions [here](#faq). You will see the screen as shown above.","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"trgao"},"content":"  - Note: When the application is first launched, it will contain some default patient records.","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"trgao"},"content":" ","lastModifiedDate":"2023-10-24"},{"lineNumber":215,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":216,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":217,"author":{"gitId":"trgao"},"content":"- Let us try **adding a patient** into our patient records. Enter the command `add name\u003dJohn Doe gender\u003dMALE birthdate\u003d2000/10/20 phone\u003d98765432 email\u003djohnd@example.com address\u003d311, Clementi Ave 2, #02-25 illnesses\u003dFever` in the command box.","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":219,"author":{"gitId":"trgao"},"content":"![Command result for add](images/userguide/AddPatient.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"trgao"},"content":"- You should get this result screen. Scroll down in the patients list to confirm that patient _John Doe_ has indeed been added. Try adding a few more patients into the patient records with the same format to familiarise yourself with the command.","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"trgao"},"content":"- Let us try **editing a patient** in our patient records. Enter the command `edit 7 birthdate\u003d2001/12/14 phone\u003d93842738` in the command box.","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":225,"author":{"gitId":"trgao"},"content":"![Command result for add](images/userguide/EditPatient.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":227,"author":{"gitId":"trgao"},"content":"- You should get this result screen. Scroll down in the patients list to confirm that the birthdate and phone of patient _John Doe_ have indeed been edited. Try editing other attributes or editing other patients to familiarise yourself with the command.","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":230,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":231,"author":{"gitId":"kwangthiag"},"content":"- Let us try **finding a patient**. Enter the command `find-p alex bernice` in the command box.","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"trgao"},"content":"![Command result for find](images/userguide/FindPatient.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":234,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"trgao"},"content":"- You should get this result screen. This command will find all patients with either the name `alex` or `bernice`.","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"trgao"},"content":"- Let us try **scheduling an appointment** now that we have a patient in our records. Enter the command `schedule patient\u003dJohn Doe start\u003d2023/10/20 12:00 end\u003d2023/10/20 13:00 description\u003dFollow up on Chest X-Ray priority\u003dhigh` in the command box.","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":239,"author":{"gitId":"trgao"},"content":"![Command result for schedule](images/userguide/ScheduleAppointment.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"trgao"},"content":"- You should get this result screen. This will schedule a new appointment for the patient with the name `John Doe`. Try scheduling a few more appointments with the same format to familiarise yourself with the command.","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":245,"author":{"gitId":"trgao"},"content":"- Let us try **rescheduling the appointment** that we have just scheduled. Enter the command `reschedule 1 start\u003d2023/05/02 09:00 end\u003d2023/05/02 11:00` in the command box.","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"trgao"},"content":"![Command result for reschedule](images/userguide/RescheduleAppointment.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":248,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":249,"author":{"gitId":"trgao"},"content":"- You should get this result screen. This will reschedule the appointment to start on `2023/05/02 09:00` and end on `2023/05/02 11:00`. Try rescheduling the appointment to other timings or rescheduling other appointments to familiarise yourself with the command.","lastModifiedDate":"2023-11-01"},{"lineNumber":250,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":251,"author":{"gitId":"trgao"},"content":"- **Congratulations!** You have completed the tutorial. You are now ready to use MediFlowR. Enter the command `clear` to clear all patient records and appointments.","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"trgao"},"content":"You can learn more about the different commands [here](#features).","lastModifiedDate":"2023-10-24"},{"lineNumber":253,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":254,"author":{"gitId":"trgao"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-24"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2023-10-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"trgao"},"content":"MediFlowR provides a variety of commands for you to effectively manage your patient records and appointments. This section","lastModifiedDate":"2023-10-24"},{"lineNumber":262,"author":{"gitId":"trgao"},"content":"will clearly guide you on how to use the commands so that you can streamline your workflow and take full advantage of the","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"trgao"},"content":"features present in this application.","lastModifiedDate":"2023-10-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"trgao"},"content":"## Patient commands","lastModifiedDate":"2023-10-24"},{"lineNumber":266,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"trgao"},"content":"### Adding a new patient: `add`","lastModifiedDate":"2023-10-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"trgao"},"content":"This command creates a new patient to be added to the patient records, along with the necessary personal information","lastModifiedDate":"2023-10-24"},{"lineNumber":270,"author":{"gitId":"trgao"},"content":"and contact details about the patient.","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `add name\u003dNAME gender\u003dGENDER birthdate\u003dBIRTHDATE phone\u003dPHONE email\u003dEMAIL address\u003dADDRESS [illnesses\u003dILLNESS]`","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"trgao"},"content":":paperclip: **Example**: `add name\u003dJohn Doe gender\u003dMALE birthdate\u003d2000/10/20 phone\u003d98765432 email\u003djohnd@example.com address\u003d311, Clementi Ave 2, #02-25 illnesses\u003dfever`","lastModifiedDate":"2023-11-01"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"trgao"},"content":"The example command will add a _male_ patient called _John Doe_, with birthdate on _20 October 2000_, phone number at _98765432_,","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"trgao"},"content":"email at _johnd@example.com_ and address at _311, Clementi Ave 2, #02-25_, who is currently down with _fever_.","lastModifiedDate":"2023-11-01"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-10-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"trgao"},"content":"- A patient\u0027s name can only consist of _letters and numbers_.","lastModifiedDate":"2023-11-01"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"trgao"},"content":"- A patient\u0027s gender can only be `MALE` or `FEMALE`.","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"trgao"},"content":"- A patient\u0027s birthdate must be in the format `yyyy/MM/dd`, e.g. `2001/04/28` for a birthdate on 28 April 2001.","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"trgao"},"content":"- A patient\u0027s phone must be a _valid phone number_, i.e. only contains numbers.","lastModifiedDate":"2023-11-04"},{"lineNumber":288,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"trgao"},"content":"- A patient\u0027s email must be a _valid email address_, i.e. of the form `name@domain.com`.","lastModifiedDate":"2023-11-01"},{"lineNumber":290,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"trgao"},"content":"- A patient\u0027s illness can only consist of _letters and numbers_.","lastModifiedDate":"2023-11-08"},{"lineNumber":292,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":293,"author":{"gitId":"trgao"},"content":"- You do not have to enter the illness when adding a patient.","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":295,"author":{"gitId":"dinde2004"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":296,"author":{"gitId":"dinde2004"},"content":":bulb:","lastModifiedDate":"2023-11-03"},{"lineNumber":297,"author":{"gitId":"dinde2004"},"content":"Tips:","lastModifiedDate":"2023-11-03"},{"lineNumber":298,"author":{"gitId":"trgao"},"content":"You can enter more than one illness for a patient, e.g. `illnesses\u003dfever, flu` will add both fever and flu as a patient\u0027s illnesses.","lastModifiedDate":"2023-11-01"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":301,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":303,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":305,"author":{"gitId":"trgao"},"content":"### Updating a patient\u0027s details: `edit`","lastModifiedDate":"2023-10-24"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"trgao"},"content":"This command updates a patient\u0027s personal information and contact details. It will update the details of the patient at","lastModifiedDate":"2023-10-24"},{"lineNumber":308,"author":{"gitId":"trgao"},"content":"the specified `INDEX` currently shown in the patients records. You must edit *at least one* detail when using the command.","lastModifiedDate":"2023-11-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `edit INDEX [name\u003dNAME] [gender\u003dGENDER] [birthdate\u003dBIRTHDATE] [phone\u003dPHONE] [email\u003dEMAIL] [address\u003dADDRESS]`","lastModifiedDate":"2023-10-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"trgao"},"content":":paperclip: **Example**: `edit 1 birthdate\u003d2001/12/14 phone\u003d93842738`","lastModifiedDate":"2023-10-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"trgao"},"content":"This example command will update the patient with index 1 in the patient records (i.e. the first patient) and will change","lastModifiedDate":"2023-10-24"},{"lineNumber":315,"author":{"gitId":"trgao"},"content":"the patient\u0027s birthdate to _2001/12/14_ and phone number to _93842738_.","lastModifiedDate":"2023-11-01"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-10-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":319,"author":{"gitId":"trgao"},"content":"- The index provided must be a _positive integer_ and a _valid index_.","lastModifiedDate":"2023-11-01"},{"lineNumber":320,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":321,"author":{"gitId":"trgao"},"content":"- You must edit _at least one_ detail when using the command.","lastModifiedDate":"2023-11-01"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":323,"author":{"gitId":"trgao"},"content":"- A patient\u0027s name can only consist of _letters and numbers_.","lastModifiedDate":"2023-11-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":325,"author":{"gitId":"trgao"},"content":"- A patient\u0027s gender can only be `MALE` or `FEMALE`.","lastModifiedDate":"2023-11-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":327,"author":{"gitId":"trgao"},"content":"- A patient\u0027s birthdate must be in the format `yyyy/MM/dd`, e.g. `2001/04/28` for a birthdate on 28 April 2001.","lastModifiedDate":"2023-11-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":329,"author":{"gitId":"trgao"},"content":"- A patient\u0027s phone must be a _valid phone number_, i.e. only contains numbers.","lastModifiedDate":"2023-11-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":331,"author":{"gitId":"trgao"},"content":"- A patient\u0027s email must be a _valid email address_, i.e. of the form `name@domain.com`.","lastModifiedDate":"2023-11-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":333,"author":{"gitId":"trgao"},"content":"- You do not have to enter the illness when adding a patient.","lastModifiedDate":"2023-11-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":335,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":337,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":339,"author":{"gitId":"trgao"},"content":"### Diagnosing a patient: `diagnose`","lastModifiedDate":"2023-10-25"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":341,"author":{"gitId":"trgao"},"content":"This command adds one or more illnesses to a patient\u0027s current illnesses. It will update the details of the patient at","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"trgao"},"content":"the specified `INDEX` currently shown in the patients records.","lastModifiedDate":"2023-11-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":344,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `diagnose INDEX illnesses\u003dILLNESS`","lastModifiedDate":"2023-10-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":346,"author":{"gitId":"trgao"},"content":":paperclip: **Example**: `diagnose 1 illnesses\u003dfever`","lastModifiedDate":"2023-10-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":348,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-11-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":350,"author":{"gitId":"trgao"},"content":"- The index provided must be a _positive integer_ and a _valid index_.","lastModifiedDate":"2023-11-01"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":352,"author":{"gitId":"trgao"},"content":"- A patient\u0027s illness can only consist of _letters and numbers_.","lastModifiedDate":"2023-11-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":354,"author":{"gitId":"trgao"},"content":"This example command will update the patient with index 1 in the patient records (i.e. the first patient) and will add","lastModifiedDate":"2023-10-25"},{"lineNumber":355,"author":{"gitId":"trgao"},"content":"_fever_ to the patient\u0027s illnesses.","lastModifiedDate":"2023-11-01"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":357,"author":{"gitId":"trgao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"trgao"},"content":"You can enter more than one illness for a patient, e.g. `illnesses\u003dfever, flu` will add both fever and flu as a patient\u0027s illnesses.","lastModifiedDate":"2023-10-29"},{"lineNumber":359,"author":{"gitId":"trgao"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":361,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":363,"author":{"gitId":"trgao"},"content":"### Undiagnosing a patient: `undiagnose`","lastModifiedDate":"2023-10-25"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":365,"author":{"gitId":"trgao"},"content":"This command removes one or more illnesses to a patient\u0027s current illnesses. It will update the details of the patient at","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"trgao"},"content":"the specified `INDEX` currently shown in the patients records.","lastModifiedDate":"2023-11-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":368,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `undiagnose INDEX illnesses\u003dILLNESS`","lastModifiedDate":"2023-10-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":370,"author":{"gitId":"trgao"},"content":":paperclip: **Example**: `undiagnose 1 illnesses\u003dfever`","lastModifiedDate":"2023-10-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":372,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-11-01"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":374,"author":{"gitId":"trgao"},"content":"- The index provided must be a _positive integer_ and a _valid index_.","lastModifiedDate":"2023-11-01"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":376,"author":{"gitId":"trgao"},"content":"- A patient\u0027s illness can only consist of _letters and numbers_.","lastModifiedDate":"2023-11-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":378,"author":{"gitId":"trgao"},"content":"This example command will update the patient with index 1 in the patient records (i.e. the first patient) and will remove","lastModifiedDate":"2023-10-25"},{"lineNumber":379,"author":{"gitId":"trgao"},"content":"_fever_ from the patient\u0027s illnesses.","lastModifiedDate":"2023-11-01"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":381,"author":{"gitId":"trgao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-10-26"},{"lineNumber":382,"author":{"gitId":"trgao"},"content":"You can enter more than one illness for a patient, e.g. `illnesses\u003dfever, flu` will remove both fever and flu from a patient\u0027s illnesses.","lastModifiedDate":"2023-11-01"},{"lineNumber":383,"author":{"gitId":"trgao"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":385,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":387,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":388,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":389,"author":{"gitId":"trgao"},"content":"### Removing a patient: `delete`","lastModifiedDate":"2023-10-24"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"trgao"},"content":"This commands removes the specified patient from the patient list. It will remove the patient at","lastModifiedDate":"2023-10-24"},{"lineNumber":392,"author":{"gitId":"trgao"},"content":"the specified `INDEX` currently shown in the patients records.","lastModifiedDate":"2023-11-08"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `delete INDEX`","lastModifiedDate":"2023-10-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"trgao"},"content":":paperclip: **Example**: `delete 1`","lastModifiedDate":"2023-10-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"trgao"},"content":"This example command will remove the patient with index 1 in the patient records (i.e. the first patient).","lastModifiedDate":"2023-10-25"},{"lineNumber":399,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":400,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-10-29"},{"lineNumber":401,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":402,"author":{"gitId":"trgao"},"content":"- The index provided must be a _positive integer_ and a _valid index_.","lastModifiedDate":"2023-11-01"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":404,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-10-24"},{"lineNumber":405,"author":{"gitId":"trgao"},"content":"If you delete a patient, all appointments for that patient will also be deleted.","lastModifiedDate":"2023-10-24"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":408,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":409,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":410,"author":{"gitId":"trgao"},"content":"### Displaying all patients: `patients`","lastModifiedDate":"2023-10-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"trgao"},"content":"This command shows a list of all patients currently recorded in the MediFlowR application under the patients section.","lastModifiedDate":"2023-10-24"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `patients`","lastModifiedDate":"2023-10-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":417,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":418,"author":{"gitId":"kwangthiag"},"content":"### Finding patients by name: `find-p`","lastModifiedDate":"2023-11-02"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"trgao"},"content":"This command finds patients whose names contain any of the keywords that you specified.","lastModifiedDate":"2023-10-24"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"kwangthiag"},"content":":clipboard: **Format**: `find-p NAME`","lastModifiedDate":"2023-11-02"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"kwangthiag"},"content":":paperclip: **Example**: `find-p alex david`","lastModifiedDate":"2023-11-02"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"trgao"},"content":"This example command will find all patients with names that contain either `alex` or `david`, e.g. `Alex Yeoh` and `David Li`.","lastModifiedDate":"2023-10-24"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-10-29"},{"lineNumber":429,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":430,"author":{"gitId":"trgao"},"content":"- The search is _case-insensitive_, meaning that finding patients with the keyword `John`","lastModifiedDate":"2023-11-01"},{"lineNumber":431,"author":{"gitId":"trgao"},"content":"will return the same results as the keyword `john`.","lastModifiedDate":"2023-10-25"},{"lineNumber":432,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":433,"author":{"gitId":"trgao"},"content":"- Only patients with names matching the _full words_ of the keywords will be displayed, meaning that `Tom` will find patients","lastModifiedDate":"2023-11-01"},{"lineNumber":434,"author":{"gitId":"trgao"},"content":"with names that contain the full `Tom` but will not find patients","lastModifiedDate":"2023-10-25"},{"lineNumber":435,"author":{"gitId":"trgao"},"content":"with names such as `Tommy`.","lastModifiedDate":"2023-10-25"},{"lineNumber":436,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":437,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":438,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":439,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":440,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":441,"author":{"gitId":"kwangthiag"},"content":"### Finding patients by illness: `find-i`","lastModifiedDate":"2023-11-02"},{"lineNumber":442,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":443,"author":{"gitId":"trgao"},"content":"This command finds patients with illnesses that contain any of the keywords that you specified.","lastModifiedDate":"2023-10-29"},{"lineNumber":444,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":445,"author":{"gitId":"kwangthiag"},"content":":clipboard: **Format**: `find-i ILLNESS`","lastModifiedDate":"2023-11-02"},{"lineNumber":446,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":447,"author":{"gitId":"billieboy7"},"content":":paperclip: **Example**: `find-i fever flu`","lastModifiedDate":"2023-11-12"},{"lineNumber":448,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":449,"author":{"gitId":"trgao"},"content":"This example command will find all patients with illnesses that contain either `fever` or `flu`.","lastModifiedDate":"2023-10-29"},{"lineNumber":450,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":451,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-10-29"},{"lineNumber":452,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":453,"author":{"gitId":"trgao"},"content":"- The search is _case-insensitive_, meaning that finding illnesses with the keyword `fever`","lastModifiedDate":"2023-11-01"},{"lineNumber":454,"author":{"gitId":"billieboy7"},"content":"  will return the same results as the keyword `Fever` or `FEVER`.","lastModifiedDate":"2023-11-12"},{"lineNumber":455,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":456,"author":{"gitId":"billieboy7"},"content":"- Patients with illnesses that even contains the keywords will be displayed, meaning that `flu` will find both patients","lastModifiedDate":"2023-11-12"},{"lineNumber":457,"author":{"gitId":"billieboy7"},"content":"  with illnesses that contain the full `flu` illness and also patients with illnesses such as `influenza`.","lastModifiedDate":"2023-11-12"},{"lineNumber":458,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":459,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":460,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":461,"author":{"gitId":"kwangthiag"},"content":"### Sorting patients: `sort-p`","lastModifiedDate":"2023-11-02"},{"lineNumber":462,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":463,"author":{"gitId":"kwangthiag"},"content":"This command sorts the patients list by name or birthday, in ascending or descending order.","lastModifiedDate":"2023-11-02"},{"lineNumber":464,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":465,"author":{"gitId":"kwangthiag"},"content":":clipboard: **Format**: `sort-p DIRECTION by\u003dATTRIBUTE`","lastModifiedDate":"2023-11-02"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":467,"author":{"gitId":"kwangthiag"},"content":":paperclip: **Example**: `sort-p asc by\u003dname`","lastModifiedDate":"2023-11-02"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":469,"author":{"gitId":"kwangthiag"},"content":"This example command will sort the patients by the _names_ in _ascending order_.","lastModifiedDate":"2023-11-02"},{"lineNumber":470,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":471,"author":{"gitId":"kwangthiag"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-11-02"},{"lineNumber":472,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":473,"author":{"gitId":"trgao"},"content":"- This command will sort all patients in the application, but it will only display the patients that are currently displayed.","lastModifiedDate":"2023-11-04"},{"lineNumber":474,"author":{"gitId":"trgao"},"content":"  E.g. If you had just used the command `find-p` to find patients by name, this command will only display","lastModifiedDate":"2023-11-04"},{"lineNumber":475,"author":{"gitId":"billieboy7"},"content":"  the patients that were found by the previous command. So to view the full sorted list, follow up with the command `list`.","lastModifiedDate":"2023-11-12"},{"lineNumber":476,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":477,"author":{"gitId":"kwangthiag"},"content":"- The direction can only be `asc` or `desc`, i.e. ascending or descending order respectively.","lastModifiedDate":"2023-11-02"},{"lineNumber":478,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":479,"author":{"gitId":"kwangthiag"},"content":"- The attribute to sort the patients by can only be `name` or `birthday`.","lastModifiedDate":"2023-11-02"},{"lineNumber":480,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":481,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":482,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":483,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":484,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":485,"author":{"gitId":"trgao"},"content":"## Appointment Commands","lastModifiedDate":"2023-10-24"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"kwangthiag"},"content":"### Scheduling a new appointment: `schedule`","lastModifiedDate":"2023-10-24"},{"lineNumber":488,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":489,"author":{"gitId":"trgao"},"content":"This command schedules an appointment for an existing patient in the patient records. It will schedule an appointment","lastModifiedDate":"2023-10-24"},{"lineNumber":490,"author":{"gitId":"trgao"},"content":"for the patient with the name `PATIENT`.","lastModifiedDate":"2023-10-25"},{"lineNumber":491,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":492,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `schedule patient\u003dPATIENT start\u003dSTART end\u003dEND description\u003dDESCRIPTION priority\u003dPRIORITY`","lastModifiedDate":"2023-11-01"},{"lineNumber":493,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":494,"author":{"gitId":"trgao"},"content":":paperclip: **Example**: `schedule patient\u003dAlex Yeoh start\u003d2023/10/20 12:00 end\u003d2023/10/20 13:00 description\u003dFollow up on Chest X-Ray priority\u003dhigh`","lastModifiedDate":"2023-11-01"},{"lineNumber":495,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":496,"author":{"gitId":"trgao"},"content":"This example command will schedule a new _high priority_ appointment for the patient _Alex Yeoh_ on _20 October 2023_","lastModifiedDate":"2023-11-01"},{"lineNumber":497,"author":{"gitId":"trgao"},"content":"from _12pm_ to _1pm_ for his _follow-up appointment on his chest X-Ray_.","lastModifiedDate":"2023-11-01"},{"lineNumber":498,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":499,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-10-29"},{"lineNumber":500,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":501,"author":{"gitId":"billieboy7"},"content":"- The patient provided for an appointment must exactly match the _full name_ of a patient that is already in the patient records (case-sensitive). ","lastModifiedDate":"2023-11-14"},{"lineNumber":502,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":503,"author":{"gitId":"trgao"},"content":"- An appointment start and end must be in the format `yyyy/MM/dd HH:mm`, e.g. `2023/04/28 19:00` for 28 April 2023, at 7pm.","lastModifiedDate":"2023-10-25"},{"lineNumber":504,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":505,"author":{"gitId":"trgao"},"content":"- An appointment start date time should occur _before_ end date time of the same appointment.","lastModifiedDate":"2023-11-01"},{"lineNumber":506,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":507,"author":{"gitId":"trgao"},"content":"- An appointment description can only consist of _letters and numbers_.","lastModifiedDate":"2023-11-01"},{"lineNumber":508,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":509,"author":{"gitId":"trgao"},"content":"- An appointment priority can only be `high`, `medium`, or `low`.","lastModifiedDate":"2023-11-01"},{"lineNumber":510,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":511,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":512,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":513,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":514,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":515,"author":{"gitId":"trgao"},"content":"### Rescheduling an appointment: `reschedule`","lastModifiedDate":"2023-10-24"},{"lineNumber":516,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":517,"author":{"gitId":"trgao"},"content":"This command reschedules an existing appointment to another timeslot. It will reschedule the appointment at the specified","lastModifiedDate":"2023-10-24"},{"lineNumber":518,"author":{"gitId":"trgao"},"content":"`INDEX` currently shown in the appointments list.","lastModifiedDate":"2023-11-08"},{"lineNumber":519,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":520,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `reschedule INDEX start\u003dSTART end\u003dEND`","lastModifiedDate":"2023-10-29"},{"lineNumber":521,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":522,"author":{"gitId":"trgao"},"content":":paperclip: **Example**: `reschedule 1 start\u003d2023/05/02 09:00 end\u003d2023/05/02 11:00`","lastModifiedDate":"2023-10-29"},{"lineNumber":523,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":524,"author":{"gitId":"trgao"},"content":"This example command will reschedule the appointment with index 1 in the appointments list (i.e. the first appointment) to","lastModifiedDate":"2023-10-24"},{"lineNumber":525,"author":{"gitId":"trgao"},"content":"_2 May 2023_, from _9am_ to _11am_.","lastModifiedDate":"2023-11-01"},{"lineNumber":526,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":527,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-10-29"},{"lineNumber":528,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":529,"author":{"gitId":"trgao"},"content":"- The index provided must be a _positive integer_ and a _valid index_.","lastModifiedDate":"2023-11-01"},{"lineNumber":530,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":531,"author":{"gitId":"trgao"},"content":"- You must specify _both start and end_ when using the command.","lastModifiedDate":"2023-11-04"},{"lineNumber":532,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":533,"author":{"gitId":"trgao"},"content":"- The patient provided for an appointment must exactly match the _full name_ of a patient that is already in the patient records.","lastModifiedDate":"2023-11-08"},{"lineNumber":534,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":535,"author":{"gitId":"trgao"},"content":"- An appointment start and end must be in the format `yyyy/MM/dd HH:mm`, e.g. `2023/04/28 19:00` for 28 April 2023, at 7pm.","lastModifiedDate":"2023-11-08"},{"lineNumber":536,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":537,"author":{"gitId":"trgao"},"content":"- An appointment start date time should occur _before_ end date time of the same appointment.","lastModifiedDate":"2023-11-08"},{"lineNumber":538,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":539,"author":{"gitId":"trgao"},"content":"- An appointment description can only consist of _letters and numbers_.","lastModifiedDate":"2023-11-08"},{"lineNumber":540,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":541,"author":{"gitId":"trgao"},"content":"- An appointment priority can only be `high`, `medium`, or `low`.","lastModifiedDate":"2023-11-08"},{"lineNumber":542,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":543,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":544,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":545,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":546,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":547,"author":{"gitId":"trgao"},"content":"### Triaging an appointment: `triage`","lastModifiedDate":"2023-11-02"},{"lineNumber":548,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":549,"author":{"gitId":"trgao"},"content":"This command changes the priority of an existing appointment. It will change the appointment at the specified","lastModifiedDate":"2023-11-02"},{"lineNumber":550,"author":{"gitId":"trgao"},"content":"`INDEX` currently shown in the appointments list.","lastModifiedDate":"2023-11-08"},{"lineNumber":551,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":552,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `triage INDEX priority\u003dPRIORITY`","lastModifiedDate":"2023-11-02"},{"lineNumber":553,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":554,"author":{"gitId":"trgao"},"content":":paperclip: **Example**: `triage 1 priority\u003dhigh`","lastModifiedDate":"2023-11-02"},{"lineNumber":555,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":556,"author":{"gitId":"trgao"},"content":"This example command will change the priority of the appointment with index 1 in the appointments list (i.e. the first appointment) to _high_.","lastModifiedDate":"2023-11-02"},{"lineNumber":557,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":558,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-11-02"},{"lineNumber":559,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":560,"author":{"gitId":"trgao"},"content":"- The index provided must be a _positive integer_ and a _valid index_.","lastModifiedDate":"2023-11-02"},{"lineNumber":561,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":562,"author":{"gitId":"trgao"},"content":"- An appointment priority can only be `high`, `medium`, or `low`.","lastModifiedDate":"2023-11-02"},{"lineNumber":563,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":564,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":565,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":566,"author":{"gitId":"trgao"},"content":"### Cancelling an appointment: `cancel`","lastModifiedDate":"2023-10-24"},{"lineNumber":567,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":568,"author":{"gitId":"trgao"},"content":"This command cancels an existing appointment. It will cancel the appointment at the specified","lastModifiedDate":"2023-10-24"},{"lineNumber":569,"author":{"gitId":"trgao"},"content":"`INDEX` currently shown in the appointments list.","lastModifiedDate":"2023-11-08"},{"lineNumber":570,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":571,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `cancel INDEX`","lastModifiedDate":"2023-10-29"},{"lineNumber":572,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":573,"author":{"gitId":"trgao"},"content":":paperclip: **Example**: `cancel 1`","lastModifiedDate":"2023-11-01"},{"lineNumber":574,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":575,"author":{"gitId":"trgao"},"content":"This example command will cancel the appointment with index 1 in the appointments list (i.e. the first appointment).","lastModifiedDate":"2023-10-24"},{"lineNumber":576,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":577,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-10-29"},{"lineNumber":578,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":579,"author":{"gitId":"trgao"},"content":"- The index provided must be a _positive integer_ and a _valid index_.","lastModifiedDate":"2023-11-01"},{"lineNumber":580,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":581,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":582,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":583,"author":{"gitId":"trgao"},"content":"### Displaying all appointments: `appointments`","lastModifiedDate":"2023-10-24"},{"lineNumber":584,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":585,"author":{"gitId":"trgao"},"content":"This command shows a list of all appointments currently scheduled.","lastModifiedDate":"2023-10-24"},{"lineNumber":586,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":587,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `appointments`","lastModifiedDate":"2023-10-29"},{"lineNumber":588,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":589,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":590,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":591,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":592,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":593,"author":{"gitId":"kwangthiag"},"content":"### Finding appointments by patient name: `find-a`","lastModifiedDate":"2023-11-02"},{"lineNumber":594,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":595,"author":{"gitId":"trgao"},"content":"This command finds appointments with patient names that contain any of the keywords that you specified.","lastModifiedDate":"2023-10-29"},{"lineNumber":596,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":597,"author":{"gitId":"kwangthiag"},"content":":clipboard: **Format**: `find-a PATIENT`","lastModifiedDate":"2023-11-02"},{"lineNumber":598,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":599,"author":{"gitId":"kwangthiag"},"content":":paperclip: **Example**: `find-a alex david`","lastModifiedDate":"2023-11-02"},{"lineNumber":600,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":601,"author":{"gitId":"trgao"},"content":"This example command will find all appointments with patient names that contain either `alex` or `david`, e.g. `Alex Yeoh` or `David Li`.","lastModifiedDate":"2023-10-29"},{"lineNumber":602,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":603,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-10-29"},{"lineNumber":604,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":605,"author":{"gitId":"trgao"},"content":"- The search is _case-insensitive_, meaning that finding appointments with the keyword `John`","lastModifiedDate":"2023-11-01"},{"lineNumber":606,"author":{"gitId":"trgao"},"content":"  will return the same results as the keyword `john`.","lastModifiedDate":"2023-10-29"},{"lineNumber":607,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":608,"author":{"gitId":"trgao"},"content":"- Only appointments with patient names matching the _full words_ of the keywords will be displayed, meaning that `Tom` will find patients","lastModifiedDate":"2023-11-01"},{"lineNumber":609,"author":{"gitId":"trgao"},"content":"  with names that contain the full `Tom` but will not find patients","lastModifiedDate":"2023-10-29"},{"lineNumber":610,"author":{"gitId":"trgao"},"content":"  with names such as `Tommy`.","lastModifiedDate":"2023-10-29"},{"lineNumber":611,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":612,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":613,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":614,"author":{"gitId":"trgao"},"content":"### Displaying all appointments for today: `today`","lastModifiedDate":"2023-10-25"},{"lineNumber":615,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":616,"author":{"gitId":"trgao"},"content":"This command shows a list of all appointments currently scheduled to start today, i.e. the current date you are using","lastModifiedDate":"2023-10-25"},{"lineNumber":617,"author":{"gitId":"trgao"},"content":"the command on.","lastModifiedDate":"2023-10-25"},{"lineNumber":618,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":619,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `today`","lastModifiedDate":"2023-10-29"},{"lineNumber":620,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":621,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":622,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":623,"author":{"gitId":"trgao"},"content":"### Displaying all upcoming appointments: `upcoming`","lastModifiedDate":"2023-10-25"},{"lineNumber":624,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":625,"author":{"gitId":"trgao"},"content":"This command shows a list of all upcoming appointments currently scheduled.","lastModifiedDate":"2023-10-25"},{"lineNumber":626,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":627,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `upcoming`","lastModifiedDate":"2023-10-29"},{"lineNumber":628,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":629,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":630,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":631,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":632,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":633,"author":{"gitId":"kwangthiag"},"content":"### Sorting appointments: `sort-a`","lastModifiedDate":"2023-11-02"},{"lineNumber":634,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":635,"author":{"gitId":"trgao"},"content":"This command sorts the appointments list by date or priority, in ascending or descending order.","lastModifiedDate":"2023-11-01"},{"lineNumber":636,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":637,"author":{"gitId":"kwangthiag"},"content":":clipboard: **Format**: `sort-a DIRECTION by\u003dATTRIBUTE`","lastModifiedDate":"2023-11-02"},{"lineNumber":638,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":639,"author":{"gitId":"kwangthiag"},"content":":paperclip: **Example**: `sort-a asc by\u003dtime`","lastModifiedDate":"2023-11-02"},{"lineNumber":640,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":641,"author":{"gitId":"trgao"},"content":"This example command will sort the appointments by the _times_ in _ascending order_.","lastModifiedDate":"2023-11-01"},{"lineNumber":642,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":643,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-11-01"},{"lineNumber":644,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":645,"author":{"gitId":"trgao"},"content":"- This command will sort all appointments in the application, but it will only display the appointments that are currently displayed.","lastModifiedDate":"2023-11-04"},{"lineNumber":646,"author":{"gitId":"trgao"},"content":"E.g. If you had just used the command `find-a` to find appointments by patient name, this command will only display","lastModifiedDate":"2023-11-04"},{"lineNumber":647,"author":{"gitId":"trgao"},"content":"the appointments that were found by the previous command.","lastModifiedDate":"2023-11-04"},{"lineNumber":648,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":649,"author":{"gitId":"trgao"},"content":"- The direction can only be `asc` or `desc`, i.e. ascending or descending order respectively.","lastModifiedDate":"2023-11-01"},{"lineNumber":650,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":651,"author":{"gitId":"trgao"},"content":"- The attribute to sort the appointments by can only be `time` or `priority`.","lastModifiedDate":"2023-11-01"},{"lineNumber":652,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":653,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":654,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":655,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":656,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":657,"author":{"gitId":"trgao"},"content":"## Miscellaneous commands","lastModifiedDate":"2023-10-24"},{"lineNumber":658,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":659,"author":{"gitId":"trgao"},"content":"### Displaying all patient records and appointments: `list`","lastModifiedDate":"2023-10-29"},{"lineNumber":660,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":661,"author":{"gitId":"trgao"},"content":"This command displays all patient records and appointments.","lastModifiedDate":"2023-10-29"},{"lineNumber":662,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":663,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `list`","lastModifiedDate":"2023-10-29"},{"lineNumber":664,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":665,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":666,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":667,"author":{"gitId":"trgao"},"content":"### Undoing a previous command: `undo`","lastModifiedDate":"2023-10-24"},{"lineNumber":668,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":669,"author":{"gitId":"trgao"},"content":"This command undoes a previous command.","lastModifiedDate":"2023-10-24"},{"lineNumber":670,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":671,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `undo`","lastModifiedDate":"2023-10-29"},{"lineNumber":672,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":673,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-11-08"},{"lineNumber":674,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":675,"author":{"gitId":"trgao"},"content":"- The `mode` command cannot be undone using this command, as you can simply type mode again to toggle the dark/light mode.","lastModifiedDate":"2023-11-08"},{"lineNumber":676,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":677,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":678,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":679,"author":{"gitId":"trgao"},"content":"### Redoing a previous command: `redo`","lastModifiedDate":"2023-10-24"},{"lineNumber":680,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":681,"author":{"gitId":"trgao"},"content":"This command redoes a previous command that you undid.","lastModifiedDate":"2023-10-24"},{"lineNumber":682,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":683,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `redo`","lastModifiedDate":"2023-10-29"},{"lineNumber":684,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":685,"author":{"gitId":"trgao"},"content":":pencil2: **Notes:**","lastModifiedDate":"2023-11-08"},{"lineNumber":686,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":687,"author":{"gitId":"trgao"},"content":"- The `mode` command cannot be redone using this command, as you can simply type mode again to toggle the dark/light mode.","lastModifiedDate":"2023-11-08"},{"lineNumber":688,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":689,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":690,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":691,"author":{"gitId":"trgao"},"content":"### Clearing all records: `clear`","lastModifiedDate":"2023-10-26"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"trgao"},"content":"This command clears all patient records and appointments from the application.","lastModifiedDate":"2023-10-25"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `clear`","lastModifiedDate":"2023-10-29"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":697,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":698,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":699,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":700,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":701,"author":{"gitId":"trgao"},"content":"### Toggling dark/light mode: `mode`","lastModifiedDate":"2023-11-01"},{"lineNumber":702,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":703,"author":{"gitId":"trgao"},"content":"This command toggles the dark/light mode for the application.","lastModifiedDate":"2023-11-01"},{"lineNumber":704,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":705,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `mode`","lastModifiedDate":"2023-11-01"},{"lineNumber":706,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":707,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":708,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":709,"author":{"gitId":"trgao"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2023-10-24"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":711,"author":{"gitId":"trgao"},"content":"This command exits the program.","lastModifiedDate":"2023-10-24"},{"lineNumber":712,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":713,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `exit`","lastModifiedDate":"2023-10-29"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":715,"author":{"gitId":"kwangthiag"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-12"},{"lineNumber":716,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":717,"author":{"gitId":"trgao"},"content":"### Viewing help: `help`","lastModifiedDate":"2023-10-24"},{"lineNumber":718,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":719,"author":{"gitId":"trgao"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-24"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"trgao"},"content":"![help message](images/userguide/HelpMessage.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":722,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":723,"author":{"gitId":"trgao"},"content":":clipboard: **Format**: `help`","lastModifiedDate":"2023-10-29"},{"lineNumber":724,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":725,"author":{"gitId":"trgao"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-26"},{"lineNumber":726,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":727,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":728,"author":{"gitId":"trgao"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-26"},{"lineNumber":729,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":730,"author":{"gitId":"trgao"},"content":"## Commands summary","lastModifiedDate":"2023-10-26"},{"lineNumber":731,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":732,"author":{"gitId":"trgao"},"content":"| Action                                                                                                       | Format, Examples                                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-10-26"},{"lineNumber":733,"author":{"gitId":"trgao"},"content":"|--------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-01"},{"lineNumber":734,"author":{"gitId":"trgao"},"content":"| [**Adding a new patient**](#adding-a-new-patient-add)                                                        | `add name\u003dNAME gender\u003dGENDER birthdate\u003dBIRTHDATE phone\u003dPHONE email\u003dEMAIL address\u003dADDRESS [illness\u003dILLNESS]` \u003cbr\u003e e.g., `add name\u003dJohn Doe gender\u003dMALE birthdate\u003d2000/10/20 phone\u003d98765432 email\u003djohnd@example.com address\u003d311, Clementi Ave 2, #02-25 illnesses\u003dfever` |","lastModifiedDate":"2023-11-01"},{"lineNumber":735,"author":{"gitId":"trgao"},"content":"| [**Updating a patient\u0027s details**](#updating-a-patients-details-edit)                                        | `edit INDEX [name\u003dNAME] [gender\u003dGENDER] [birthdate\u003dBIRTHDATE] [phone\u003dPHONE] [email\u003dEMAIL] [address\u003dADDRESS]` \u003cbr\u003e e.g., `edit 1 birthdate\u003d2001/12/14 phone\u003d93842738`                                                                                                   |","lastModifiedDate":"2023-10-26"},{"lineNumber":736,"author":{"gitId":"trgao"},"content":"| [**Diagnosing a patient**](#diagnosing-a-patient-diagnose)                                                   | `diagnose INDEX illnesses\u003dILLNESS`\u003cbr\u003e e.g., `diagnose 1 illnesses\u003dfever`                                                                                                                                                                                              |","lastModifiedDate":"2023-10-29"},{"lineNumber":737,"author":{"gitId":"trgao"},"content":"| [**Undiagnosing a patient**](#undiagnosing-a-patient-undiagnose)                                             | `undiagnose INDEX illnesses\u003dILLNESS`\u003cbr\u003e e.g., `undiagnose 1 illnesses\u003dfever`                                                                                                                                                                                          |","lastModifiedDate":"2023-10-29"},{"lineNumber":738,"author":{"gitId":"trgao"},"content":"| [**Removing a patient**](#removing-a-patient-delete)                                                         | `delete INDEX`\u003cbr\u003e e.g., `delete 1`                                                                                                                                                                                                                                    |","lastModifiedDate":"2023-10-26"},{"lineNumber":739,"author":{"gitId":"trgao"},"content":"| [**Displaying all patients**](#displaying-all-patients-patients)                                             | `patients`                                                                                                                                                                                                                                                             |","lastModifiedDate":"2023-10-29"},{"lineNumber":740,"author":{"gitId":"trgao"},"content":"| [**Finding patients by name**](#finding-patients-by-name-find-p)                                             | `find-p NAME`\u003cbr\u003e e.g., `find-p alex david`                                                                                                                                                                                                                            |","lastModifiedDate":"2023-11-04"},{"lineNumber":741,"author":{"gitId":"kwangthiag"},"content":"| [**Finding patients by illness**](#finding-patients-by-illness-find-i)                                       | `find-i ILLNESS`\u003cbr\u003e e.g., `find-i fever flu`                                                                                                                                                                                                                          |","lastModifiedDate":"2023-11-02"},{"lineNumber":742,"author":{"gitId":"trgao"},"content":"| [**Sorting patients**](#sorting-patients-sort-p)                                                             | `sort-p DIRECTION by\u003dATTRIBUTE`\u003cbr\u003e e.g., `sort-p asc by\u003dname`                                                                                                                                                                                                         |","lastModifiedDate":"2023-11-04"},{"lineNumber":743,"author":{"gitId":"trgao"},"content":"| [**Scheduling a new appointment**](#scheduling-a-new-appointment-schedule)                                   | `schedule patient\u003dPATIENT start\u003dSTART end\u003dEND description\u003dDESCRIPTION priority\u003dPRIORITY` \u003cbr\u003e e.g., `schedule patient\u003dAlex Yeoh start\u003d2023/10/20 12:00 end\u003d2023/10/20 13:00 description\u003dFollow up on Chest X-Ray priority\u003dhigh`                                        |","lastModifiedDate":"2023-11-01"},{"lineNumber":744,"author":{"gitId":"trgao"},"content":"| [**Rescheduling an appointment**](#rescheduling-an-appointment-reschedule)                                   | `reschedule INDEX start\u003dSTART end\u003dEND`\u003cbr\u003e e.g., `reschedule 1 start\u003d2023/05/02 09:00 end\u003d2023/05/02 11:00`                                                                                                                                                            |","lastModifiedDate":"2023-10-26"},{"lineNumber":745,"author":{"gitId":"trgao"},"content":"| [**Triaging an appointment**](#triaging-an-appointment-triage)                                               | `triage INDEX priority\u003dPRIORITY`\u003cbr\u003e e.g., `triage 1 priority\u003dhigh`                                                                                                                                                                                                    |","lastModifiedDate":"2023-11-02"},{"lineNumber":746,"author":{"gitId":"trgao"},"content":"| [**Cancelling an appointment**](#cancelling-an-appointment-cancel)                                           | `cancel INDEX`\u003cbr\u003e e.g., `cancel 1`                                                                                                                                                                                                                                    |","lastModifiedDate":"2023-11-01"},{"lineNumber":747,"author":{"gitId":"trgao"},"content":"| [**Displaying all appointments**](#displaying-all-appointments-appointments)                                 | `appointments`                                                                                                                                                                                                                                                         |","lastModifiedDate":"2023-10-26"},{"lineNumber":748,"author":{"gitId":"kwangthiag"},"content":"| [**Finding appointments by patient name**](#finding-appointments-by-patient-name-find-a)                     | `find-a PATIENT`\u003cbr\u003e e.g., `find-a alex david`                                                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":749,"author":{"gitId":"trgao"},"content":"| [**Displaying all appointments for today**](#displaying-all-appointments-for-today-today)                    | `today`                                                                                                                                                                                                                                                                |","lastModifiedDate":"2023-10-26"},{"lineNumber":750,"author":{"gitId":"trgao"},"content":"| [**Displaying all upcoming appointments**](#displaying-all-upcoming-appointments-upcoming)                   | `upcoming`                                                                                                                                                                                                                                                             |","lastModifiedDate":"2023-10-26"},{"lineNumber":751,"author":{"gitId":"kwangthiag"},"content":"| [**Sorting appointments**](#sorting-appointments-sort-a)                                                     | `sort-a DIRECTION by\u003dATTRIBUTE`\u003cbr\u003e e.g., `sort-a asc by\u003dtime`                                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":752,"author":{"gitId":"trgao"},"content":"| [**Displaying all patient records and appointments**](#displaying-all-patient-records-and-appointments-list) | `list`                                                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-11-01"},{"lineNumber":753,"author":{"gitId":"trgao"},"content":"| [**Undoing a previous command**](#undoing-a-previous-command-undo)                                           | `undo`                                                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":754,"author":{"gitId":"trgao"},"content":"| [**Redoing a previous command**](#redoing-a-previous-command-redo)                                           | `redo`                                                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":755,"author":{"gitId":"trgao"},"content":"| [**Clearing all patient records**](#clearing-all-patient-records-clear)                                      | `clear`                                                                                                                                                                                                                                                                |","lastModifiedDate":"2023-10-26"},{"lineNumber":756,"author":{"gitId":"trgao"},"content":"| [**Toggling dark/light mode**](#toggling-darklight-mode-mode)                                                | `mode`                                                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-11-01"},{"lineNumber":757,"author":{"gitId":"trgao"},"content":"| [**Exiting the program**](#exiting-the-program-exit)                                                         | `exit`                                                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":758,"author":{"gitId":"trgao"},"content":"| [**Viewing help**](#viewing-help-help)                                                                       | `help`                                                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":759,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":760,"author":{"gitId":"trgao"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-26"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"trgao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":763,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"trgao"},"content":"**Q**: How do I launch the MediFlowR application?\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":768,"author":{"gitId":"trgao"},"content":"**A**: The easiest way is to double-click the `mediflowr.jar` file and the application should launch. If that does not work,","lastModifiedDate":"2023-10-24"},{"lineNumber":769,"author":{"gitId":"trgao"},"content":"follow the steps here:","lastModifiedDate":"2023-10-24"},{"lineNumber":770,"author":{"gitId":"trgao"},"content":"1. Open Command Prompt if you are on Windows, or open Terminal if you are on MacOS.","lastModifiedDate":"2023-10-24"},{"lineNumber":771,"author":{"gitId":"trgao"},"content":"2. Navigate to the directory that contains the `mediflowr.jar` file using the `cd` command. For example, if the file is","lastModifiedDate":"2023-10-24"},{"lineNumber":772,"author":{"gitId":"trgao"},"content":"located at `C:\\Users\\YourUserName\\Downloads` on Windows or `~/Downloads` on MacOS, you can enter the command `cd C:\\Users\\YourUserName\\Downloads`","lastModifiedDate":"2023-10-24"},{"lineNumber":773,"author":{"gitId":"trgao"},"content":"or `cd ~/Downloads` to navigate to that directory.","lastModifiedDate":"2023-10-24"},{"lineNumber":774,"author":{"gitId":"trgao"},"content":"3. Open the `mediflowr.jar` file using the command `java -jar mediflowr.jar`. The application should launch afterwards.","lastModifiedDate":"2023-10-24"},{"lineNumber":775,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":776,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"trgao"},"content":"**A**: You can install MediFlowR on that other computer, then simply transfer over the `mediflowr.json` file located in the","lastModifiedDate":"2023-10-24"},{"lineNumber":778,"author":{"gitId":"trgao"},"content":"data folder to the data folder on that other computer. The data folder is located at the same place as your MediFlowR application.","lastModifiedDate":"2023-10-24"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"trgao"},"content":"**Q**: How do I save my data after any changes I have made?\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":781,"author":{"gitId":"trgao"},"content":"**A**: The data is saved automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-24"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"trgao"},"content":"**Q** Can I edit the data file used by the application directly?\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":784,"author":{"gitId":"trgao"},"content":"**A**: MediFlowR data are saved automatically as a JSON file `[JAR file location]/data/mediflowr.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-24"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":786,"author":{"gitId":"trgao"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-10-24"},{"lineNumber":787,"author":{"gitId":"trgao"},"content":"If your changes to the data file makes its format invalid, the application will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-11-04"},{"lineNumber":788,"author":{"gitId":"trgao"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":790,"author":{"gitId":"trgao"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-26"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":792,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":794,"author":{"gitId":"trgao"},"content":"## Known issues","lastModifiedDate":"2023-10-24"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"trgao"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the application will open off-screen. The remedy is to delete the `preferences.json` file created by the application, located in the same folder as the application, before running the application again.","lastModifiedDate":"2023-11-01"},{"lineNumber":797,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":798,"author":{"gitId":"trgao"},"content":"Return to the [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"dinde2004":6,"kwangthiag":93,"billieboy7":37,"licongshen12":2,"-":125,"trgao":535}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"trgao"},"content":"    content: \"MediFlowR\";","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"trgao":1}},{"path":"docs/diagrams/AppointmentCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"skinparam backgroundColor #ffffff","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"skinparam classBackgroundColor #FFFFAA","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"hide circle","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"class Model \u003c\u003cinterface\u003e\u003e {","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"    + addAppointment(patient : Appointment) : void","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"    + deleteAppointment(patient : Appointment) : void","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"    + setAppointment(patient : Appointment) : void","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"    + getFilteredAppointmentList(): ObservableList\u003cAppointment\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"class ReadOnlyAddressBook \u003c\u003cinterface\u003e\u003e {","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"    + getPatientList() : ObservableList\u003cAppointment\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"abstract class \"{abstract}\\nCommand\" {","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    + {abstract} execute(model : Model) : CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"class AppointmentXYZCommand {","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    /\u0027 Attributes \u0027/","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"    \u003cu\u003e + COMMAND_WORD \u003d \"XYZ\"","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    \u003cu\u003e + MESSAGE_SUCCESS \u003d \"Command XYZ has succeeded\"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    /\u0027 Methods \u0027/","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    + execute(model : Model) : CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"interface \"Parser\u003cT\u003e\" \u003c\u003cinterface\u003e\u003e {","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    parse(userInput : String) : AppointmentXYZCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"class AppointmentXYZCommandParser implements \"Parser\u003cT\u003e\" {","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"    /\u0027 Methods \u0027/","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"    + parse(args : String) : AppointmentXYZCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"Model ..\u003e ReadOnlyAddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"AppointmentXYZCommand \u003c..left AppointmentXYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"AppointmentXYZCommand ..\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"AppointmentXYZCommand --up|\u003e \"{abstract}\\nCommand\"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"trgao":45}},{"path":"docs/diagrams/DiagnoseCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"!include style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"participant \":DiagnoseCommandParser\" as DiagnoseCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"participant \"d:DiagnoseCommand\" as DiagnoseCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"[-\u003e LogicManager : execute(\"diagnose 1 illnesses\u003dflu, fever\")","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"activate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"diagnose 1 illnesses\u003dflu, fever\")","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"create DiagnoseCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"AddressBookParser -\u003e DiagnoseCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"activate DiagnoseCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"DiagnoseCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"deactivate DiagnoseCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"AddressBookParser -\u003e DiagnoseCommandParser : parse(\"1 illnesses\u003dflu, fever\")","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"activate DiagnoseCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"create DiagnoseCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"DiagnoseCommandParser -\u003e DiagnoseCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"activate DiagnoseCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"DiagnoseCommand --\u003e DiagnoseCommandParser : d","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"deactivate DiagnoseCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"DiagnoseCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"deactivate DiagnoseCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"DiagnoseCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"destroy DiagnoseCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"LogicManager -\u003e DiagnoseCommand : execute(model)","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"activate DiagnoseCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"DiagnoseCommand -[LOGIC_COLOR]\u003e DiagnoseCommand: createDiagnosedPerson","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"activate DiagnoseCommand #D3D3EC","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"            DiagnoseCommand --[LOGIC_COLOR]\u003e DiagnoseCommand : diagnosedPerson","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"            deactivate DiagnoseCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"DiagnoseCommand -\u003e Model : setPerson(target, diagnosedPerson)","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"activate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"Model --\u003e DiagnoseCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"deactivate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"create CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"DiagnoseCommand -\u003e CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"activate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"CommandResult --\u003e DiagnoseCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"DiagnoseCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"deactivate DiagnoseCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"kwangthiag"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"kwangthiag"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"kwangthiag"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"kwangthiag":76}},{"path":"docs/diagrams/FIndAppointmentCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"participant \":FindAppointmentCommandParser\" as FindAppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"participant \":PatientContainsKeywordsPredicate\" as PatientContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"participant \":FindAppointmentCommand\" as FindAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"[-\u003e LogicManager : execute(\"find-a John\")","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find-a John\")","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"create FindAppointmentCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"AddressBookParser -\u003e FindAppointmentCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"activate FindAppointmentCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"FindAppointmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"deactivate FindAppointmentCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"AddressBookParser -\u003e FindAppointmentCommandParser : parse(\"John\")","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"activate FindAppointmentCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"create PatientContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"FindAppointmentCommandParser -\u003e PatientContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"activate PatientContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"PatientContainsKeywordsPredicate --\u003e FindAppointmentCommandParser : PatientContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"deactivate PatientContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"create FindAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"FindAppointmentCommandParser -\u003e FindAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"activate FindAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"FindAppointmentCommand --\u003e FindAppointmentCommandParser : findAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"deactivate FindAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"FindAppointmentCommandParser --\u003e AddressBookParser : findAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"deactivate FindAppointmentCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"FindAppointmentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"destroy FindAppointmentCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"AddressBookParser --\u003e LogicManager : findAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"LogicManager -\u003e FindAppointmentCommand : execute(model)","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"activate FindAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"FindAppointmentCommand -\u003e Model : updateFilteredAppointmentList(PatientContainsKeywordsPredicate)","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"Model --\u003e FindAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"FindAppointmentCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"CommandResult --\u003e FindAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"FindAppointmentCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"deactivate FindAppointmentCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"billieboy7":78}},{"path":"docs/diagrams/FIndIllnessCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"!include style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"participant \":FindIllnessCommandParser\" as FindIllnessCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"participant \":IllnessContainsKeywordsPredicate\" as IllnessContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"participant \":FindIllnessCommand\" as FindIllnessCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"[-\u003e LogicManager : execute(\"find-i flu\")","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"activate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find-i flu\")","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"create FindIllnessCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"AddressBookParser -\u003e FindIllnessCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"activate FindIllnessCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"FindIllnessCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"deactivate FindIllnessCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"AddressBookParser -\u003e FindIllnessCommandParser : parse(\"flu\")","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"activate FindIllnessCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"create IllnessContainsKeywordsPredicate","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"FindIllnessCommandParser -\u003e IllnessContainsKeywordsPredicate","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"activate IllnessContainsKeywordsPredicate","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"IllnessContainsKeywordsPredicate --\u003e FindIllnessCommandParser : IllnessContainsKeywordsPredicate","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"deactivate IllnessContainsKeywordsPredicate","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"create FindIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"FindIllnessCommandParser -\u003e FindIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"activate FindIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"FindIllnessCommand --\u003e FindIllnessCommandParser : findIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"deactivate FindIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"FindIllnessCommandParser --\u003e AddressBookParser : findIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"deactivate FindIllnessCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"FindIllnessCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"destroy FindIllnessCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"AddressBookParser --\u003e LogicManager : findIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"LogicManager -\u003e FindIllnessCommand : execute(model)","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"activate FindIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"FindIllnessCommand -\u003e Model : updateFilteredAppointmentList(IllnessContainsKeywordsPredicate)","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"activate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"Model --\u003e FindIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"deactivate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"create CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"FindIllnessCommand -\u003e CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"activate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"CommandResult --\u003e FindIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"FindIllnessCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"deactivate FindIllnessCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"billieboy7":78}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"Package Person as PersonPackage \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    Class Gender","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    Class Birthdate","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"Package Appointment as AppointmentPackage \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    Class UniqueAppointmentList","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    Class Appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    Class AppointmentDescription","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"    Class AppointmentTime","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    Class PriorityTag","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"Person *--\u003e Gender","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"Person *--\u003e Birthdate","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"AddressBook *--\u003e \"1\" UniqueAppointmentList","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"UniqueAppointmentList --\u003e \"~* all\" Appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"Appointment *--\u003e AppointmentDescription","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"Appointment *--\u003e AppointmentTime","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"Appointment *--\u003e \"1\" PriorityTag","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"Appointment *--\u003e \"1\" Person","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"Appointment -[hidden]up--\u003e I","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"UniqueAppointmentList -[hidden]left-\u003e I","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"AppointmentDescription -[hidden]left-\u003e AppointmentTime","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"AppointmentTime -[hidden]right-\u003e PriorityTag","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"ModelManager --\u003e \"~* filtered\" Appointment","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":54,"trgao":29}},{"path":"docs/diagrams/SortPatientCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"participant \":SortPatientCommandParser\" as SortPatientCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"participant \"cmd:SortPatientCommand\" as SortPatientCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"[-\u003e LogicManager : execute(\"sort-p asc by\u003dname\")","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"sort-p asc by\u003dname\")","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"create SortPatientCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"AddressBookParser -\u003e SortPatientCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"activate SortPatientCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"SortPatientCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"deactivate SortPatientCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"AddressBookParser -\u003e SortPatientCommandParser : parse(\"asc by\u003dname\")","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"activate SortPatientCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"create SortPatientCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"SortPatientCommandParser -\u003e SortPatientCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"activate SortPatientCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"SortPatientCommand --\u003e SortPatientCommandParser : cmd","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"deactivate SortPatientCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"SortPatientCommandParser --\u003e AddressBookParser : cmd","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"deactivate SortPatientCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"SortPatientCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"destroy SortPatientCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"AddressBookParser --\u003e LogicManager : cmd","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"LogicManager -\u003e SortPatientCommand : execute(model)","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"activate SortPatientCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"SortPatientCommand -\u003e Model : sortPatientList(true, \"name\")","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"Model --\u003e SortPatientCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"SortPatientCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"CommandResult --\u003e SortPatientCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"SortPatientCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"deactivate SortPatientCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"kwangthiag":69}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"class JsonAdaptedAppointment","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedAppointment","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"trgao":2}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"Class AppointmentListPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"Class AppointmentCard","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"MainWindow *-down-\u003e \"1\" AppointmentListPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"AppointmentListPanel -down-\u003e \"*\" AppointmentCard","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"AppointmentListPanel --|\u003e UiPart","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"AppointmentCard --|\u003e UiPart","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"AppointmentCard ..\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"AppointmentListPanel -[hidden]left- PersonListPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":60,"trgao":8}},{"path":"docs/diagrams/UndoCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"box Commons COMMONS_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"participant \":UserHistoryManager\" as UserHistoryManager COMMONS_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"activate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"create UndoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"activate UndoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"deactivate UndoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"activate UndoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"UndoCommand -\u003e ModelManager : undoHistory()","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"activate ModelManager","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"ModelManager -\u003e UserHistoryManager : undo()","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"activate UserHistoryManager","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"UserHistoryManager --\u003e ModelManager","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"deactivate UserHistoryManager","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"ModelManager -\u003e UserHistoryManager : getUndoHistory()","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"activate UserHistoryManager","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"UserHistoryManager -\u003e ModelManager : undoHistory","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"deactivate UserHistoryManager","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"ModelManager -\u003e AddressBook : setPersons()","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"activate AddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"AddressBook --\u003e ModelManager","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"deactivate AddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"ModelManager -\u003e AddressBook : setAppointments()","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"activate AddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"AddressBook --\u003e ModelManager","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"deactivate AddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"AddressBook -\u003e AddressBook : resetData(ReadOnlyAddressBook)","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"AddressBook --\u003e ModelManager","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"ModelManager --\u003e UndoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"deactivate ModelManager","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"deactivate UndoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"destroy UndoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"licongshen12":75}},{"path":"docs/diagrams/UpcomingCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"participant \":UpcomingCommandParser\" as UpcomingCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"participant \":UpcomingCommand\" as UpcomingCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"[-\u003e LogicManager : execute(\"upcoming\")","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"upcoming\")","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"create UpcomingCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"AddressBookParser -\u003e UpcomingCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"activate UpcomingCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"UpcomingCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"deactivate UpcomingCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"AddressBookParser -\u003e UpcomingCommandParser : parse(\"upcoming\")","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"activate UpcomingCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"create UpcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"UpcomingCommandParser -\u003e UpcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"activate UpcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"UpcomingCommand --\u003e UpcomingCommandParser : upcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"deactivate UpcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"UpcomingCommandParser --\u003e AddressBookParser : upcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"deactivate UpcomingCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"UpcomingCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"destroy UpcomingCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"AddressBookParser --\u003e LogicManager : upcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"LogicManager -\u003e UpcomingCommand : execute(model)","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"activate UpcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"UpcomingCommand -\u003e Model : updateFilteredAppointmentList()","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"Model --\u003e UpcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"UpcomingCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"CommandResult --\u003e UpcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"UpcomingCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"deactivate UpcomingCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"billieboy7":1,"trgao":68}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"!define COMMONS_COLOR #800080","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"!define COMMONS_COLOR_T1 #B266FF","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"!define COMMONS_COLOR_T2 #9933FF","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"!define COMMONS_COLOR_T3 #8000FF","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"!define COMMONS_COLOR_T4 #6600CC","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"licongshen12":7,"-":79}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"title: MediFlowR","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T08-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T08-4/tp/actions)","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T08-4/tp/graph/badge.svg?token\u003dW34CGP58OU)](https://codecov.io/gh/AY2324S1-CS2103T-T08-4/tp)","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"**MediFlowR is a desktop app for managing patient records and appointments, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"* If you are interested in using MediFlowR, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.md#quick-start).","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"* The logo for the application is taken from here: [Hospital icons created by Pixel Buddha - Flaticon](https://www.flaticon.com/free-icons/hospital)","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"-":13,"trgao":8}},{"path":"docs/team/billieboy7.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"title: Stalin Muthukumar Bill Kirankumar\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"### Project: MediFlowR","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"MediFlowR is a application that enables users to manage patient records within the system.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"* **New Feature**: `schedule` command - Scheduling of new appointment ","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"* **New Feature**: `find illness` command - Finds and lists patients with the illnesses listed by the user","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"* **New Feature**: `find patient appointment` command - Finds the appointments of the specified patient","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dbillieboy7\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"* Created issues to delegate tasks and helped with the maintenance of the issue tracker","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"* Helped review and merge PRs","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"* **Enhancements to existing features**: ","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"* Implemented the Priority Tag Feature for Appointments to indicate severity of appointment","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"* Implemented the JavaFX for the Priority Tag - Adding a box to display Priority Tag with different colours to denote severity","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"  * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    * Worked on the \u0027Welcome\u0027 and \u0027Key Features\u0027 section","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    * Added documentation for the features `add` [\\#28](https://github.com/AY2324S1-CS2103T-T08-4/tp/pull/28)","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    * Worked on explanation for find illness command","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    * Ideated and updated the target user and value proposition","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    * Added the UML diagrams, implementation explanations and design considerations for `schedule` command","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"    * Added the UML diagrams and implementation explanations for `find illness` command ","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    * Added the UML diagrams and implementation explanations for `find patient appointment` command","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    * Added the \"Appendix: Efforts\" section ","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"billieboy7":42}},{"path":"docs/team/dinde2004.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dinde2004"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"dinde2004"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"dinde2004"},"content":"title: Doan Quoc Thinh\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"dinde2004"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"dinde2004"},"content":"### Project: MediFlowR","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"dinde2004"},"content":"MediFlowR is a application that enables users to manage patient records within the system.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"dinde2004"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"dinde2004"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"dinde2004"},"content":"* **New Feature**: coming soon!","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"dinde2004"},"content":"  * What it does:","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"dinde2004"},"content":"  * Justification:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"dinde2004"},"content":"  * Highlights:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"dinde2004"},"content":"  * Credits:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003ddinde2004\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"dinde2004"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"dinde2004"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"dinde2004"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"dinde2004"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"dinde2004"},"content":"    * Added documentation for the features `delete` [\\#21]()","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"dinde2004"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"dinde2004"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"dinde2004":30,"trgao":1}},{"path":"docs/team/kwangthiag.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"title: Tan Kwang Thiag\u0027s Project Portfolio Page","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"### Project: MediFlowR","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"MediFlowR is a application that enables users to manage patient records within the system.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"* **New Feature**: `reschedule` command - Rescheduling of an existing appointment to a different timeslot","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"* **New Feature**: `diagnose` command - Diagnoses an existing patient with illnesses","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"* **New Feature**: `undiagnose` command - Undiagnoses an existing patient with illnesses","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"* **New Feature**: `sort appointments` command - Sorts the appointment list by a given parameter","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"* **New Feature**: `sort patients` command - Sorts the patient list by a given parameter","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dkwangthiag\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"  * Helped review code and merge PRs","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"    * Added documentation for the feature `search` [\\#24]()","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"    * Worked on the Features Section","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"    * Drew Mockups for CRUD","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"    * Add Use Cases for features","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"    * Added implementation and activity diagram for the `reschedule` command","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"    * Added implementation and sequence diagram for the `sort-p` command ","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"    * Added implementation for the `sort-a` command","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"    * Added implementation and sequence diagram for the `diagnose` command ","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"    * Added implementation for the `undiagnose` command ","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"    ","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"kwangthiag":35,"trgao":4}},{"path":"docs/team/licongshen12.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"title: Shen Licong\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"### Project: MediFlowR","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"MediFlowR is a application that enables users to manage patient records within the system.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dlicongshen12\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"  * Implemented Appointment and AppointmentTime classes","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"  * Implemented the UserHistoryManager to keep track of user history in the application","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"  * Implemented the `undo` and `redo` commands","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"  * Implemented parsers for the following commands: `clear`, `exit`, `help`, `list`, `mode`, `redo`, `undo`, `patients`, `appointments`, `today`, `upcoming` ","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"  * Created issues for task management and helped with the maintenance of the issue tracker","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"  * Helped review code and merge PRs","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"  * Added the \"Navigating the application\" section","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"  * Added documentation for the features","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"  * Added Use Cases","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"  * Added the UML diagrams and implementation for the undo/redo commands","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"  * Added the \"Appendix: Instructions for manual testing\" section","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"licongshen12":25,"trgao":4}},{"path":"docs/team/trgao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"title: Gao Tianrun\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"### Project: MediFlowR","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"MediFlowR is a application that enables users to manage patient records within the system.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dtrgao\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"  * Implemented the UniqueAppointmentList to keep track of all appointments in the application","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"  * Implemented the JsonAdaptedAppointment to store the appointment objects as JSON objects as well as convert JSON objects back into appointment objects","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"  * Implemented the `today`, `upcoming`, and `triage` commands for appointments","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"  * Implemented the dark/light mode in the application as well as the corresponding `mode` command","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"* **Project management**:","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"  * Set up the GitHub repo for the team","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"  * Maintained the issue tracker and distributed the work among the team","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"  * Released the different versions of the product throughout the lifecycle of the product","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"* **Contributions to user guide**:","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"  * Added the \"Tutorial for new users\" section","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"  * Substantiated the \"FAQ\" and \"Commands Summary\" section","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"  * Reformatted all the commands in the user guide to a user-friendly style","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"* **Contributions to developer\u0027s guide**:","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"  * Updated the UML diagrams in the \"UI\", \"Model\" and \"Storage\" sections to include the Appointment class","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"  * Added the \"Appendix: Planned Enhancements\" section","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"  * Added the UML Class diagram for the general implementation of an appointment command","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"  * Added the UML diagrams and explanations for the `upcoming` appointment command","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"trgao":35}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    private static final boolean DEFAULT_ISLIGHTMODE \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    private final boolean isLightMode;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        isLightMode \u003d DEFAULT_ISLIGHTMODE;","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width, position and light mode setting.","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition, boolean isLightMode) {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"        this.isLightMode \u003d isLightMode;","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"    public boolean getIsLightMode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        return isLightMode;","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates)","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 isLightMode \u003d\u003d otherGuiSettings.isLightMode;","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates, isLightMode);","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"                .add(\"isLightMode\", isLightMode)","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"trgao":14}},{"path":"src/main/java/seedu/address/commons/history/UserHistoryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.commons.history;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import java.util.Stack;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" * Manages the user\u0027s undo and redo history.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"public class UserHistoryManager {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    private Stack\u003cPair\u003cList\u003cPerson\u003e, List\u003cAppointment\u003e\u003e\u003e undoHistory;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    private Stack\u003cPair\u003cList\u003cPerson\u003e, List\u003cAppointment\u003e\u003e\u003e redoHistory;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * Initializes a new UserHistoryManager with empty undo and redo histories.","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    public UserHistoryManager() {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"        undoHistory \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"        redoHistory \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"dinde2004"},"content":"     * Initializes a new UserHistoryManager with predeclared undo and redo histories.","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"dinde2004"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"dinde2004"},"content":"    public UserHistoryManager(UserHistoryManager userHistory) {","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"dinde2004"},"content":"        this.undoHistory \u003d (Stack\u003cPair\u003cList\u003cPerson\u003e, List\u003cAppointment\u003e\u003e\u003e) userHistory.undoHistory.clone();","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"dinde2004"},"content":"        this.redoHistory \u003d (Stack\u003cPair\u003cList\u003cPerson\u003e, List\u003cAppointment\u003e\u003e\u003e) userHistory.redoHistory.clone();","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"     * Initializes the undo history with the given pair.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"     * @param pair The pair of lists to be added to the undo history.","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    public void initialiseHistory(Pair\u003cList\u003cPerson\u003e, List\u003cAppointment\u003e\u003e pair) {","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"        this.undoHistory.add(pair);","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"     * Adds the given pair to the undo history.","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"     * @param p The pair of lists to be added to the undo history.","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"    public void addHistory(Pair\u003cList\u003cPerson\u003e, List\u003cAppointment\u003e\u003e p) {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"        undoHistory.add(p);","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"     * Removes the latest state from the undo history and adds it to the redo history.","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"    public void undo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"        this.redoHistory.add(undoHistory.peek());","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"        this.undoHistory.pop();","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"     * Removes the latest state from the redo history and adds it to the undo history.","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"    public void redo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"        this.undoHistory.add(redoHistory.peek());","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"        this.redoHistory.pop();","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"     * Clears the redo history.","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"    public void resetRedoHistory() {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"        this.redoHistory.clear();","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"     * @return the undo history.","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"    public Stack\u003cPair\u003cList\u003cPerson\u003e, List\u003cAppointment\u003e\u003e\u003e getUndoHistory() {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"        return undoHistory;","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"     * @return the redo history.","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"    public Stack\u003cPair\u003cList\u003cPerson\u003e, List\u003cAppointment\u003e\u003e\u003e getRedoHistory() {","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"        return redoHistory;","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"     * Checks if there is any state to undo.","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"     * @return true if there is a state to undo, false otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"licongshen12"},"content":"        return undoHistory.size() \u003e 1;","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"     * Checks if there is any state to redo.","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"licongshen12"},"content":"     * @return true if there is a state to redo, false otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"licongshen12"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"licongshen12"},"content":"        return !redoHistory.isEmpty();","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"dinde2004"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"dinde2004"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"dinde2004"},"content":"        if (!(obj instanceof UserHistoryManager)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"dinde2004"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"dinde2004"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"dinde2004"},"content":"        UserHistoryManager otherUserHistory \u003d (UserHistoryManager) obj;","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"dinde2004"},"content":"        return this.undoHistory.equals(otherUserHistory.undoHistory)","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"dinde2004"},"content":"                \u0026\u0026 this.redoHistory.equals(otherUserHistory.redoHistory);","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"dinde2004":20,"licongshen12":98}},{"path":"src/main/java/seedu/address/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import java.time.chrono.IsoChronology;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":" * Helper functions for handling datetimes.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"public class DateUtil {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"     * Formats date and time inputs as: yyyy/MM/dd hh:mm (eg. 2020/02/20 08:00).","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    private static final DateTimeFormatter FORMAT \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"            .appendPattern(\"yyyy/MM/dd HH:mm\")","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"            .parseDefaulting(ChronoField.ERA, 1)","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"            .toFormatter()","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"            .withChronology(IsoChronology.INSTANCE)","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"     * Parses a {@code String dateTime} into a {@code LocalDateTime}.","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    public static LocalDateTime parseDateTime(String dateAndTime) {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        requireNonNull(dateAndTime);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        String trimmedDateTime \u003d dateAndTime.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        LocalDateTime localDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        localDateTime \u003d LocalDateTime.parse(trimmedDateTime, FORMAT);","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        return localDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"     * Returns a formatted {@code String dateTime} from a {@code LocalDateTime}.","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    public static String dateTimeToString(LocalDateTime dateAndTime) {","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        requireNonNull(dateAndTime);","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        return dateAndTime.format(FORMAT);","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"trgao":46}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"     * Returns an unmodifiable view of the filtered list of appointments","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"licongshen12":4,"-":49,"trgao":6}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"        if (commandResult.canBeUndone()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"dinde2004"},"content":"            model.updateUserHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"            model.getUserHistoryManager().resetRedoHistory();","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dinde2004":1,"licongshen12":4,"-":88,"trgao":6}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static seedu.address.commons.util.DateUtil.dateTimeToString;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"     * Messages for person class.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d patients listed!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"     * Messages for appointment class.","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d \"The appointment index provided is\"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"            + \" invalid\";","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"    public static final String MESSAGE_INVALID_SORT_ATTRIBUTE \u003d \"The attribute given is invalid, please\"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"            + \" give one of the following attributes: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_PATIENT_DOES_NOT_EXIST \u003d \"Patient provided does not exist\";","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_DUPLICATE_TIMESLOT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"            \"Please choose another timing for the appointment, there \"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"            + \"already exists another appointment in this timing that clashes with the requested appointment\";","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"            \"This appointment already exists!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"    public static final String MESSAGE_APPOINTMENTS_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"                .append(person.getGender())","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"                .append(\"; Birthdate: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"                .append(person.getBirthdate())","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"                .append(\"; Illness: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"dinde2004"},"content":"     * Formats the {@code appointment} for display to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"dinde2004"},"content":"    public static String format(Appointment appointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"dinde2004"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"        builder.append(\"Patient: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"dinde2004"},"content":"                .append(appointment.getPatientName())","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"                .append(\"; Start: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"                .append(dateTimeToString(appointment.getStartTime()))","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"                .append(\"; End: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"                .append(dateTimeToString(appointment.getEndTime()))","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"                .append(appointment.getAppointmentDescription())","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"                .append(\"; Priority: \")","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"                .append(appointment.getPriorityTag());","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"dinde2004"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dinde2004":9,"kwangthiag":2,"billieboy7":4,"-":48,"trgao":30}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Patient records has been cleared!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * The usage syntax and examples for the clear command.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears Patient and Appointment lists.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        return other instanceof ClearCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"licongshen12":12,"-":22,"trgao":2}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    /** Toggle between dark/light mode */","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    private final boolean modeToggle;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    /** Whether the command can be undone*/","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    private final boolean canUndo;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     * Overloaded constructor for {@code CommandResult} for commands that can be changed later on","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     * @param feedbackToUser","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     * @param showHelp","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     * @param exit","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"     * @param modeToggle","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"     * @param canUndo","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean modeToggle, boolean canUndo) {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"        this.modeToggle \u003d modeToggle;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        this.canUndo \u003d canUndo;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean modeToggle) {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"        this.modeToggle \u003d modeToggle;","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"        this.canUndo \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"        this(feedbackToUser, false, false, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"    public boolean isModeToggle() {","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"        return modeToggle;","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"    public boolean canBeUndone() {","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"        return canUndo;","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 modeToggle \u003d\u003d otherCommandResult.modeToggle;","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, modeToggle);","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"                .add(\"modeToggle\", modeToggle)","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"billieboy7":12,"licongshen12":9,"-":79,"trgao":17}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the application.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        return other instanceof ExitCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"licongshen12":10,"-":18,"trgao":1}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        return other instanceof HelpCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"licongshen12":7,"-":21,"trgao":1}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":" * Lists all patients and appointments in the address book to the user.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients and appointments\";","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all patients and appointments.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        return other instanceof ListCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"licongshen12":10,"-":22,"trgao":4}},{"path":"src/main/java/seedu/address/logic/commands/ModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":" * Toggles between light and dark mode for the application.","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"public class ModeCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"    public static final String COMMAND_WORD \u003d \"mode\";","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_TOGGLED \u003d \"Toggled dark/light mode\";","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Toggles dark/light mode for the application.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"        return new CommandResult(MESSAGE_TOGGLED, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        return other instanceof ModeCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"licongshen12":7,"trgao":22}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" * Represents a redo command to restore the application state to before the last undo action.","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":" *","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * The redo command allows users to reapply changes that were undone by the previous undo command.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" * If there is no command available to redo, an exception is thrown.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * Success message displayed when the redo command is executed successfully.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"dinde2004"},"content":"    public static final String MESSAGE_REDO_COMMAND_SUCCESS \u003d \"Redo Successful. \";","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     * Error message displayed when there is no command available to redo.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_NO_COMMAND_TO_REDO_ERROR \u003d \"No command to redo.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"     * Usage message to guide the user on how to use the redo command.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Restores state to before the last undo command. \"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"            + \"\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"     * Executes the redo command.","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"     * If the UserHistoryManager indicates that a redo is possible, the application state is updated.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"     * Otherwise, a CommandException is thrown.","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"     * @param model The current application model.","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"     * @return A CommandResult indicating the result of the redo operation.","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"     * @throws CommandException if there is no command available to redo.","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"        if (!model.getUserHistoryManager().canRedo()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"            throw new CommandException(MESSAGE_NO_COMMAND_TO_REDO_ERROR);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"            model.redoHistory();","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"            return new CommandResult(MESSAGE_REDO_COMMAND_SUCCESS, false, false, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"     * Compares this RedoCommand object to another object.","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"     * @return true if the other object is the same instance or is also an instance of RedoCommand, false otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"                || (other instanceof RedoCommand); // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"dinde2004":1,"licongshen12":61,"trgao":1}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":" * Represents an Undo command which restores the model state to the state before the last command was executed.","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"dinde2004"},"content":"    public static final String MESSAGE_UNDO_COMMAND_SUCCESS \u003d \"Undo Successful.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_NO_COMMAND_TO_UNDO_ERROR \u003d \"No command to undo.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * The usage syntax and examples for the undo command.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Restores state to before the last command.\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     * Creates a new {@code UndoCommand}.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public UndoCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"     * Executes the undo operation.","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"     * @param model The model to operate on.","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"     * @return A {@code CommandResult} indicating the result of the undo operation.","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"     * @throws CommandException if there\u0027s no command to undo.","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"        if (!model.getUserHistoryManager().canUndo()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"            throw new CommandException(MESSAGE_NO_COMMAND_TO_UNDO_ERROR);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"            model.undoHistory();","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"            return new CommandResult(MESSAGE_UNDO_COMMAND_SUCCESS, false, false, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"     * Checks if another object is equivalent to this {@code UndoCommand}.","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"     * @return True if the other object is equivalent to this {@code UndoCommand}, false otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"                || (other instanceof UndoCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"dinde2004":1,"licongshen12":53,"trgao":1}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/AppointmentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dinde2004"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"dinde2004"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"dinde2004"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"dinde2004"},"content":" * Lists all appointments in the address book to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"dinde2004"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"public class AppointmentsCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"dinde2004"},"content":"    public static final String COMMAND_WORD \u003d \"appointments\";","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"dinde2004"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all appointments\";","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all appointments\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"dinde2004"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"dinde2004"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"dinde2004"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"dinde2004"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"dinde2004"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        return other instanceof AppointmentsCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"dinde2004"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"dinde2004":23,"licongshen12":11,"trgao":1}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/CancelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dinde2004"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"dinde2004"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"dinde2004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"dinde2004"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"dinde2004"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"dinde2004"},"content":" * Cancels an appointment identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"dinde2004"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"dinde2004"},"content":"public class CancelCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"dinde2004"},"content":"    public static final String COMMAND_WORD \u003d \"cancel\";","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"dinde2004"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"dinde2004"},"content":"            + \": Cancel the appointment with the corresponding appointment id.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"dinde2004"},"content":"    public static final String MESSAGE_CANCEL_APPOINTMENT_SUCCESS \u003d \"Cancelled Appointment: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"dinde2004"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"dinde2004"},"content":"    public CancelCommand(Index targetIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"dinde2004"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"dinde2004"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"dinde2004"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"dinde2004"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"dinde2004"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"dinde2004"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"dinde2004"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"dinde2004"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"dinde2004"},"content":"        Appointment appointmentToCancel \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"dinde2004"},"content":"        model.deleteAppointment(appointmentToCancel);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"dinde2004"},"content":"        return new CommandResult(String.format(MESSAGE_CANCEL_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"                Messages.format(appointmentToCancel)), false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"dinde2004"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"dinde2004"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"dinde2004"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"dinde2004"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"dinde2004"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"dinde2004"},"content":"        if (!(other instanceof CancelCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"dinde2004"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"dinde2004"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"dinde2004"},"content":"        CancelCommand otherCancelCommand \u003d (CancelCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"dinde2004"},"content":"        return targetIndex.equals(otherCancelCommand.targetIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"dinde2004"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"dinde2004":59,"trgao":3}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/FindAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.PatientContainsKeywordsPredicate;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":" * The FindAppointmentCommand is used to find patient appointments by their names.","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":" * This command allows listing all appointments belonging to patients whose names","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":" * match the provided keywords. The keywords are case-insensitive and may contain","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":" * only part of the patient\u0027s name to retrieve their appointments. Multiple names","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":" * are allowed.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":" **/","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"public class FindAppointmentCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"    public static final String COMMAND_WORD \u003d \"find-a\";","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all appointments belonging to the patients\"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"            + \" whose names are provided.\\nThe keywords are case-insensitive and may just contain part of the patient\u0027s\"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"            + \"name to retrieve their appointments. Multiple names are allowed. \\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"            + \"Parameters: PATIENT\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"            + \"Example: \" + COMMAND_WORD + \" alex david\";","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    private final PatientContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    public FindAppointmentCommand(PatientContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        model.updateFilteredAppointmentList(this.predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"                String.format(Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW,","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"                        model.getFilteredAppointmentList().size()));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"        if (other instanceof FindAppointmentCommand) {","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"            FindAppointmentCommand otherCommand \u003d (FindAppointmentCommand) other;","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"            return this.predicate.equals(otherCommand.predicate);","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"        return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kwangthiag":1,"billieboy7":42,"licongshen12":12,"trgao":8}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/RescheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.AppointmentDescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":" * Reschedules an existing appointment","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"public class RescheduleCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"    public static final String COMMAND_WORD \u003d \"reschedule\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Reschedules the appointment identified \"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"            + \"by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"            + PREFIX_APPOINTMENT_START + \"START \"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"            + PREFIX_APPOINTMENT_END + \"END\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"            + PREFIX_APPOINTMENT_START + \"2023/05/02 09:00 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"            + PREFIX_APPOINTMENT_END + \"2023/05/02 11:00 \";","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Patient appointment rescheduled: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"    private final Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"    private final AppointmentTime appointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"     * Creates a RescheduleCommand to change the appointment time","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"     * for the specified {@code Appointment}","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"     * @param index of the appointment in the filtered appointment list to edit","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"     * @param appointmentTime new appointment time","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"    public RescheduleCommand(Index index, AppointmentTime appointmentTime) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"        this.appointmentTime \u003d appointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"        Appointment appointmentToReschedule \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"        Appointment rescheduledAppointment \u003d createRescheduledAppointment(appointmentToReschedule, appointmentTime);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"        model.updateFilteredAppointmentList(appointment -\u003e !appointment.equals(appointmentToReschedule));","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"        lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"        // Clash in appointment slot","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        if (!AppointmentTime.isValidTimeSlot(lastShownList, rescheduledAppointment)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"            model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_TIMESLOT);","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"        // Appointment already exists","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"        if (model.hasAppointment(rescheduledAppointment)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"            model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"kwangthiag"},"content":"        model.setAppointment(appointmentToReschedule, rescheduledAppointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"                String.format(MESSAGE_SUCCESS, Messages.format(rescheduledAppointment)), false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"kwangthiag"},"content":"    private static Appointment createRescheduledAppointment(Appointment appointmentToReschedule,","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"kwangthiag"},"content":"                                                             AppointmentTime newTime) {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"kwangthiag"},"content":"        assert appointmentToReschedule !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"kwangthiag"},"content":"        Person patient \u003d appointmentToReschedule.getPerson();","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"        AppointmentDescription description \u003d appointmentToReschedule.getAppointmentDescription();","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"        PriorityTag priorityTag \u003d appointmentToReschedule.getPriorityTag();","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"        return new Appointment(patient, newTime, description, priorityTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"kwangthiag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"kwangthiag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"kwangthiag"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"kwangthiag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"kwangthiag"},"content":"        if (!(other instanceof RescheduleCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"kwangthiag"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"kwangthiag"},"content":"        RescheduleCommand e \u003d (RescheduleCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"kwangthiag"},"content":"        return index.equals(e.index);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"kwangthiag"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"kwangthiag"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"kwangthiag"},"content":"                .add(\"targetIndex\", index)","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"kwangthiag"},"content":"                .add(\"appointmentTime\", appointmentTime)","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"kwangthiag"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kwangthiag":91,"billieboy7":4,"trgao":28}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DESCRIPTION;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PATIENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PRIORITY;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":" * Adds an appointment to the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Schedules an appointment.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"            + PREFIX_APPOINTMENT_PATIENT + \"PATIENT \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            + PREFIX_APPOINTMENT_START + \"START \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"            + PREFIX_APPOINTMENT_END + \"END \"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"            + PREFIX_APPOINTMENT_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"dinde2004"},"content":"            + PREFIX_APPOINTMENT_PRIORITY + \"PRIORITY\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"            + PREFIX_APPOINTMENT_PATIENT + \"Alex Yeoh \"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"            + PREFIX_APPOINTMENT_START + \"2023/10/20 12:00 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"            + PREFIX_APPOINTMENT_END + \"2023/10/20 13:00 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"            + PREFIX_APPOINTMENT_DESCRIPTION + \"Follow up on Chest X-Ray \"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"            + PREFIX_APPOINTMENT_PRIORITY + \"high\";","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment scheduled: %1$s.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"    private final Appointment currAppointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    private final Name patientName;","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"     * Creates a ScheduleCommand to add the specified {@code Appointment}","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"    public ScheduleCommand(Appointment appointment, Name patientName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        // Check that appointment is non-null.","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"        // Save the appointment to currAppointment during initialisation.","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        this.currAppointment \u003d appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"        this.patientName \u003d patientName;","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"        List\u003cPerson\u003e latestPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"        if (!model.hasPerson(patientName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"            throw new CommandException(Messages.MESSAGE_PATIENT_DOES_NOT_EXIST);","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"        Person personToAdd \u003d latestPersonList","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"                .stream().filter(person -\u003e person.getName().equals(patientName)).collect(Collectors.toList()).get(0);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"        // Add the Person patient to the current appointment","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"        currAppointment.setPatient(personToAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"        // Clash in appointment slot","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"        if (!AppointmentTime.isValidTimeSlot(lastShownList, currAppointment)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_TIMESLOT);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"        // Appointment already exists","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"        if (model.hasAppointment(currAppointment)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"        model.addAppointment(currAppointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"                String.format(MESSAGE_SUCCESS, Messages.format(currAppointment)), false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"        // Check if the given object is the same object.","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"        // if Object other is of type AddAppointmentCommand, cast it to type AddAppointmentCommand and compare the","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"        // containing","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"        // currAppointment","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"        if (other instanceof ScheduleCommand) {","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"            ScheduleCommand otherAppointment \u003d (ScheduleCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"            return currAppointment.equals(otherAppointment.currAppointment)","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"                    \u0026\u0026 patientName.equals(otherAppointment.patientName);","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"        return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"trgao"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"                .add(\"toAdd\", currAppointment)","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"trgao"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"dinde2004":1,"billieboy7":81,"trgao":38}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":" * Sorts all appointments by the attribute provided.","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"    public static final String COMMAND_WORD \u003d \"sort-a\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"            + \": Sorts the appointment list by the corresponding parameters.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"            + \"The direction should either be asc or desc. The parameter must be one of [time, priority].\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"            + \"Parameters: DIRECTION \"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"            + \"by\u003dATTRIBUTE\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"            + \"Example: \" + COMMAND_WORD + \" asc by\u003dpriority\";","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all appointments in %1$s order by %2$s.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"    private final String attribute;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"    private final boolean isAscending;","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"     * Creates a SortCommand to sort by type","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"     * @param isAscending whether the sort type is ascending","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"     * @param attribute attribute to sort by","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"    public SortCommand(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        requireNonNull(attribute);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"        this.isAscending \u003d isAscending;","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"        this.attribute \u003d attribute;","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"        model.sortAppointmentList(isAscending, attribute);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, order(isAscending), attribute),","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"                false, false, false, true);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"    private static String order(boolean isAscending) {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"        if (isAscending) {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"            return \"ascending\";","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"            return \"descending\";","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"        SortCommand e \u003d (SortCommand) other;","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"        return attribute.equals(e.attribute) \u0026\u0026 isAscending \u003d\u003d e.isAscending;","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kwangthiag":64,"trgao":5}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/TodayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":" * Lists all appointments occurring on the current date in the address book to the user.","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"public class TodayCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"    public static final String COMMAND_WORD \u003d \"today\";","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all appointments occurring today\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all appointments occurring today\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"        model.updateFilteredAppointmentList(","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"                appointment -\u003e appointment.getStartTime().toLocalDate().isEqual(LocalDate.now()));","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        return other instanceof TodayCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"licongshen12":11,"trgao":26}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/TriageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PRIORITY;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.AppointmentDescription;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":" * Changes the priority of an existing appointment","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"public class TriageCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    public static final String COMMAND_WORD \u003d \"triage\";","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Changes the priority of the appointment identified \"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"            + \"by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"            + PREFIX_APPOINTMENT_PRIORITY + \"PRIORITY\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"            + PREFIX_APPOINTMENT_PRIORITY + \"high\";","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Patient appointment priority changed: %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    private final Index index;","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    private final PriorityTag priorityTag;","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"     * Creates a TriageCommand to change the priority","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"     * for the specified {@code Appointment}","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"     * @param index of the appointment in the filtered appointment list to edit","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"     * @param priorityTag the new priority","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"    public TriageCommand(Index index, PriorityTag priorityTag) {","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        this.priorityTag \u003d priorityTag;","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"        Appointment appointmentToTriage \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"        Appointment triagedAppointment \u003d createChangedPriorityAppointment(appointmentToTriage, priorityTag);","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"        model.setAppointment(appointmentToTriage, triagedAppointment);","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"        return new CommandResult(","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"                String.format(MESSAGE_SUCCESS, Messages.format(triagedAppointment)), false, false, false, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"    private static Appointment createChangedPriorityAppointment(Appointment appointmentToTriage,","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"                                                                PriorityTag priorityTag) {","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        assert appointmentToTriage !\u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"        Person patient \u003d appointmentToTriage.getPerson();","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"        AppointmentDescription description \u003d appointmentToTriage.getAppointmentDescription();","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"        AppointmentTime appointmentTime \u003d appointmentToTriage.getAppointmentTime();","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"        return new Appointment(patient, appointmentTime, description, priorityTag);","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"        if (!(other instanceof TriageCommand)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"        TriageCommand e \u003d (TriageCommand) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"        return index.equals(e.index);","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"                .add(\"targetIndex\", index)","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"                .add(\"priorityTag\", priorityTag)","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"                .toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"trgao":105}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/UpcomingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":" * Lists all appointments occurring after the current date in the address book to the user.","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"public class UpcomingCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"    public static final String COMMAND_WORD \u003d \"upcoming\";","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all upcoming appointments\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all upcoming appointments.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"        model.updateFilteredAppointmentList(","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"                appointment -\u003e appointment.getStartTime().isAfter(LocalDateTime.now()));","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        return other instanceof UpcomingCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"licongshen12":11,"trgao":26}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to the records. \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"            + PREFIX_BIRTHDATE + \"BIRTHDATE \"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"            + \"[\" + PREFIX_ILLNESSES + \"ILLNESS]...\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"            + PREFIX_GENDER + \"MALE \"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"            + PREFIX_BIRTHDATE + \"2000/10/20 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"            + PREFIX_ILLNESSES + \"fever, appendicitis\";","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patient already exists in the records\";","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)), false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kwangthiag":3,"licongshen12":3,"-":75,"trgao":10}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"            + \": Deletes the patient with the corresponding patient id.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"            + \"Parameters: INDEX (index must be a positive integer)\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)),","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"                false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"licongshen12":4,"-":63,"trgao":5}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/DiagnoseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":" * Diagnoses an existing patient in the address book with illnesses.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"public class DiagnoseCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"    public static final String COMMAND_WORD \u003d \"diagnose\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Diagnoses illnesses of the patient identified \"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"            + \"Existing values will not be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"            + \"You can input multiple illnesses with a comma between each illness.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"            + PREFIX_ILLNESSES + \"ILLNESSES\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"            + \" 1 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"            + PREFIX_ILLNESSES + \"Fever, Headache\";","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_DIAGNOSE_PERSON_SUCCESS \u003d \"Diagnosed patient %1$s: %2$s\\n\";","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"    public static final String MESSAGE_ALREADY_DIAGNOSED \u003d \"The following illnesses have already \"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"            + \"been diagnosed before: \";","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"    private final Set\u003cTag\u003e illnesses;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"     * @param illnesses illnesses to diagnose the patient","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"    public DiagnoseCommand(Index index, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(illnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"        this.illnesses \u003d illnesses;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"        Person personToDiagnose \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"        Person diagnosedPerson \u003d createDiagnosedPerson(personToDiagnose, illnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"        model.setPerson(personToDiagnose, diagnosedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"        String duplicateIllnesses \u003d getDuplicateIllnesses(personToDiagnose, illnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"        String addedIllnesses \u003d getAddedIllnesses(personToDiagnose, illnesses);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        StringBuilder feedbackToUser \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"        if (!addedIllnesses.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"            feedbackToUser.append(String.format(MESSAGE_DIAGNOSE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"                    diagnosedPerson.getName(), addedIllnesses));","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"kwangthiag"},"content":"        if (!duplicateIllnesses.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"kwangthiag"},"content":"            feedbackToUser.append(MESSAGE_ALREADY_DIAGNOSED);","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"kwangthiag"},"content":"            feedbackToUser.append(duplicateIllnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        return new CommandResult(feedbackToUser.toString(), false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"kwangthiag"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"kwangthiag"},"content":"     * edited with {@code illnesses}.","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"    private static Person createDiagnosedPerson(Person personToEdit, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"kwangthiag"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"kwangthiag"},"content":"        updatedTags.addAll(personToEdit.getTags());","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"kwangthiag"},"content":"        updatedTags.addAll(illnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"kwangthiag"},"content":"        return new Person(personToEdit.getName(), personToEdit.getGender(), personToEdit.getBirthdate(),","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"kwangthiag"},"content":"                personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getAddress(), updatedTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"    private static String getAddedIllnesses(Person personToEdit, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"        StringBuilder addedTags \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"        for (Tag tag: illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"            if (!personToEdit.getTags().contains(tag)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"trgao"},"content":"                addedTags.append(tag);","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"        return addedTags.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"    private static String getDuplicateIllnesses(Person personToEdit, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"kwangthiag"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"kwangthiag"},"content":"        StringBuilder duplicateTags \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"kwangthiag"},"content":"        for (Tag tag: illnesses) {","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"kwangthiag"},"content":"            if (personToEdit.getTags().contains(tag)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"kwangthiag"},"content":"                duplicateTags.append(tag);","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"kwangthiag"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"kwangthiag"},"content":"        return duplicateTags.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"kwangthiag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"kwangthiag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"kwangthiag"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"kwangthiag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"kwangthiag"},"content":"        if (!(other instanceof DiagnoseCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"kwangthiag"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand otherDiagnoseCommand \u003d (DiagnoseCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"kwangthiag"},"content":"        return targetIndex.equals(otherDiagnoseCommand.targetIndex) \u0026\u0026 illnesses.equals(otherDiagnoseCommand.illnesses);","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kwangthiag":116,"trgao":28}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":" * Edits the details of an existing patient in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits details of the patient identified \"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"            + \"Parameters: INDEX (index must be a positive integer) \"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"            + \"[\" + PREFIX_BIRTHDATE + \"BIRTHDATE] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS]...\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"            + \" 1 \"","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patient already exists in the records.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)),","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"                false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        Birthdate updatedBirthdate \u003d editPersonDescriptor.getBirthdate().orElse(personToEdit.getBirthdate());","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"        return new Person(updatedName, updatedGender, updatedBirthdate, updatedPhone, updatedEmail,","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"kwangthiag"},"content":"                updatedAddress, personToEdit.getTags());","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"trgao"},"content":"        private Birthdate birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"trgao"},"content":"        private Gender gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"trgao"},"content":"            setBirthdate(toCopy.birthdate);","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"trgao"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"kwangthiag"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, birthdate, gender, address);","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"trgao"},"content":"        public void setBirthdate(Birthdate birthdate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"trgao"},"content":"            this.birthdate \u003d birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"trgao"},"content":"        public Optional\u003cBirthdate\u003e getBirthdate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"trgao"},"content":"            return Optional.ofNullable(birthdate);","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"trgao"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"trgao"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"trgao"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"trgao"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"trgao"},"content":"                    \u0026\u0026 Objects.equals(gender, otherEditPersonDescriptor.gender)","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":234,"author":{"gitId":"trgao"},"content":"                    \u0026\u0026 Objects.equals(birthdate, otherEditPersonDescriptor.birthdate)","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"kwangthiag"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address);","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"trgao"},"content":"                    .add(\"gender\", gender)","lastModifiedDate":"2023-10-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"trgao"},"content":"                    .add(\"birthdate\", birthdate)","lastModifiedDate":"2023-10-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kwangthiag":5,"licongshen12":4,"-":207,"trgao":34}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/FindIllnessCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.person.IllnessContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":" * Finds and lists all persons in address book whose illness contains any of the argument keywords.","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"public class FindIllnessCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"    public static final String COMMAND_WORD \u003d \"find-i\";","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients with the illness that matches \"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\nNote: The\"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"            + \" keyword must match the illness to find a valid match! \\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"            + \"Parameters: ILLNESS\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"            + \"Example: \" + COMMAND_WORD + \" fever flu\";","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    private final IllnessContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"    public FindIllnessCommand(IllnessContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"     * Executes the FindIllnessCommand to filter and list persons in the model based on the specified illness keywords.","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"     * @param model The model in which to execute the command.","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"     * @return A CommandResult containing the message summarising the number of persons listed.","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        if (!(other instanceof FindIllnessCommand)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand otherFindIllnessCommand \u003d (FindIllnessCommand) other;","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        return predicate.equals(otherFindIllnessCommand.predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"                .toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"kwangthiag":1,"billieboy7":63,"trgao":3}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/FindPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"public class FindPatientCommand extends Command {","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"    public static final String COMMAND_WORD \u003d \"find-p\";","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose names contain any of \"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    public FindPatientCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"        if (!(other instanceof FindPatientCommand)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        FindPatientCommand otherFindPatientCommand \u003d (FindPatientCommand) other;","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        return predicate.equals(otherFindPatientCommand.predicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kwangthiag":1,"licongshen12":3,"-":50,"trgao":6}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/PatientsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"public class PatientsCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"    public static final String COMMAND_WORD \u003d \"patients\";","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all patients\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"licongshen12":6,"-":20,"trgao":3}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/SortPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":" * Sorts all patients by the attribute provided.","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"public class SortPatientCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"    public static final String COMMAND_WORD \u003d \"sort-p\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"            + \": Sorts the patient list by the corresponding parameters.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"            + \"The direction should either be asc or desc. The parameter must be one of [name, birthday].\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"            + \"Parameters: DIRECTION \"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"            + \"by\u003dATTRIBUTE\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"            + \"Example: \" + COMMAND_WORD + \" asc by\u003dname\";","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all patients in %1$s order by %2$s.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"    private final String attribute;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"    private final boolean isAscending;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"     * Creates a SortPatientCommand to sort by type","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"     * @param isAscending whether the sort type is ascending","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"     * @param attribute attribute to sort by","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"    public SortPatientCommand(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(attribute);","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"        this.isAscending \u003d isAscending;","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"        this.attribute \u003d attribute;","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"        model.sortPatientList(isAscending, attribute);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, order(isAscending), attribute),","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"                false, false, false, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"    private static String order(boolean isAscending) {","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"        if (isAscending) {","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"            return \"ascending\";","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"            return \"descending\";","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"        if (!(other instanceof SortPatientCommand)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"        SortPatientCommand e \u003d (SortPatientCommand) other;","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"        return attribute.equals(e.attribute) \u0026\u0026 isAscending \u003d\u003d e.isAscending;","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"kwangthiag":69}},{"path":"src/main/java/seedu/address/logic/commands/personcommands/UndiagnoseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":" * Undiagnoses an existing patient in the address book with illnesses.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"public class UndiagnoseCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"    public static final String COMMAND_WORD \u003d \"undiagnose\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Undiagnoses illnesses of the patient identified \"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"            + \"by the index number used in the displayed person list. \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"            + \"You can input multiple illnesses with a comma between each illness.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"            + PREFIX_ILLNESSES + \"ILLNESSES\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"            + \" 1 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"            + PREFIX_ILLNESSES + \"Fever, Headache\";","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_UNDIAGNOSE_PERSON_SUCCESS \u003d \"Undiagnosed patient %1$s: %2$s\\n\";","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_ILLNESS_NOT_THERE \u003d \"The following illnesses were not diagnosed before: \";","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"    private final Set\u003cTag\u003e illnesses;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"     * @param illnesses illnesses to undiagnose the patient","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"    public UndiagnoseCommand(Index index, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(illnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"        this.illnesses \u003d illnesses;","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"        Person personToUndiagnose \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"        Person undiagnosedPerson \u003d createUndiagnosedPerson(personToUndiagnose, illnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"        model.setPerson(personToUndiagnose, undiagnosedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"        String illnessesNotOriginallyThere \u003d getIllnessesNotOriginallyThere(personToUndiagnose, illnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"        String illnessesOriginallyThere \u003d getIllnessesOriginallyThere(personToUndiagnose, illnesses);","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"        StringBuilder feedbackToUser \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"        if (!illnessesOriginallyThere.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"            feedbackToUser.append(String.format(MESSAGE_UNDIAGNOSE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"                    undiagnosedPerson.getName(), illnessesOriginallyThere));","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"kwangthiag"},"content":"        if (!illnessesNotOriginallyThere.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kwangthiag"},"content":"            feedbackToUser.append(MESSAGE_ILLNESS_NOT_THERE);","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"kwangthiag"},"content":"            feedbackToUser.append(illnessesNotOriginallyThere);","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"        return new CommandResult(feedbackToUser.toString(), false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"kwangthiag"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"kwangthiag"},"content":"     * edited with {@code illnesses}.","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"dinde2004"},"content":"    private static Person createUndiagnosedPerson(Person personToEdit, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"kwangthiag"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"kwangthiag"},"content":"        updatedTags.addAll(personToEdit.getTags());","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"kwangthiag"},"content":"        updatedTags.removeAll(illnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"kwangthiag"},"content":"        return new Person(personToEdit.getName(), personToEdit.getGender(), personToEdit.getBirthdate(),","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"kwangthiag"},"content":"                personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getAddress(), updatedTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"    private static String getIllnessesOriginallyThere(Person personToEdit, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        StringBuilder tagsOriginallyInside \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"        for (Tag tag: illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"            if (personToEdit.getTags().contains(tag)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"                tagsOriginallyInside.append(tag);","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":"        return tagsOriginallyInside.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"    private static String getIllnessesNotOriginallyThere(Person personToEdit, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"kwangthiag"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"kwangthiag"},"content":"        StringBuilder tagsNotOriginallyInside \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"kwangthiag"},"content":"        for (Tag tag: illnesses) {","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"kwangthiag"},"content":"            if (!personToEdit.getTags().contains(tag)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"kwangthiag"},"content":"                tagsNotOriginallyInside.append(tag);","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"kwangthiag"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"kwangthiag"},"content":"        return tagsNotOriginallyInside.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"kwangthiag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"kwangthiag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"kwangthiag"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"kwangthiag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"kwangthiag"},"content":"        if (!(other instanceof UndiagnoseCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"kwangthiag"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand otherUndiagnoseCommand \u003d (UndiagnoseCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"kwangthiag"},"content":"        return targetIndex.equals(otherUndiagnoseCommand.targetIndex)","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"kwangthiag"},"content":"                \u0026\u0026 illnesses.equals(otherUndiagnoseCommand.illnesses);","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"dinde2004":1,"kwangthiag":114,"trgao":29}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.ModeCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.appointmentcommands.AppointmentsCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.commands.appointmentcommands.CancelCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.appointmentcommands.FindAppointmentCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.commands.appointmentcommands.RescheduleCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.appointmentcommands.ScheduleCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.appointmentcommands.SortCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.appointmentcommands.TodayCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.appointmentcommands.TriageCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.appointmentcommands.UpcomingCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.personcommands.DiagnoseCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.personcommands.FindIllnessCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.personcommands.FindPatientCommand;","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.personcommands.PatientsCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.personcommands.SortPatientCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.personcommands.UndiagnoseCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.appointmentparser.AppointmentsCommandParser;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.parser.appointmentparser.CancelCommandParser;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.appointmentparser.FindAppointmentCommandParser;","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.parser.appointmentparser.RescheduleCommandParser;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.appointmentparser.ScheduleCommandParser;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.appointmentparser.SortCommandParser;","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.appointmentparser.TodayCommandParser;","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.appointmentparser.TriageCommandParser;","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.appointmentparser.UpcomingCommandParser;","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.personparser.AddCommandParser;","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.personparser.DeleteCommandParser;","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.personparser.DiagnoseCommandParser;","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.personparser.EditCommandParser;","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.personparser.FindIllnessCommandParser;","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.personparser.FindPatientCommandParser;","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.personparser.PatientsCommandParser;","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.personparser.SortPatientCommandParser;","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.personparser.UndiagnoseCommandParser;","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"        case FindPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"            return new FindPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-11-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"        case PatientsCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"            return new PatientsCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"        case RescheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"            return new RescheduleCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"        case TriageCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":"            return new TriageCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"dinde2004"},"content":"        case CancelCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"dinde2004"},"content":"            return new CancelCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"        case AppointmentsCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"licongshen12"},"content":"            return new AppointmentsCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"trgao"},"content":"        case TodayCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"licongshen12"},"content":"            return new TodayCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"trgao"},"content":"        case UpcomingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"licongshen12"},"content":"            return new UpcomingCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"trgao"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"licongshen12"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"licongshen12"},"content":"            return new ExitCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"licongshen12"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"licongshen12"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"licongshen12"},"content":"            return new UndoCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"licongshen12"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"licongshen12"},"content":"            return new RedoCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"trgao"},"content":"        case FindAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"licongshen12"},"content":"            return new FindAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"kwangthiag"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"kwangthiag"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"kwangthiag"},"content":"        case SortPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"kwangthiag"},"content":"            return new SortPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"kwangthiag"},"content":"        case DiagnoseCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"kwangthiag"},"content":"            return new DiagnoseCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"kwangthiag"},"content":"        case UndiagnoseCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"kwangthiag"},"content":"            return new UndiagnoseCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"billieboy7"},"content":"        case FindIllnessCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"billieboy7"},"content":"            return new FindIllnessCommandParser().parse(arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"trgao"},"content":"        case ModeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"trgao"},"content":"            return new ModeCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"trgao"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"licongshen12"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dinde2004":9,"kwangthiag":20,"billieboy7":6,"licongshen12":25,"-":75,"trgao":36}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"     * Returns whether the preamble is not a number.","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"    public boolean checkPreambleIsNotNumber() {","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"        return !getPreamble().matches(\"-?\\\\d+\");","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the arguments.","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"    public boolean arePrefixesPresent(Prefix... prefixes) {","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e getValue(prefix).isPresent());","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":78,"trgao":14}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * Parses input arguments to produce a {@code ClearCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     * Parses the given {@code String} of arguments to produce a {@code ClearCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * The function expects no arguments, and any provided argument will cause a {@code ParseException}.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * @param args The arguments string, which should be empty for this command.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @return A {@code ClearCommand} ready for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        return new ClearCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"licongshen12":29}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"    /* Person prefix definitions */","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"name\u003d\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"gender\u003d\");","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"    public static final Prefix PREFIX_BIRTHDATE \u003d new Prefix(\"birthdate\u003d\");","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"phone\u003d\");","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"email\u003d\");","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"address\u003d\");","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"    public static final Prefix PREFIX_ILLNESSES \u003d new Prefix(\"illnesses\u003d\");","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"    public static final Prefix PREFIX_BY \u003d new Prefix(\"by\u003d\");","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    /* Appointment prefix definitions */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    public static final Prefix PREFIX_APPOINTMENT_START \u003d new Prefix(\"start\u003d\");","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    public static final Prefix PREFIX_APPOINTMENT_END \u003d new Prefix(\"end\u003d\");","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    public static final Prefix PREFIX_APPOINTMENT_DESCRIPTION \u003d new Prefix(\"description\u003d\");","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    public static final Prefix PREFIX_APPOINTMENT_PATIENT \u003d new Prefix(\"patient\u003d\");","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    public static final Prefix PREFIX_APPOINTMENT_PRIORITY \u003d new Prefix(\"priority\u003d\");","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kwangthiag":3,"billieboy7":4,"-":10,"trgao":9}},{"path":"src/main/java/seedu/address/logic/parser/ExitCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * Parses input arguments to produce an {@code ExitCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class ExitCommandParser implements Parser\u003cExitCommand\u003e {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     * Parses the given {@code String} of arguments to produce an {@code ExitCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * This parser expects no arguments, and any provided argument will result in a {@code ParseException}.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * @param args The arguments string, which should be empty for this command.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @return An {@code ExitCommand} ready for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public ExitCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExitCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"licongshen12":29}},{"path":"src/main/java/seedu/address/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * Parses input arguments to produce a {@code HelpCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     * Parses the given {@code String} of arguments to produce a {@code HelpCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * This parser expects no arguments. If any argument is provided, a {@code ParseException} is thrown.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * @param args The arguments string, which should be empty for this command.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @return A {@code HelpCommand} ready for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        return new HelpCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"licongshen12":29}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * Parses input arguments to produce a {@code ListCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     * Parses the given {@code String} of arguments to produce a {@code ListCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * This parser expects no arguments. If any argument is provided, a {@code ParseException} is thrown.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * @param args The arguments string, which should be empty for this command.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @return A {@code ListCommand} ready for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        return new ListCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"licongshen12":29}},{"path":"src/main/java/seedu/address/logic/parser/ModeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.ModeCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":" * Parses input arguments to produce an {@code ModeCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class ModeCommandParser implements Parser\u003cModeCommand\u003e {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"     * Parses the given {@code String} of arguments to produce an {@code UpcomingCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"     * This parser expects no arguments. If any argument is provided, a {@code ParseException} is thrown.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"     * @param args The arguments string, which should be empty for this command.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"     * @return An {@code UpcomingCommand} ready for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    public ModeCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        return new ModeCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"licongshen12":1,"trgao":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.AppointmentDescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"        requireNonNull(oneBasedIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"     * Parses a {@code String birthdate} into a {@code Birthdate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"trgao"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"     * @throws ParseException if the given {@code birthdate} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"    public static Birthdate parseBirthdate(String birthdate) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"        requireNonNull(birthdate);","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"        String trimmedBirthdate \u003d birthdate.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"trgao"},"content":"        if (!Birthdate.isValidBirthdate(trimmedBirthdate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"            throw new ParseException(Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"trgao"},"content":"        return new Birthdate(trimmedBirthdate);","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"trgao"},"content":"     * Parses a {@code String gender} into a {@code Gender}.","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"trgao"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"trgao"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"trgao"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"trgao"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"trgao"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"trgao"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"trgao"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"trgao"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"trgao"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"billieboy7"},"content":"     * Parses a {@code String tag} into a {@code PriorityTag}.","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"billieboy7"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"billieboy7"},"content":"     * @throws ParseException if the given {@code priorityTag} is invalid.","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"billieboy7"},"content":"    public static PriorityTag parsePriorityTag(String priorityTag) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"billieboy7"},"content":"        requireNonNull(priorityTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"billieboy7"},"content":"        String trimmedTag \u003d priorityTag.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"billieboy7"},"content":"        if (!PriorityTag.isValidPriorityTag(trimmedTag)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"billieboy7"},"content":"            throw new ParseException(PriorityTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"billieboy7"},"content":"        return new PriorityTag(trimmedTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":178,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"kwangthiag"},"content":"     * Parses {@code String tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"kwangthiag"},"content":"    public static Set\u003cTag\u003e parseIllnesses(String tags) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"kwangthiag"},"content":"        String[] tagsArray \u003d tags.split(\",\");","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"kwangthiag"},"content":"        for (String tagName : tagsArray) {","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"kwangthiag"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"kwangthiag"},"content":"        return tagSet;","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"billieboy7"},"content":"     * Parses a {@code String dateAndTime} into a {@code LocalDateTime}.","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"billieboy7"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"billieboy7"},"content":"     * @throws ParseException if the given {@code dateAndTime} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"billieboy7"},"content":"    public static LocalDateTime parseDateTime(String dateAndTime) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"billieboy7"},"content":"        requireNonNull(dateAndTime);","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"billieboy7"},"content":"        String trimmedDateTime \u003d dateAndTime.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"billieboy7"},"content":"        LocalDateTime localDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"trgao"},"content":"            localDateTime \u003d DateUtil.parseDateTime(trimmedDateTime);","lastModifiedDate":"2023-11-08"},{"lineNumber":204,"author":{"gitId":"billieboy7"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"billieboy7"},"content":"            throw new ParseException(AppointmentTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"billieboy7"},"content":"        return localDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"billieboy7"},"content":"     * Parses a {@code String description} into a {@code AppointmentDescription}.","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"billieboy7"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"trgao"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"billieboy7"},"content":"    public static AppointmentDescription parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"billieboy7"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"billieboy7"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"billieboy7"},"content":"        if (!AppointmentDescription.isValidAppointmentDescription(trimmedDescription)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"billieboy7"},"content":"            throw new ParseException(AppointmentDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"billieboy7"},"content":"        return new AppointmentDescription(trimmedDescription);","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"kwangthiag"},"content":"     * Parses a {@code String argument} and {@code String preamble} into a {@code int SortType}.","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"kwangthiag"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"kwangthiag"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"kwangthiag"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"kwangthiag"},"content":"    public static boolean parseIsAscending(String argument) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":233,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(argument);","lastModifiedDate":"2023-11-01"},{"lineNumber":234,"author":{"gitId":"kwangthiag"},"content":"        if (!argument.equals(\"asc\") \u0026\u0026 !argument.equals(\"desc\")) {","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"kwangthiag"},"content":"            throw new ParseException(\"This is neither ascending or descending\");","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"kwangthiag"},"content":"        boolean isAscending \u003d argument.equals(\"asc\");","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"kwangthiag"},"content":"        return isAscending;","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kwangthiag":29,"billieboy7":52,"-":124,"trgao":36}},{"path":"src/main/java/seedu/address/logic/parser/RedoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * Parses input arguments and creates a new {@code RedoCommand} object.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" *","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" * This parser ensures that the redo command provided by the user is valid.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" * If additional arguments are provided with the redo command, a ParseException is thrown.","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"public class RedoCommandParser implements Parser\u003cRedoCommand\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * Parses the given {@code String} of arguments in the context of the RedoCommand.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * @param args Input arguments provided by the user.","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @return A RedoCommand object for execution.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public RedoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        return new RedoCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"licongshen12":31}},{"path":"src/main/java/seedu/address/logic/parser/UndoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * Parses input arguments and creates a new {@code UndoCommand} object.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class UndoCommandParser implements Parser\u003cUndoCommand\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"     * Parses the given {@code String} of arguments to create an {@code UndoCommand} object.","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * @param args The user input arguments.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * @return A new {@code UndoCommand} object.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    public UndoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        return new UndoCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"licongshen12":26}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/AppointmentsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.appointmentcommands.AppointmentsCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" * Parses input arguments to produce an {@code AppointmentsCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"public class AppointmentsCommandParser implements Parser\u003cAppointmentsCommand\u003e {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     * Parses the given {@code String} of arguments to produce an {@code AppointmentsCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * This parser expects no arguments. If any argument is provided, a {@code ParseException} is thrown.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * @param args The arguments string, which should be empty for this command.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @return An {@code AppointmentsCommand} ready for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public AppointmentsCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AppointmentsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        return new AppointmentsCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"licongshen12":29}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/CancelCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dinde2004"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"dinde2004"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.commands.appointmentcommands.CancelCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"dinde2004"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"dinde2004"},"content":" * Parses input arguments and creates a new CancelCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"dinde2004"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"dinde2004"},"content":"public class CancelCommandParser implements Parser\u003cCancelCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"dinde2004"},"content":"     * Parses the given {@code String} of arguments in the context of the CancelCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"dinde2004"},"content":"     * and returns a CancelCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"dinde2004"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"dinde2004"},"content":"    public CancelCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"        System.out.println(args);","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        if (args.isEmpty() || !args.trim().matches(\"-?\\\\d+\")) {","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CancelCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"dinde2004"},"content":"            return new CancelCommand(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"            throw new ParseException(MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"dinde2004"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"dinde2004":25,"trgao":10}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/FindAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.appointmentcommands.FindAppointmentCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.PatientContainsKeywordsPredicate;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":" * Parses user input and creates a {@code FindPatientAppointmentCommand} object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":" * This class is responsible for taking a user\u0027s input string and converting it into","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":" * a corresponding command for finding patient appointments based on provided keywords.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"public class FindAppointmentCommandParser implements Parser\u003cFindAppointmentCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     * Parses {@code userInput} and returns a FindPatientAppointmentCommand object to be executed.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     * @param userInput user\u0027s input which is of type String.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"     * @throws ParseException if {@code userInput} does not conform to the expected format.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    public FindAppointmentCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        return new FindAppointmentCommand(new PatientContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"billieboy7":31,"licongshen12":1,"trgao":5}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/RescheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.appointmentcommands.RescheduleCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":" * Parses input arguments and creates a new RescheduleCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"public class RescheduleCommandParser implements Parser\u003cRescheduleCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"     * Parses the given {@code String} of arguments in the context of the RescheduleCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"     * and returns a RescheduleCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"    public RescheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT_START, PREFIX_APPOINTMENT_END);","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_APPOINTMENT_START, PREFIX_APPOINTMENT_END)","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"                || argMultimap.getPreamble().isEmpty() || argMultimap.checkPreambleIsNotNumber()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RescheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"            throw new ParseException(MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_APPOINTMENT_START, PREFIX_APPOINTMENT_END);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        LocalDateTime startTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_APPOINTMENT_START).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"        LocalDateTime endTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_APPOINTMENT_END).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        AppointmentTime appointmentTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"            appointmentTime \u003d new AppointmentTime(startTime, endTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"            throw new ParseException(AppointmentTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"        return new RescheduleCommand(index, appointmentTime);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"kwangthiag":38,"trgao":25}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DESCRIPTION;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PATIENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PRIORITY;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.appointmentcommands.ScheduleCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.AppointmentDescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":" * Parses input arguments and creates a new ScheduleCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"     * @param args","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT_PATIENT, PREFIX_APPOINTMENT_START,","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"                        PREFIX_APPOINTMENT_END, PREFIX_APPOINTMENT_DESCRIPTION, PREFIX_APPOINTMENT_PRIORITY);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_APPOINTMENT_PATIENT, PREFIX_APPOINTMENT_START,","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"                PREFIX_APPOINTMENT_END, PREFIX_APPOINTMENT_DESCRIPTION, PREFIX_APPOINTMENT_PRIORITY)","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"                    ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_APPOINTMENT_PATIENT, PREFIX_APPOINTMENT_START,","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"                PREFIX_APPOINTMENT_END, PREFIX_APPOINTMENT_DESCRIPTION, PREFIX_APPOINTMENT_PRIORITY);","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        LocalDateTime startTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_APPOINTMENT_START).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        LocalDateTime endTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_APPOINTMENT_END).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        AppointmentDescription appointmentDescription \u003d ParserUtil.parseDescription(argMultimap","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"                .getValue(PREFIX_APPOINTMENT_DESCRIPTION).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        PriorityTag priorityTag \u003d ParserUtil.parsePriorityTag(argMultimap","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"                .getValue(PREFIX_APPOINTMENT_PRIORITY).get());","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"        AppointmentTime appointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"            appointmentTime \u003d new AppointmentTime(startTime, endTime);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"            throw new ParseException(AppointmentTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"        Name patient \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_APPOINTMENT_PATIENT).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"        Appointment appointment \u003d new Appointment(patient, appointmentTime, appointmentDescription, priorityTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"        return new ScheduleCommand(appointment, patient);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"billieboy7":71,"trgao":13}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_SORT_ATTRIBUTE;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BY;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.appointmentcommands.SortCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    private static final String[] ATTRIBUTES \u003d {\"time\", \"priority\"};","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_BY);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"        boolean isAscending;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"            isAscending \u003d ParserUtil.parseIsAscending(argMultimap.getPreamble());","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        if (argMultimap.getValue(PREFIX_BY).isEmpty() || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_BY);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"        String attribute \u003d argMultimap.getValue(PREFIX_BY).get();","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"        if (Arrays.stream(ATTRIBUTES).noneMatch(x -\u003e x.equals(attribute))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_SORT_ATTRIBUTE,","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"                    Arrays.toString(ATTRIBUTES)));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"        return new SortCommand(isAscending, attribute);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"    public static String printAttributes() {","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"        return Arrays.toString(ATTRIBUTES);","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kwangthiag":59,"trgao":2}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/TodayCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.appointmentcommands.TodayCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" * Parses input arguments to produce a {@code TodayCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"public class TodayCommandParser implements Parser\u003cTodayCommand\u003e {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * Parses the given {@code String} of arguments to produce a {@code TodayCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     * This parser expects no arguments. If any argument is provided, a {@code ParseException} is thrown.","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @param args The arguments string, which should be empty for this command.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @return A {@code TodayCommand} ready for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public TodayCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, TodayCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        return new TodayCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"licongshen12":30}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/TriageCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PRIORITY;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.appointmentcommands.TriageCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":" * Parses input arguments and creates a new TriageCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"public class TriageCommandParser implements Parser\u003cTriageCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"     * Parses the given {@code String} of arguments in the context of the TriageCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"     * and returns a TriageCommand object for execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    public TriageCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT_PRIORITY);","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        Index index;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        if (argMultimap.getValue(PREFIX_APPOINTMENT_PRIORITY).isEmpty()","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"                || argMultimap.getPreamble().isEmpty() || argMultimap.checkPreambleIsNotNumber()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TriageCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"            throw new ParseException(MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_APPOINTMENT_PRIORITY);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        PriorityTag priorityTag \u003d ParserUtil.parsePriorityTag(argMultimap.getValue(PREFIX_APPOINTMENT_PRIORITY).get());","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        return new TriageCommand(index, priorityTag);","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"trgao":53}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/UpcomingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.appointmentcommands.UpcomingCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" * Parses input arguments to produce an {@code UpcomingCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"public class UpcomingCommandParser implements Parser\u003cUpcomingCommand\u003e {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * Parses the given {@code String} of arguments to produce an {@code UpcomingCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     * This parser expects no arguments. If any argument is provided, a {@code ParseException} is thrown.","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @param args The arguments string, which should be empty for this command.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @return An {@code UpcomingCommand} ready for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public UpcomingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpcomingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        return new UpcomingCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"licongshen12":30}},{"path":"src/main/java/seedu/address/logic/parser/personparser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_ILLNESSES);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_NAME, PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"                PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"        Birthdate birthdate \u003d ParserUtil.parseBirthdate(argMultimap.getValue(PREFIX_BIRTHDATE).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"        if (argMultimap.getValue(PREFIX_ILLNESSES).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"            tagList \u003d ParserUtil.parseIllnesses(argMultimap.getValue(PREFIX_ILLNESSES).get().toLowerCase());","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"        Person person \u003d new Person(name, gender, birthdate, phone, email, address, tagList);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kwangthiag":6,"billieboy7":1,"licongshen12":1,"-":43,"trgao":17}},{"path":"src/main/java/seedu/address/logic/parser/personparser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"        if (args.isEmpty() || !args.trim().matches(\"-?\\\\d+\")) {","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"licongshen12":1,"-":25,"trgao":8}},{"path":"src/main/java/seedu/address/logic/parser/personparser/DiagnoseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.personcommands.DiagnoseCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":" * Parses input arguments and creates a new DiagnoseCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"public class DiagnoseCommandParser implements Parser\u003cDiagnoseCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"     * Parses the given {@code String} of arguments in the context of the DiagnoseCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"     * and returns a DiagnoseCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"    public DiagnoseCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ILLNESSES);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"        Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        if (argMultimap.getValue(PREFIX_ILLNESSES).isEmpty()","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"                || argMultimap.getPreamble().isEmpty() || argMultimap.checkPreambleIsNotNumber()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DiagnoseCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ILLNESSES);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e illnesses \u003d ParserUtil.parseIllnesses(argMultimap.getValue(PREFIX_ILLNESSES).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"        return new DiagnoseCommand(index, illnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kwangthiag":46,"trgao":7}},{"path":"src/main/java/seedu/address/logic/parser/personparser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_PHONE,","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"        if (argMultimap.getPreamble().isEmpty() || argMultimap.checkPreambleIsNotNumber()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDATE).isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"            editPersonDescriptor.setBirthdate(ParserUtil.parseBirthdate(argMultimap.getValue(PREFIX_BIRTHDATE).get()));","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kwangthiag":2,"licongshen12":2,"-":55,"trgao":22}},{"path":"src/main/java/seedu/address/logic/parser/personparser/FindIllnessCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.personcommands.FindIllnessCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.person.IllnessContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":" * Parses input arguments and creates a new FindIllnessCommand object","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"public class FindIllnessCommandParser implements Parser\u003cFindIllnessCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * Parses the given {@code String} of arguments in the context of the FindIllnessCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     * and returns a FindIllnessCommand object for execution.","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    public FindIllnessCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindIllnessCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        String[] illnessKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        return new FindIllnessCommand(new IllnessContainsKeywordsPredicate(Arrays.asList(illnessKeywords)));","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"billieboy7":36}},{"path":"src/main/java/seedu/address/logic/parser/personparser/FindPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.personcommands.FindPatientCommand;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"public class FindPatientCommandParser implements Parser\u003cFindPatientCommand\u003e {","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    public FindPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        return new FindPatientCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":27,"trgao":7}},{"path":"src/main/java/seedu/address/logic/parser/personparser/PatientsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.PatientsCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":" * Parses input arguments to produce a {@code PatientsCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class PatientsCommandParser {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"     * Parses the given {@code String} of arguments to produce a {@code PatientsCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"     * This parser expects no arguments. If any argument is provided, a {@code ParseException} is thrown.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"     * @param args The arguments string, which should be empty for this command.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"     * @return A {@code PatientsCommand} ready for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public PatientsCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PatientsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"        return new PatientsCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"licongshen12":29}},{"path":"src/main/java/seedu/address/logic/parser/personparser/SortPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_SORT_ATTRIBUTE;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BY;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.personcommands.SortPatientCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":" * Parses input arguments and creates a new SortPatientCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"public class SortPatientCommandParser implements Parser\u003cSortPatientCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"    private static final String[] ATTRIBUTES \u003d {\"name\", \"birthday\"};","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"     * Parses the given {@code String} of arguments in the context of the SortPatientCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"     * and returns a SortPatientCommand object for execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"    public SortPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_BY);","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"        boolean isAscending;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"            isAscending \u003d ParserUtil.parseIsAscending(argMultimap.getPreamble());","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortPatientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        if (argMultimap.getValue(PREFIX_BY).isEmpty() || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_BY);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"        String attribute \u003d argMultimap.getValue(PREFIX_BY).get();","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"        if (Arrays.stream(ATTRIBUTES).noneMatch(x -\u003e x.equals(attribute))) {","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_SORT_ATTRIBUTE,","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"                    Arrays.toString(ATTRIBUTES)));","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"        return new SortPatientCommand(isAscending, attribute);","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"    public static String printAttributes() {","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"        return Arrays.toString(ATTRIBUTES);","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"kwangthiag":62}},{"path":"src/main/java/seedu/address/logic/parser/personparser/UndiagnoseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.personcommands.UndiagnoseCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":" * Parses input arguments and creates a new DiagnoseCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"public class UndiagnoseCommandParser implements Parser\u003cUndiagnoseCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"     * Parses the given {@code String} of arguments in the context of the DiagnoseCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"     * and returns a DiagnoseCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"    public UndiagnoseCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ILLNESSES);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"        Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        if (argMultimap.getValue(PREFIX_ILLNESSES).isEmpty()","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"                || argMultimap.getPreamble().isEmpty() || argMultimap.checkPreambleIsNotNumber()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndiagnoseCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ILLNESSES);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e illnesses \u003d ParserUtil.parseIllnesses(argMultimap.getValue(PREFIX_ILLNESSES).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"        return new UndiagnoseCommand(index, illnesses);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kwangthiag":46,"trgao":7}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"     * Creates an AddressBook using the Persons and Appointments in the {@code toBeCopied}","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"     * Replaces the contents of the person list with {@code appointments}.","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"     * Returns true if a person with the same name as {@code name} exists in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"    public boolean hasPerson(Name name) {","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"        return persons.contains(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":110,"author":{"gitId":"kwangthiag"},"content":"        appointments.setAppointments(target, editedPerson);","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":119,"author":{"gitId":"trgao"},"content":"        appointments.remove(key);","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"trgao"},"content":"    //// appointment-level operations","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"trgao"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"trgao"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"trgao"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"trgao"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"trgao"},"content":"     * Adds an appointment to the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"trgao"},"content":"     * The appointment must not already exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"trgao"},"content":"    public void addAppointment(Appointment a) {","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"trgao"},"content":"        appointments.add(a);","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"trgao"},"content":"     * Replaces the given appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"trgao"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"trgao"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"trgao"},"content":"     * another existing appointment in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"trgao"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"trgao"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"trgao"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"trgao"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"trgao"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"trgao"},"content":"    public void removeAppointment(Appointment key) {","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"trgao"},"content":"        appointments.remove(key);","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"kwangthiag"},"content":"     * Sorts appointment list.","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"kwangthiag"},"content":"    public void sortAppointmentList(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"kwangthiag"},"content":"        appointments.sort(isAscending, attribute);","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"kwangthiag"},"content":"     * Sorts patient list.","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"kwangthiag"},"content":"    public void sortPatientList(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"kwangthiag"},"content":"        persons.sort(isAscending, attribute);","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"trgao"},"content":"                .add(\"appointments\", appointments)","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":190,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":191,"author":{"gitId":"trgao"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"trgao"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":207,"author":{"gitId":"trgao"},"content":"        return persons.equals(otherAddressBook.persons)","lastModifiedDate":"2023-10-14"},{"lineNumber":208,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 appointments.equals(otherAddressBook.appointments);","lastModifiedDate":"2023-10-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"trgao"},"content":"        return Objects.hash(persons, appointments);","lastModifiedDate":"2023-10-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kwangthiag":16,"-":127,"trgao":72}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import seedu.address.commons.history.UserHistoryManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"     * Returns true if a person with the same name as {@code person} exists in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"    boolean hasPerson(Name name);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"     * Deletes the given appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"     * The appointment must exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"    void deleteAppointment(Appointment target);","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"     * Adds the given appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":"     * {@code appointment} must not already exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"trgao"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"trgao"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as another existing","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"trgao"},"content":"     * appointment in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"trgao"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"licongshen12"},"content":"     * Returns user history.","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"licongshen12"},"content":"    UserHistoryManager getUserHistoryManager();","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"dinde2004"},"content":"     * Updates user history.","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"dinde2004"},"content":"    void updateUserHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"licongshen12"},"content":"     * Undo the history.","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"licongshen12"},"content":"    void undoHistory();","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"licongshen12"},"content":"     * Redo the history.","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"licongshen12"},"content":"    void redoHistory();","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"trgao"},"content":"    /** Returns an unmodifiable view of the filtered appointment list */","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"trgao"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"trgao"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"trgao"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"trgao"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"kwangthiag"},"content":"     * Sorts appointments in {@code isAscending} order of {@code attribute}.","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"kwangthiag"},"content":"    void sortAppointmentList(boolean isAscending, String attribute);","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"kwangthiag"},"content":"     * Sorts patients in {@code isAscending} order of {@code attribute}.","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"kwangthiag"},"content":"    void sortPatientList(boolean isAscending, String attribute);","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dinde2004":5,"kwangthiag":9,"billieboy7":3,"licongshen12":16,"-":87,"trgao":41}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"dinde2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"import seedu.address.commons.history.UserHistoryManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    private final UserHistoryManager userHistory;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"        this.userHistory \u003d new UserHistoryManager();","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"dinde2004"},"content":"        userHistory.initialiseHistory(new Pair\u003c\u003e(new ArrayList\u003c\u003e(this.addressBook.getPersonList()),","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"dinde2004"},"content":"                        new ArrayList\u003c\u003e(this.addressBook.getAppointmentList())));","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.addressBook.getAppointmentList());","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"dinde2004"},"content":"     * Initializes a ModelManager with the given addressBook, userPrefs, and userHistory","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"dinde2004"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, UserHistoryManager userHistory) {","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"dinde2004"},"content":"        requireAllNonNull(addressBook, userPrefs, userHistory);","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"dinde2004"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs\" + userPrefs","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"dinde2004"},"content":"                + \" with their command history\");","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"dinde2004"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"dinde2004"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"dinde2004"},"content":"        this.userHistory \u003d new UserHistoryManager(userHistory);","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"dinde2004"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"dinde2004"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.addressBook.getAppointmentList());","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"trgao"},"content":"    public boolean hasPerson(Name name) {","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"trgao"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"trgao"},"content":"        return addressBook.hasPerson(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"trgao"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Appointment \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"trgao"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"trgao"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"trgao"},"content":"        return addressBook.hasAppointment(appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"trgao"},"content":"    public void deleteAppointment(Appointment target) {","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"trgao"},"content":"        addressBook.removeAppointment(target);","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"trgao"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"trgao"},"content":"        addressBook.addAppointment(appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"billieboy7"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"trgao"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"trgao"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"trgao"},"content":"        addressBook.setAppointment(target, editedAppointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":191,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"trgao"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"trgao"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2023-10-14"},{"lineNumber":196,"author":{"gitId":"trgao"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"trgao"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":200,"author":{"gitId":"trgao"},"content":"        return filteredAppointments;","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":202,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":203,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":204,"author":{"gitId":"trgao"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-14"},{"lineNumber":205,"author":{"gitId":"trgao"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":206,"author":{"gitId":"trgao"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":207,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":208,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-14"},{"lineNumber":224,"author":{"gitId":"dinde2004"},"content":"                \u0026\u0026 filteredAppointments.equals(otherModelManager.filteredAppointments)","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"dinde2004"},"content":"                \u0026\u0026 userHistory.equals(otherModelManager.userHistory);","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"licongshen12"},"content":"    public UserHistoryManager getUserHistoryManager() {","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"licongshen12"},"content":"        return this.userHistory;","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"dinde2004"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":234,"author":{"gitId":"dinde2004"},"content":"    public void updateUserHistory() {","lastModifiedDate":"2023-10-29"},{"lineNumber":235,"author":{"gitId":"dinde2004"},"content":"        this.userHistory.addHistory(new Pair\u003c\u003e(new ArrayList\u003c\u003e(this.addressBook.getPersonList()),","lastModifiedDate":"2023-10-29"},{"lineNumber":236,"author":{"gitId":"dinde2004"},"content":"                new ArrayList\u003c\u003e(this.addressBook.getAppointmentList())));","lastModifiedDate":"2023-10-29"},{"lineNumber":237,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":238,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":239,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":240,"author":{"gitId":"licongshen12"},"content":"    public void undoHistory() {","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"licongshen12"},"content":"        this.userHistory.undo();","lastModifiedDate":"2023-10-24"},{"lineNumber":242,"author":{"gitId":"dinde2004"},"content":"        this.addressBook.setPersons(this.userHistory.getUndoHistory().peek().getKey());","lastModifiedDate":"2023-11-03"},{"lineNumber":243,"author":{"gitId":"dinde2004"},"content":"        this.addressBook.setAppointments(this.userHistory.getUndoHistory().peek().getValue());","lastModifiedDate":"2023-11-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":246,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"licongshen12"},"content":"    public void redoHistory() {","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"dinde2004"},"content":"        this.addressBook.setPersons(this.userHistory.getRedoHistory().peek().getKey());","lastModifiedDate":"2023-11-03"},{"lineNumber":249,"author":{"gitId":"dinde2004"},"content":"        this.addressBook.setAppointments(this.userHistory.getRedoHistory().peek().getValue());","lastModifiedDate":"2023-11-03"},{"lineNumber":250,"author":{"gitId":"licongshen12"},"content":"        this.userHistory.redo();","lastModifiedDate":"2023-10-24"},{"lineNumber":251,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":252,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"kwangthiag"},"content":"    public void sortAppointmentList(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"kwangthiag"},"content":"        addressBook.sortAppointmentList(isAscending, attribute);","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"kwangthiag"},"content":"    public void sortPatientList(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"kwangthiag"},"content":"        addressBook.sortPatientList(isAscending, attribute);","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dinde2004":29,"kwangthiag":8,"billieboy7":1,"licongshen12":16,"-":151,"trgao":55}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"     * Returns an unmodifiable view of the appointments list.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"trgao":7}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":" * Represents an Appointment in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":" * Guarantees: details are present and not null, field values are validated.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"public class Appointment implements Comparable\u003cAppointment\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    private final AppointmentTime appointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    private final AppointmentDescription appointmentDescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    private final Name patientName;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    private Person patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    private PriorityTag priorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"     * Constructs an {@code Appointment}.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"     * @param patientName The name of the patient associated with the appointment.","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"     * @param appointmentTime The scheduled time for the appointment.","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"     * @param appointmentDescription The description for the appointment.","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"    public Appointment(","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"            Name patientName, AppointmentTime appointmentTime, AppointmentDescription appointmentDescription,","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            PriorityTag priorityTag) {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        requireAllNonNull(patientName, appointmentTime, appointmentDescription);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        this.patientName \u003d patientName;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"        this.appointmentTime \u003d appointmentTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        this.patient \u003d null;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        this.appointmentDescription \u003d appointmentDescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        this.priorityTag \u003d priorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"     * Constructs an {@code Appointment}.","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"     * @param patient The patient associated with the appointment.","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"     * @param appointmentTime The scheduled time for the appointment.","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"     * @param appointmentDescription The description for the appointment.","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"    public Appointment(Person patient, AppointmentTime appointmentTime, AppointmentDescription appointmentDescription,","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"                       PriorityTag priorityTag) {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        requireAllNonNull(appointmentTime);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"        this.appointmentTime \u003d appointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        this.patientName \u003d patient.getName();","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"        this.appointmentDescription \u003d appointmentDescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"        this.priorityTag \u003d priorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"     * Used in the AddAppointmentCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"     * @param patient The patient associated with the appointment.","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"    public void setPatient(Person patient) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"    public Name getPatientName() {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"        return this.patientName;","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"    public AppointmentTime getAppointmentTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"        return this.appointmentTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"        return this.appointmentTime.getStart();","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"        return this.appointmentTime.getEnd();","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"    public AppointmentDescription getAppointmentDescription() {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"        return this.appointmentDescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"    public Person getPerson() {","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"        return this.patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"    public PriorityTag getPriorityTag() {","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"        return this.priorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"        return patientName.equals(otherAppointment.patientName)","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 appointmentTime.equals(otherAppointment.appointmentTime)","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"                \u0026\u0026 appointmentDescription.equals(otherAppointment.appointmentDescription)","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"                \u0026\u0026 priorityTag.equals(otherAppointment.priorityTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"        return Objects.hash(patient, appointmentTime, appointmentDescription);","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"kwangthiag"},"content":"    public int compareTo(Appointment otherAppointment) {","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"kwangthiag"},"content":"        return appointmentTime.compareTo(otherAppointment.appointmentTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"trgao"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"trgao"},"content":"                .add(\"patient\", patient)","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"trgao"},"content":"                .add(\"appointmentTime\", appointmentTime)","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"trgao"},"content":"                .add(\"description\", appointmentDescription)","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"trgao"},"content":"                .add(\"priority\", priorityTag)","lastModifiedDate":"2023-11-06"},{"lineNumber":130,"author":{"gitId":"trgao"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kwangthiag":6,"billieboy7":22,"licongshen12":43,"trgao":61}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":" * Represents an Appointment\u0027s description in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAppointmentDescription(String)}","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"public class AppointmentDescription {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"            \"Description should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"    public final String value;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"     * Constructor method","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * @param description description to be included in the appointment","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    public AppointmentDescription(String description) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"        checkArgument(isValidAppointmentDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        this.value \u003d description;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * Checks for validity of characters in appointment description","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     * @param appointmentDescription string text by user input","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     * @return whether the string only contains alphanumeric characters, numbers and hyphens","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    public static boolean isValidAppointmentDescription(String appointmentDescription) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        return appointmentDescription.matches(\"^[a-zA-Z0-9 -]+$\");","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        // if this and the other are the same object","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        if (other instanceof AppointmentDescription) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"            AppointmentDescription otherAppointmentDescription \u003d (AppointmentDescription) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"            if (this.value.equals(otherAppointmentDescription.value)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"                return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"        return this.value.hashCode();","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"        return this.value;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"billieboy7":50,"trgao":11}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.commons.util.DateUtil.dateTimeToString;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":" * Represents the time slot for an appointment in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAppointmentTime(LocalDateTime, LocalDateTime)}","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"public class AppointmentTime implements Comparable\u003cAppointmentTime\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"            \"1. AppointmentTime start must be before AppointmentTime end.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"            + \"2. AppointmentTime must also not overlap with an existing Appointment\u0027s time.\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"            + \"3. Ensure that the AppointmentTime start and AppointmentTime end are valid date times.\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"            + \"* Note: Date indicated must be YYYY/MM/DD\"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"            + \"(i.e. 2th Jan 2020 must be input as 2021/01/02 instead of 2020-01-01).\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"            + \"* Note: Time indicated must be XX:XX (i.e. 9AM must be input as 09:00 instead of 9:00).\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"            + \"E.g.: start\u003d2023/10/13 09:00 end\u003d2023/10/13 12:00\";","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    // Data fields","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"     * Constructs an {@code AppointmentTime}.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"     * @param start Start time of the appointment.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"     * @param end End time of the appointment.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    public AppointmentTime(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        requireAllNonNull(start, end);","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        checkArgument(isValidAppointmentTime(start, end), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        return start;","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"        return end;","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"     * Returns true if a given start and end time form a valid appointment time.","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    public static boolean isValidAppointmentTime(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"        requireAllNonNull(start, end);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"        return !start.isAfter(end) \u0026\u0026 !start.isEqual(end);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"     * Returns true if the provided appointment does not overlap with any appointment in the appointment list.","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"     * @param appointmentList Current list of appointments to check against.","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"     * @param appointment The appointment to check.","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"     * @return True if the appointment is valid, false otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"    public static Boolean isValidTimeSlot(List\u003cAppointment\u003e appointmentList, Appointment appointment) {","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"        LocalDateTime start \u003d appointment.getStartTime();","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"        LocalDateTime end \u003d appointment.getEndTime();","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"        for (Appointment currentAppointment : appointmentList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"            LocalDateTime currentStart \u003d currentAppointment.getStartTime();","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"            LocalDateTime currentEnd \u003d currentAppointment.getEndTime();","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"            if (start.isEqual(currentStart) || end.isEqual(currentEnd)","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"                    || start.isAfter(currentStart) \u0026\u0026 start.isBefore(currentEnd)","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"                    || end.isAfter(currentStart) \u0026\u0026 end.isBefore(currentEnd)","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"                    || start.isBefore(currentStart) \u0026\u0026 end.isAfter(currentEnd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"                return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"        return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"                || (other instanceof AppointmentTime // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"                \u0026\u0026 getStart().isEqual(((AppointmentTime) other).getStart()) // check same data fields","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"                \u0026\u0026 getEnd().isEqual(((AppointmentTime) other).getEnd()));","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"        return Objects.hash(start, end);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"kwangthiag"},"content":"    public int compareTo(AppointmentTime otherAppointmentTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"kwangthiag"},"content":"        return start.compareTo(otherAppointmentTime.start);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"        return \"START: \" + dateTimeToString(start) + \"\\nEND: \" + dateTimeToString(end);","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kwangthiag":5,"licongshen12":71,"trgao":29}},{"path":"src/main/java/seedu/address/model/appointment/PatientContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":" * Tests that an {@code Appointment}\u0027s patient name matches any of the keywords given.","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"public class PatientContainsKeywordsPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    public PatientContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"     * @param appointment the input argument","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"     * @return {@code true} if the input argument matches the predicate,","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"     *     otherwise {@code false}","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        String patientName \u003d appointment.getPatientName().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"                .anyMatch(keyword -\u003e StringUtil","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"                        .containsWordIgnoreCase(patientName, keyword));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        // Check whether they are the same object","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        if (other instanceof PatientContainsKeywordsPredicate) {","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"            PatientContainsKeywordsPredicate otherFilter \u003d (PatientContainsKeywordsPredicate) other;","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"            return this.keywords.equals(otherFilter.keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"billieboy7":49,"trgao":6}},{"path":"src/main/java/seedu/address/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":" * A list of appointments that enforces uniqueness between its elements.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":" * The implementation ensures that there are no duplicate appointments","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":" * in the list. An appointment is considered unique based on its identity.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    private ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"     * The appointment must not already exist in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"     * Replaces the appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"     * another existing appointment in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"        if (!target.equals(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"     * Removes the equivalent appointment from the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"     * The appointment must exist in the list.","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"     * Removes the appointments from the list associated with the given person.","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"        internalList.removeIf(appointment -\u003e appointment.getPerson().equals(toRemove));","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"    public void setAppointments(UniqueAppointmentList replacement) {","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"kwangthiag"},"content":"     * Replaces the appointments patients {@code target} to {@code editedPerson}","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"kwangthiag"},"content":"    public void setAppointments(Person target, Person editedPerson) {","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"kwangthiag"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"kwangthiag"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); ++i) {","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"kwangthiag"},"content":"            if (internalList.get(i).getPerson().equals(target)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"kwangthiag"},"content":"                Appointment editedAppointment \u003d new Appointment(editedPerson, internalList.get(i).getAppointmentTime(),","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"kwangthiag"},"content":"                        internalList.get(i).getAppointmentDescription(), internalList.get(i).getPriorityTag());","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"kwangthiag"},"content":"                internalList.set(i, editedAppointment);","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"kwangthiag"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"kwangthiag"},"content":"     * Replaces the current list with a sorted list based on attribute in isAscending order","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"kwangthiag"},"content":"    public void sort(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"trgao"},"content":"        if (attribute.equals(\"time\")) {","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"kwangthiag"},"content":"            sortByDateAndTime(isAscending);","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"kwangthiag"},"content":"        } else if (attribute.equals(\"priority\")) {","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"kwangthiag"},"content":"            sortByPriority(isAscending);","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"trgao"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"trgao"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"trgao"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"trgao"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"trgao"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"licongshen12"},"content":"     * Returns true if both lists have the same appointments.","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"licongshen12"},"content":"     * @param other The object to be compared with.","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"licongshen12"},"content":"     * @return true if both lists have the same appointments.","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"licongshen12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"licongshen12"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"licongshen12"},"content":"                || (other instanceof UniqueAppointmentList // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"licongshen12"},"content":"                \u0026\u0026 internalList.equals(((UniqueAppointmentList) other).internalList));","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"licongshen12"},"content":"     * Returns the hash code value for this list.","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"licongshen12"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"licongshen12"},"content":"     * @return the hash code value for this list.","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"licongshen12"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"licongshen12"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"licongshen12"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"trgao"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"trgao"},"content":"    * Returns true if {@code appointments} contains only unique appointments.","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"trgao"},"content":"    */","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"trgao"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"trgao"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"trgao"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"trgao"},"content":"                if (appointments.get(i).equals(appointments.get(j))) {","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"trgao"},"content":"                    return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"trgao"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"trgao"},"content":"        return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"kwangthiag"},"content":"     * Sorts Appointment List by date in order of {@code isAscending}","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"kwangthiag"},"content":"     * @param isAscending","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"kwangthiag"},"content":"    private void sortByDateAndTime(boolean isAscending) {","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"kwangthiag"},"content":"        if (isAscending) {","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"trgao"},"content":"            internalList.sort(Comparator.naturalOrder());","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"kwangthiag"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"trgao"},"content":"            internalList.sort((appointment1, appointment2) -\u003e -appointment1.compareTo(appointment2));","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"kwangthiag"},"content":"     * Sorts Appointment List by priority in order of {@code isAscending}","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"kwangthiag"},"content":"     * @param isAscending","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"kwangthiag"},"content":"    public void sortByPriority(boolean isAscending) {","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"kwangthiag"},"content":"        if (isAscending) {","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"trgao"},"content":"            internalList.sort(","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"trgao"},"content":"                    Comparator.comparing(Appointment::getPriorityTag));","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"kwangthiag"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"trgao"},"content":"            internalList.sort((appointment1, appointment2) -\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"trgao"},"content":"                    -appointment1.getPriorityTag().compareTo(appointment2.getPriorityTag()));","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kwangthiag":43,"licongshen12":37,"trgao":126}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"public class AppointmentNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"licongshen12":8}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":" * Signals that the operation would result in duplicate Appointments.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":" * Duplicate Appointments are considered appointments that have the same identity.","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"     * Constructs a new {@code DuplicateAppointmentException} with the default detail message.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"        super(\"Operation results in duplicate appointments\");","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"licongshen12":14}},{"path":"src/main/java/seedu/address/model/person/Birthdate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import java.time.chrono.IsoChronology;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":" * Represents a Person\u0027s birthdate in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthdate(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"public class Birthdate implements Comparable\u003cBirthdate\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"            \"Birthdates should be of the form YYYY/MM/DD, and must be a valid date.\\n\"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"            + \"* Note: Date indicated must be YYYY/MM/DD\"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"            + \" (i.e. 2th Jan 2020 must be input as 2021/01/02 instead of 2020-01-02).\\n\"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"            + \"E.g. birthdate\u003d2023/10/20\";","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    private static final DateTimeFormatter FORMAT \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"            .appendPattern(\"yyyy/MM/dd\")","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"            .parseDefaulting(ChronoField.ERA, 1)","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"            .toFormatter()","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"            .withChronology(IsoChronology.INSTANCE)","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    public final String value;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"    public final LocalDate birthdate;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"     * Constructs an {@code Birthdate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"     * @param birthdate A valid birthdate.","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    public Birthdate(String birthdate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"        requireNonNull(birthdate);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"        checkArgument(isValidBirthdate(birthdate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        this.value \u003d birthdate;","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"        this.birthdate \u003d LocalDate.parse(birthdate, FORMAT);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"     * Returns if a given string is a valid birthdate.","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"    public static boolean isValidBirthdate(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"            LocalDate.parse(test, FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"        return value;","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"                || (other instanceof Birthdate // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 value.equals(((Birthdate) other).value)); // state check","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"kwangthiag"},"content":"    public int compareTo(Birthdate birthdate) {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"kwangthiag"},"content":"        return this.birthdate.compareTo(birthdate.birthdate);","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"kwangthiag":12,"trgao":68}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"public class Gender {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender should be either MALE or FEMALE\";","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"     * The first character of the birthdate must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    public static final String VALIDATION_REGEX \u003d \"MALE|FEMALE\";","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    public final String value;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        value \u003d gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"     * Returns if a given string is a valid gender.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"        return value;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"trgao":53}},{"path":"src/main/java/seedu/address/model/person/IllnessContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":" * Tests that a {@code Person}\u0027s {@code Illness} matches any of the keywords given.","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"public class IllnessContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    public IllnessContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * Tests if a person\u0027s illnesses contain any of the specified keywords.","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     * @param person The person to test.","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     * @return {@code true} if the person\u0027s illnesses contain any of the keywords, {@code false} otherwise.","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"                .anyMatch(tag -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"                    return person.getTags().toString().toLowerCase().contains(tag.toLowerCase());","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"                });","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    private boolean areStringListsEqualCaseInsensitive(List\u003cString\u003e keywords1, List\u003cString\u003e keywords2) {","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        // Check if both lists have the same size","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        if (keywords1.size() !\u003d keywords2.size()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"            return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        // Iterate through the elements and compare them in a case-insensitive manner","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        for (int i \u003d 0; i \u003c keywords1.size(); i++) {","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"            String str1 \u003d keywords1.get(i);","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"            String str2 \u003d keywords2.get(i);","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"            // Use equalsIgnoreCase for case-insensitive comparison","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"            if (!str1.equalsIgnoreCase(str2)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"                return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        // If all elements are equal, return true","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        return true;","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"        if (!(other instanceof IllnessContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"        IllnessContainsKeywordsPredicate otherIllnessContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"                (IllnessContainsKeywordsPredicate) other;","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"        return areStringListsEqualCaseInsensitive(keywords, otherIllnessContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"billieboy7":71,"trgao":2}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"    private final String lowercaseFullName;","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"        lowercaseFullName \u003d name.toLowerCase();","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"    public int compareTo(Name name) {","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"        return lowercaseFullName.compareTo(name.lowercaseFullName);","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kwangthiag":7,"-":66}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    private final Gender gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    private final Birthdate birthdate;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    public Person(Name name, Gender gender, Birthdate birthdate, Phone phone, Email email,","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"                  Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        this.birthdate \u003d birthdate;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        return gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"    public Birthdate getBirthdate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        return birthdate;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 gender.equals(otherPerson.gender)","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"                \u0026\u0026 birthdate.equals(otherPerson.birthdate)","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"trgao"},"content":"        return Objects.hash(name, gender, birthdate, phone, email, address, tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"trgao"},"content":"                .add(\"gender\", gender)","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"trgao"},"content":"                .add(\"birthdate\", birthdate)","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":115,"trgao":19}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"     * Returns true if the list contains a person with the same name as the given argument.","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    public boolean contains(Name name) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        return internalList.stream().anyMatch(person -\u003e person.getName().equals(name));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"kwangthiag"},"content":"     * Replaces the current list with a sorted list based on attribute in isAscending order","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"kwangthiag"},"content":"    public void sort(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"kwangthiag"},"content":"        if (attribute.equals(\"name\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"kwangthiag"},"content":"            sortByName(isAscending);","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"kwangthiag"},"content":"        } else if (attribute.equals(\"birthday\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"kwangthiag"},"content":"            sortByBirthday(isAscending);","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"kwangthiag"},"content":"     * Sorts Patient List by name in order of {@code isAscending}","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"kwangthiag"},"content":"     * @param isAscending","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"kwangthiag"},"content":"    private void sortByName(boolean isAscending) {","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"kwangthiag"},"content":"        if (isAscending) {","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"kwangthiag"},"content":"            internalList.sort(Comparator.comparing(Person::getName));","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"kwangthiag"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"kwangthiag"},"content":"            internalList.sort((patient1, patient2) -\u003e -patient1.getName().compareTo(patient2.getName()));","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"kwangthiag"},"content":"     * Sorts Patient List by priority in order of {@code isAscending}","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"kwangthiag"},"content":"     * @param isAscending","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"kwangthiag"},"content":"    private void sortByBirthday(boolean isAscending) {","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"kwangthiag"},"content":"        if (isAscending) {","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"kwangthiag"},"content":"            internalList.sort(","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"kwangthiag"},"content":"                    Comparator.comparing(Person::getBirthdate));","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"kwangthiag"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"kwangthiag"},"content":"            internalList.sort((patient1, patient2) -\u003e -patient1.getBirthdate().compareTo(patient2.getBirthdate()));","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kwangthiag":34,"-":150,"trgao":8}},{"path":"src/main/java/seedu/address/model/tag/PriorityTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":" * Represents a Priority Tag in the records.","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidPriorityTag(String)}","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"public class PriorityTag extends Tag implements Comparable\u003cPriorityTag\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Priority tag can only take in values: \u0027high\u0027, \u0027medium\u0027 or \u0027low\u0027\";","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    public final String priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"     * @param priority A valid tag name.","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    public PriorityTag(String priority) {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"        super(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"        checkArgument(isValidPriorityTag(priority), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    public static boolean isValidPriorityTag(String test) {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        return test.equals(\"high\") || test.equals(\"medium\") || test.equals(\"low\");","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        PriorityTag otherTag \u003d (PriorityTag) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        return priority.equals(otherTag.priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        return priority.hashCode();","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"        return priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"    public int compareTo(PriorityTag otherTag) {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"        return otherTag.priority.charAt(otherTag.priority.length() - 1) - priority.charAt(priority.length() - 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kwangthiag":6,"billieboy7":60,"trgao":3}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":" * Represents an Illness Tag in the records.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"            \"Illness names should be alphanumeric and can contain spaces, but it cannot only contain spaces\";","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} ]+\";","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kwangthiag":1,"-":59,"trgao":3}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Gender(\"MALE\"), new Birthdate(\"2000/10/20\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"                    new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"                    getTagSet(\"fever\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"            new Person(new Name(\"Bernice Yu\"), new Gender(\"MALE\"), new Birthdate(\"2000/10/20\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"                    new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"                    getTagSet(\"flu\", \"cough\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Gender(\"FEMALE\"), new Birthdate(\"2000/10/20\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"                    new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"                    getTagSet(\"covid\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"            new Person(new Name(\"David Li\"), new Gender(\"MALE\"), new Birthdate(\"2000/10/20\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"                    new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"                    getTagSet(\"bronchitis\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Gender(\"MALE\"), new Birthdate(\"2000/10/20\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"                    new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"                    getTagSet(\"asthma\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Gender(\"MALE\"), new Birthdate(\"2000/10/20\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"                    new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"                    getTagSet(\"cancer\"))","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":48,"trgao":20}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static seedu.address.commons.util.DateUtil.dateTimeToString;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.commons.util.DateUtil.parseDateTime;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_PATIENT_DOES_NOT_EXIST;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.AppointmentDescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    private final String patientName;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"    private final String start;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    private final String end;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    private final String description;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    private final String priorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"patientName\") String patientName,","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"                                  @JsonProperty(\"start\") String start,","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"                                  @JsonProperty(\"end\") String end,","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"                                  @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"                                  @JsonProperty(\"priority\") String priorityTag) {","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        this.patientName \u003d patientName;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        this.priorityTag \u003d priorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        patientName \u003d String.valueOf(source.getPatientName());","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"        start \u003d dateTimeToString(source.getStartTime());","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"        end \u003d dateTimeToString(source.getEndTime());","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"        description \u003d source.getAppointmentDescription().value;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"        priorityTag \u003d String.valueOf(source.getPriorityTag());","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"    public Appointment toModelType(AddressBook addressBook) throws IllegalValueException {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"        if (patientName \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"        if (!Name.isValidName(patientName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        if (!addressBook.hasPerson(new Name(patientName))) {","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(MESSAGE_PATIENT_DOES_NOT_EXIST);","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"        final Person patient \u003d addressBook","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"                .getPersonList().stream().filter(person -\u003e person.getName().fullName.equals(patientName))","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"                .collect(Collectors.toList()).get(0);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        if (start \u003d\u003d null || end \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, AppointmentTime.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"        LocalDateTime startDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"        LocalDateTime endDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"            startDateTime \u003d parseDateTime(start);","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"            endDateTime \u003d parseDateTime(end);","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(AppointmentTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"        if (!AppointmentTime.isValidAppointmentTime(startDateTime, endDateTime)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(AppointmentTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"        final AppointmentTime modelAppointmentTime \u003d new AppointmentTime(startDateTime, endDateTime);","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, AppointmentDescription.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"        if (!AppointmentDescription.isValidAppointmentDescription(description)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(AppointmentDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"        final AppointmentDescription modelAppointmentDescription \u003d new AppointmentDescription(description);","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"        if (priorityTag \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, PriorityTag.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"        if (!PriorityTag.isValidPriorityTag(priorityTag)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"            throw new IllegalValueException(PriorityTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"        final PriorityTag modelPriorityTag \u003d new PriorityTag(priorityTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"trgao"},"content":"        return new Appointment(","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"                patient, modelAppointmentTime, modelAppointmentDescription, modelPriorityTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"billieboy7":16,"trgao":106}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"    private final String birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    private final String gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"            @JsonProperty(\"birthdate\") String birthdate, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"        this.birthdate \u003d birthdate;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"        birthdate \u003d source.getBirthdate().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"        if (birthdate \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthdate.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"        if (!Birthdate.isValidBirthdate(birthdate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"            throw new IllegalValueException(Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"        final Birthdate modelBirthdate \u003d new Birthdate(birthdate);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"trgao"},"content":"        return new Person(modelName, modelGender, modelBirthdate, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":106,"trgao":29}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointments list contains duplicate appointment(s).\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and appointments.","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"                                       @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        appointments.addAll(","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"                source.getAppointmentList().stream().map(JsonAdaptedAppointment::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType(addressBook);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"            if (addressBook.hasAppointment(appointment)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"            addressBook.addAppointment(appointment);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":58,"trgao":18}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    public final Appointment appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    private Label patientName;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"    private Label id;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"    private Label appointmentTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    private Label appointmentDescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"    private Label priorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"    public AppointmentCard(Appointment appointment, int displayedIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"        super(FXML);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"        patientName.setText(\"PATIENT: \" + appointment.getPatientName());","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        appointmentTime.setText(appointment.getAppointmentTime().toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        appointmentDescription.setText(appointment.getAppointmentDescription().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        PriorityTag appointmentPriorityTag \u003d appointment.getPriorityTag();","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        priorityTag.setText(appointmentPriorityTag.priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        priorityTag.getStyleClass().add(appointmentPriorityTag.priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"billieboy7":9,"trgao":48}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        super(FXML);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"                setText(null);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"            } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"trgao":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-t08-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"trgao":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import javafx.animation.Animation;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import javafx.scene.control.Menu;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    // Dark/Light mode","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"    private boolean isLightMode;","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"    private Menu currentTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"    private Button darkLightModeButton;","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"        isLightMode \u003d logic.getGuiSettings().getIsLightMode();","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"        setDarkLightMode();","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"        initClock();","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"    private void initClock() {","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"        Timeline clock \u003d new Timeline(new KeyFrame(Duration.ZERO, e -\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"            currentTime.setText(LocalDateTime.now().format(formatter));","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"        }), new KeyFrame(Duration.seconds(1)));","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"        clock.setCycleCount(Animation.INDEFINITE);","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"        clock.play();","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"trgao"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"trgao"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"trgao"},"content":"     * Sets the dark/light mode based on {@code isLightMode}.","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"trgao"},"content":"    private void setDarkLightMode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"trgao"},"content":"        if (isLightMode) {","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"trgao"},"content":"            darkLightModeButton.setText(\"Dark Mode\");","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"trgao"},"content":"            primaryStage","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"trgao"},"content":"                    .getScene()","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"trgao"},"content":"                    .getStylesheets()","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"trgao"},"content":"                    .add(getClass().getResource(\"/view/LightTheme.css\").toExternalForm());","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"trgao"},"content":"        } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"trgao"},"content":"            darkLightModeButton.setText(\"Light Mode\");","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"trgao"},"content":"            primaryStage","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"trgao"},"content":"                    .getScene()","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"trgao"},"content":"                    .getStylesheets()","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"trgao"},"content":"                    .remove(getClass().getResource(\"/view/LightTheme.css\").toExternalForm());","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":217,"author":{"gitId":"trgao"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY(), isLightMode);","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":223,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"trgao"},"content":"     * Changes the application\u0027s dark/light mode.","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"trgao"},"content":"    private void handleDarkLightMode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"trgao"},"content":"        isLightMode \u003d !isLightMode;","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"trgao"},"content":"        setDarkLightMode();","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"trgao"},"content":"            if (commandResult.isModeToggle()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"trgao"},"content":"                handleDarkLightMode();","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":193,"trgao":69}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"    private Label gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    private Label birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"    private Label address;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        phone.setText(\"PHONE: \" + person.getPhone().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"        email.setText(\"EMAIL: \" + person.getEmail().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"        birthdate.setText(\"BIRTHDATE: \" + person.getBirthdate().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"        gender.setText(\"GENDER: \" + person.getGender().toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"        address.setText(\"ADDRESS: \" + person.getAddress().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":55,"trgao":10}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/mediflowr.png\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":87,"trgao":1}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"                \u003cLabel fx:id\u003d\"appointmentDescription\" text\u003d\"\\$appointmentDescription\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"            \u003cLabel fx:id\u003d\"priorityTag\" text\u003d\"\\$priorityTag\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"            \u003cLabel fx:id\u003d\"patientName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$patientName\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"            \u003cLabel fx:id\u003d\"appointmentTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointmentTime\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"billieboy7":2,"trgao":33}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"trgao":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"trgao"},"content":".header_label {","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 25px;","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"trgao"},"content":"#menuBar, .menu-bar {","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"trgao"},"content":".menu:disabled {","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"trgao"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"trgao"},"content":"#darkLightModeButton {","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":327,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":328,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":329,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-31"},{"lineNumber":330,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":331,"author":{"gitId":"trgao"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-31"},{"lineNumber":332,"author":{"gitId":"trgao"},"content":"    -fx-padding: 3 3 3 3;","lastModifiedDate":"2023-10-31"},{"lineNumber":333,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":334,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":335,"author":{"gitId":"trgao"},"content":"#darkLightModeButton:hover {","lastModifiedDate":"2023-10-31"},{"lineNumber":336,"author":{"gitId":"trgao"},"content":"    -fx-background-color: #0099cd;","lastModifiedDate":"2023-10-31"},{"lineNumber":337,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":338,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"trgao"},"content":"    -fx-border-color: #000000 #000000 #000000 #000000;","lastModifiedDate":"2023-10-31"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":351,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-25"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"billieboy7"},"content":"#tags, #priorityTag {","lastModifiedDate":"2023-10-31"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2023-10-25"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":378,"author":{"gitId":"billieboy7"},"content":"#priorityTag {","lastModifiedDate":"2023-10-31"},{"lineNumber":379,"author":{"gitId":"billieboy7"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":380,"author":{"gitId":"billieboy7"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-31"},{"lineNumber":381,"author":{"gitId":"billieboy7"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-31"},{"lineNumber":382,"author":{"gitId":"billieboy7"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-31"},{"lineNumber":383,"author":{"gitId":"billieboy7"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2023-10-31"},{"lineNumber":384,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":385,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":386,"author":{"gitId":"billieboy7"},"content":".high {","lastModifiedDate":"2023-10-31"},{"lineNumber":387,"author":{"gitId":"billieboy7"},"content":"    -fx-background-color: red;","lastModifiedDate":"2023-10-31"},{"lineNumber":388,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":389,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":390,"author":{"gitId":"billieboy7"},"content":".medium {","lastModifiedDate":"2023-10-31"},{"lineNumber":391,"author":{"gitId":"billieboy7"},"content":"    -fx-background-color: orange;","lastModifiedDate":"2023-10-31"},{"lineNumber":392,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":393,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":394,"author":{"gitId":"billieboy7"},"content":".low {","lastModifiedDate":"2023-10-31"},{"lineNumber":395,"author":{"gitId":"billieboy7"},"content":"    -fx-background-color: green;","lastModifiedDate":"2023-10-31"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"billieboy7":20,"-":346,"trgao":30}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":".background {","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":".label {","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":".label-bright {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":".label-header {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":".text-field {","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":".tab-pane {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":".table-view {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"    -fx-border-color:","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"        transparent","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"        transparent","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"        transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":".split-pane {","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":".list-view {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":".list-cell {","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":".list-cell:empty {","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"    -fx-background: #ededeb;","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":".list-cell:filled {","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"    -fx-background-color: #ededeb;","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"trgao"},"content":".list-cell .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"trgao"},"content":".cell_big_label {","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"trgao"},"content":".cell_small_label {","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"trgao"},"content":".header_label {","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 25px;","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"trgao"},"content":".stack-pane {","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"trgao"},"content":"     -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"trgao"},"content":".pane-with-border {","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"trgao"},"content":"     -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"trgao"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"trgao"},"content":"     -fx-border-width: 1px;","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"trgao"},"content":".status-bar {","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(white, 30%);","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"trgao"},"content":".result-display {","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"trgao"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"trgao"},"content":".result-display .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"trgao"},"content":".status-bar .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"trgao"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"trgao"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"trgao"},"content":".status-bar-with-border {","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"trgao"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"trgao"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"trgao"},"content":".grid-pane {","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"trgao"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"trgao"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"trgao"},"content":".context-menu {","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(white, 50%);","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"trgao"},"content":".context-menu .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"trgao"},"content":"#menuBar, .menu-bar {","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"trgao"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"trgao"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"trgao"},"content":".menu:hover {","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"trgao"},"content":"    -fx-background-color: lightgrey;","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"trgao"},"content":".menu:showing {","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"trgao"},"content":"    -fx-background-color: lightgrey;","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"trgao"},"content":".menu-item {","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"trgao"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"trgao"},"content":".menu-item:hover {","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"trgao"},"content":"    -fx-background-color: lightgrey;","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"trgao"},"content":".menu-item:focused {","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"trgao"},"content":"    -fx-background-color: lightgrey;","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"trgao"},"content":".menu:disabled {","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"trgao"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"trgao"},"content":".menu .left-container {","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"trgao"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"trgao"},"content":"/*","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"trgao"},"content":" * Metro style Push Button","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"trgao"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"trgao"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"trgao"},"content":".button {","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"trgao"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"trgao"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"trgao"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"trgao"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"trgao"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"trgao"},"content":".button:hover {","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"trgao"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"trgao"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"trgao"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"trgao"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":265,"author":{"gitId":"trgao"},"content":".button:focused {","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"trgao"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"trgao"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"trgao"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"trgao"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"trgao"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"trgao"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"trgao"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-31"},{"lineNumber":276,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"trgao"},"content":".button:default {","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"trgao"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"trgao"},"content":".button:default:hover {","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"trgao"},"content":".dialog-pane {","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"trgao"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"trgao"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"trgao"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"trgao"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"trgao"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"trgao"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":305,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":306,"author":{"gitId":"trgao"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-10-31"},{"lineNumber":307,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-31"},{"lineNumber":308,"author":{"gitId":"trgao"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-10-31"},{"lineNumber":309,"author":{"gitId":"trgao"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":310,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":311,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":312,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":313,"author":{"gitId":"trgao"},"content":".scroll-bar {","lastModifiedDate":"2023-10-31"},{"lineNumber":314,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":315,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":316,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":317,"author":{"gitId":"trgao"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-31"},{"lineNumber":318,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-10-31"},{"lineNumber":319,"author":{"gitId":"trgao"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-10-31"},{"lineNumber":320,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"trgao"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-10-31"},{"lineNumber":323,"author":{"gitId":"trgao"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-31"},{"lineNumber":324,"author":{"gitId":"trgao"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":325,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":327,"author":{"gitId":"trgao"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-31"},{"lineNumber":328,"author":{"gitId":"trgao"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-10-31"},{"lineNumber":329,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":330,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":331,"author":{"gitId":"trgao"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-31"},{"lineNumber":332,"author":{"gitId":"trgao"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-31"},{"lineNumber":333,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":334,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":335,"author":{"gitId":"trgao"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-31"},{"lineNumber":336,"author":{"gitId":"trgao"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":337,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":338,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"trgao"},"content":"#patientsLabel, #appointmentsLabel {","lastModifiedDate":"2023-10-31"},{"lineNumber":340,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":341,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":342,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":343,"author":{"gitId":"trgao"},"content":"#cardPane {","lastModifiedDate":"2023-10-31"},{"lineNumber":344,"author":{"gitId":"trgao"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":345,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":346,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":347,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":348,"author":{"gitId":"trgao"},"content":"#darkLightModeButton {","lastModifiedDate":"2023-10-31"},{"lineNumber":349,"author":{"gitId":"trgao"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":350,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":351,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":352,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":353,"author":{"gitId":"trgao"},"content":"#darkLightModeButton:hover {","lastModifiedDate":"2023-10-31"},{"lineNumber":354,"author":{"gitId":"trgao"},"content":"    -fx-background-color: lightgrey;","lastModifiedDate":"2023-10-31"},{"lineNumber":355,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":356,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":357,"author":{"gitId":"trgao"},"content":"#personListView, #appointmentListView {","lastModifiedDate":"2023-10-31"},{"lineNumber":358,"author":{"gitId":"trgao"},"content":"    -fx-background-color: #ededeb;","lastModifiedDate":"2023-10-31"},{"lineNumber":359,"author":{"gitId":"trgao"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":360,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":361,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":362,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":363,"author":{"gitId":"trgao"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-10-31"},{"lineNumber":364,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-10-31"},{"lineNumber":365,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-10-31"},{"lineNumber":366,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":367,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":368,"author":{"gitId":"trgao"},"content":"#commandTextField {","lastModifiedDate":"2023-10-31"},{"lineNumber":369,"author":{"gitId":"trgao"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2023-10-31"},{"lineNumber":370,"author":{"gitId":"trgao"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":371,"author":{"gitId":"trgao"},"content":"    -fx-border-color: #383838 #383838 #383838 #383838;","lastModifiedDate":"2023-10-31"},{"lineNumber":372,"author":{"gitId":"trgao"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":373,"author":{"gitId":"trgao"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":374,"author":{"gitId":"trgao"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-31"},{"lineNumber":375,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":376,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":377,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":378,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":379,"author":{"gitId":"trgao"},"content":"#filterField, #personListPanel, #appointmentListPanel {","lastModifiedDate":"2023-10-31"},{"lineNumber":380,"author":{"gitId":"trgao"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-31"},{"lineNumber":381,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":382,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":383,"author":{"gitId":"trgao"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-10-31"},{"lineNumber":384,"author":{"gitId":"trgao"},"content":"    -fx-background-color: transparent, white, transparent, white;","lastModifiedDate":"2023-10-31"},{"lineNumber":385,"author":{"gitId":"trgao"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":386,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":387,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":388,"author":{"gitId":"trgao"},"content":"#tags {","lastModifiedDate":"2023-10-31"},{"lineNumber":389,"author":{"gitId":"trgao"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-31"},{"lineNumber":390,"author":{"gitId":"trgao"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-31"},{"lineNumber":391,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":392,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":393,"author":{"gitId":"trgao"},"content":"#tags .label {","lastModifiedDate":"2023-10-31"},{"lineNumber":394,"author":{"gitId":"trgao"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-31"},{"lineNumber":395,"author":{"gitId":"trgao"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-10-31"},{"lineNumber":396,"author":{"gitId":"trgao"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-31"},{"lineNumber":397,"author":{"gitId":"trgao"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-31"},{"lineNumber":398,"author":{"gitId":"trgao"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-31"},{"lineNumber":399,"author":{"gitId":"trgao"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2023-10-31"},{"lineNumber":400,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"trgao":400}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"         title\u003d\"MediFlowR\" minWidth\u003d\"900\" minHeight\u003d\"700\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    \u003cImage url\u003d\"@/images/mediflowr.png\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        \u003cHBox fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"          \u003cMenuBar\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"            \u003cMenu fx:id\u003d\"currentTime\" disable\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"          \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"          \u003cButton fx:id\u003d\"darkLightModeButton\" onAction\u003d\"#handleDarkLightMode\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        \u003cHBox minWidth\u003d\"700\" prefWidth\u003d\"700\" prefHeight\u003d\"10000\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"350\" prefWidth\u003d\"350\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"            \u003cLabel fx:id\u003d\"patientsLabel\" text\u003d\"Patients\" styleClass\u003d\"header_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"          \u003cVBox fx:id\u003d\"appointmentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"350\" prefWidth\u003d\"350\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"            \u003cLabel fx:id\u003d\"appointmentsLabel\" text\u003d\"Appointments\" styleClass\u003d\"header_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"            \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"                   minHeight\u003d\"150\" prefHeight\u003d\"150\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":49,"trgao":30}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"      \u003cLabel fx:id\u003d\"birthdate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthdate\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":35,"trgao":3}},{"path":"src/test/java/seedu/address/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2019-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"                + guiSettings.getWindowCoordinates() + \", isLightMode\u003d\" + guiSettings.getIsLightMode() + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"-":15,"trgao":1}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"        assertNotNull(AppUtil.getImage(\"/images/mediflowr.png\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"trgao":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.personcommands.PatientsCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"        String patientsCommand \u003d PatientsCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"        assertCommandSuccess(patientsCommand, PatientsCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"trgao"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + GENDER_DESC_AMY + BIRTHDATE_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"trgao"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"dinde2004"},"content":"        expectedModel.updateUserHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dinde2004":1,"licongshen12":1,"-":169,"trgao":7}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"        ClearCommand firstClearCommand \u003d new ClearCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        ClearCommand secondClearCommand \u003d new ClearCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstClearCommand.equals(firstClearCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstClearCommand.equals(secondClearCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstClearCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstClearCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"licongshen12":19,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        // different modeToggle value -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"        // different modeToggle value -\u003e returns different hashcode","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \", modeToggle\u003d\" + commandResult.isModeToggle() + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":57,"trgao":12}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"    public static final String VALID_GENDER_AMY \u003d \"FEMALE\";","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    public static final String VALID_GENDER_BOB \u003d \"MALE\";","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    public static final String VALID_BIRTHDATE_AMY \u003d \"2001/10/20\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"    public static final String VALID_BIRTHDATE_BOB \u003d \"2002/10/21\";","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    public static final String VALID_TAG_FEVER \u003d \"fever\";","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"    public static final String VALID_TAG_FLU \u003d \"flu\";","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"    public static final String INVALID_TAG_COVID \u003d \"COVID-19\";","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"    public static final String INVALID_TAG_HEPATITIS \u003d \"Hepatitis-B\";","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"    public static final String VALID_APPOINTMENT_START \u003d \"2023/09/10 10:00\";","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"    public static final String VALID_APPOINTMENT_END \u003d \"2023/09/10 11:00\";","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"    public static final String VALID_APPOINTMENT_DESCRIPTION \u003d \"Checkup Appointment\";","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"    public static final String VALID_APPOINTMENT_PRIORITY \u003d \"medium\";","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"    public static final String BIRTHDATE_DESC_AMY \u003d \" \" + PREFIX_BIRTHDATE + VALID_BIRTHDATE_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"    public static final String BIRTHDATE_DESC_BOB \u003d \" \" + PREFIX_BIRTHDATE + VALID_BIRTHDATE_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"    public static final String TAG_DESC_ONE_ILLNESS \u003d \" \" + PREFIX_ILLNESSES + VALID_TAG_FLU;","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"    public static final String TAG_DESC_TWO_ILLNESSES \u003d \" \" + PREFIX_ILLNESSES + VALID_TAG_FEVER + \", \" + VALID_TAG_FLU;","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kwangthiag"},"content":"    public static final String TAG_DESC_DUPLICATE_ILLNESS \u003d \" \" + PREFIX_ILLNESSES + VALID_TAG_FLU + \", \"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kwangthiag"},"content":"            + VALID_TAG_FLU;","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"TEST\"; // only MALE or FEMALE allowed","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"    public static final String INVALID_BIRTHDATE_DESC \u003d \" \" + PREFIX_BIRTHDATE + \"10-20-2001\"; // only MM/DD/YYYY format","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"kwangthiag"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_ILLNESSES + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"kwangthiag"},"content":"    public static final String INVALID_TAG_DESC_TWO_INVALID_ILLNESSES \u003d \" \" + PREFIX_ILLNESSES + INVALID_TAG_COVID","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kwangthiag"},"content":"            + \", \" + INVALID_TAG_HEPATITIS;","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kwangthiag"},"content":"    public static final String TAG_DESC_ONE_INVALID_ONE_VALID_ILLNESS \u003d \" \" + PREFIX_ILLNESSES + INVALID_TAG_COVID","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kwangthiag"},"content":"            + \", \" + VALID_TAG_FLU;","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"kwangthiag"},"content":"    public static final String TYPICAL_ILLNESS_1 \u003d \"flu\";","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kwangthiag"},"content":"    public static final String TYPICAL_ILLNESS_2 \u003d \"fever\";","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kwangthiag"},"content":"    public static final String TYPICAL_ILLNESS_3 \u003d \"COVID19\";","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"    public static final String TYPICAL_ILLNESS_4 \u003d \"APPENDICITIS\";","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"    public static final String TYPICAL_ILLNESS_5 \u003d \"SCHIZOPHRENIA\";","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"    public static final String TYPICAL_ILLNESS_6 \u003d \"HEADACHE\";","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"kwangthiag"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"kwangthiag"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"kwangthiag"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"kwangthiag"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"kwangthiag"},"content":"    public static void showAppointmentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredAppointmentList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"kwangthiag"},"content":"        Appointment appointment \u003d model.getFilteredAppointmentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"trgao"},"content":"        model.updateFilteredAppointmentList(x -\u003e x.equals(appointment));","lastModifiedDate":"2023-11-06"},{"lineNumber":170,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"kwangthiag"},"content":"        assertEquals(1, model.getFilteredAppointmentList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"kwangthiag"},"content":"     * Creates new TypicalIllnessSet","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"kwangthiag"},"content":"    public static Set\u003cTag\u003e createTypicalIllnessSet() {","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"kwangthiag"},"content":"        set.add(new Tag(VALID_TAG_FLU));","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"kwangthiag"},"content":"        return set;","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"kwangthiag"},"content":"     * Creates new TypicalIllnessesSet","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"kwangthiag"},"content":"    public static Set\u003cTag\u003e createTypicalIllnessesSet() {","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"kwangthiag"},"content":"        set.add(new Tag(VALID_TAG_FLU));","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"kwangthiag"},"content":"        set.add(new Tag(VALID_TAG_FEVER));","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"kwangthiag"},"content":"        return set;","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kwangthiag":54,"billieboy7":3,"licongshen12":1,"-":116,"trgao":19}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"        ExitCommand firstExitCommand \u003d new ExitCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        ExitCommand secondExitCommand \u003d new ExitCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstExitCommand.equals(firstExitCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstExitCommand.equals(secondExitCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstExitCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstExitCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"licongshen12":20,"-":19,"trgao":1}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"        HelpCommand firstHelpCommand \u003d new HelpCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        HelpCommand secondHelpCommand \u003d new HelpCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstHelpCommand.equals(firstHelpCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstHelpCommand.equals(secondHelpCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstHelpCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstHelpCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"licongshen12":20,"-":19,"trgao":1}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT1;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT2;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        model.addAppointment(APPOINTMENT1);","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        model.addAppointment(APPOINTMENT2);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"dinde2004"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"        ListCommand firstListCommand \u003d new ListCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"        ListCommand secondListCommand \u003d new ListCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstListCommand.equals(firstListCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstListCommand.equals(secondListCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstListCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstListCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"dinde2004":1,"licongshen12":20,"-":38,"trgao":7}},{"path":"src/test/java/seedu/address/logic/commands/ModeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.ModeCommand.MESSAGE_TOGGLED;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"public class ModeCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    public void execute_toggleMode_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_TOGGLED, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"        assertCommandSuccess(new ModeCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"        ModeCommand firstModeCommand \u003d new ModeCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        ModeCommand secondModeCommand \u003d new ModeCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstModeCommand.equals(firstModeCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstModeCommand.equals(secondModeCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstModeCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstModeCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"licongshen12":20,"trgao":20}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dinde2004"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"dinde2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"dinde2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"dinde2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"dinde2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"dinde2004"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"dinde2004"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"dinde2004"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"dinde2004"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"dinde2004"},"content":"public class RedoCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"dinde2004"},"content":"    // PATIENT COMMANDS","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"dinde2004"},"content":"    private static final String SAMPLE_ADD_COMMAND_1 \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"dinde2004"},"content":"            \"add name\u003dJohn Doe gender\u003dMALE birthdate\u003d2000/10/20 phone\u003d98765432 email\u003djohnd@example.com address\u003d311, \"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"dinde2004"},"content":"                    + \"Clementi Ave 2, #02-25 illness\u003dfever\";","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"dinde2004"},"content":"    private static final String SAMPLE_ADD_COMMAND_2 \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"dinde2004"},"content":"            \"add name\u003dJerry gender\u003dMALE birthdate\u003d2000/11/11 phone\u003d88888888 email\u003djerry@example.com address\u003d113, \"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"dinde2004"},"content":"                    + \"Clementi Ave 1999, #22-54 illness\u003dflu\";","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"dinde2004"},"content":"    // APPOINTMENT COMMANDS","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"dinde2004"},"content":"    private static final String SAMPLE_SCHEDULE_COMMAND_1 \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"dinde2004"},"content":"            \"schedule patient\u003dJohn Doe start\u003d2023/10/20 12:00 end\u003d2023/10/20 13:59 description\u003dtest priority\u003dhigh\";","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"dinde2004"},"content":"    // OTHER COMMANDS","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"dinde2004"},"content":"    private static final String SAMPLE_UNDO_COMMAND \u003d \"undo\";","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"dinde2004"},"content":"    private static final String SAMPLE_REDO_COMMAND \u003d \"redo\";","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"dinde2004"},"content":"    @TempDir","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"dinde2004"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"dinde2004"},"content":"    private Logic logic;","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"dinde2004"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"dinde2004"},"content":"    private Storage storage;","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"dinde2004"},"content":"    private Command redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"dinde2004"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"dinde2004"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"dinde2004"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"dinde2004"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"dinde2004"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"dinde2004"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"dinde2004"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"dinde2004"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"dinde2004"},"content":"    public void execute_redoPatientCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_UNDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"dinde2004"},"content":"        expectedModel.redoHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d RedoCommand.MESSAGE_REDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(redoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"dinde2004"},"content":"    public void execute_redoAppointmentCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_UNDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"dinde2004"},"content":"        expectedModel.redoHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d RedoCommand.MESSAGE_REDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(redoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"dinde2004"},"content":"    public void execute_redoAfterNoUndoCommand_throwsCommandException() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"dinde2004"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_NO_COMMAND_TO_REDO_ERROR);","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"dinde2004"},"content":"    public void execute_multipleRedoCommands_success() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_2);","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_UNDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_UNDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d RedoCommand.MESSAGE_REDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"dinde2004"},"content":"        expectedModel.redoHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(redoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"dinde2004"},"content":"        expectedModel.redoHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(redoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"dinde2004"},"content":"    public void execute_moreRedoCommandsThanUndoCommands_throwsCommandException()","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"dinde2004"},"content":"            throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_2);","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_UNDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_UNDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_REDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_REDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"dinde2004"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_NO_COMMAND_TO_REDO_ERROR);","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"dinde2004"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"dinde2004":121}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dinde2004"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"dinde2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"dinde2004"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"dinde2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"dinde2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"dinde2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"dinde2004"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"dinde2004"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"dinde2004"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"dinde2004"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"dinde2004"},"content":"public class UndoCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    //Static commands used for testing","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~PATIENT COMMANDS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"dinde2004"},"content":"    private static final String SAMPLE_ADD_COMMAND_1 \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"            \"add name\u003dJohn Doe gender\u003dMALE birthdate\u003d2000/10/20 phone\u003d98765432 \"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"                    + \"email\u003djohnd@example.com address\u003d311, Clementi Ave 2, #02-25 illnesses\u003dflu, fever\";","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"dinde2004"},"content":"    private static final String SAMPLE_ADD_COMMAND_2 \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"            \"add name\u003dJane Doe gender\u003dFEMALE birthdate\u003d2003/02/20 phone\u003d98765432 \"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"                    + \"email\u003djaned@example.com address\u003d311, Bedok Ave 3, #04-48 illnesses\u003dfever\";","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"    private static final String SAMPLE_DELETE_COMMAND \u003d \"delete 1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"    private static final String SAMPLE_EDIT_COMMAND \u003d \"edit 1 phone\u003d91272464\";","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"    private static final String SAMPLE_FIND_COMMAND \u003d \"find-p john\";","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"    private static final String SAMPLE_LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"    private static final String SAMPLE_DIAGNOSE_COMMAND \u003d \"diagnose 1 illnesses\u003dCovid19, Covid20\";","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"    private static final String SAMPLE_UNDIAGNOSE_COMMAND \u003d \"undiagnose 1 illnesses\u003dflu, fever\";","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~APPOINTMENT COMMANDS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"    private static final String SAMPLE_APPOINTMENTS_COMMAND \u003d \"appointments\";","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    private static final String SAMPLE_CANCEL_COMMAND \u003d \"cancel 1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"    private static final String SAMPLE_RESCHEDULE_COMMAND \u003d \"reschedule 1 start\u003d2023/05/02 09:00 \"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"            + \"end\u003d2023/05/02 11:00 \";","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"    private static final String SAMPLE_SCHEDULE_COMMAND \u003d \"schedule patient\u003dJohn Doe \"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"            + \"start\u003d2023/10/20 12:00 end\u003d2023/10/20 13:00 \"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"            + \"description\u003dFollow up on Chest X-Ray \"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"            + \"priority\u003dhigh\";","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"    private static final String SAMPLE_SCHEDULE_ANCIENT_APPOINTMENT_COMMAND \u003d \"schedule patient\u003dJohn Doe \"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"            + \"start\u003d1800/10/20 12:00 end\u003d1800/10/20 13:00 \"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"            + \"description\u003dInjuries from getting stoned \"","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"            + \"priority\u003dmedium\";","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"    private static final String SAMPLE_TODAY_COMMAND \u003d \"today\";","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"    private static final String SAMPLE_UPCOMING_COMMAND \u003d \"today\";","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"    private static final String SAMPLE_FIND_PATIENT_APPOINTMENT_COMMAND \u003d \"find-a john\";","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"kwangthiag"},"content":"    private static final String SAMPLE_SORT_COMMAND \u003d \"sort-a asc by\u003dtime\";","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"licongshen12"},"content":"    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~MISC COMMANDS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"dinde2004"},"content":"    private static final String SAMPLE_UNDO_COMMAND \u003d \"undo\";","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"dinde2004"},"content":"    private static final String SAMPLE_REDO_COMMAND \u003d \"redo\";","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"dinde2004"},"content":"    @TempDir","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"dinde2004"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"dinde2004"},"content":"    private Storage storage;","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"dinde2004"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"    private Logic logic;","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"dinde2004"},"content":"    private Command undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"     * Initializes a dummy ModelManager instance before each test.","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"dinde2004"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"dinde2004"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"dinde2004"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"dinde2004"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"dinde2004"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"dinde2004"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"dinde2004"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"dinde2004"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~General Testing of UndoCommand~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"     * Test basic undo functionality","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoPatientCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"dinde2004"},"content":"        expectedModel.undoHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoAppointmentCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"dinde2004"},"content":"        expectedModel.undoHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"dinde2004"},"content":"     * Test undo after running multiple commands","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoAfterMultipleCommands_success() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_2);","lastModifiedDate":"2023-10-29"},{"lineNumber":135,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"dinde2004"},"content":"        expectedModel.undoHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":139,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"dinde2004"},"content":"     * Test multiple undo after running multiple commands","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"dinde2004"},"content":"    public void execute_multipleUndosAfterMultipleCommands_success() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_2);","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":154,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"dinde2004"},"content":"        expectedModel.undoHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"dinde2004"},"content":"        expectedModel.undoHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":165,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":166,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoAfterNoCommand_throwsCommandException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":167,"author":{"gitId":"dinde2004"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_NO_COMMAND_TO_UNDO_ERROR);","lastModifiedDate":"2023-10-29"},{"lineNumber":168,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":169,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":170,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"dinde2004"},"content":"     * Test multiple undo after running a single command","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"dinde2004"},"content":"    public void execute_multipleUndosAfterOneCommand_throwsCommandException() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_2);","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_UNDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":177,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":178,"author":{"gitId":"dinde2004"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_NO_COMMAND_TO_UNDO_ERROR);","lastModifiedDate":"2023-10-29"},{"lineNumber":179,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":180,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":181,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":182,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoAfterRedoCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":183,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-29"},{"lineNumber":184,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_UNDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":185,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_REDO_COMMAND);","lastModifiedDate":"2023-10-29"},{"lineNumber":186,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":187,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-10-29"},{"lineNumber":188,"author":{"gitId":"dinde2004"},"content":"        expectedModel.undoHistory();","lastModifiedDate":"2023-10-29"},{"lineNumber":189,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":190,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-10-29"},{"lineNumber":191,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":192,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":193,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":194,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"licongshen12"},"content":"    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Integration Testing of UndoCommand with patient commands~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"dinde2004"},"content":"     * Checks if a person is in the person list or not.","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"dinde2004"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"dinde2004"},"content":"     * @param model Model to be checked.","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"dinde2004"},"content":"     * @param name Name to be checked.","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"dinde2004"},"content":"     * @return true if the person list of model contains the name of the person we want to check, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"dinde2004"},"content":"    public boolean containsPerson(Model model, String name) {","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"licongshen12"},"content":"        boolean containsSamplePatient \u003d false;","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"licongshen12"},"content":"        for (Person patient : model.getAddressBook().getPersonList()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"dinde2004"},"content":"            if (patient.getName().toString().equals(name)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"licongshen12"},"content":"                containsSamplePatient \u003d true;","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"dinde2004"},"content":"        return containsSamplePatient;","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"dinde2004"},"content":"     * Checks if a person with a phone number is in the person list or not.","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"dinde2004"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"dinde2004"},"content":"     * @param model Model to be checked.","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"dinde2004"},"content":"     * @param name Name to be checked.","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"dinde2004"},"content":"     * @param phoneNumber Phone number belongs to that person.","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"dinde2004"},"content":"     * @return true if the person list of model contains the name with correct phone number, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"dinde2004"},"content":"    public boolean containsPersonWithPhoneNumber(Model model, String name, String phoneNumber) {","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"dinde2004"},"content":"        for (Person person : model.getAddressBook().getPersonList()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"dinde2004"},"content":"            if (person.getName().toString().equals(name)","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"dinde2004"},"content":"                    \u0026\u0026 person.getPhone().toString().equals(phoneNumber)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"dinde2004"},"content":"                return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"dinde2004"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"dinde2004"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"dinde2004"},"content":"        return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"dinde2004"},"content":"     * Checks if a person with specified illnesses is in the person list or not.","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"dinde2004"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"dinde2004"},"content":"     * @param model Model to be checked.","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"dinde2004"},"content":"     * @param name Name to be checked.","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"dinde2004"},"content":"     * @param illnesses Illnesses belong to that person.","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"dinde2004"},"content":"     * @return true if the person list of model contains the name with correct illnesses, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"dinde2004"},"content":"    public boolean containsPersonWithIllnesses(Model model, String name, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"dinde2004"},"content":"        for (Person person : model.getAddressBook().getPersonList()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"dinde2004"},"content":"            if (person.getName().toString().equals(name)","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"dinde2004"},"content":"                    \u0026\u0026 person.getTags().equals(illnesses)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"dinde2004"},"content":"                return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"licongshen12"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"dinde2004"},"content":"        return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"dinde2004"},"content":"     * Test undo functionality with add command.","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"dinde2004"},"content":"     * Add command can be undone","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoAddCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"licongshen12"},"content":"        model.undoHistory();","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"dinde2004"},"content":"        assertFalse(containsPerson(model, \"John Doe\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"dinde2004"},"content":"     * Test undo functionality with delete command.","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"dinde2004"},"content":"     * Delete command can be undone","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoDeleteCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_DELETE_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"dinde2004"},"content":"        model.undoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"dinde2004"},"content":"        assertTrue(containsPerson(model, \"John Doe\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"dinde2004"},"content":"     * Test undo functionality with edit command.","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"dinde2004"},"content":"     * Edit command can be undone","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoEditCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_EDIT_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"dinde2004"},"content":"        model.undoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":288,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"dinde2004"},"content":"        assertTrue(containsPersonWithPhoneNumber(model, \"John Doe\", \"98765432\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":290,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"licongshen12"},"content":"     * Test undo functionality with find command.","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"licongshen12"},"content":"     * Find command cannot be undone","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoFindCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"dinde2004"},"content":"        expectedModel.undoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":302,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_FIND_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":305,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":307,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":308,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":309,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":310,"author":{"gitId":"trgao"},"content":"     * Test undo functionality with Patients command.","lastModifiedDate":"2023-10-31"},{"lineNumber":311,"author":{"gitId":"trgao"},"content":"     * Patients command cannot be undone","lastModifiedDate":"2023-10-31"},{"lineNumber":312,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoListCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":315,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-11-02"},{"lineNumber":316,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":317,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":318,"author":{"gitId":"dinde2004"},"content":"        expectedModel.undoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":319,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":320,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_LIST_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":321,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":327,"author":{"gitId":"kwangthiag"},"content":"     * Test undo functionality with Diagnose command.","lastModifiedDate":"2023-10-28"},{"lineNumber":328,"author":{"gitId":"kwangthiag"},"content":"     * Diagnose command can be undone","lastModifiedDate":"2023-10-28"},{"lineNumber":329,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":330,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":331,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoDiagnoseCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":332,"author":{"gitId":"kwangthiag"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-28"},{"lineNumber":333,"author":{"gitId":"dinde2004"},"content":"        Set\u003cTag\u003e tags \u003d model.getAddressBook().getPersonList().get(0).getTags();","lastModifiedDate":"2023-11-02"},{"lineNumber":334,"author":{"gitId":"kwangthiag"},"content":"        logic.execute(SAMPLE_DIAGNOSE_COMMAND);","lastModifiedDate":"2023-10-28"},{"lineNumber":335,"author":{"gitId":"kwangthiag"},"content":"        model.undoHistory();","lastModifiedDate":"2023-10-28"},{"lineNumber":336,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":337,"author":{"gitId":"dinde2004"},"content":"        assertTrue(containsPersonWithIllnesses(model, \"John Doe\", tags));","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":339,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":340,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":341,"author":{"gitId":"kwangthiag"},"content":"     * Test undo functionality with Undiagnose command.","lastModifiedDate":"2023-10-28"},{"lineNumber":342,"author":{"gitId":"kwangthiag"},"content":"     * Undiagnose command can be undone","lastModifiedDate":"2023-10-28"},{"lineNumber":343,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":344,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":345,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoUndiagnoseCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":346,"author":{"gitId":"kwangthiag"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-28"},{"lineNumber":347,"author":{"gitId":"dinde2004"},"content":"        Set\u003cTag\u003e tags \u003d model.getAddressBook().getPersonList().get(0).getTags();","lastModifiedDate":"2023-11-02"},{"lineNumber":348,"author":{"gitId":"kwangthiag"},"content":"        logic.execute(SAMPLE_UNDIAGNOSE_COMMAND);","lastModifiedDate":"2023-10-28"},{"lineNumber":349,"author":{"gitId":"kwangthiag"},"content":"        model.undoHistory();","lastModifiedDate":"2023-10-28"},{"lineNumber":350,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":351,"author":{"gitId":"dinde2004"},"content":"        assertTrue(containsPersonWithIllnesses(model, \"John Doe\", tags));","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":353,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":354,"author":{"gitId":"licongshen12"},"content":"    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Integration Testing of UndoCommand with appointment commands~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-10-27"},{"lineNumber":355,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":356,"author":{"gitId":"licongshen12"},"content":"     * Test undo functionality with appointments command.","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"licongshen12"},"content":"     * Appointments command cannot be undone","lastModifiedDate":"2023-10-27"},{"lineNumber":358,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":359,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":360,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoAppointmentsCommand_throwsCommandException() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":361,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_APPOINTMENTS_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":362,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":363,"author":{"gitId":"dinde2004"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_NO_COMMAND_TO_UNDO_ERROR);","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":365,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":366,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"licongshen12"},"content":"     * Test undo functionality with cancel command.","lastModifiedDate":"2023-10-27"},{"lineNumber":368,"author":{"gitId":"licongshen12"},"content":"     * Cancel command can be undone","lastModifiedDate":"2023-10-27"},{"lineNumber":369,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":370,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":371,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoCancelCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":372,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-11-02"},{"lineNumber":373,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":374,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_CANCEL_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":375,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"dinde2004"},"content":"        assertTrue(model.getAddressBook().getAppointmentList().isEmpty());","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":380,"author":{"gitId":"licongshen12"},"content":"     * Test undo functionality with find patient appointment command.","lastModifiedDate":"2023-10-27"},{"lineNumber":381,"author":{"gitId":"trgao"},"content":"     * Find appointment command cannot be undone","lastModifiedDate":"2023-10-29"},{"lineNumber":382,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":384,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoAppointmentFindCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":385,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":388,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":389,"author":{"gitId":"dinde2004"},"content":"        expectedModel.undoHistory();","lastModifiedDate":"2023-11-02"},{"lineNumber":390,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":391,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_FIND_PATIENT_APPOINTMENT_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":393,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_COMMAND_SUCCESS;","lastModifiedDate":"2023-11-02"},{"lineNumber":394,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":395,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":396,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":397,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":398,"author":{"gitId":"licongshen12"},"content":"     * Test undo functionality with reschedule command.","lastModifiedDate":"2023-10-27"},{"lineNumber":399,"author":{"gitId":"licongshen12"},"content":"     * Reschedule command can be undone","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":401,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":402,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoRescheduleCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":403,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-11-02"},{"lineNumber":404,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":405,"author":{"gitId":"licongshen12"},"content":"        Appointment appointmentBefore \u003d model.getAddressBook().getAppointmentList().get(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":406,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_RESCHEDULE_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":407,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":408,"author":{"gitId":"licongshen12"},"content":"        model.undoHistory();","lastModifiedDate":"2023-10-27"},{"lineNumber":409,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":410,"author":{"gitId":"licongshen12"},"content":"        Appointment appointmentAfter \u003d model.getAddressBook().getAppointmentList().get(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":411,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":412,"author":{"gitId":"licongshen12"},"content":"        assertEquals(appointmentBefore, appointmentAfter);","lastModifiedDate":"2023-10-27"},{"lineNumber":413,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":414,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":415,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":416,"author":{"gitId":"licongshen12"},"content":"     * Test undo functionality with schedule command.","lastModifiedDate":"2023-10-27"},{"lineNumber":417,"author":{"gitId":"licongshen12"},"content":"     * Schedule command can be undone","lastModifiedDate":"2023-10-27"},{"lineNumber":418,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":419,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":420,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoScheduleCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":421,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-11-02"},{"lineNumber":422,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":423,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":424,"author":{"gitId":"licongshen12"},"content":"        model.undoHistory();","lastModifiedDate":"2023-10-27"},{"lineNumber":425,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":426,"author":{"gitId":"dinde2004"},"content":"        assertTrue(model.getAddressBook().getAppointmentList().isEmpty());","lastModifiedDate":"2023-11-02"},{"lineNumber":427,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":428,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":429,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":430,"author":{"gitId":"licongshen12"},"content":"     * Test undo functionality with today command.","lastModifiedDate":"2023-10-27"},{"lineNumber":431,"author":{"gitId":"licongshen12"},"content":"     * Today command cannot be undone","lastModifiedDate":"2023-10-27"},{"lineNumber":432,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":433,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":434,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoTodayCommand_throwsCommandException() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":435,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_TODAY_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":436,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":437,"author":{"gitId":"dinde2004"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_NO_COMMAND_TO_UNDO_ERROR);","lastModifiedDate":"2023-11-02"},{"lineNumber":438,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":439,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":440,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":441,"author":{"gitId":"licongshen12"},"content":"     * Test undo functionality with upcoming command.","lastModifiedDate":"2023-10-27"},{"lineNumber":442,"author":{"gitId":"licongshen12"},"content":"     * Upcoming command cannot be undone","lastModifiedDate":"2023-10-27"},{"lineNumber":443,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":444,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":445,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoUpcomingCommand_throwsCommandException() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":446,"author":{"gitId":"dinde2004"},"content":"        logic.execute(SAMPLE_UPCOMING_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":447,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":448,"author":{"gitId":"dinde2004"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_NO_COMMAND_TO_UNDO_ERROR);","lastModifiedDate":"2023-11-02"},{"lineNumber":449,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":450,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":451,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":452,"author":{"gitId":"kwangthiag"},"content":"     * Test undo functionality with Sort command.","lastModifiedDate":"2023-10-28"},{"lineNumber":453,"author":{"gitId":"kwangthiag"},"content":"     * Sort command can be undone","lastModifiedDate":"2023-10-28"},{"lineNumber":454,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":455,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":456,"author":{"gitId":"dinde2004"},"content":"    public void execute_undoSortCommand_success() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":457,"author":{"gitId":"kwangthiag"},"content":"        logic.execute(SAMPLE_ADD_COMMAND_1);","lastModifiedDate":"2023-10-28"},{"lineNumber":458,"author":{"gitId":"kwangthiag"},"content":"        logic.execute(SAMPLE_SCHEDULE_COMMAND);","lastModifiedDate":"2023-10-28"},{"lineNumber":459,"author":{"gitId":"kwangthiag"},"content":"        logic.execute(SAMPLE_SCHEDULE_ANCIENT_APPOINTMENT_COMMAND);","lastModifiedDate":"2023-10-28"},{"lineNumber":460,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getUserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":461,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":462,"author":{"gitId":"kwangthiag"},"content":"        logic.execute(SAMPLE_SORT_COMMAND);","lastModifiedDate":"2023-10-28"},{"lineNumber":463,"author":{"gitId":"kwangthiag"},"content":"        model.undoHistory();","lastModifiedDate":"2023-10-28"},{"lineNumber":464,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":465,"author":{"gitId":"dinde2004"},"content":"        assertEquals(expectedModel.getAddressBook(), model.getAddressBook());","lastModifiedDate":"2023-11-02"},{"lineNumber":466,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":467,"author":{"gitId":"dinde2004"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"dinde2004":261,"kwangthiag":48,"billieboy7":2,"licongshen12":150,"trgao":6}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/AppointmentCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DESCRIPTION;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PATIENT;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PRIORITY;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":" * The AppointmentCommandTestUtil class provides utility constants for testing appointment-related commands.","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":" * It includes various date and time strings, as well as a valid description for creating test data.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"public class AppointmentCommandTestUtil {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    public static final DayOfWeek DAY_OF_WEEK \u003d LocalDateTime.now().getDayOfWeek();","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    // Current date and date 4 hours later","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    public static final String CURRENT_DATE \u003d LocalDateTime.now().format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    public static final String CURRENT_DATE_PLUS_FOUR_HOURS \u003d LocalDateTime.now().plusHours(4)","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"            .format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    // Date next week and 4 hours after that","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    public static final String NEXT_WEEK_MONDAY \u003d DATE_TIME_FORMATTER.format(LocalDateTime.now()","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"            .with(TemporalAdjusters.next(DayOfWeek.MONDAY))","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            .withHour(0)","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"            .withMinute(0)","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"            .withSecond(0)","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"            .withNano(0));","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    public static final String VALID_PATIENT_ONE \u003d \"John Doe\";","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"    public static final String PATIENT_ONE_DESC \u003d \" \" + PREFIX_APPOINTMENT_PATIENT + VALID_PATIENT_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"    public static final String VALID_START_ONE \u003d \"2023/08/03 10:00\";","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"    public static final String VALID_END_ONE \u003d \"2023/08/03 13:00\";","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"    public static final String VALID_START_TWO \u003d \"2023/09/03 10:00\";","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    public static final String VALID_END_TWO \u003d \"2023/09/03 11:00\";","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"    public static final String VALID_DESCRIPTION_ONE \u003d \"Follow Up Blood Test\";","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"    public static final String DESCRIPTION_DESC_ONE \u003d \" \" + PREFIX_APPOINTMENT_DESCRIPTION + VALID_DESCRIPTION_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"    public static final String VALID_DESCRIPTION_TWO \u003d \"Routine Checkup\";","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"    public static final String START_DESC_ONE \u003d \" \" + PREFIX_APPOINTMENT_START + VALID_START_ONE;","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"    public static final String START_DESC_TWO \u003d \" \" + PREFIX_APPOINTMENT_START + VALID_START_TWO;","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"    public static final String END_DESC_ONE \u003d \" \" + PREFIX_APPOINTMENT_END + VALID_END_ONE;","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"    public static final String END_DESC_TWO \u003d \" \" + PREFIX_APPOINTMENT_END + VALID_END_TWO;","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"    public static final String INVALID_START \u003d \"10:00 2023/08/03\";","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"    public static final String INVALID_END \u003d \"13:00 2023/08/03\";","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"    public static final String INVALID_START_DESC \u003d \" \" + PREFIX_APPOINTMENT_START + INVALID_START;","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"    public static final String INVALID_END_DESC \u003d \" \" + PREFIX_APPOINTMENT_END + INVALID_END;","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"    public static final String VALID_PRIORITY_TAG_HIGH \u003d \"high\";","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"    public static final String PRIORITY_TAG_DESC_HIGH \u003d \" \" + PREFIX_APPOINTMENT_PRIORITY + VALID_PRIORITY_TAG_HIGH;","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"    public static final String VALID_PRIORITY_TAG_MEDIUM \u003d \"medium\";","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"    public static final String PRIORITY_TAG_DESC_MEDIUM \u003d \" \" + PREFIX_APPOINTMENT_PRIORITY + VALID_PRIORITY_TAG_MEDIUM;","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"    public static final String VALID_PRIORITY_TAG_LOW \u003d \"low\";","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"    public static final String PRIORITY_TAG_DESC_LOW \u003d \" \" + PREFIX_APPOINTMENT_PRIORITY + VALID_PRIORITY_TAG_LOW;","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"    // INVALID DESC VALUES","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"    public static final String INVALID_PATIENT_DESC \u003d \" \" + PREFIX_APPOINTMENT_PATIENT;","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"    public static final String INVALID_DESCRIPTION_DESC \u003d \" \" + PREFIX_APPOINTMENT_DESCRIPTION;","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"    public static final String INVALID_PRIORITY_TAG_DESC \u003d \" \" + PREFIX_APPOINTMENT_PRIORITY;","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"billieboy7":63,"licongshen12":19}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/AppointmentsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dinde2004"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"dinde2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"dinde2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"dinde2004"},"content":"public class AppointmentsCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"dinde2004"},"content":"    private Model model;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"dinde2004"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"dinde2004"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"dinde2004"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"dinde2004"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"dinde2004"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"dinde2004"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(new AppointmentsCommand(), model, AppointmentsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"dinde2004"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"dinde2004"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(new AppointmentsCommand(), model, AppointmentsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        AppointmentsCommand firstAppointmentsCommand \u003d new AppointmentsCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"        AppointmentsCommand secondAppointmentsCommand \u003d new AppointmentsCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstAppointmentsCommand.equals(firstAppointmentsCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstAppointmentsCommand.equals(secondAppointmentsCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstAppointmentsCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstAppointmentsCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"dinde2004"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"dinde2004":36,"licongshen12":20}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/CancelCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dinde2004"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"dinde2004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"dinde2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"dinde2004"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"dinde2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"dinde2004"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"dinde2004"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"dinde2004"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"dinde2004"},"content":"public class CancelCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"dinde2004"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"dinde2004"},"content":"        Appointment appointmentToCancel \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"dinde2004"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"dinde2004"},"content":"        CancelCommand cancelCommand \u003d new CancelCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d String.format(CancelCommand.MESSAGE_CANCEL_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"dinde2004"},"content":"                Messages.format(appointmentToCancel));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"dinde2004"},"content":"        expectedModel.deleteAppointment(appointmentToCancel);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(cancelCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"dinde2004"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"dinde2004"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"dinde2004"},"content":"        CancelCommand cancelCommand \u003d new CancelCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"dinde2004"},"content":"        assertCommandFailure(cancelCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"dinde2004"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"dinde2004"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"dinde2004"},"content":"        Appointment appointmentToCancel \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"dinde2004"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"dinde2004"},"content":"        CancelCommand cancelCommand \u003d new CancelCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"dinde2004"},"content":"        String expectedMessage \u003d String.format(CancelCommand.MESSAGE_CANCEL_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"dinde2004"},"content":"                Messages.format(appointmentToCancel));","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"dinde2004"},"content":"        expectedModel.deleteAppointment(appointmentToCancel);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"dinde2004"},"content":"        showNoAppointment(expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"dinde2004"},"content":"        assertCommandSuccess(cancelCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"dinde2004"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"dinde2004"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"dinde2004"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"dinde2004"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"dinde2004"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getAppointmentList().size());","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"dinde2004"},"content":"        CancelCommand cancelCommand \u003d new CancelCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"dinde2004"},"content":"        assertCommandFailure(cancelCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"dinde2004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"dinde2004"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"dinde2004"},"content":"        CancelCommand cancelFirstCommand \u003d new CancelCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"dinde2004"},"content":"        CancelCommand cancelSecondCommand \u003d new CancelCommand(INDEX_SECOND_APPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"dinde2004"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"dinde2004"},"content":"        assertTrue(cancelFirstCommand.equals(cancelFirstCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"dinde2004"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"dinde2004"},"content":"        CancelCommand cancelFirstCommandCopy \u003d new CancelCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"dinde2004"},"content":"        assertTrue(cancelFirstCommand.equals(cancelFirstCommandCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"dinde2004"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"dinde2004"},"content":"        assertFalse(cancelFirstCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"dinde2004"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"dinde2004"},"content":"        assertFalse(cancelFirstCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"dinde2004"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"dinde2004"},"content":"        assertFalse(cancelFirstCommand.equals(cancelSecondCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"dinde2004"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"dinde2004"},"content":"     * Updates {@code model}\u0027s filtered list to show no appointment.","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"dinde2004"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"dinde2004"},"content":"    private void showNoAppointment(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"dinde2004"},"content":"        model.updateFilteredAppointmentList(p -\u003e false);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"dinde2004"},"content":"        assertTrue(model.getFilteredAppointmentList().isEmpty());","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"dinde2004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"dinde2004"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"dinde2004":111,"trgao":1}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/FindAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.PatientContainsKeywordsPredicate;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"import seedu.address.testutil.TypicalAppointments;","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":" * JUnit test class for {@code FindAppointmentCommand}.","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"public class FindAppointmentCommandTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    private Model model \u003d new ModelManager(TypicalAppointments.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalAppointments.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     * Test equality of {@code FindAppointmentCommand}.","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"    public void equals() {","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        PatientContainsKeywordsPredicate firstPatientPredicate \u003d","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"                new PatientContainsKeywordsPredicate(Collections.singletonList(\"John\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        PatientContainsKeywordsPredicate secondPatientPredicate \u003d","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"                new PatientContainsKeywordsPredicate(Collections.singletonList(\"Doe\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        FindAppointmentCommand firstPatientFindAppointmentCommand \u003d","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"                new FindAppointmentCommand(firstPatientPredicate);","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        FindAppointmentCommand secondPatientFindAppointmentCommand \u003d","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"                new FindAppointmentCommand(secondPatientPredicate);","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        assertTrue(firstPatientFindAppointmentCommand.equals(firstPatientFindAppointmentCommand));","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        // contains the same values -\u003e returns true","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        FindAppointmentCommand copy \u003d new FindAppointmentCommand(firstPatientPredicate);","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        assertTrue(firstPatientFindAppointmentCommand.equals(copy));","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"        assertFalse(firstPatientFindAppointmentCommand.equals(1));","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        assertFalse(firstPatientFindAppointmentCommand.equals(null));","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"        // command for different patients -\u003e returns false","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        assertFalse(firstPatientFindAppointmentCommand.equals(secondPatientFindAppointmentCommand));","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"     * Tests the execution of {@code FindAppointmentCommand} when there are no matching keywords.","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"    public void execute_noMatchingKeyword_noAppointmentFound() {","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"        PatientContainsKeywordsPredicate predicate \u003d preparePredicate(\"noMatchingKeyword\");","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"        FindAppointmentCommand command \u003d new FindAppointmentCommand(predicate);","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"     * Tests the execution of {@code FindAppointmentCommand} when there are multiple matching keywords.","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"    public void execute_multipleKeywords_multiplePatientsFound() {","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"        PatientContainsKeywordsPredicate predicate \u003d preparePredicate(\"alice hoon\");","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"        FindAppointmentCommand command \u003d new FindAppointmentCommand(predicate);","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"     * Tests the execution of {@code FindAppointmentCommand} when the keyword is empty.","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"    public void execute_emptyKeyword_noAppointmentFound() {","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"        PatientContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"        FindAppointmentCommand command \u003d new FindAppointmentCommand(predicate);","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"     * Parses {@code userInput} into a {@code PatientContainsKeywordsPredicate}.","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"    private PatientContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"        return new PatientContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"billieboy7":104}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/RescheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalAppointments.NOCLASHAPPOINTMENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.testutil.AppointmentTimeBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"public class RescheduleCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"    public void execute_validIndexValidTimeUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"        Appointment newAppointment \u003d NOCLASHAPPOINTMENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"        AppointmentTime newAppointmentTime \u003d new AppointmentTimeBuilder(newAppointment).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"        Appointment appointmentToReschedule \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"        Appointment rescheduledAppointment \u003d new Appointment(appointmentToReschedule.getPerson(),","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"                newAppointment.getAppointmentTime(), appointmentToReschedule.getAppointmentDescription(),","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"                appointmentToReschedule.getPriorityTag());","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"        RescheduleCommand rescheduleCommand \u003d new RescheduleCommand(INDEX_FIRST_APPOINTMENT, newAppointmentTime);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(RescheduleCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"                Messages.format(rescheduledAppointment));","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.setAppointment(expectedModel.getFilteredAppointmentList().get(0), rescheduledAppointment);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(rescheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"    public void execute_invalidTimeUnfilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"        Appointment rescheduledAppointment \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"                .get(INDEX_SECOND_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"        AppointmentTime appointmentTime \u003d new AppointmentTimeBuilder(rescheduledAppointment).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"        RescheduleCommand rescheduleCommand \u003d new RescheduleCommand(INDEX_FIRST_APPOINTMENT, appointmentTime);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_DUPLICATE_TIMESLOT,","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"                Messages.format(rescheduledAppointment));","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"        assertCommandFailure(rescheduleCommand, model, expectedMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"        Appointment rescheduledAppointment \u003d NOCLASHAPPOINTMENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"        AppointmentTime appointmentTime \u003d new AppointmentTimeBuilder(rescheduledAppointment).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"        RescheduleCommand rescheduleCommand \u003d new RescheduleCommand(outOfBoundIndex, appointmentTime);","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"        assertCommandFailure(rescheduleCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"    public void execute_validIndexValidTimeFilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"kwangthiag"},"content":"        showAppointmentAtIndex(model, INDEX_SECOND_APPOINTMENT);","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"kwangthiag"},"content":"        Appointment newAppointment \u003d NOCLASHAPPOINTMENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"kwangthiag"},"content":"        AppointmentTime newAppointmentTime \u003d new AppointmentTimeBuilder(newAppointment).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"kwangthiag"},"content":"        Appointment appointmentToReschedule \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"kwangthiag"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"kwangthiag"},"content":"        Appointment rescheduledAppointment \u003d new Appointment(appointmentToReschedule.getPerson(),","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"                newAppointment.getAppointmentTime(), appointmentToReschedule.getAppointmentDescription(),","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"                appointmentToReschedule.getPriorityTag());","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kwangthiag"},"content":"        RescheduleCommand rescheduleCommand \u003d new RescheduleCommand(INDEX_FIRST_APPOINTMENT, newAppointmentTime);","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(RescheduleCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"kwangthiag"},"content":"                Messages.format(rescheduledAppointment));","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.setAppointment(expectedModel.getFilteredAppointmentList().get(1), rescheduledAppointment);","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(rescheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"kwangthiag"},"content":"    public void execute_invalidTimeFilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"kwangthiag"},"content":"        Appointment rescheduledAppointment \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"kwangthiag"},"content":"                .get(INDEX_SECOND_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"kwangthiag"},"content":"        AppointmentTime appointmentTime \u003d new AppointmentTimeBuilder(rescheduledAppointment).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"kwangthiag"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"kwangthiag"},"content":"        RescheduleCommand rescheduleCommand \u003d new RescheduleCommand(INDEX_FIRST_APPOINTMENT, appointmentTime);","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_DUPLICATE_TIMESLOT,","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"kwangthiag"},"content":"                Messages.format(rescheduledAppointment));","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"kwangthiag"},"content":"        assertCommandFailure(rescheduleCommand, model, expectedMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"kwangthiag"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"kwangthiag"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"kwangthiag"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"kwangthiag"},"content":"        Appointment rescheduledAppointment \u003d NOCLASHAPPOINTMENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"kwangthiag"},"content":"        AppointmentTime appointmentTime \u003d new AppointmentTimeBuilder(rescheduledAppointment).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"kwangthiag"},"content":"        RescheduleCommand rescheduleCommand \u003d new RescheduleCommand(outOfBoundIndex, appointmentTime);","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"kwangthiag"},"content":"        assertCommandFailure(rescheduleCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"kwangthiag"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"kwangthiag"},"content":"        Appointment appointment1 \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"kwangthiag"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"kwangthiag"},"content":"        Appointment appointment2 \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"kwangthiag"},"content":"                .get(INDEX_SECOND_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"kwangthiag"},"content":"        AppointmentTime appointmentTime1 \u003d appointment1.getAppointmentTime();","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"kwangthiag"},"content":"        AppointmentTime appointmentTime2 \u003d appointment2.getAppointmentTime();","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"kwangthiag"},"content":"        RescheduleCommand rescheduleFirstCommand \u003d new RescheduleCommand(INDEX_FIRST_APPOINTMENT, appointmentTime1);","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"kwangthiag"},"content":"        RescheduleCommand rescheduleSecondCommand \u003d new RescheduleCommand(INDEX_SECOND_APPOINTMENT, appointmentTime2);","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"kwangthiag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(rescheduleFirstCommand.equals(rescheduleFirstCommand));","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"kwangthiag"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"kwangthiag"},"content":"        RescheduleCommand rescheduleFirstCommandCopy \u003d new RescheduleCommand(INDEX_FIRST_APPOINTMENT, appointmentTime1);","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(rescheduleFirstCommand.equals(rescheduleFirstCommandCopy));","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"kwangthiag"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(rescheduleFirstCommand.equals(1));","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"kwangthiag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(rescheduleFirstCommand.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"kwangthiag"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(rescheduleFirstCommand.equals(rescheduleSecondCommand));","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"dinde2004":2,"kwangthiag":137,"billieboy7":4,"trgao":1}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_END_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_END_TWO;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_START_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_START_TWO;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"import seedu.address.commons.history.UserHistoryManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    public void constructor_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ScheduleCommand(null, null));","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        Name testName1 \u003d new Name(\"Test Name1\");","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        Name testName2 \u003d new Name(\"Test Name2\");","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"        Name testName1MixedCase \u003d new Name(\"TeSt NaMe\");","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        Appointment appointment1 \u003d new AppointmentBuilder().withAppointmentTime(VALID_START_ONE, VALID_END_ONE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        Appointment appointment2 \u003d new AppointmentBuilder().withAppointmentTime(VALID_START_TWO, VALID_END_TWO).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        ScheduleCommand scheduleCommand1 \u003d new ScheduleCommand(appointment1, testName1);","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        ScheduleCommand scheduleCommand2 \u003d new ScheduleCommand(appointment2, testName2);","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        ScheduleCommand copyOfScheduleCommand1 \u003d new ScheduleCommand(appointment1, testName1);","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        ScheduleCommand scheduleCommand1MixedCase \u003d new ScheduleCommand(appointment1, testName1MixedCase);","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        ScheduleCommand scheduleCommandSameTimeDifferentName2 \u003d new ScheduleCommand(appointment1, testName2);","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"        // compare with different type - false","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        assertFalse(scheduleCommand1.equals(\"Test\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        // null test - false","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"        assertFalse(scheduleCommand1.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        // compares same appointment timing but different names (Patients) - false","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"        assertFalse(copyOfScheduleCommand1.equals(scheduleCommandSameTimeDifferentName2));","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"        // compares AddCommand1 with itself - true","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"        assertTrue(scheduleCommand1.equals(scheduleCommand1));","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"        assertEquals(scheduleCommand2, scheduleCommand2);","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"        // compares 2 different Schedule Commands - false","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"        assertFalse(scheduleCommand1.equals(scheduleCommand2));","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"        // compares 2 different objects with same details - true","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"        assertTrue(scheduleCommand1.equals(copyOfScheduleCommand1));","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"        // same schedule commands with same time and same name, but name has different case types - false","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"        assertFalse(scheduleCommand1.equals(scheduleCommand1MixedCase));","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"licongshen12"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"licongshen12"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"licongshen12"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"licongshen12"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"licongshen12"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"licongshen12"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"licongshen12"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"licongshen12"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"licongshen12"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"licongshen12"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"licongshen12"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"licongshen12"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"licongshen12"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"trgao"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"trgao"},"content":"        public boolean hasPerson(Name name) {","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"trgao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"licongshen12"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"licongshen12"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"licongshen12"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"licongshen12"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"licongshen12"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"licongshen12"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"licongshen12"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"licongshen12"},"content":"        public UserHistoryManager getUserHistoryManager() {","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"dinde2004"},"content":"        @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":181,"author":{"gitId":"dinde2004"},"content":"        public void updateUserHistory() {","lastModifiedDate":"2023-10-29"},{"lineNumber":182,"author":{"gitId":"dinde2004"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-10-29"},{"lineNumber":183,"author":{"gitId":"dinde2004"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":184,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":185,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"licongshen12"},"content":"        public void undoHistory() {","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"licongshen12"},"content":"        public void redoHistory() {","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"licongshen12"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"licongshen12"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"kwangthiag"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"kwangthiag"},"content":"        public void sortAppointmentList(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"kwangthiag"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"kwangthiag"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"kwangthiag"},"content":"        public void sortPatientList(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"kwangthiag"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"licongshen12"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"licongshen12"},"content":"     * A Model stub that always accepts the appointment being added.","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"licongshen12"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"licongshen12"},"content":"    private class ModelStubAcceptingAppointmentAdded extends ModelStub {","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"licongshen12"},"content":"        private final ArrayList\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"licongshen12"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"licongshen12"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"trgao"},"content":"            return appointments.stream().anyMatch(appointment::equals);","lastModifiedDate":"2023-11-06"},{"lineNumber":226,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"licongshen12"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"licongshen12"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":231,"author":{"gitId":"licongshen12"},"content":"            appointments.add(appointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":232,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":233,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":234,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":235,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":236,"author":{"gitId":"billieboy7"},"content":"     * A Model stub containing appointments","lastModifiedDate":"2023-10-21"},{"lineNumber":237,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":238,"author":{"gitId":"billieboy7"},"content":"    private class ModelStubContainingAppointments extends ModelStub {","lastModifiedDate":"2023-10-21"},{"lineNumber":239,"author":{"gitId":"billieboy7"},"content":"        private final Appointment appointment;","lastModifiedDate":"2023-10-21"},{"lineNumber":240,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":241,"author":{"gitId":"billieboy7"},"content":"        ModelStubContainingAppointments(Appointment appointment) {","lastModifiedDate":"2023-10-21"},{"lineNumber":242,"author":{"gitId":"billieboy7"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":243,"author":{"gitId":"billieboy7"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2023-10-21"},{"lineNumber":244,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":245,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":246,"author":{"gitId":"billieboy7"},"content":"        @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":247,"author":{"gitId":"billieboy7"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-21"},{"lineNumber":248,"author":{"gitId":"billieboy7"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":249,"author":{"gitId":"trgao"},"content":"            return this.appointment.equals(appointment);","lastModifiedDate":"2023-11-06"},{"lineNumber":250,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":251,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":252,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"dinde2004":5,"kwangthiag":10,"billieboy7":65,"licongshen12":163,"trgao":9}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"public class SortCommandTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"    public void execute_sortList_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.sortAppointmentList(true, \"time\");","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(new SortCommand(true, \"time\"),","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"                model, String.format(SortCommand.MESSAGE_SUCCESS, \"ascending\", \"time\"), expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"        SortCommand sortFirstCommand \u003d new SortCommand(true, \"time\");","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"        SortCommand sortSecondCommand \u003d new SortCommand(false, \"priority\");","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(sortFirstCommand.equals(sortFirstCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"        SortCommand sortFirstCommandCopy \u003d new SortCommand(true, \"time\");","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(sortFirstCommand.equals(sortFirstCommandCopy));","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(sortFirstCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(sortFirstCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(sortFirstCommand.equals(sortSecondCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"kwangthiag":46}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/TodayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.TODAYAPPOINTMENT;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"public class TodayCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    public void execute_listIsFiltered_showsAppointmentsOnTodayOnly() {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"        model.addAppointment(TODAYAPPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        expectedModel.addAppointment(TODAYAPPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"        showAppointmentAtIndex(expectedModel, Index.fromZeroBased(4));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"        assertCommandSuccess(new TodayCommand(), model, TodayCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        TodayCommand firstTodayCommand \u003d new TodayCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        TodayCommand secondTodayCommand \u003d new TodayCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstTodayCommand.equals(firstTodayCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstTodayCommand.equals(secondTodayCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstTodayCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstTodayCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"licongshen12":20,"trgao":26}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/TriageCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"public class TriageCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    public void execute_validIndexValidPriorityUnfilteredList_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"        Appointment appointmentToTriage \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        Appointment triagedAppointment \u003d new AppointmentBuilder(appointmentToTriage).withPriorityTag(\"low\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        TriageCommand triageCommand \u003d new TriageCommand(INDEX_FIRST_APPOINTMENT, triagedAppointment.getPriorityTag());","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d String.format(TriageCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"                Messages.format(triagedAppointment));","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        expectedModel.setAppointment(appointmentToTriage, triagedAppointment);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"        assertCommandSuccess(triageCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        PriorityTag newPriorityTag \u003d new PriorityTag(\"low\");","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"        TriageCommand triageCommand \u003d new TriageCommand(outOfBoundIndex, newPriorityTag);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        assertCommandFailure(triageCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"    public void execute_validIndexValidPriorityFilteredList_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        showAppointmentAtIndex(model, INDEX_SECOND_APPOINTMENT);","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        Appointment appointmentToTriage \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"        Appointment triagedAppointment \u003d new AppointmentBuilder(appointmentToTriage).withPriorityTag(\"medium\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"        TriageCommand triageCommand \u003d new TriageCommand(INDEX_FIRST_APPOINTMENT, triagedAppointment.getPriorityTag());","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d String.format(TriageCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"                Messages.format(triagedAppointment));","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"        expectedModel.setAppointment(appointmentToTriage, triagedAppointment);","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"        assertCommandSuccess(triageCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"        PriorityTag newPriorityTag \u003d new PriorityTag(\"medium\");","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"        TriageCommand triageCommand \u003d new TriageCommand(outOfBoundIndex, newPriorityTag);","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        assertCommandFailure(triageCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"    public void equals() {","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"        Appointment appointment1 \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"        Appointment appointment2 \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"                .get(INDEX_SECOND_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"        PriorityTag priorityTag1 \u003d appointment1.getPriorityTag();","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        PriorityTag priorityTag2 \u003d appointment2.getPriorityTag();","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"        TriageCommand triageFirstCommand \u003d new TriageCommand(INDEX_FIRST_APPOINTMENT, priorityTag1);","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"        TriageCommand triageSecondCommand \u003d new TriageCommand(INDEX_SECOND_APPOINTMENT, priorityTag2);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"        assertTrue(triageFirstCommand.equals(triageFirstCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"        TriageCommand triageFirstCommandCopy \u003d new TriageCommand(INDEX_FIRST_APPOINTMENT, priorityTag1);","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"        assertTrue(triageFirstCommand.equals(triageFirstCommandCopy));","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"        assertFalse(triageFirstCommand.equals(1));","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"        assertFalse(triageFirstCommand.equals(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        assertFalse(triageFirstCommand.equals(triageSecondCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"trgao":106}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/UpcomingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.UPCOMINGAPPOINTMENT;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"public class UpcomingCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    public void execute_listIsFiltered_showsAppointmentsOnTodayOnly() {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"        model.addAppointment(UPCOMINGAPPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        expectedModel.addAppointment(UPCOMINGAPPOINTMENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"        showAppointmentAtIndex(expectedModel, Index.fromZeroBased(4));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"        assertCommandSuccess(new UpcomingCommand(), model, UpcomingCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        UpcomingCommand firstUpcomingCommand \u003d new UpcomingCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        UpcomingCommand secondUpcomingCommand \u003d new UpcomingCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstUpcomingCommand.equals(firstUpcomingCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"        assertTrue(firstUpcomingCommand.equals(secondUpcomingCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstUpcomingCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"        assertFalse(firstUpcomingCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"licongshen12":20,"trgao":26}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"dinde2004":1,"-":46,"trgao":1}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"import seedu.address.commons.history.UserHistoryManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"trgao"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"trgao"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"trgao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"trgao"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"trgao"},"content":"        public boolean hasPerson(Name name) {","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"trgao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"trgao"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"trgao"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"trgao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"trgao"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"trgao"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"trgao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"trgao"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"trgao"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"trgao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"licongshen12"},"content":"        public UserHistoryManager getUserHistoryManager() {","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"dinde2004"},"content":"        @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"dinde2004"},"content":"        public void updateUserHistory() {","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"dinde2004"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-10-29"},{"lineNumber":198,"author":{"gitId":"dinde2004"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"dinde2004"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":200,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"licongshen12"},"content":"        public void undoHistory() {","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"licongshen12"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"licongshen12"},"content":"        public void redoHistory() {","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"licongshen12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"licongshen12"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"trgao"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":211,"author":{"gitId":"trgao"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":212,"author":{"gitId":"trgao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":213,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":214,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":215,"author":{"gitId":"trgao"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":216,"author":{"gitId":"trgao"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-14"},{"lineNumber":217,"author":{"gitId":"trgao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":218,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":219,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"kwangthiag"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"kwangthiag"},"content":"        public void sortAppointmentList(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"kwangthiag"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"kwangthiag"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"kwangthiag"},"content":"        public void sortPatientList(boolean isAscending, String attribute) {","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"kwangthiag"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"dinde2004":5,"kwangthiag":11,"licongshen12":16,"-":203,"trgao":39}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"dinde2004":2,"-":117,"trgao":1}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/DiagnoseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPICAL_ILLNESS_1;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPICAL_ILLNESS_2;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.createTypicalIllnessSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.createTypicalIllnessesSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"public class DiagnoseCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"    public void execute_validIndexOneIllnessUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"        Person personToDiagnose \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e existingTags \u003d personToDiagnose.getTags();","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagToDiagnose \u003d createTypicalIllnessSet();","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"        newTags.addAll(existingTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        newTags.addAll(tagToDiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"        String[] newTagsString \u003d newTags.stream().map(x -\u003e x.tagName).toArray(String[]::new);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"        Person diagnosedPerson \u003d new PersonBuilder(personToDiagnose).withTags(newTagsString).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand diagnoseCommand \u003d new DiagnoseCommand(INDEX_FIRST_PERSON, tagToDiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(DiagnoseCommand.MESSAGE_DIAGNOSE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"                diagnosedPerson.getName(), getAddedIllnesses(personToDiagnose, tagToDiagnose));","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(0), diagnosedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(diagnoseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"    public void execute_validIndexTwoIllnessesUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"        Person personToDiagnose \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e existingTags \u003d personToDiagnose.getTags();","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagsToDiagnose \u003d createTypicalIllnessesSet();","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"        newTags.addAll(existingTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"        newTags.addAll(tagsToDiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"        String[] newTagsString \u003d newTags.stream().map(x -\u003e x.tagName).toArray(String[]::new);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"        Person diagnosedPerson \u003d new PersonBuilder(personToDiagnose).withTags(newTagsString).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand diagnoseCommand \u003d new DiagnoseCommand(INDEX_SECOND_PERSON, tagsToDiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(DiagnoseCommand.MESSAGE_DIAGNOSE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"                diagnosedPerson.getName(), getAddedIllnesses(personToDiagnose, tagsToDiagnose));","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(1), diagnosedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(diagnoseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"kwangthiag"},"content":"    public void execute_validIndexOneIllnessFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"kwangthiag"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"kwangthiag"},"content":"        Person personToDiagnose \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e existingTags \u003d personToDiagnose.getTags();","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagToDiagnose \u003d createTypicalIllnessSet();","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"kwangthiag"},"content":"        newTags.addAll(existingTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"kwangthiag"},"content":"        newTags.addAll(tagToDiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"kwangthiag"},"content":"        String[] newTagsString \u003d newTags.stream().map(x -\u003e x.tagName).toArray(String[]::new);","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"kwangthiag"},"content":"        Person diagnosedPerson \u003d new PersonBuilder(personToDiagnose).withTags(newTagsString).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand diagnoseCommand \u003d new DiagnoseCommand(INDEX_FIRST_PERSON, tagToDiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(DiagnoseCommand.MESSAGE_DIAGNOSE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"                diagnosedPerson.getName(), getAddedIllnesses(personToDiagnose, tagToDiagnose));","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"kwangthiag"},"content":"        //It should be editing the second person","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(1), diagnosedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(diagnoseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"kwangthiag"},"content":"    public void execute_validIndexTwoIllnessesFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"kwangthiag"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"kwangthiag"},"content":"        Person personToDiagnose \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e existingTags \u003d personToDiagnose.getTags();","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagsToDiagnose \u003d createTypicalIllnessesSet();","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"kwangthiag"},"content":"        newTags.addAll(existingTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"kwangthiag"},"content":"        newTags.addAll(tagsToDiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"kwangthiag"},"content":"        String[] newTagsString \u003d newTags.stream().map(x -\u003e x.tagName).toArray(String[]::new);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"kwangthiag"},"content":"        Person diagnosedPerson \u003d new PersonBuilder(personToDiagnose).withTags(newTagsString).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand diagnoseCommand \u003d new DiagnoseCommand(INDEX_FIRST_PERSON, tagsToDiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(DiagnoseCommand.MESSAGE_DIAGNOSE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"trgao"},"content":"                diagnosedPerson.getName(), getAddedIllnesses(personToDiagnose, tagsToDiagnose));","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"kwangthiag"},"content":"        //It should be editing the third person","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(2), diagnosedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(diagnoseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"kwangthiag"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"kwangthiag"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagToDiagnose \u003d createTypicalIllnessSet();","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand diagnoseCommand \u003d new DiagnoseCommand(outOfBoundIndex, tagToDiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"kwangthiag"},"content":"        assertCommandFailure(diagnoseCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"kwangthiag"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"kwangthiag"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"kwangthiag"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"kwangthiag"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagToDiagnose \u003d createTypicalIllnessSet();","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand diagnoseCommand \u003d new DiagnoseCommand(outOfBoundIndex, tagToDiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"kwangthiag"},"content":"        assertCommandFailure(diagnoseCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"kwangthiag"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e typicalIllnessesSet \u003d createTypicalIllnessesSet();","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"kwangthiag"},"content":"        final DiagnoseCommand standardCommand \u003d new DiagnoseCommand(INDEX_FIRST_PERSON, typicalIllnessesSet);","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"kwangthiag"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e illnessesWithSameValues \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"kwangthiag"},"content":"        illnessesWithSameValues.add(new Tag(TYPICAL_ILLNESS_1));","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"kwangthiag"},"content":"        illnessesWithSameValues.add(new Tag(TYPICAL_ILLNESS_2));","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand commandWithSameValues \u003d new DiagnoseCommand(INDEX_FIRST_PERSON, illnessesWithSameValues);","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"kwangthiag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"kwangthiag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"kwangthiag"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"kwangthiag"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(standardCommand.equals(new DiagnoseCommand(INDEX_SECOND_PERSON, typicalIllnessesSet)));","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"kwangthiag"},"content":"        // different illnesses set -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(standardCommand.equals(new DiagnoseCommand(INDEX_FIRST_PERSON, createTypicalIllnessSet())));","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"trgao"},"content":"    private static String getAddedIllnesses(Person personToEdit, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"trgao"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"trgao"},"content":"        StringBuilder addedTags \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"trgao"},"content":"        for (Tag tag: illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"trgao"},"content":"            if (!personToEdit.getTags().contains(tag)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"trgao"},"content":"                addedTags.append(tag);","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"trgao"},"content":"        return addedTags.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"dinde2004":4,"kwangthiag":173,"trgao":18}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"        Person editedPerson \u003d personInList.withName(firstPerson.getName().fullName)","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"                .withAddress(firstPerson.getAddress().toString())","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"                .withBirthdate(firstPerson.getBirthdate().toString())","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"                .withEmail(firstPerson.getEmail().value)","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"                .withGender(firstPerson.getGender().value)","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"                .withPhone(firstPerson.getPhone().value)","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kwangthiag":11,"licongshen12":1,"-":176,"trgao":2}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", gender\u003d\"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"                + editPersonDescriptor.getGender().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", birthdate\u003d\"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"                + editPersonDescriptor.getBirthdate().orElse(null) + \", address\u003d\"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kwangthiag":1,"licongshen12":1,"-":60,"trgao":5}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/FindIllnessCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookWithIllness;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import java.util.List;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.person.IllnessContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"public class FindIllnessCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithIllness(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithIllness(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    public void equals() {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"        List\u003cString\u003e firstPredicateKeywordListUpperCase \u003d Collections.singletonList(\"FIRST\");","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        List\u003cString\u003e firstPredicateKeywordListMixedCase \u003d Collections.singletonList(\"FiRsT\");","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"                new IllnessContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"                new IllnessContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate firstPredicateUpperCase \u003d","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"                new IllnessContainsKeywordsPredicate(firstPredicateKeywordListUpperCase);","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate firstPredicateMixedCase \u003d","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"                new IllnessContainsKeywordsPredicate(firstPredicateKeywordListMixedCase);","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand findIllnessFirstCommand \u003d new FindIllnessCommand(firstPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand findIllnessSecondCommand \u003d new FindIllnessCommand(secondPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand findIllnessFirstCommandUpperCasePredicate \u003d new FindIllnessCommand(firstPredicateUpperCase);","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand findIllnessFirstCommandMixedCasePredicate \u003d new FindIllnessCommand(firstPredicateMixedCase);","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"        assertTrue(findIllnessFirstCommand.equals(findIllnessFirstCommand));","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand findFirstCommandCopy \u003d new FindIllnessCommand(firstPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"        assertTrue(findIllnessFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        assertFalse(findIllnessFirstCommand.equals(1));","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        assertFalse(findIllnessFirstCommand.equals(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"        assertFalse(findIllnessFirstCommand.equals(findIllnessSecondCommand));","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"        // predicate with same keywords but one upper case and another lower case -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"        assertTrue(findIllnessFirstCommand.equals(findIllnessFirstCommandUpperCasePredicate));","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"        // predicate with same keywords but one mixed case and another lower case -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"        assertTrue(findIllnessFirstCommand.equals(findIllnessFirstCommandMixedCasePredicate));","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"    public void execute_zeroKeywords_noIllnessFound() {","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand command \u003d new FindIllnessCommand(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"    public void execute_singleKeyword_singleIllnessFound() {","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate predicate \u003d preparePredicate(\"FEVER\");","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand command \u003d new FindIllnessCommand(predicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"    public void execute_multipleKeywords_multipleIllnessFound() {","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate predicate \u003d preparePredicate(\"FEVER HEADACHE APPENDICITIS\");","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand command \u003d new FindIllnessCommand(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"    public void execute_partialKeyword_singleIllnessFound() {","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"        // Note: the keyword \u0027fev\u0027 should still identify someone with \u0027fever\u0027","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate predicate \u003d preparePredicate(\"fev\");","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand command \u003d new FindIllnessCommand(predicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"    public void execute_wrongKeyword_noIllnessFound() {","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"        // Note: typing the keyword \u0027FEVAR\u0027 instead of \u0027FEVER\u0027 will yield no result","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate predicate \u003d preparePredicate(\"FEVAR\");","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand command \u003d new FindIllnessCommand(predicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"    private IllnessContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"        return new IllnessContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"billieboy7":120}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/FindPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"public class FindPatientCommandTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        FindPatientCommand findFirstCommand \u003d new FindPatientCommand(firstPredicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        FindPatientCommand findSecondCommand \u003d new FindPatientCommand(secondPredicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        FindPatientCommand findFirstCommandCopy \u003d new FindPatientCommand(firstPredicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"        FindPatientCommand command \u003d new FindPatientCommand(predicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"        FindPatientCommand command \u003d new FindPatientCommand(predicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"        FindPatientCommand findPatientCommand \u003d new FindPatientCommand(predicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"        String expected \u003d FindPatientCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        assertEquals(expected, findPatientCommand.toString());","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":81,"trgao":10}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/PatientsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":" * Contains integration tests (interaction with the Model) and unit tests for PatientsCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"public class PatientsCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        assertCommandSuccess(new PatientsCommand(), model, PatientsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        assertCommandSuccess(new PatientsCommand(), model, PatientsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":34,"trgao":5}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/SortPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"public class SortPatientCommandTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"    public void execute_sortList_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"        boolean isAscending \u003d false;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.sortPatientList(isAscending, \"name\");","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(new SortPatientCommand(isAscending, \"name\"),","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"                model, String.format(SortPatientCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"                        \"descending\", \"name\"), expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"        SortPatientCommand sortPatientFirstCommand \u003d new SortPatientCommand(true, \"name\");","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"        SortPatientCommand sortPatientSecondCommand \u003d new SortPatientCommand(false, \"birthday\");","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(sortPatientFirstCommand.equals(sortPatientFirstCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"        SortPatientCommand sortPatientFirstCommandCopy \u003d new SortPatientCommand(true, \"name\");","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(sortPatientFirstCommand.equals(sortPatientFirstCommandCopy));","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(sortPatientFirstCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(sortPatientFirstCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(sortPatientFirstCommand.equals(sortPatientSecondCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"kwangthiag":49}},{"path":"src/test/java/seedu/address/logic/commands/personcommands/UndiagnoseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.commands.personcommands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPICAL_ILLNESS_1;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPICAL_ILLNESS_2;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.createTypicalIllnessSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.createTypicalIllnessesSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"public class UndiagnoseCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"    public void execute_validIndexOneIllnessUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"        Person personToUndiagnose \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e existingTags \u003d personToUndiagnose.getTags();","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"        Tag tagToUndiagnose \u003d existingTags.stream().findFirst().orElseThrow();","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagToRemove \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"        tagToRemove.add(tagToUndiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"        newTags.addAll(existingTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"        newTags.remove(tagToUndiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"        String[] newTagsString \u003d newTags.stream().map(x -\u003e x.tagName).toArray(String[]::new);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"        Person undiagnosedPerson \u003d new PersonBuilder(personToUndiagnose).withTags(newTagsString).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand undiagnoseCommand \u003d new UndiagnoseCommand(INDEX_FIRST_PERSON, tagToRemove);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(UndiagnoseCommand.MESSAGE_UNDIAGNOSE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"                undiagnosedPerson.getName(), getIllnessesOriginallyThere(personToUndiagnose, tagToRemove));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(0), undiagnosedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(undiagnoseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"    public void execute_validIndexAllIllnessesUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"        Person personToUndiagnose \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e existingTags \u003d personToUndiagnose.getTags();","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"        String[] newTagsString \u003d newTags.stream().map(x -\u003e x.tagName).toArray(String[]::new);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"        Person undiagnosedPerson \u003d new PersonBuilder(personToUndiagnose).withTags(newTagsString).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand undiagnoseCommand \u003d new UndiagnoseCommand(INDEX_SECOND_PERSON, existingTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(UndiagnoseCommand.MESSAGE_UNDIAGNOSE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"                undiagnosedPerson.getName(), getIllnessesOriginallyThere(personToUndiagnose, existingTags));","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(1), undiagnosedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(undiagnoseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"kwangthiag"},"content":"    public void execute_validIndexOneIllnessFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserHistoryManager());","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"kwangthiag"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"kwangthiag"},"content":"        Person personToUndiagnose \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e existingTags \u003d personToUndiagnose.getTags();","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"kwangthiag"},"content":"        Tag tagToUndiagnose \u003d existingTags.stream().findFirst().orElseThrow();","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagToRemove \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"kwangthiag"},"content":"        tagToRemove.add(tagToUndiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"kwangthiag"},"content":"        newTags.addAll(existingTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"kwangthiag"},"content":"        newTags.remove(tagToUndiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"kwangthiag"},"content":"        String[] newTagsString \u003d newTags.stream().map(x -\u003e x.tagName).toArray(String[]::new);","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"kwangthiag"},"content":"        Person undiagnosedPerson \u003d new PersonBuilder(personToUndiagnose).withTags(newTagsString).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand undiagnoseCommand \u003d new UndiagnoseCommand(INDEX_FIRST_PERSON, tagToRemove);","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(UndiagnoseCommand.MESSAGE_UNDIAGNOSE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"                undiagnosedPerson.getName(), getIllnessesOriginallyThere(personToUndiagnose, tagToRemove));","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"kwangthiag"},"content":"        //It should be editing the second person","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(1), undiagnosedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(undiagnoseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"kwangthiag"},"content":"    public void execute_validIndexTwoIllnessesFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"dinde2004"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"kwangthiag"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"kwangthiag"},"content":"        Person personToUndiagnose \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e existingTags \u003d personToUndiagnose.getTags();","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"kwangthiag"},"content":"        String[] newTagsString \u003d newTags.stream().map(x -\u003e x.tagName).toArray(String[]::new);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"kwangthiag"},"content":"        Person undiagnosedPerson \u003d new PersonBuilder(personToUndiagnose).withTags(newTagsString).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand undiagnoseCommand \u003d new UndiagnoseCommand(INDEX_FIRST_PERSON, existingTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"kwangthiag"},"content":"        String expectedMessage \u003d String.format(UndiagnoseCommand.MESSAGE_UNDIAGNOSE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"trgao"},"content":"                undiagnosedPerson.getName(), getIllnessesOriginallyThere(personToUndiagnose, existingTags));","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"kwangthiag"},"content":"        //It should be editing the third person","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"kwangthiag"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(2), undiagnosedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"kwangthiag"},"content":"        assertCommandSuccess(undiagnoseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"kwangthiag"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"kwangthiag"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagToUndiagnose \u003d createTypicalIllnessSet();","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand undiagnoseCommand \u003d new UndiagnoseCommand(outOfBoundIndex, tagToUndiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"kwangthiag"},"content":"        assertCommandFailure(undiagnoseCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"kwangthiag"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"kwangthiag"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"kwangthiag"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"kwangthiag"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e tagToUndiagnose \u003d createTypicalIllnessSet();","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand undiagnoseCommand \u003d new UndiagnoseCommand(outOfBoundIndex, tagToUndiagnose);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"kwangthiag"},"content":"        assertCommandFailure(undiagnoseCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"kwangthiag"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e typicalIllnessesSet \u003d createTypicalIllnessesSet();","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"kwangthiag"},"content":"        final UndiagnoseCommand standardCommand \u003d new UndiagnoseCommand(INDEX_FIRST_PERSON, typicalIllnessesSet);","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"kwangthiag"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"kwangthiag"},"content":"        Set\u003cTag\u003e illnessesWithSameValues \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"kwangthiag"},"content":"        illnessesWithSameValues.add(new Tag(TYPICAL_ILLNESS_1));","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"kwangthiag"},"content":"        illnessesWithSameValues.add(new Tag(TYPICAL_ILLNESS_2));","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand commandWithSameValues \u003d new UndiagnoseCommand(INDEX_FIRST_PERSON, illnessesWithSameValues);","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"kwangthiag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"kwangthiag"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"kwangthiag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"kwangthiag"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"kwangthiag"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(standardCommand.equals(new UndiagnoseCommand(INDEX_SECOND_PERSON, typicalIllnessesSet)));","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"kwangthiag"},"content":"        // different illnesses set -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"kwangthiag"},"content":"        assertFalse(standardCommand.equals(new UndiagnoseCommand(INDEX_FIRST_PERSON, createTypicalIllnessSet())));","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"trgao"},"content":"    private static String getIllnessesOriginallyThere(Person personToEdit, Set\u003cTag\u003e illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"trgao"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"trgao"},"content":"        StringBuilder tagsNotOriginallyInside \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"trgao"},"content":"        for (Tag tag: illnesses) {","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"trgao"},"content":"            if (personToEdit.getTags().contains(tag)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"trgao"},"content":"                tagsNotOriginallyInside.append(tag);","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"trgao"},"content":"        return tagsNotOriginallyInside.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"dinde2004":4,"kwangthiag":169,"trgao":18}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.ModeCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.personcommands.FindPatientCommand;","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.personcommands.PatientsCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"                + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"                + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"        FindPatientCommand command \u003d (FindPatientCommand) parser.parseCommand(","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"                FindPatientCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"        assertEquals(new FindPatientCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"        assertTrue(parser.parseCommand(PatientsCommand.COMMAND_WORD) instanceof PatientsCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"    public void parseCommand_mode() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"        assertTrue(parser.parseCommand(ModeCommand.COMMAND_WORD) instanceof ModeCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"licongshen12":4,"-":88,"trgao":12}},{"path":"src/test/java/seedu/address/logic/parser/ClearCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"public class ClearCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    private ClearCommandParser parser \u003d new ClearCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    public void parse_emptyArgs_returnsClearCommand() throws ParseException {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"        // No arguments should return a ClearCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        ClearCommand expectedClearCommand \u003d new ClearCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"\", expectedClearCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public void parse_nonEmptyArgs_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"some random string\",","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":27}},{"path":"src/test/java/seedu/address/logic/parser/ExitCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"public class ExitCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    private ExitCommandParser parser \u003d new ExitCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    public void parse_emptyArgs_returnsExitCommand() throws ParseException {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"        // No arguments should return an ExitCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        ExitCommand expectedExitCommand \u003d new ExitCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"\", expectedExitCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public void parse_nonEmptyArgs_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"some random string\",","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExitCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":27}},{"path":"src/test/java/seedu/address/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    private HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    public void parse_emptyArgs_returnsHelpCommand() throws ParseException {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"        // No arguments should return a HelpCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        HelpCommand expectedHelpCommand \u003d new HelpCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"\", expectedHelpCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public void parse_nonEmptyArgs_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"some random string\",","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":27}},{"path":"src/test/java/seedu/address/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    public void parse_emptyArgs_returnsListCommand() throws ParseException {","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        // No arguments should return a ListCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        ListCommand expectedListCommand \u003d new ListCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"\", expectedListCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    public void parse_nonEmptyArgs_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"some random string\",","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":28}},{"path":"src/test/java/seedu/address/logic/parser/ModeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.ModeCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"public class ModeCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    private ModeCommandParser parser \u003d new ModeCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    public void parse_emptyArgs_returnsModeCommand() throws ParseException {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"        // No arguments should return a ModeCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        ModeCommand expectedModeCommand \u003d new ModeCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"\", expectedModeCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    public void parse_nonEmptyArgs_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"some random string\",","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ModeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":27}},{"path":"src/test/java/seedu/address/logic/parser/RedoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class RedoCommandParserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    private RedoCommandParser parser \u003d new RedoCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    public void parse_noArgs_returnsRedoCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"        // Expected result is a new RedoCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"\", new RedoCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public void parse_withArgs_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        // Test with some random arguments","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"test\",","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"licongshen12":27}},{"path":"src/test/java/seedu/address/logic/parser/UndoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class UndoCommandParserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    private UndoCommandParser parser \u003d new UndoCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    public void parse_noArgs_returnsUndoCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"        // The expected result is a new UndoCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"\", new UndoCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public void parse_withArgs_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        // Test with some random arguments","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"test\",","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"licongshen12":27}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/AppointmentsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.appointmentcommands.AppointmentsCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class AppointmentsCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"    private AppointmentsCommandParser parser \u003d new AppointmentsCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    public void parse_validArgs_returnsAppointmentsCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"        AppointmentsCommand expectedAppointmentsCommand \u003d new AppointmentsCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"\", expectedAppointmentsCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"        // Any arguments should result in a ParseException","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"some random string\",","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AppointmentsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":26}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/CancelCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.appointmentcommands.CancelCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"public class CancelCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    private CancelCommandParser parser \u003d new CancelCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    public void parse_validArgs_returnsCancelCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \" 1\", new CancelCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"                parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, CancelCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"licongshen12":26}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/FindAppointmentParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.appointmentcommands.FindAppointmentCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.appointment.PatientContainsKeywordsPredicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"public class FindAppointmentParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    private FindAppointmentCommandParser parser \u003d new FindAppointmentCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    public void parse_validArgs_returnsFindAppointmentCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        FindAppointmentCommand expectedFindAppointmentCommand \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"                new FindAppointmentCommand(new PatientContainsKeywordsPredicate(Arrays.asList(\"Adam\", \"Ben\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"Adam Ben\", expectedFindAppointmentCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \" \\n Adam \\n \\t Ben  \\t\", expectedFindAppointmentCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":33}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/RescheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.END_DESC_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.INVALID_END_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.INVALID_START_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.START_DESC_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_END_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_START_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.appointmentcommands.RescheduleCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"import seedu.address.testutil.AppointmentTimeBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"public class RescheduleCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RescheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    private RescheduleCommandParser parser \u003d new RescheduleCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        // no index specified","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, START_DESC_ONE + END_DESC_ONE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"        // no start time specified","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"1\" + START_DESC_ONE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"        // no end time specified","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"1\" + END_DESC_ONE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"        // negative index","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"-12\" + START_DESC_ONE + END_DESC_ONE, MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"        // zero index","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"0\" + START_DESC_ONE + END_DESC_ONE, MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"1 random invalid argument\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"licongshen12"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"1 st/string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"licongshen12"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"licongshen12"},"content":"        // invalid start time","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_DESC + END_DESC_ONE, AppointmentTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"licongshen12"},"content":"        // invalid end time","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"1\" + START_DESC_ONE + INVALID_END_DESC, AppointmentTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"licongshen12"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"licongshen12"},"content":"        Index targetIndex \u003d INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"licongshen12"},"content":"        String userInput \u003d targetIndex.getOneBased() + START_DESC_ONE + END_DESC_ONE;","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"licongshen12"},"content":"        AppointmentTime appointmentTime \u003d new AppointmentTimeBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"licongshen12"},"content":"                .withStart(VALID_START_ONE)","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"licongshen12"},"content":"                .withEnd(VALID_END_ONE).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"licongshen12"},"content":"        RescheduleCommand expectedCommand \u003d new RescheduleCommand(targetIndex, appointmentTime);","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":73}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.DESCRIPTION_DESC_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.END_DESC_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.INVALID_DESCRIPTION_DESC;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.INVALID_END_DESC;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.INVALID_PATIENT_DESC;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.INVALID_PRIORITY_TAG_DESC;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.INVALID_START_DESC;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.PATIENT_ONE_DESC;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.PRIORITY_TAG_DESC_HIGH;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.PRIORITY_TAG_DESC_LOW;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.START_DESC_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_DESCRIPTION_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_END_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_PATIENT_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_PRIORITY_TAG_HIGH;","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_START_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DESCRIPTION;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_END;","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PATIENT;","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PRIORITY;","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_START;","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.appointmentcommands.ScheduleCommand;","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.AppointmentDescription;","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"import seedu.address.testutil.AppointmentTimeBuilder;","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    private ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"        String patient \u003d VALID_PATIENT_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        Name patientName \u003d new Name(patient);","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"        String userInput \u003d PATIENT_ONE_DESC + START_DESC_ONE + END_DESC_ONE + DESCRIPTION_DESC_ONE","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"                + PRIORITY_TAG_DESC_HIGH;","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        AppointmentTime appointmentTime \u003d new AppointmentTimeBuilder()","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"                .withStart(VALID_START_ONE)","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"                .withEnd(VALID_END_ONE).build();","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"        String appointmentDescription \u003d VALID_DESCRIPTION_ONE;","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"        AppointmentDescription appointmentDescription1 \u003d new AppointmentDescription(appointmentDescription);","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"        String priority \u003d VALID_PRIORITY_TAG_HIGH;","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"        PriorityTag priorityTag \u003d new PriorityTag(priority);","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"        Appointment expectedAppointment \u003d new Appointment(patientName, appointmentTime, appointmentDescription1,","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"                priorityTag);","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"        ScheduleCommand expectedCommand \u003d new ScheduleCommand(expectedAppointment, patientName);","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"        assertEquals(parser.parse(userInput).toString(), expectedCommand.toString());","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"        // missing patient prefix","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, START_DESC_ONE + END_DESC_ONE + DESCRIPTION_DESC_ONE","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"                        + PRIORITY_TAG_DESC_HIGH,","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"        // missing start time prefix","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PATIENT_ONE_DESC + END_DESC_ONE + DESCRIPTION_DESC_ONE","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"                + PRIORITY_TAG_DESC_HIGH,","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"        // missing end time prefix","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PATIENT_ONE_DESC + START_DESC_ONE + DESCRIPTION_DESC_ONE","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"                        + PRIORITY_TAG_DESC_HIGH,","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"        // missing appointment description prefix","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PATIENT_ONE_DESC + START_DESC_ONE + END_DESC_ONE","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"billieboy7"},"content":"                        + PRIORITY_TAG_DESC_HIGH,","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"billieboy7"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"billieboy7"},"content":"        // missing appointment priority tag prefix","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PATIENT_ONE_DESC + START_DESC_ONE + END_DESC_ONE + DESCRIPTION_DESC_ONE,","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"billieboy7"},"content":"        // missing all inputs","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, \"test\",","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"        String validExpectedAppointmentString \u003d PATIENT_ONE_DESC + START_DESC_ONE + END_DESC_ONE + DESCRIPTION_DESC_ONE","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"                + PRIORITY_TAG_DESC_HIGH;","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"        // multiple names","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PATIENT_ONE_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_PATIENT));","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"        // multiple start times","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, START_DESC_ONE + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_START));","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"billieboy7"},"content":"        // multiple end times","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, END_DESC_ONE + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_END));","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"billieboy7"},"content":"        // multiple appointment descriptions","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, DESCRIPTION_DESC_ONE + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_DESCRIPTION));","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"billieboy7"},"content":"        // multiple priority tags","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PRIORITY_TAG_DESC_LOW + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_PRIORITY));","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"billieboy7"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"billieboy7"},"content":"                validExpectedAppointmentString + PATIENT_ONE_DESC + START_DESC_ONE + END_DESC_ONE","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"billieboy7"},"content":"                        + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_PATIENT, PREFIX_APPOINTMENT_START,","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"billieboy7"},"content":"                        PREFIX_APPOINTMENT_END, PREFIX_APPOINTMENT_DESCRIPTION, PREFIX_APPOINTMENT_PRIORITY));","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"billieboy7"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"billieboy7"},"content":"        // invalid patient name","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, INVALID_PATIENT_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_PATIENT));","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"billieboy7"},"content":"        // invalid start time","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, INVALID_START_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_START));","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"billieboy7"},"content":"        // invalid end time","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, INVALID_END_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_END));","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"billieboy7"},"content":"        // invalid appointment description","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, INVALID_DESCRIPTION_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_DESCRIPTION));","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"billieboy7"},"content":"        // invalid address","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, INVALID_PRIORITY_TAG_DESC + validExpectedAppointmentString,","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_PRIORITY));","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"billieboy7"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"billieboy7"},"content":"        // invalid patient name","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, validExpectedAppointmentString + INVALID_PATIENT_DESC,","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_PATIENT));","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"billieboy7"},"content":"        // invalid start time","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, validExpectedAppointmentString + INVALID_START_DESC,","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_START));","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"billieboy7"},"content":"        // invalid end time","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, validExpectedAppointmentString + INVALID_END_DESC,","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_END));","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"billieboy7"},"content":"        // invalid appointment description","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, validExpectedAppointmentString + INVALID_DESCRIPTION_DESC,","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_DESCRIPTION));","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"billieboy7"},"content":"        // invalid address","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, validExpectedAppointmentString + INVALID_PRIORITY_TAG_DESC,","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"billieboy7"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_PRIORITY));","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"billieboy7"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"billieboy7"},"content":"        // invalid patient name","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, INVALID_PATIENT_DESC + START_DESC_ONE + END_DESC_ONE + DESCRIPTION_DESC_ONE","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"billieboy7"},"content":"                + PRIORITY_TAG_DESC_HIGH, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"billieboy7"},"content":"        // invalid start time","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PATIENT_ONE_DESC + INVALID_START_DESC + END_DESC_ONE + DESCRIPTION_DESC_ONE","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"billieboy7"},"content":"                + PRIORITY_TAG_DESC_HIGH, AppointmentTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"billieboy7"},"content":"        // invalid end time","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PATIENT_ONE_DESC + START_DESC_ONE + INVALID_END_DESC + DESCRIPTION_DESC_ONE","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"billieboy7"},"content":"                + PRIORITY_TAG_DESC_HIGH, AppointmentTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"billieboy7"},"content":"        // invalid description","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PATIENT_ONE_DESC + START_DESC_ONE + END_DESC_ONE + INVALID_DESCRIPTION_DESC","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"billieboy7"},"content":"                + PRIORITY_TAG_DESC_HIGH, AppointmentDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"billieboy7"},"content":"        // invalid priority tag","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PATIENT_ONE_DESC + START_DESC_ONE + END_DESC_ONE + DESCRIPTION_DESC_ONE","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"billieboy7"},"content":"                + INVALID_PRIORITY_TAG_DESC, PriorityTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"billieboy7"},"content":"        // non-empty preamble","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + PATIENT_ONE_DESC + START_DESC_ONE + END_DESC_ONE","lastModifiedDate":"2023-11-14"},{"lineNumber":209,"author":{"gitId":"billieboy7"},"content":"                        + DESCRIPTION_DESC_ONE + PRIORITY_TAG_DESC_HIGH,","lastModifiedDate":"2023-11-14"},{"lineNumber":210,"author":{"gitId":"billieboy7"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"billieboy7":212}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_SORT_ATTRIBUTE;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.appointmentcommands.SortCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"    private static final String INVALID_PREAMBLE_1 \u003d \" descending\";","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"    private static final String INVALID_ATTRIBUTE_DESC \u003d \" by\u003d friend\";","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"    private static final String VALID_PREAMBLE_1 \u003d \" desc\";","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"    private static final String VALID_ATTRIBUTE_DESC \u003d \" by\u003d time\";","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"    private static final String VALID_ATTRIBUTE_1 \u003d \"time\";","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, INVALID_PREAMBLE_1 + VALID_ATTRIBUTE_DESC,","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"    public void parse_invalidAttribute_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, VALID_PREAMBLE_1 + INVALID_ATTRIBUTE_DESC,","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"                String.format(MESSAGE_INVALID_SORT_ATTRIBUTE, SortCommandParser.printAttributes()));","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"    public void parse_validPreambleAndAttribute_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"        SortCommand expectedSortCommand \u003d new SortCommand(false, VALID_ATTRIBUTE_1);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"        assertParseSuccess(parser, VALID_PREAMBLE_1 + VALID_ATTRIBUTE_DESC, expectedSortCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"kwangthiag":36}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/TodayCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.appointmentcommands.TodayCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class TodayCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"    private TodayCommandParser parser \u003d new TodayCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    public void parse_validArgs_returnsAppointmentTodayCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        TodayCommand expectedTodayCommand \u003d new TodayCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"\",","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"                expectedTodayCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"    public void parse_nonEmptyString_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"some random string\",","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, TodayCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":29}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/TriageCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_PRIORITY;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.appointmentcommands.TriageCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"public class TriageCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"    private TriageCommandParser parser \u003d new TriageCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"    public void parse_validArgs_returnsTriageCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"        String userInput \u003d \"1 \" + PREFIX_APPOINTMENT_PRIORITY + \"high\";","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"        TriageCommand expectedCommand \u003d new TriageCommand(targetIndex, new PriorityTag(\"high\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"        // negative index","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"-12 \" + PREFIX_APPOINTMENT_PRIORITY + \"high\",","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"licongshen12"},"content":"                MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"licongshen12"},"content":"        // zero index","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"0 \" + PREFIX_APPOINTMENT_PRIORITY + \"high\",","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"licongshen12"},"content":"                MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"        // missing index","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, PREFIX_APPOINTMENT_PRIORITY + \"high\",","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, TriageCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"licongshen12"},"content":"        // missing priority","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, TriageCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"licongshen12"},"content":"        // invalid priority","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"1 \" + PREFIX_APPOINTMENT_PRIORITY + \"urgent\",","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"licongshen12"},"content":"                PriorityTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":48}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/UpcomingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"licongshen12"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"licongshen12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.appointmentcommands.UpcomingCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"public class UpcomingCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"    private UpcomingCommandParser parser \u003d new UpcomingCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"licongshen12"},"content":"    public void parse_validArgs_returnsAppointmentUpcomingCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"licongshen12"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"licongshen12"},"content":"        UpcomingCommand expectedUpcomingCommand \u003d new UpcomingCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"licongshen12"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"        assertParseSuccess(parser, \"\",","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"                expectedUpcomingCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"licongshen12"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"licongshen12"},"content":"    public void parse_nonEmptyString_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"licongshen12"},"content":"        assertParseFailure(parser, \"some random string\",","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"licongshen12"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpcomingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"licongshen12"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"licongshen12":28}},{"path":"src/test/java/seedu/address/logic/parser/personparser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDATE_DESC;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ONE_ILLNESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TWO_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FEVER;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FLU;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FLU).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"                + EMAIL_DESC_BOB + BIRTHDATE_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_ONE_ILLNESS, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FLU, VALID_TAG_FEVER)","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"                NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + BIRTHDATE_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"kwangthiag"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_TWO_ILLNESSES,","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"kwangthiag"},"content":"                + BIRTHDATE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_ONE_ILLNESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_GENDER, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"                        PREFIX_BIRTHDATE, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":149,"author":{"gitId":"trgao"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"trgao"},"content":"                        + EMAIL_DESC_AMY + BIRTHDATE_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"trgao"},"content":"                + BIRTHDATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"kwangthiag"},"content":"                + TAG_DESC_TWO_ILLNESSES, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"trgao"},"content":"        // invalid gender","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_GENDER_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"trgao"},"content":"                + BIRTHDATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"kwangthiag"},"content":"                + TAG_DESC_TWO_ILLNESSES, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"trgao"},"content":"                + BIRTHDATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"kwangthiag"},"content":"                + TAG_DESC_TWO_ILLNESSES, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"trgao"},"content":"                + BIRTHDATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"kwangthiag"},"content":"                + TAG_DESC_TWO_ILLNESSES, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"trgao"},"content":"        // invalid birthdate","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"trgao"},"content":"                + INVALID_BIRTHDATE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"kwangthiag"},"content":"                + TAG_DESC_TWO_ILLNESSES, Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"trgao"},"content":"                + BIRTHDATE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"kwangthiag"},"content":"                + TAG_DESC_TWO_ILLNESSES, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"trgao"},"content":"                + BIRTHDATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":214,"author":{"gitId":"trgao"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FLU, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":218,"author":{"gitId":"trgao"},"content":"                + BIRTHDATE_DESC_BOB + ADDRESS_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":221,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"kwangthiag"},"content":"                + EMAIL_DESC_BOB + BIRTHDATE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_TWO_ILLNESSES,","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kwangthiag":12,"licongshen12":1,"-":169,"trgao":43}},{"path":"src/test/java/seedu/address/logic/parser/personparser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"        assertParseSuccess(parser, \" 1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        assertParseFailure(","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"                parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"licongshen12":1,"-":28,"trgao":4}},{"path":"src/test/java/seedu/address/logic/parser/personparser/DiagnoseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC_TWO_INVALID_ILLNESSES;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DUPLICATE_ILLNESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ONE_ILLNESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TWO_ILLNESSES;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.createTypicalIllnessSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.createTypicalIllnessesSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.personcommands.DiagnoseCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"public class DiagnoseCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DiagnoseCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"    private DiagnoseCommandParser parser \u003d new DiagnoseCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"        // no index specified","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, TAG_DESC_ONE_ILLNESS, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"        // negative index","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"        // zero index","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"    public void parse_invalidValues_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \" 1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid illness","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \" 1\" + INVALID_TAG_DESC_TWO_INVALID_ILLNESSES,","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid illnesses","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"    public void parse_allFieldsSpecifiedOneIllness_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_ONE_ILLNESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand expectedCommand \u003d new DiagnoseCommand(targetIndex, createTypicalIllnessSet());","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kwangthiag"},"content":"    public void parse_allFieldsSpecifiedMultipleIllnesses_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kwangthiag"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"kwangthiag"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_TWO_ILLNESSES;","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand expectedCommand \u003d new DiagnoseCommand(targetIndex, createTypicalIllnessesSet());","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kwangthiag"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kwangthiag"},"content":"    public void parse_allFieldsSpecifiedDuplicateIllness_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kwangthiag"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kwangthiag"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_DUPLICATE_ILLNESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kwangthiag"},"content":"        DiagnoseCommand expectedCommand \u003d new DiagnoseCommand(targetIndex, createTypicalIllnessSet());","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kwangthiag"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kwangthiag":93}},{"path":"src/test/java/seedu/address/logic/parser/personparser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ONE_ILLNESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TWO_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, \" 1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, \" 1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, \" 1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, \" 1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        assertParseFailure(","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"                parser, \" 1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, \" 1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"        assertParseFailure(","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"                parser, \" 1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":96,"author":{"gitId":"kwangthiag"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"kwangthiag"},"content":"                + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"kwangthiag"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"kwangthiag"},"content":"                + TAG_DESC_ONE_ILLNESS + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_ONE_ILLNESS","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"kwangthiag"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_TWO_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"trgao"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"trgao"},"content":"                + INVALID_EMAIL_DESC + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kwangthiag":7,"licongshen12":2,"-":153,"trgao":15}},{"path":"src/test/java/seedu/address/logic/parser/personparser/FindIllnessCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"import seedu.address.logic.commands.personcommands.FindIllnessCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.person.IllnessContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"public class FindIllnessCommandParserTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    private FindIllnessCommandParser parser \u003d new FindIllnessCommandParser();","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"                FindIllnessCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        FindIllnessCommand expectedFindIllnessCommand \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"                new FindIllnessCommand(new IllnessContainsKeywordsPredicate(Arrays.asList(\"Fever\", \"Headache\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"        assertParseSuccess(parser, \"Fever Headache\", expectedFindIllnessCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"        assertParseSuccess(parser, \" \\n Fever \\n \\t Headache  \\t\", expectedFindIllnessCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"billieboy7":35}},{"path":"src/test/java/seedu/address/logic/parser/personparser/FindPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import seedu.address.logic.commands.personcommands.FindPatientCommand;","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"public class FindPatientCommandParserTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    private FindPatientCommandParser parser \u003d new FindPatientCommandParser();","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        FindPatientCommand expectedFindPatientCommand \u003d","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"                new FindPatientCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindPatientCommand);","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindPatientCommand);","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":25,"trgao":10}},{"path":"src/test/java/seedu/address/logic/parser/personparser/SortPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_SORT_ATTRIBUTE;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.personcommands.SortPatientCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"public class SortPatientCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"    private static final String INVALID_PREAMBLE_1 \u003d \" ascending\";","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"    private static final String INVALID_ATTRIBUTE_DESC \u003d \" by\u003d friend\";","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"    private static final String VALID_PREAMBLE_1 \u003d \" asc\";","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"    private static final String VALID_ATTRIBUTE_DESC \u003d \" by\u003d name\";","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"    private static final String VALID_ATTRIBUTE_1 \u003d \"name\";","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"    private SortPatientCommandParser parser \u003d new SortPatientCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, INVALID_PREAMBLE_1 + VALID_ATTRIBUTE_DESC,","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"    public void parse_invalidAttribute_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, VALID_PREAMBLE_1 + INVALID_ATTRIBUTE_DESC,","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"                String.format(MESSAGE_INVALID_SORT_ATTRIBUTE, SortPatientCommandParser.printAttributes()));","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"    public void parse_validPreambleAndAttribute_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"        SortPatientCommand expectedSortPatientCommand \u003d new SortPatientCommand(true, VALID_ATTRIBUTE_1);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"        assertParseSuccess(parser, VALID_PREAMBLE_1 + VALID_ATTRIBUTE_DESC, expectedSortPatientCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"kwangthiag":36}},{"path":"src/test/java/seedu/address/logic/parser/personparser/UndiagnoseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwangthiag"},"content":"package seedu.address.logic.parser.personparser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC_TWO_INVALID_ILLNESSES;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DUPLICATE_ILLNESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ONE_ILLNESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TWO_ILLNESSES;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.createTypicalIllnessSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.createTypicalIllnessesSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kwangthiag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.logic.commands.personcommands.UndiagnoseCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kwangthiag"},"content":"public class UndiagnoseCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kwangthiag"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kwangthiag"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kwangthiag"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndiagnoseCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kwangthiag"},"content":"    private UndiagnoseCommandParser parser \u003d new UndiagnoseCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kwangthiag"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kwangthiag"},"content":"        // no index specified","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"        // negative index","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"        // zero index","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kwangthiag"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kwangthiag"},"content":"    public void parse_invalidValues_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \" 1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid illness","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"        assertParseFailure(parser, \" 1\" + INVALID_TAG_DESC_TWO_INVALID_ILLNESSES,","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kwangthiag"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid illnesses","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"    public void parse_allFieldsSpecifiedOneIllness_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_ONE_ILLNESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand expectedCommand \u003d new UndiagnoseCommand(targetIndex, createTypicalIllnessSet());","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kwangthiag"},"content":"    public void parse_allFieldsSpecifiedMultipleIllnesses_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"kwangthiag"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"kwangthiag"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_TWO_ILLNESSES;","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand expectedCommand \u003d new UndiagnoseCommand(targetIndex, createTypicalIllnessesSet());","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"kwangthiag"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kwangthiag"},"content":"    public void parse_allFieldsSpecifiedDuplicateIllness_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kwangthiag"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kwangthiag"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_DUPLICATE_ILLNESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kwangthiag"},"content":"        UndiagnoseCommand expectedCommand \u003d new UndiagnoseCommand(targetIndex, createTypicalIllnessSet());","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kwangthiag"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"kwangthiag"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kwangthiag":94}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FEVER;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FEVER)","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson((Person) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FEVER)","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList()","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"                + \", appointments\u003d\" + addressBook.getAppointmentList() + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"        private final ObservableList\u003cAppointment\u003e appointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"trgao"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"        public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":"            return appointments;","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":103,"trgao":13}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, true));","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson((Person) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":129,"trgao":4}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"public class AppointmentDescriptionTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppointmentDescription(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AppointmentDescription(invalidDescription));","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    public void isValidAppointmentDescription() {","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        // null name","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppointmentDescription.isValidAppointmentDescription(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        // invalid description","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"        assertFalse(AppointmentDescription.isValidAppointmentDescription(\"\")); // empty string","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"        assertFalse(AppointmentDescription.isValidAppointmentDescription(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        assertFalse(AppointmentDescription.isValidAppointmentDescription(\"t*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        // valid name","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        assertTrue(AppointmentDescription.isValidAppointmentDescription(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        assertTrue(AppointmentDescription.isValidAppointmentDescription(\"12345\")); // numbers only","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        assertTrue(AppointmentDescription.isValidAppointmentDescription(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        assertTrue(AppointmentDescription.isValidAppointmentDescription(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        assertTrue(AppointmentDescription.isValidAppointmentDescription(\"David Roger Jackson Ray 2nd\")); // long names","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"    public void equals() {","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"        AppointmentDescription description \u003d new AppointmentDescription(\"Valid Name\");","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        assertTrue(description.equals(new AppointmentDescription(\"Valid Name\")));","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        assertTrue(description.equals(description));","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        assertFalse(description.equals(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        assertFalse(description.equals(5.0f));","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"        assertFalse(description.equals(new AppointmentDescription(\"Other Valid Name\")));","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"trgao":59}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DESCRIPTION;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_PRIORITY;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT1;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT2;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"public class AppointmentTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    public void equals() {","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"        Appointment appointmentCopy \u003d new AppointmentBuilder(APPOINTMENT1).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        assertTrue(APPOINTMENT1.equals(appointmentCopy));","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        assertTrue(APPOINTMENT1.equals(APPOINTMENT1));","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        assertFalse(APPOINTMENT1.equals(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        assertFalse(APPOINTMENT1.equals(5));","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        assertFalse(APPOINTMENT1.equals(APPOINTMENT2));","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(APPOINTMENT1).withPatient(BENSON).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"        assertFalse(APPOINTMENT1.equals(editedAppointment));","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"        // different appointment time -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        editedAppointment \u003d new AppointmentBuilder(APPOINTMENT1)","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"                .withAppointmentTime(VALID_APPOINTMENT_START, VALID_APPOINTMENT_END).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        assertFalse(APPOINTMENT1.equals(editedAppointment));","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        editedAppointment \u003d new AppointmentBuilder(APPOINTMENT1)","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"                .withDescription(VALID_APPOINTMENT_DESCRIPTION).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        assertFalse(APPOINTMENT1.equals(editedAppointment));","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"        // different priority -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        editedAppointment \u003d new AppointmentBuilder(APPOINTMENT1).withPriorityTag(VALID_APPOINTMENT_PRIORITY).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        assertFalse(APPOINTMENT1.equals(editedAppointment));","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"        String expected \u003d Appointment.class.getCanonicalName() + \"{patient\u003d\" + APPOINTMENT1.getPerson()","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"                + \", appointmentTime\u003d\" + APPOINTMENT1.getAppointmentTime()","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"                + \", description\u003d\" + APPOINTMENT1.getAppointmentDescription()","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"                + \", priority\u003d\" + APPOINTMENT1.getPriorityTag() + \"}\";","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"        assertEquals(expected, APPOINTMENT1.toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"trgao":65}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"public class AppointmentTimeTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppointmentTime(null, null));","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"        LocalDateTime invalidStart \u003d LocalDateTime.parse(\"2023-01-01T10:00\");","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"        LocalDateTime invalidEnd \u003d LocalDateTime.parse(\"2023-01-01T09:00\");","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AppointmentTime(invalidStart, invalidEnd));","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    public void isValidAppointmentTime() {","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        // null name","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppointmentTime.isValidAppointmentTime(null, null));","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        LocalDateTime validStart \u003d LocalDateTime.parse(\"2023-01-01T10:00\");","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        LocalDateTime validEnd \u003d LocalDateTime.parse(\"2023-01-01T11:00\");","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        // invalid time","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        assertFalse(AppointmentTime.isValidAppointmentTime(validStart, validStart)); // same start and end","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        assertFalse(AppointmentTime.isValidAppointmentTime(validEnd, validStart)); // start is later than end","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        // valid name","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        assertTrue(AppointmentTime.isValidAppointmentTime(validStart, validEnd));","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    public void equals() {","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        LocalDateTime validStart \u003d LocalDateTime.parse(\"2023-01-01T10:00\");","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        LocalDateTime validEnd \u003d LocalDateTime.parse(\"2023-01-01T11:00\");","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        AppointmentTime time \u003d new AppointmentTime(validStart, validEnd);","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        assertTrue(time.equals(new AppointmentTime(validStart, validEnd)));","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        assertTrue(time.equals(time));","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        assertFalse(time.equals(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"        assertFalse(time.equals(5.0f));","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"        assertFalse(time.equals(new AppointmentTime(","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"                LocalDateTime.parse(\"2023-01-01T12:00\"), LocalDateTime.parse(\"2023-01-01T14:00\"))));","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"trgao":63}},{"path":"src/test/java/seedu/address/model/appointment/PatientContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import java.util.List;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"public class PatientContainsKeywordsPredicateTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    public void equals() {","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"        PatientContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"                new PatientContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"        PatientContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"                new PatientContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        PatientContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"                new PatientContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    public void test_patientContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        // One keyword","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"                new PatientContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withPatient(ALICE).build()));","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withPatient(ALICE).build()));","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withPatient(ALICE).build()));","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"    public void test_patientDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"        // Zero keywords","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"        PatientContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"                new PatientContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withPatient(ALICE).build()));","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"        predicate \u003d new PatientContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withPatient(ALICE).build()));;","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"        PatientContainsKeywordsPredicate predicate \u003d new PatientContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"        String expected \u003d PatientContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"trgao":82}},{"path":"src/test/java/seedu/address/model/appointment/UniqueAppointmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT1;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT2;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT3;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT4;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import java.util.List;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"public class UniqueAppointmentListTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    private final UniqueAppointmentList uniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    public void contains_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.contains(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    public void contains_appointmentNotInList_returnsFalse() {","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        assertFalse(uniqueAppointmentList.contains(APPOINTMENT1));","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    public void contains_appointmentInList_returnsTrue() {","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"        assertTrue(uniqueAppointmentList.contains(APPOINTMENT1));","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"    public void add_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.add(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"    public void add_duplicateAppointment_throwsDuplicateAppointmentException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e uniqueAppointmentList.add(APPOINTMENT1));","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"    public void setAppointment_nullTargetAppointment_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointment(null, APPOINTMENT1));","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"    public void setAppointment_nullAppointmentPerson_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointment(APPOINTMENT1, null));","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"    public void setAppointment_targetAppointmentNotInList_throwsAppointmentNotFoundException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"        assertThrows(AppointmentNotFoundException.class, () -\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"                uniqueAppointmentList.setAppointment(APPOINTMENT1, APPOINTMENT1));","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"    public void setAppointment_editedAppointmentIsSamePerson_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.setAppointment(APPOINTMENT1, APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"    public void setAppointment_editedAppointmentHasSameIdentity_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(APPOINTMENT1)","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"                .withDescription(\"Another appointment\")","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"                .build();","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.setAppointment(APPOINTMENT1, editedAppointment);","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"        expectedUniqueAppointmentList.add(editedAppointment);","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"    public void setAppointment_editedAppointmentHasDifferentIdentity_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.setAppointment(APPOINTMENT1, APPOINTMENT2);","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"    public void setAppointment_editedAppointmentHasNonUniqueIdentity_throwsDuplicateAppointmentException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        assertThrows(DuplicateAppointmentException.class, ()","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"                -\u003e uniqueAppointmentList.setAppointment(APPOINTMENT1, APPOINTMENT2));","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"    public void remove_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":110,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.remove((Appointment) null));","lastModifiedDate":"2023-11-06"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.remove((Person) null));","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"    public void remove_appointmentDoesNotExist_throwsAppointmentNotFoundException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":116,"author":{"gitId":"trgao"},"content":"        assertThrows(AppointmentNotFoundException.class, () -\u003e uniqueAppointmentList.remove(APPOINTMENT1));","lastModifiedDate":"2023-11-06"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":118,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":119,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"trgao"},"content":"    public void remove_existingAppointment_removesAppointment() {","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":122,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.remove(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":123,"author":{"gitId":"trgao"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-06"},{"lineNumber":124,"author":{"gitId":"trgao"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2023-11-06"},{"lineNumber":125,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":126,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":127,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"trgao"},"content":"    public void setAppointments_nullUniqueAppointmentList_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":129,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-11-06"},{"lineNumber":130,"author":{"gitId":"trgao"},"content":"                -\u003e uniqueAppointmentList.setAppointments((UniqueAppointmentList) null));","lastModifiedDate":"2023-11-06"},{"lineNumber":131,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":132,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":133,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":134,"author":{"gitId":"trgao"},"content":"    public void setAppointments_uniqueAppointmentList_replacesOwnListWithProvidedUniqueAppointmentList() {","lastModifiedDate":"2023-11-06"},{"lineNumber":135,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":136,"author":{"gitId":"trgao"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-06"},{"lineNumber":137,"author":{"gitId":"trgao"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-06"},{"lineNumber":138,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.setAppointments(expectedUniqueAppointmentList);","lastModifiedDate":"2023-11-06"},{"lineNumber":139,"author":{"gitId":"trgao"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2023-11-06"},{"lineNumber":140,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":141,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":142,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":143,"author":{"gitId":"trgao"},"content":"    public void setAppointments_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":144,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAppointmentList.setAppointments((List\u003cAppointment\u003e) null));","lastModifiedDate":"2023-11-06"},{"lineNumber":145,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":147,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":148,"author":{"gitId":"trgao"},"content":"    public void setAppointments_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-11-06"},{"lineNumber":149,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":150,"author":{"gitId":"trgao"},"content":"        List\u003cAppointment\u003e appointmentList \u003d Collections.singletonList(APPOINTMENT2);","lastModifiedDate":"2023-11-06"},{"lineNumber":151,"author":{"gitId":"trgao"},"content":"        uniqueAppointmentList.setAppointments(appointmentList);","lastModifiedDate":"2023-11-06"},{"lineNumber":152,"author":{"gitId":"trgao"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-06"},{"lineNumber":153,"author":{"gitId":"trgao"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-06"},{"lineNumber":154,"author":{"gitId":"trgao"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2023-11-06"},{"lineNumber":155,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":156,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":157,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":158,"author":{"gitId":"trgao"},"content":"    public void setAppointments_listWithDuplicateAppointments_throwsDuplicateAppointmentException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":159,"author":{"gitId":"trgao"},"content":"        List\u003cAppointment\u003e listWithDuplicateAppointments \u003d Arrays.asList(APPOINTMENT1, APPOINTMENT1);","lastModifiedDate":"2023-11-06"},{"lineNumber":160,"author":{"gitId":"trgao"},"content":"        assertThrows(DuplicateAppointmentException.class, ()","lastModifiedDate":"2023-11-06"},{"lineNumber":161,"author":{"gitId":"trgao"},"content":"                -\u003e uniqueAppointmentList.setAppointments(listWithDuplicateAppointments));","lastModifiedDate":"2023-11-06"},{"lineNumber":162,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":163,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":164,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":165,"author":{"gitId":"trgao"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":166,"author":{"gitId":"trgao"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-11-06"},{"lineNumber":167,"author":{"gitId":"trgao"},"content":"                -\u003e uniqueAppointmentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-11-06"},{"lineNumber":168,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":169,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":170,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":171,"author":{"gitId":"trgao"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-06"},{"lineNumber":172,"author":{"gitId":"trgao"},"content":"        assertEquals(uniqueAppointmentList.asUnmodifiableObservableList().toString(), uniqueAppointmentList.toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":173,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":174,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"kwangthiag"},"content":"    public void sort_ascendingByTime_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":177,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT3);","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT4);","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"kwangthiag"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT3);","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT4);","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.sort(true, \"time\");","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"kwangthiag"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"kwangthiag"},"content":"    public void sort_descendingByNameWithLowercase_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT3);","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT4);","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"kwangthiag"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT4);","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT3);","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.sort(false, \"time\");","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"kwangthiag"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"kwangthiag"},"content":"    public void sort_ascendingByPriority_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-09"},{"lineNumber":207,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT3);","lastModifiedDate":"2023-11-09"},{"lineNumber":208,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT4);","lastModifiedDate":"2023-11-09"},{"lineNumber":209,"author":{"gitId":"kwangthiag"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-09"},{"lineNumber":210,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-09"},{"lineNumber":211,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT3);","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT4);","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.sort(true, \"priority\");","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"kwangthiag"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2023-11-09"},{"lineNumber":216,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":217,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":218,"author":{"gitId":"kwangthiag"},"content":"    public void sort_descendingByBirthday_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":219,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-09"},{"lineNumber":220,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT3);","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.add(APPOINTMENT4);","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"kwangthiag"},"content":"        UniqueAppointmentList expectedUniqueAppointmentList \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT1);","lastModifiedDate":"2023-11-09"},{"lineNumber":225,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT4);","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT3);","lastModifiedDate":"2023-11-09"},{"lineNumber":227,"author":{"gitId":"kwangthiag"},"content":"        expectedUniqueAppointmentList.add(APPOINTMENT2);","lastModifiedDate":"2023-11-09"},{"lineNumber":228,"author":{"gitId":"kwangthiag"},"content":"        uniqueAppointmentList.sort(false, \"priority\");","lastModifiedDate":"2023-11-09"},{"lineNumber":229,"author":{"gitId":"kwangthiag"},"content":"        assertEquals(expectedUniqueAppointmentList, uniqueAppointmentList);","lastModifiedDate":"2023-11-09"},{"lineNumber":230,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"kwangthiag":59,"trgao":172}},{"path":"src/test/java/seedu/address/model/person/IllnessContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"public class IllnessContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"    public void equals() {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"        List\u003cString\u003e firstPredicateKeywordListUpperCase \u003d Collections.singletonList(\"FIRST\");","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"        List\u003cString\u003e firstPredicateKeywordListMixedCase \u003d Collections.singletonList(\"FiRsT\");","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"                new IllnessContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"                new IllnessContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate firstPredicateUpperCase \u003d","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"                new IllnessContainsKeywordsPredicate(firstPredicateKeywordListUpperCase);","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate firstPredicateMixedCase \u003d","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"                new IllnessContainsKeywordsPredicate(firstPredicateKeywordListMixedCase);","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"                new IllnessContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        // different illness -\u003e returns false","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"        // same values but Upper Case - Same predicate since keywords are meant to be case-insensitive","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"        assertTrue(firstPredicate.equals(firstPredicateUpperCase));","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"        // same values but Mixed Case - Same predicate since keywords are meant to be case-insensitive","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"        assertTrue(firstPredicate.equals(firstPredicateMixedCase));","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"    public void test_illnessContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        // One keyword","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate predicate \u003d new IllnessContainsKeywordsPredicate(Collections","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"                .singletonList(\"fever\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"fever\").build()));","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"        predicate \u003d new IllnessContainsKeywordsPredicate(Arrays.asList(\"fever\", \"headache\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"fever headache\").build()));","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"        predicate \u003d new IllnessContainsKeywordsPredicate(Arrays.asList(\"fever\", \"headache\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"fever appendicitis\").build()));","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"        // Keywords that make part of the illness (Keyword \u0027flu\u0027 should return patients with \u0027influenza\u0027 too)","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"        predicate \u003d new IllnessContainsKeywordsPredicate(Arrays.asList(\"flu\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"influenza\").build()));","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"        // Keywords with Cases Mixed - Test for Case Insensitivity","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"        predicate \u003d new IllnessContainsKeywordsPredicate(Arrays.asList(\"fEvEr\", \"HEADache\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"fever headache\").build()));","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"    public void test_illnessDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"        // Keywords do not match any illness","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"        IllnessContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"                new IllnessContainsKeywordsPredicate(Arrays.asList(\"fever\", \"headache\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"flu appendicitis\").build()));","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"        // Typo in keyword leads to false result","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"        predicate \u003d new IllnessContainsKeywordsPredicate(Collections","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"                .singletonList(\"fevar\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"fever\").build()));","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"billieboy7":91}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FEVER;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FEVER).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_FEVER).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName()","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"                + \", gender\u003d\" + ALICE.getGender() + \", birthdate\u003d\" + ALICE.getBirthdate()","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"                + \", phone\u003d\" + ALICE.getPhone() + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"                + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":94,"trgao":8}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FEVER;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.testutil.TypicalPersons.LOWERCASE_BENJAMIN;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains((Person) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FEVER)","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FEVER)","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":179,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"kwangthiag"},"content":"    public void sort_ascendingByName_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"kwangthiag"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.sort(true, \"name\");","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"kwangthiag"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"kwangthiag"},"content":"    public void sort_descendingByNameWithLowercase_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(BENSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(LOWERCASE_BENJAMIN);","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"kwangthiag"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(BENSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(LOWERCASE_BENJAMIN);","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.sort(false, \"name\");","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"kwangthiag"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":207,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":208,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":209,"author":{"gitId":"kwangthiag"},"content":"    public void sort_ascendingByBirthday_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":210,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":211,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(BENSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(DANIEL);","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"kwangthiag"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-11-09"},{"lineNumber":216,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":217,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(BENSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":218,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(DANIEL);","lastModifiedDate":"2023-11-09"},{"lineNumber":219,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.sort(true, \"birthday\");","lastModifiedDate":"2023-11-09"},{"lineNumber":220,"author":{"gitId":"kwangthiag"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"kwangthiag"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"kwangthiag"},"content":"    public void sort_descendingByBirthday_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":225,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(BENSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":227,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-11-09"},{"lineNumber":228,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.add(DANIEL);","lastModifiedDate":"2023-11-09"},{"lineNumber":229,"author":{"gitId":"kwangthiag"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-11-09"},{"lineNumber":230,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(DANIEL);","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(BENSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":232,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":233,"author":{"gitId":"kwangthiag"},"content":"        expectedUniquePersonList.add(CARL);","lastModifiedDate":"2023-11-09"},{"lineNumber":234,"author":{"gitId":"kwangthiag"},"content":"        uniquePersonList.sort(false, \"birthday\");","lastModifiedDate":"2023-11-09"},{"lineNumber":235,"author":{"gitId":"kwangthiag"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-11-09"},{"lineNumber":236,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kwangthiag":62,"-":171,"trgao":4}},{"path":"src/test/java/seedu/address/model/tag/PriorityTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"public class PriorityTagTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PriorityTag(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"        String invalidPriorityTagName \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PriorityTag(invalidPriorityTagName));","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    public void isValidPriorityTagName() {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"        // null tag name","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"        assertThrows(NullPointerException.class, () -\u003e PriorityTag.isValidTagName(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"billieboy7":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.commons.util.DateUtil.dateTimeToString;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.Messages.MESSAGE_PATIENT_DOES_NOT_EXIST;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT1;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.AppointmentDescription;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"public class JsonAdaptedAppointmentTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    private static final AddressBook ADDRESS_BOOK \u003d new AddressBookBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"            .withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    private static final String INVALID_PATIENT \u003d \"R@chel\";","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    private static final String NON_EXISTENT_PATIENT \u003d \"Gabriel\";","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    private static final String INVALID_START \u003d \"2023-10-10 10:00\";","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    private static final String INVALID_END \u003d \"2023-10-10 11:00\";","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"!@#!\";","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    private static final String VALID_PATIENT \u003d APPOINTMENT1.getPatientName().fullName;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    private static final String VALID_START \u003d dateTimeToString(APPOINTMENT1.getAppointmentTime().getStart());","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"    private static final String VALID_END \u003d dateTimeToString(APPOINTMENT1.getAppointmentTime().getEnd());","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    private static final String VALID_DESCRIPTION \u003d APPOINTMENT1.getAppointmentDescription().value;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    private static final String VALID_PRIORITYTAG \u003d APPOINTMENT1.getPriorityTag().toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    public void toModelType_validAppointmentDetails_returnsAppointment() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(APPOINTMENT1);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"        assertEquals(APPOINTMENT1, appointment.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"    public void toModelType_invalidPatient_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"        JsonAdaptedAppointment appointment1 \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"                new JsonAdaptedAppointment(INVALID_PATIENT, VALID_START, VALID_END, VALID_DESCRIPTION,","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"                        VALID_PRIORITYTAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        String expectedMessage1 \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage1, () -\u003e appointment1.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        JsonAdaptedAppointment appointment2 \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"                new JsonAdaptedAppointment(NON_EXISTENT_PATIENT, VALID_START, VALID_END, VALID_DESCRIPTION,","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"                        VALID_PRIORITYTAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class,","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"                MESSAGE_PATIENT_DOES_NOT_EXIST, () -\u003e appointment2.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"    public void toModelType_nullPatient_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"                new JsonAdaptedAppointment(null, VALID_START, VALID_END, VALID_DESCRIPTION,","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"                        VALID_PRIORITYTAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e appointment.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"        JsonAdaptedAppointment appointment1 \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"                new JsonAdaptedAppointment(VALID_PATIENT, INVALID_START, VALID_END, VALID_DESCRIPTION,","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"                        VALID_PRIORITYTAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d AppointmentTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e appointment1.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"        JsonAdaptedAppointment appointment2 \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"                new JsonAdaptedAppointment(VALID_PATIENT, VALID_START, INVALID_END, VALID_DESCRIPTION,","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"                        VALID_PRIORITYTAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e appointment2.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"    public void toModelType_nullTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        JsonAdaptedAppointment appointment1 \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"                new JsonAdaptedAppointment(VALID_PATIENT, null, VALID_END, VALID_DESCRIPTION,","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"                        VALID_PRIORITYTAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, AppointmentTime.class.getSimpleName());","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e appointment1.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"        JsonAdaptedAppointment appointment2 \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"billieboy7"},"content":"                new JsonAdaptedAppointment(VALID_PATIENT, VALID_START, null, VALID_DESCRIPTION,","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"billieboy7"},"content":"                        VALID_PRIORITYTAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e appointment2.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"billieboy7"},"content":"                new JsonAdaptedAppointment(VALID_PATIENT, VALID_START, VALID_END, INVALID_DESCRIPTION,","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"billieboy7"},"content":"                        VALID_PRIORITYTAG);","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d AppointmentDescription.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e appointment.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"    public void toModelType_nullPriorityTag_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_PATIENT, VALID_START, VALID_END,","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"                VALID_DESCRIPTION, null);","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, PriorityTag.class.getSimpleName());","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e appointment.toModelType(ADDRESS_BOOK));","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"billieboy7":23,"trgao":94}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    private static final String INVALID_BIRTHDATE \u003d \"12-20-2001\";","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    private static final String INVALID_GENDER \u003d \"male\";","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    private static final String VALID_BIRTHDATE \u003d BENSON.getBirthdate().toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_GENDER, VALID_BIRTHDATE, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_GENDER, VALID_BIRTHDATE, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_GENDER, VALID_BIRTHDATE, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_BIRTHDATE, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"    public void toModelType_invalidBirthdate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, INVALID_BIRTHDATE, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d Birthdate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"    public void toModelType_nullBirthdate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, null, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthdate.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_BIRTHDATE, INVALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_BIRTHDATE, null,","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"trgao"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"trgao"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_BIRTHDATE, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"trgao"},"content":"                        INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"trgao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_BIRTHDATE, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"trgao"},"content":"                null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"trgao"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_BIRTHDATE, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"trgao"},"content":"                        VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"trgao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_BIRTHDATE, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"trgao"},"content":"                VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"trgao"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_BIRTHDATE, VALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"trgao"},"content":"                        VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":110,"trgao":49}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT3;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT4;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"        original.addAppointment(APPOINTMENT3);","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"        original.removeAppointment(APPOINTMENT3);","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"        original.addAppointment(APPOINTMENT4);","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":110,"trgao":5}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100, false));","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"mediflowr.json\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, true));","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, true));","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":119,"trgao":4}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, true));","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"trgao":1}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"licongshen12"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_DESCRIPTION_ONE;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.AppointmentDescription;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":" * Apartment builder helps to build test appointment objects.","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"    private static final AppointmentTime DEFAULT_TIME \u003d new AppointmentTimeBuilder().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"    private static final Person DEFAULT_PATIENT \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"licongshen12"},"content":"    private static final String DEFAULT_PATIENT_STRING \u003d DEFAULT_PATIENT.getName().fullName;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"licongshen12"},"content":"    private static final String DEFAULT_DESCRIPTION \u003d VALID_DESCRIPTION_ONE;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"    // Identity fields","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    private AppointmentTime appointmentTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    private Person patient;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    private PriorityTag priorityTag;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"licongshen12"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"    private AppointmentDescription appointmentDescription;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"     * Creates a {@code AppointmentBuilder} with default settings.","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"        appointmentTime \u003d DEFAULT_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"        patient \u003d DEFAULT_PATIENT;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"        appointmentDescription \u003d new AppointmentDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"     * Creates a {@code AppointmentBuilder} with data provided by {@code appointment}.","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"    public AppointmentBuilder(Appointment appointment) {","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"billieboy7"},"content":"        appointmentTime \u003d appointment.getAppointmentTime();","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"billieboy7"},"content":"        patient \u003d appointment.getPerson();","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"billieboy7"},"content":"        appointmentDescription \u003d appointment.getAppointmentDescription();","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"billieboy7"},"content":"        priorityTag \u003d appointment.getPriorityTag();","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"billieboy7"},"content":"    public Appointment build() {","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"billieboy7"},"content":"        return new Appointment(this.patient, this.appointmentTime, this.appointmentDescription, this.priorityTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"     * Sets the {@code AppointmentTime} for the Appointment being built.","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"    public AppointmentBuilder withAppointmentTime(String start, String end) {","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"        this.appointmentTime \u003d new AppointmentTimeBuilder().withStart(start).withEnd(end).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"     * Sets the {@code AppointmentTime} for the Appointment being built.","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"    public AppointmentBuilder withAppointmentTime(AppointmentTime appointmentTime) {","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"        this.appointmentTime \u003d this.appointmentTime;","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"        return this;","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"     * Sets the {@code Patient} for the Appointment being built.","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"billieboy7"},"content":"    public AppointmentBuilder withPatient(Person patient) {","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"billieboy7"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"billieboy7"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"billieboy7"},"content":"     * Sets the {@code Description} for the Appointment being built.","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"billieboy7"},"content":"    public AppointmentBuilder withDescription(String description) {","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"billieboy7"},"content":"        this.appointmentDescription \u003d new AppointmentDescription(description);","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"billieboy7"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"billieboy7"},"content":"     * Sets the {@code PriorityTag} for the Appointment being built.","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"billieboy7"},"content":"    public AppointmentBuilder withPriorityTag(String priorityTag) {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"billieboy7"},"content":"        this.priorityTag \u003d new PriorityTag(priorityTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"billieboy7"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"billieboy7":88,"licongshen12":4}},{"path":"src/test/java/seedu/address/testutil/AppointmentTimeBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billieboy7"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static seedu.address.commons.util.DateUtil.parseDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.CURRENT_DATE;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.CURRENT_DATE_PLUS_FOUR_HOURS;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_END_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.appointmentcommands.AppointmentCommandTestUtil.VALID_START_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"billieboy7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"billieboy7"},"content":"import seedu.address.model.appointment.AppointmentTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"billieboy7"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"billieboy7"},"content":" * A utility class to help with building AppointmentTime objects.","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"billieboy7"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"billieboy7"},"content":"public class AppointmentTimeBuilder {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"billieboy7"},"content":"    private static final String DEFAULT_START \u003d VALID_START_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"billieboy7"},"content":"    private static final String DEFAULT_END \u003d VALID_END_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"billieboy7"},"content":"    private static final String DEFAULT_START_TWO \u003d CURRENT_DATE;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"billieboy7"},"content":"    private static final String DEFAULT_END_TWO \u003d CURRENT_DATE_PLUS_FOUR_HOURS;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"billieboy7"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"     * Creates a {@code AppointmentTimeBuilder} with the default details.","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"billieboy7"},"content":"    public AppointmentTimeBuilder() {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"billieboy7"},"content":"        start \u003d parseDateTime(DEFAULT_START);","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"billieboy7"},"content":"        end \u003d parseDateTime(DEFAULT_END);","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"billieboy7"},"content":"     * Initializes the AppointmentTimeBuilder with the data of {@code appointmentTime}.","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"billieboy7"},"content":"    public AppointmentTimeBuilder(AppointmentTime appointmentTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"billieboy7"},"content":"        start \u003d appointmentTime.getStart();","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"billieboy7"},"content":"        end \u003d appointmentTime.getEnd();","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"kwangthiag"},"content":"     * Creates a {@code AppointmentTimeBuilder} with data provided by {@code appointment}.","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"kwangthiag"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"kwangthiag"},"content":"    public AppointmentTimeBuilder(Appointment appointment) {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"        start \u003d appointment.getAppointmentTime().getStart();","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"        end \u003d appointment.getAppointmentTime().getEnd();","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"billieboy7"},"content":"     * Sets the start time of the {@code AppointmentTime} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"billieboy7"},"content":"    public AppointmentTimeBuilder withStart(String stringStart) {","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"billieboy7"},"content":"        this.start \u003d parseDateTime(stringStart);","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"billieboy7"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"billieboy7"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"billieboy7"},"content":"     * Sets the end time of the {@code AppointmentTime} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"billieboy7"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"    public AppointmentTimeBuilder withEnd(String stringEnd) {","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"billieboy7"},"content":"        this.end \u003d parseDateTime(stringEnd);","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"billieboy7"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"billieboy7"},"content":"    public AppointmentTime build() {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"billieboy7"},"content":"        return new AppointmentTime(start, end);","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"billieboy7"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"kwangthiag":9,"billieboy7":61,"trgao":1}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":4,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        descriptor.setBirthdate(person.getBirthdate());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"     * Sets the {@code Birthdate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"    public EditPersonDescriptorBuilder withBirthdate(String birthdate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"        descriptor.setBirthdate(new Birthdate(birthdate));","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kwangthiag":1,"licongshen12":1,"-":76,"trgao":15}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    public static final String DEFAULT_GENDER \u003d \"FEMALE\";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    public static final String DEFAULT_BIRTHDATE \u003d \"2000/10/20\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    private Gender gender;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    private Birthdate birthdate;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        birthdate \u003d new Birthdate(DEFAULT_BIRTHDATE);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"        birthdate \u003d personToCopy.getBirthdate();","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"     * Sets the {@code Birthdate} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"    public PersonBuilder withBirthdate(String birthdate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        this.birthdate \u003d new Birthdate(birthdate);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":119,"author":{"gitId":"trgao"},"content":"        return new Person(name, gender, birthdate, phone, email, address, tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":95,"trgao":27}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"kwangthiag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"licongshen12"},"content":"import seedu.address.logic.commands.personcommands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        sb.append(PREFIX_GENDER + person.getGender().value + \" \");","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        sb.append(PREFIX_BIRTHDATE + person.getBirthdate().value + \" \");","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"kwangthiag"},"content":"        if (!person.getTags().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"            sb.append(PREFIX_ILLNESSES);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"kwangthiag"},"content":"                    s -\u003e sb.append(s.tagName + \", \")","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.value).append(\" \"));","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        descriptor.getBirthdate().ifPresent(","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"                birthdate -\u003e sb.append(PREFIX_BIRTHDATE).append(birthdate.value).append(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kwangthiag":5,"licongshen12":2,"-":47,"trgao":7}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static seedu.address.commons.util.DateUtil.dateTimeToString;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kwangthiag"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"kwangthiag"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":" * A utility class containing a list of {@code Appointment} objects to be used in tests.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"public class TypicalAppointments {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    public static final Appointment APPOINTMENT1 \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"            .withPatient(ALICE).withAppointmentTime(\"2023/10/10 10:00\", \"2023/10/10 11:00\")","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"billieboy7"},"content":"            .withDescription(\"Checkup\").withPriorityTag(\"high\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    public static final Appointment APPOINTMENT2 \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"            .withPatient(BENSON).withAppointmentTime(\"2023/01/29 21:00\", \"2023/01/29 23:30\")","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"billieboy7"},"content":"            .withDescription(\"X-ray Checkup\").withPriorityTag(\"low\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    // Manually added","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"    public static final Appointment APPOINTMENT3 \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"            .withPatient(HOON).withAppointmentTime(\"2021/04/18 15:00\", \"2023/04/18 17:30\")","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"billieboy7"},"content":"            .withDescription(\"Follow-up\").withPriorityTag(\"medium\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    public static final Appointment APPOINTMENT4 \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"            .withPatient(IDA).withAppointmentTime(\"2022/06/13 15:00\", \"2022/06/13 16:30\")","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"billieboy7"},"content":"            .withDescription(\"Follow-up\").withPriorityTag(\"high\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"kwangthiag"},"content":"    public static final Appointment NOCLASHAPPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"kwangthiag"},"content":"            .withPatient(ALICE).withAppointmentTime(\"3000/01/01 10:00\", \"3000/01/01 11:00\")","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"billieboy7"},"content":"            .withDescription(\"Checkup\").withPriorityTag(\"low\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    public static final Appointment TODAYAPPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"            .withPatient(ALICE)","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"            .withAppointmentTime(","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"                    dateTimeToString(LocalDateTime.now()), dateTimeToString(LocalDateTime.now().plusMinutes(5)))","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"            .withDescription(\"Appointment Today\")","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"billieboy7"},"content":"            .withPriorityTag(\"medium\")","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"            .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"    public static final Appointment UPCOMINGAPPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"            .withPatient(ALICE)","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"            .withAppointmentTime(","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"                    dateTimeToString(LocalDateTime.now().plusDays(1)),","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"                    dateTimeToString(LocalDateTime.now().plusDays(1).plusMinutes(5)))","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"            .withDescription(\"Appointment in Future\")","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"billieboy7"},"content":"            .withPriorityTag(\"low\")","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"            .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"    public static final Appointment ANCIENTAPPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"kwangthiag"},"content":"            .withPatient(HOON).withAppointmentTime(\"1800/04/18 15:00\", \"2023/04/18 17:30\")","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"billieboy7"},"content":"            .withDescription(\"Stoned\").withPriorityTag(\"medium\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"kwangthiag"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"kwangthiag"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPOINTMENT1, APPOINTMENT2, APPOINTMENT3, APPOINTMENT4));","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"kwangthiag"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"kwangthiag"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"kwangthiag"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"kwangthiag"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"kwangthiag"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"kwangthiag"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"kwangthiag"},"content":"        return ab;","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"kwangthiag"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"kwangthiag":21,"billieboy7":8,"trgao":46}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"kwangthiag"},"content":"    public static final Index INDEX_FIRST_APPOINTMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"kwangthiag"},"content":"    public static final Index INDEX_SECOND_APPOINTMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"kwangthiag"},"content":"    public static final Index INDEX_THIRD_APPOINTMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kwangthiag":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPICAL_ILLNESS_1;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPICAL_ILLNESS_2;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPICAL_ILLNESS_3;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPICAL_ILLNESS_4;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPICAL_ILLNESS_5;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"billieboy7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPICAL_ILLNESS_6;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FEVER;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FLU;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"            .withGender(\"FEMALE\")","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"            .withPhone(\"94351253\").withBirthdate(\"1999/01/12\")","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"            .withGender(\"MALE\")","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"            .withBirthdate(\"2001/10/20\")","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"kwangthiag"},"content":"    public static final Person LOWERCASE_BENJAMIN \u003d new PersonBuilder().withName(\"benjamin Monk\")","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"kwangthiag"},"content":"            .withGender(\"MALE\")","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"kwangthiag"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"kwangthiag"},"content":"            .withEmail(\"benj@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"kwangthiag"},"content":"            .withBirthdate(\"2001/10/16\")","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"kwangthiag"},"content":"            .withTags(\"cancer\", \"diabetes\").build();","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withGender(\"MALE\")","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").withBirthdate(\"1987/01/02\")","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"            .withAddress(\"wall street\").withTags(\"malaria\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withGender(\"MALE\")","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\").withBirthdate(\"2003/03/28\")","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"            .withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withGender(\"FEMALE\")","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\").withBirthdate(\"1989/05/19\")","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withGender(\"FEMALE\")","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\").withBirthdate(\"2002/06/12\")","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withGender(\"MALE\")","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\").withBirthdate(\"1994/08/23\")","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withGender(\"MALE\")","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"            .withPhone(\"8482424\").withEmail(\"stefan@example.com\").withBirthdate(\"1978/10/20\")","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withGender(\"FEMALE\")","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"            .withPhone(\"8482131\").withEmail(\"hans@example.com\").withBirthdate(\"2009/09/09\")","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withGender(VALID_GENDER_AMY)","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withBirthdate(VALID_BIRTHDATE_AMY)","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FLU).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withBirthdate(VALID_BIRTHDATE_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FEVER, VALID_TAG_FLU)","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":104,"author":{"gitId":"billieboy7"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"billieboy7"},"content":"    public static AddressBook getTypicalAddressBookWithIllness() {","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"billieboy7"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"billieboy7"},"content":"        String[] nameArray \u003d {\"ALICE\", \"BENSON\", \"CARL\", \"DANIEL\", \"ELLE\", \"FIONA\", \"GEORGE\"};","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"billieboy7"},"content":"        String[] illnessArray \u003d {TYPICAL_ILLNESS_1, TYPICAL_ILLNESS_2, TYPICAL_ILLNESS_3, TYPICAL_ILLNESS_4,","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"billieboy7"},"content":"            TYPICAL_ILLNESS_5, TYPICAL_ILLNESS_6};","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"billieboy7"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"billieboy7"},"content":"        for (int i \u003d 0; i \u003c 6; i++) {","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"billieboy7"},"content":"            PersonBuilder pb \u003d new PersonBuilder();","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"billieboy7"},"content":"            Person tempPerson \u003d pb.withName(nameArray[counter]).withTags(illnessArray[counter]).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"billieboy7"},"content":"            ab.addPerson(tempPerson);","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"billieboy7"},"content":"            counter++;","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"billieboy7"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"billieboy7"},"content":"        return ab;","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"billieboy7"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"kwangthiag":6,"billieboy7":21,"-":55,"trgao":37}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"* This is **a project that builds upon a sample project given to Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"* It is named `OutBook`.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"* The project is an ongoing software project for a desktop application (called OutBook) used for managing contact and meeting details.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"* Its purpose is to be a digital personal secretary which organise and keep track of meetings, as well as the people that the user is meeting with.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"* For the detailed documentation of this project, see the **[OutBook Product Website](https://ay2324s1-cs2103t-f12-4.github.io/tp/)**.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F12-4/tp/graph/badge.svg?token\u003dNR777ZD6BZ)](https://codecov.io/gh/AY2324S1-CS2103T-F12-4/tp)","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"howenc":9,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"    String jUnitLauncherVersion \u003d \u00271.10.0\u0027","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"    testImplementation group: \u0027org.junit.platform\u0027, name: \u0027junit-platform-launcher\u0027, version: jUnitLauncherVersion","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jason-raiin":2,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"# About Us","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"### Cheong Howen","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"\u003cimg src\u003d\"images/howenc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"[[github](https://github.com/howenc)]","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"[[portfolio](team/howenc.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"* Responsibilities: In charge of code quality and overall coordination","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"### Huang Jia Can (Jason)","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"\u003cimg src\u003d\"images/jason-raiin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"[[github](http://github.com/jason-raiin)]","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"[[portfolio](team/jason-raiin.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"* Responsibilities: In charge of Logic component","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"### Hwang Qi Zhen","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"\u003cimg src\u003d\"images/qz1004.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"[[github](http://github.com/qz1004)]","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"[[portfolio](team/qz1004.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"* Responsibilities: In charge of Model component","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"### Justin Soong Yoong Kai","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"\u003cimg src\u003d\"images/juzzztinsoong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"[[github](http://github.com/juzzztinsoong)]","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"[[portfolio](team/juzzztinsoong.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"* Responsibilities: In charge of Storage component","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"### Linus Lee","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"\u003cimg src\u003d\"images/lomaply.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"[[github](http://github.com/LoMaply)]","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"[[portfolio](team/lomaply.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"* Responsibilities: In charge of UI component","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"qz1004":25,"-":31,"LoMaply":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"- Table of Contents","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"jason-raiin"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"jason-raiin"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"jason-raiin"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"jason-raiin"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"jason-raiin"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"jason-raiin"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"jason-raiin"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"jason-raiin"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"jason-raiin"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"jason-raiin"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"jason-raiin"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"jason-raiin"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"jason-raiin"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"jason-raiin"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"jason-raiin"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"jason-raiin"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"jason-raiin"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-10-03"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"jason-raiin"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"jason-raiin"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"jason-raiin"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"jason-raiin"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":254,"author":{"gitId":"jason-raiin"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"jason-raiin"},"content":"- has many meetings to keep track of","lastModifiedDate":"2023-10-03"},{"lineNumber":265,"author":{"gitId":"jason-raiin"},"content":"- has a need to manage a significant number of contacts","lastModifiedDate":"2023-10-03"},{"lineNumber":266,"author":{"gitId":"jason-raiin"},"content":"- wants to organise meetings and contacts","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"jason-raiin"},"content":"- can type fast and is comfortable using CLI","lastModifiedDate":"2023-10-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"jason-raiin"},"content":"**Value proposition**: manage and organise contacts and meetings faster than a mouse/GUI driven app","lastModifiedDate":"2023-10-03"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| Priority | As a …​                           | I want to …​                    | So that I can…​                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"jason-raiin"},"content":"| -------- | --------------------------------- | ------------------------------- | ---------------------------------------- |","lastModifiedDate":"2023-10-03"},{"lineNumber":277,"author":{"gitId":"jason-raiin"},"content":"| `[EPIC]` | user who has meetings             | have a meeting schedule         | keep track of them                       |","lastModifiedDate":"2023-10-03"},{"lineNumber":278,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | create new meetings             |                                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":279,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | delete meetings                 |                                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | view meetings                   |                                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":281,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | view a specific meeting         | see more details                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":282,"author":{"gitId":"jason-raiin"},"content":"| `* *`    | user                              | sort my meetings by date        | see which ones come first                |","lastModifiedDate":"2023-10-03"},{"lineNumber":283,"author":{"gitId":"jason-raiin"},"content":"| `[EPIC]` | user who meets people             | have an address book            | keep track of them                       |","lastModifiedDate":"2023-10-03"},{"lineNumber":284,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | create new contacts             |                                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":285,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | delete contacts                 |                                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":286,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | view contacts                   |                                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":287,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | view a specific contact         | see more details                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"jason-raiin"},"content":"| `[EPIC]` | user who has meetings with people | schedule meetings with contacts | keep track of who is attending a meeting |","lastModifiedDate":"2023-10-03"},{"lineNumber":289,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | add contacts to meetings        |                                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":290,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | remove contacts from meetings   |                                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":291,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | user                              | view contacts in meetings       |                                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"jason-raiin"},"content":"| `*`      | user                              | assign named tags to meetings   | organise meetings                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"jason-raiin"},"content":"| `*`      | user                              | filter meetings by tags         | view related meetings together           |","lastModifiedDate":"2023-10-03"},{"lineNumber":294,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":295,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":296,"author":{"gitId":"jason-raiin"},"content":"_{More to be added}_","lastModifiedDate":"2023-10-03"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"jason-raiin"},"content":"### Use case","lastModifiedDate":"2023-10-03"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"jason-raiin"},"content":"**Use case: Add a contact to a meeting**","lastModifiedDate":"2023-10-03"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"jason-raiin"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"jason-raiin"},"content":"1.  User requests to list meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":305,"author":{"gitId":"jason-raiin"},"content":"2.  OutBook shows a list of meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"jason-raiin"},"content":"3.  User requests to list contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"jason-raiin"},"content":"4.  OutBook shows a list of contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"jason-raiin"},"content":"5.  User requests to add a specific contact to a specific meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":309,"author":{"gitId":"jason-raiin"},"content":"6.  OutBook adds the contact to the meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":311,"author":{"gitId":"jason-raiin"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"jason-raiin"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":315,"author":{"gitId":"jason-raiin"},"content":"- 2a. The list of meetings is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":317,"author":{"gitId":"jason-raiin"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":319,"author":{"gitId":"jason-raiin"},"content":"- 4a. The list of contacts is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":320,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":321,"author":{"gitId":"jason-raiin"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"jason-raiin"},"content":"- 5a. The given meeting index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"jason-raiin"},"content":"  - 5a1. OutBook shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"jason-raiin"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"jason-raiin"},"content":"- 5b. The given contact index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":330,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":331,"author":{"gitId":"jason-raiin"},"content":"  - 5b1. OutBook shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":332,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":333,"author":{"gitId":"jason-raiin"},"content":"    Use case resumes at step 4.","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"jason-raiin"},"content":"- 5c. The contact is already in the meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":336,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":337,"author":{"gitId":"jason-raiin"},"content":"  - 5a1. OutBook shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":338,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"jason-raiin"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":340,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":341,"author":{"gitId":"jason-raiin"},"content":"**Use case: Remove contact from a meeting**","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"jason-raiin"},"content":"1.  User requests to list meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"jason-raiin"},"content":"2.  OutBook shows a list of meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":347,"author":{"gitId":"jason-raiin"},"content":"3.  User requests to view details of a specific meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"jason-raiin"},"content":"4.  User requests to remove a specific contact from the meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":349,"author":{"gitId":"jason-raiin"},"content":"5.  OutBook removes the contact from the meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"jason-raiin"},"content":"- 2a. The list of meetings is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":356,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":357,"author":{"gitId":"jason-raiin"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":358,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":359,"author":{"gitId":"jason-raiin"},"content":"- 3a. There are no contacts in the meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"jason-raiin"},"content":"- 4a. The given meeting index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"jason-raiin"},"content":"  - 4a1. OutBook shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"jason-raiin"},"content":"- 4b. The given contact index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":370,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":371,"author":{"gitId":"jason-raiin"},"content":"  - 4b1. OutBook shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":372,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":373,"author":{"gitId":"jason-raiin"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2023-10-03"},{"lineNumber":374,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":375,"author":{"gitId":"jason-raiin"},"content":"_{More to be added}_","lastModifiedDate":"2023-10-03"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"juzzztinsoong"},"content":"**Performance**","lastModifiedDate":"2023-10-05"},{"lineNumber":380,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":381,"author":{"gitId":"juzzztinsoong"},"content":"1.  Should be able to respond to user input within 2 seconds under normal operating conditions.","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"juzzztinsoong"},"content":"2.  Should be able to handle a database of up to 1000 contacts and 500 meetings without a significant performance degradation.","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":384,"author":{"gitId":"juzzztinsoong"},"content":"**Reliability**","lastModifiedDate":"2023-10-05"},{"lineNumber":385,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":386,"author":{"gitId":"juzzztinsoong"},"content":"1.  Data integrity should be ensured under any usage conditions through automatic data backup.","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":388,"author":{"gitId":"juzzztinsoong"},"content":"**Usability**","lastModifiedDate":"2023-10-05"},{"lineNumber":389,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":390,"author":{"gitId":"juzzztinsoong"},"content":"1.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"juzzztinsoong"},"content":"2.  Application GUI should be intuitive wherever possible, to reduce training for new users.","lastModifiedDate":"2023-10-05"},{"lineNumber":392,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"juzzztinsoong"},"content":"**Documentation**","lastModifiedDate":"2023-10-05"},{"lineNumber":394,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":395,"author":{"gitId":"juzzztinsoong"},"content":"1.  User documentation should include a comprehensive user manual.","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"juzzztinsoong"},"content":"2.  Developer documentation should cover the architecture, code structure, and guidelines for future development.","lastModifiedDate":"2023-10-05"},{"lineNumber":397,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":398,"author":{"gitId":"juzzztinsoong"},"content":"**Compatibility**","lastModifiedDate":"2023-10-05"},{"lineNumber":399,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":400,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"jason-raiin"},"content":"_{More to be added}_","lastModifiedDate":"2023-10-03"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"juzzztinsoong"},"content":"- **User Interface (UI)**: The point of interaction between a user and a software application, with both graphical and non-graphical elements.","lastModifiedDate":"2023-10-06"},{"lineNumber":407,"author":{"gitId":"juzzztinsoong"},"content":"- **Application Programming Interface (API)**: A set of rules and tools allowing different software applications to communicate and exchange information.","lastModifiedDate":"2023-10-06"},{"lineNumber":408,"author":{"gitId":"juzzztinsoong"},"content":"- **Command Line Interface (CLI)**: A text-based interface for interacting with a computer program or operating system, where users enter commands.","lastModifiedDate":"2023-10-06"},{"lineNumber":409,"author":{"gitId":"juzzztinsoong"},"content":"- **Graphical User Interface (GUI)**: A visual interface using graphical elements like windows, icons, and buttons for user interaction with a software application.","lastModifiedDate":"2023-10-06"},{"lineNumber":410,"author":{"gitId":"jason-raiin"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-10-03"},{"lineNumber":411,"author":{"gitId":"jason-raiin"},"content":"- **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2023-10-03"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jason-raiin":139,"-":300,"juzzztinsoong":25}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"title: OutBook User Guide","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"OutBook is an app that allows busy professionals to manage their numerous contacts and meeting schedule.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"# Quick start","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"1. Download the latest `outbook.jar` from [here](https://github.com/AY2324S1-CS2103T-F12-4/tp/releases).","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar outbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"   * `listc` : Lists all contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"   * `addc n/John Doe p/98765432 e/johnd@example.com o/NUS` : Adds a contact named `John Doe` to OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"   * `deletec 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"# Features","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"LoMaply"},"content":"## Contact commands","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"LoMaply"},"content":"### Adding a contact: `addc`","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"LoMaply"},"content":"Adds a contact to OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"LoMaply"},"content":"Format: `addc n/NAME p/PHONE_NUMBER e/EMAIL o/ORGANISATION [t/TAG]…​`","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"LoMaply"},"content":"* `addc n/John Doe p/98765432 e/johnd@example.com o/Market Co.`","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"LoMaply"},"content":"* `addc n/Betsy Crowe t/friend e/betsycrowe@example.com o/NUS p/1234567 t/Professor`","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"LoMaply"},"content":"### Listing all persons : `listc`","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"LoMaply"},"content":"Shows a list of all contacts in OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"LoMaply"},"content":"Format: `listc`","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"LoMaply"},"content":"### Deleting a person : `deletec`","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"LoMaply"},"content":"Deletes the specified person from OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"LoMaply"},"content":"Format: `deletec INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"LoMaply"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"LoMaply"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"LoMaply"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"LoMaply"},"content":"* `listc` followed by `delete 2` deletes the 2nd person in the results of the `listc` command.","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"LoMaply"},"content":"* `findc Betsy` followed by `delete 1` deletes the 1st person in the results of the `findc` command.","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"LoMaply"},"content":"### Editing a contact : `editc` [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"LoMaply"},"content":"Edits an existing contact in OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"LoMaply"},"content":"Format: `editc INDEX [n/NAME] [p/PHONE] [e/EMAIL] [o/ORGANISATION] [t/TAG]…​`","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"LoMaply"},"content":"* Edits the contact at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"LoMaply"},"content":"*  `editc 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"LoMaply"},"content":"*  `editc 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"LoMaply"},"content":"### Viewing detailed contact information : `viewc`","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"LoMaply"},"content":"Views detailed information of a contact in OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"LoMaply"},"content":"Format: `viewc INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"LoMaply"},"content":"* Views detailed information of the contact at the specified `INDEX`.","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"LoMaply"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"LoMaply"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"LoMaply"},"content":"* `viewc 2` Displays detailed information related to the 2nd contact on the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"LoMaply"},"content":"### Locating persons by name: `findc`","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"LoMaply"},"content":"Find contacts whose names contain any of the given keywords.","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"LoMaply"},"content":"Format: `findc KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"LoMaply"},"content":"* `findc John` returns `john` and `John Doe`","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"LoMaply"},"content":"* `findc alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"LoMaply"},"content":"## Meeting commands","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"LoMaply"},"content":"### Adding a meeting: `addm`","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"LoMaply"},"content":"Adds a meeting to OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"LoMaply"},"content":"Format: `addc m/TITLE a/LOCATION s/START e/END`","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"LoMaply"},"content":"* `addm m/Lunch a/Cafeteria s/20.09.2023 1200 e/20.09.2023 1300`","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"LoMaply"},"content":"* `addm m/CS2103T meeting a/Zoom call url s/20.09.2023 1000 e/20.09.2023 1200`","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"LoMaply"},"content":"### Listing all meetings : `listm`","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"LoMaply"},"content":"Shows a list of all meetings in OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"LoMaply"},"content":"Format: `listm`","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"LoMaply"},"content":"### Deleting a meeting : `deletem`","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"LoMaply"},"content":"Deletes the specified meeting from OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"LoMaply"},"content":"Format: `deletec INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"LoMaply"},"content":"* Deletes the meeting at the specified `INDEX`.","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"LoMaply"},"content":"* The index refers to the index number shown in the displayed meeting list.","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"LoMaply"},"content":"* `listm` followed by `deletem 2` deletes the 2nd meeting in the results of the `listm` command.","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"LoMaply"},"content":"* `findm Project` followed by `deletem 1` deletes the 1st meeting in the results of the `findm` command.","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"LoMaply"},"content":"### Viewing detailed meeting information : `viewm`","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"LoMaply"},"content":"Views detailed information of a meeting in OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"LoMaply"},"content":"Format: `viewm INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"LoMaply"},"content":"* Views detailed information of the meeting at the specified `INDEX`.","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"LoMaply"},"content":"* The index refers to the index number shown in the displayed meeting list.","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"LoMaply"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"LoMaply"},"content":"* `viewm 2` Displays detailed information related to the 2nd meeting on the list, including current participants.","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"LoMaply"},"content":"### Locating meetings by name: `findm` [to be added soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"LoMaply"},"content":"Find meetings whose title contain any of the given keywords.","lastModifiedDate":"2023-10-03"},{"lineNumber":213,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":214,"author":{"gitId":"LoMaply"},"content":"Format: `findm KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-03"},{"lineNumber":215,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"LoMaply"},"content":"* The search is case-insensitive. e.g `shop` will match `SHOP`","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"LoMaply"},"content":"* The order of the keywords does not matter. e.g. `Shop Meet` will match `Meet Shop`","lastModifiedDate":"2023-10-03"},{"lineNumber":218,"author":{"gitId":"LoMaply"},"content":"* Only the name is searched.","lastModifiedDate":"2023-10-03"},{"lineNumber":219,"author":{"gitId":"LoMaply"},"content":"* Only full words will be matched e.g. `Meet` will not match `Meeting`","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"LoMaply"},"content":"* Meetings matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"LoMaply"},"content":"  e.g. `Shop Meet` will return `Shop at mall`, `Meet client`","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"LoMaply"},"content":"* `findm project` returns `project` and `Project work`","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"LoMaply"},"content":"* `findm zoom meet` returns `Zoom session`, `Zoom meet`, `Meet advisor`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":226,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"LoMaply"},"content":"### Add contact to meeting: `addmc`","lastModifiedDate":"2023-10-03"},{"lineNumber":229,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":230,"author":{"gitId":"LoMaply"},"content":"Assigns contact to meetings as participants.","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"LoMaply"},"content":"Format: `addmc INDEX n/NAME`","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":234,"author":{"gitId":"LoMaply"},"content":"* Adds a contact to the meeting at the specified `INDEX`.","lastModifiedDate":"2023-10-03"},{"lineNumber":235,"author":{"gitId":"LoMaply"},"content":"* The index refers to the index number shown in the displayed meeting list.","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"LoMaply"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":237,"author":{"gitId":"LoMaply"},"content":"* Contacts will be listed in the detailed description of meetings when `viewm` is used.","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"LoMaply"},"content":"* `NAME` must refer to the name of an existing contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":239,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":240,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":241,"author":{"gitId":"LoMaply"},"content":"* `addmc 3 n/Howen` assigns the contact `Howen` as a participant to the 3rd meeting in OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":242,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":243,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"LoMaply"},"content":"### Remove contact from meeting: `rmmc`","lastModifiedDate":"2023-10-03"},{"lineNumber":245,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"LoMaply"},"content":"Removes a contact from a meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":248,"author":{"gitId":"LoMaply"},"content":"Format: `rmmc INDEX n/NAME`","lastModifiedDate":"2023-10-03"},{"lineNumber":249,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":250,"author":{"gitId":"LoMaply"},"content":"* Removes a contact to the meeting at the specified `INDEX`.","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"LoMaply"},"content":"* The index refers to the index number shown in the displayed meeting list.","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"LoMaply"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"LoMaply"},"content":"* Contacts will be listed in the detailed description of meetings when `viewm` is used.","lastModifiedDate":"2023-10-03"},{"lineNumber":254,"author":{"gitId":"LoMaply"},"content":"* `NAME` must refer to the name of an existing contact that is currently a participant in the meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":256,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":257,"author":{"gitId":"LoMaply"},"content":"* `rmmc 3 n/Howen` removes the contact `Howen` from the 3rd meeting in OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":258,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"LoMaply"},"content":"Clears all entries from the displayed list in OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"LoMaply"},"content":"OutBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":278,"author":{"gitId":"LoMaply"},"content":"OutBook data are saved automatically as a JSON file `[JAR file location]/data/outbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-06"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":281,"author":{"gitId":"LoMaply"},"content":"If your changes to the data file makes its format invalid, OutBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-06"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"LoMaply"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous OutBook home folder.","lastModifiedDate":"2023-10-06"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"LoMaply"},"content":"| Action                          | Format, Examples                                                                                                                                      |","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"LoMaply"},"content":"|---------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"LoMaply"},"content":"| **Add contact**                 | `addc n/NAME p/PHONE_NUMBER e/EMAIL o/ORGANISATION [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com o/NUS t/friend t/colleague` |","lastModifiedDate":"2023-10-03"},{"lineNumber":305,"author":{"gitId":"LoMaply"},"content":"| **Add contact to meeting**      | `addmc INDEX n/NAME` \u003cbr\u003e e.g., `addmc 2 n/James Ho`                                                                                                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"LoMaply"},"content":"| **Add meeting**                 | `addc m/TITLE a/LOCATION s/START e/END` \u003cbr\u003e e.g., `addm m/Lunch a/Cafeteria s/20.09.2023 1200 e/20.09.2023 1300`                                     |","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"LoMaply"},"content":"| **Clear**                       | `clear`                                                                                                                                               |","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"LoMaply"},"content":"| **Delete contact**              | `deletec INDEX` \u003cbr\u003e e.g., `deletec 3`                                                                                                                |","lastModifiedDate":"2023-10-03"},{"lineNumber":309,"author":{"gitId":"LoMaply"},"content":"| **Delete meeting**              | `deletem INDEX` \u003cbr\u003e e.g., `deletem 3`                                                                                                                |","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"LoMaply"},"content":"| **Edit contact**                | `editc INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [o/ORGANISATION] [t/TAG]…​`\u003cbr\u003e e.g.,`editc 2 n/James Lee e/jameslee@example.com`                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":311,"author":{"gitId":"LoMaply"},"content":"| **Find contact**                | `findc KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `findc James Jake`                                                                                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"LoMaply"},"content":"| **Find meeting**                | `findm KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `findm Zoom Meet`                                                                                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"LoMaply"},"content":"| **Help**                        | `help`                                                                                                                                                |","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"LoMaply"},"content":"| **List contacts**               | `listc`                                                                                                                                               |","lastModifiedDate":"2023-10-03"},{"lineNumber":315,"author":{"gitId":"LoMaply"},"content":"| **List meetings**               | `listm`                                                                                                                                               |","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"LoMaply"},"content":"| **Remove contact from meeting** | `rmmc INDEX n/NAME` \u003cbr\u003e e.g., `rmmc 2 n/James Ho`                                                                                                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":317,"author":{"gitId":"LoMaply"},"content":"| **View contact details**        | `viewc INDEX` \u003cbr\u003e e.g., `viewc 4`                                                                                                                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"LoMaply"},"content":"| **View meeting details**        | `viewm INDEX` \u003cbr\u003e e.g., `viewm 4`                                                                                                                    |","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"-":149,"LoMaply":169}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"qz1004"},"content":"    content: \"OutBook\";","lastModifiedDate":"2023-10-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"qz1004":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"title: OutBook","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F12-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-F12-4/tp)","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"**OutBook is a desktop application that can help professionals to manage and schedule meetings.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"* If you are interested in using OutBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"* If you are interested about developing OutBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"qz1004":6}},{"path":"docs/team/howenc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"title: Howen\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"### Project: OutBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"OutBook is a desktop personal secretary application used for saving contacts and scheduling meetings. Users can link their contacts to their meetings, to keep track of the personnel attending these meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"My contributions to the project are listed below.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dhowenc\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"- **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"- **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"- **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jason-raiin":34,"LoMaply":2}},{"path":"docs/team/jason-raiin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"title: Jason\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"### Project: OutBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"OutBook is a desktop personal secretary application used for saving contacts and scheduling meetings. Users can link their contacts to their meetings, to keep track of the personnel attending these meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"My contributions to the project are listed below.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"- **New Feature**: Remove contact from meeting ","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djason-raiin\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"- **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon ","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"  - Developer Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"    - User profile","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"    - Value proposition","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"    - User stories","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"    - Use cases","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"- **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"- **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"  - Added util method `parseIndex`","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"jason-raiin":38}},{"path":"docs/team/juzzztinsoong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"title: Justin\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"### Project: OutBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"OutBook is a desktop personal secretary application used for saving contacts and scheduling meetings. Users can link their contacts to their meetings, to keep track of the personnel attending these meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"My contributions to the project are listed below.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djuzzztinsoong\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"- **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"  - Developer Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"    - Non-functional Requirements","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    - Glossary","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"- **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"- **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jason-raiin":33,"juzzztinsoong":3,"LoMaply":2}},{"path":"docs/team/lomaply.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"title: Linus\u0027 Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"### Project: OutBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"OutBook is a desktop personal secretary application used for saving contacts and scheduling meetings. Users can link their contacts to their meetings, to keep track of the personnel attending these meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"My contributions to the project are listed below.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"- **New Feature**:","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dlomaply\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"- **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"  ","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"  - User Guide","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"    - First draft of User Guide with initial plans for v1.2","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"- **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"- **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jason-raiin":32,"LoMaply":5}},{"path":"docs/team/qz1004.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"title: Qi Zhen\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"### Project: OutBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"OutBook is a desktop personal secretary application used for saving contacts and scheduling meetings. Users can link their contacts to their meetings, to keep track of the personnel attending these meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"My contributions to the project are listed below.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dqz1004\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"- **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"- **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"- **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"  - to be added soon","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jason-raiin":34,"LoMaply":2}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"        AppParameters appParameters \u003d AppParameters.parse(this.getParameters());","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":184,"juzzztinsoong":1}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_INVALID_ATTENDEE_INDEX \u003d \"The attendee index provided is invalid\";","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d \"Multiple values specified for the following \"","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"            + \"single-valued field(s): \";","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"        Set\u003cString\u003e duplicateFields \u003d Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"                .append(person.getRemark())","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jason-raiin":5,"-":45,"juzzztinsoong":2}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"juzzztinsoong"},"content":"    static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"juzzztinsoong"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"juzzztinsoong"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedRemark, updatedTags);","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"juzzztinsoong"},"content":"        private Remark remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"juzzztinsoong"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-10-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"juzzztinsoong"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"juzzztinsoong"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-10-02"},{"lineNumber":186,"author":{"gitId":"juzzztinsoong"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":189,"author":{"gitId":"juzzztinsoong"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-10-02"},{"lineNumber":190,"author":{"gitId":"juzzztinsoong"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-10-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"juzzztinsoong"},"content":"                    .add(\"remark\", remark)","lastModifiedDate":"2023-10-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":227,"juzzztinsoong":12}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    private final Index index;","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"     * @param remark used to replace the previous remark.","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"                remark, personToEdit.getTags());","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"juzzztinsoong"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"juzzztinsoong"},"content":"        return String.format(message, Messages.format(personToEdit));","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"juzzztinsoong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"juzzztinsoong"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"juzzztinsoong"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"juzzztinsoong"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"juzzztinsoong"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"juzzztinsoong"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"juzzztinsoong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"juzzztinsoong"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"juzzztinsoong"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"juzzztinsoong"},"content":"                .toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"juzzztinsoong":105}},{"path":"src/main/java/seedu/address/logic/commands/RemoveMeetingContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":" * Removes a Person from the Attendee list of a Meeting","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"public class RemoveMeetingContactCommand extends Command {","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"    public static final String COMMAND_WORD \u003d \"rmmc\";","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"            + \": Removes the attendee indicated by the attendee index in the attendees list of the meeting \"","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"            + \"indicated by the meeting index.\\n\"","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"            + \"Parameters: MEETING_INDEX ATTENDEE_INDEX \\n\" + \"Example: \" + COMMAND_WORD + \" 1\" + \" 1\";","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_REMOVE_MEETING_CONTACT_SUCCESS \u003d \"Removed Person (%1$s) from Meeting (%2$s)\";","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"    private final Index meetingIndex;","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"    private final Index attendeeIndex;","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"     * Constructior for {@code RemoveMeetingContactCommand}","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"    public RemoveMeetingContactCommand(Index meetingIndex, Index attendeeIndex) {","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"        this.meetingIndex \u003d meetingIndex;","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"        this.attendeeIndex \u003d attendeeIndex;","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"        if (meetingIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"        Meeting meeting \u003d lastShownList.get(meetingIndex.getZeroBased());","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"        Set\u003cAttendee\u003e attendees \u003d meeting.getAttendees();","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"        if (attendeeIndex.getZeroBased() \u003e\u003d attendees.size()) {","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ATTENDEE_INDEX);","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        Attendee attendeeToRemove \u003d meeting.getAttendee(attendeeIndex);","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"        Meeting updatedMeeting \u003d removeAttendee(meeting, attendeeToRemove);","lastModifiedDate":"2023-10-09"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"        model.setMeeting(meeting, updatedMeeting);","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_MEETING_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"                attendeeToRemove.getAttendeeName(), meeting.getTitle()));","lastModifiedDate":"2023-10-09"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"     * Creates a new {@code Meeting} that has attendee list with the specified attendee removed.","lastModifiedDate":"2023-10-09"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"    static Meeting removeAttendee(Meeting meeting, Attendee attendeeToRemove) {","lastModifiedDate":"2023-10-09"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"        Set\u003cAttendee\u003e updatedAttendees \u003d new LinkedHashSet\u003c\u003e(meeting.getAttendees());","lastModifiedDate":"2023-10-09"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        updatedAttendees.remove(attendeeToRemove);","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"        Meeting updatedMeeting \u003d new Meeting(meeting.getTitle(), meeting.getLocation(), meeting.getStart(),","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"                meeting.getEnd(), updatedAttendees);","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"        return updatedMeeting;","lastModifiedDate":"2023-10-09"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-09"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-09"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-09"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"            return true;","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-09"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        if (!(other instanceof RemoveMeetingContactCommand)) {","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"            return false;","lastModifiedDate":"2023-10-09"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand otherRemoveCommand \u003d (RemoveMeetingContactCommand) other;","lastModifiedDate":"2023-10-09"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"        return meetingIndex.equals(otherRemoveCommand.meetingIndex)","lastModifiedDate":"2023-10-09"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"                \u0026\u0026 attendeeIndex.equals(otherRemoveCommand.attendeeIndex);","lastModifiedDate":"2023-10-09"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-09"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"    public String toString() {","lastModifiedDate":"2023-10-09"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"        return new ToStringBuilder(this).add(\"meetingIndex\", meetingIndex).add(\"attendeeIndex\", attendeeIndex)","lastModifiedDate":"2023-10-09"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"                .toString();","lastModifiedDate":"2023-10-09"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"jason-raiin":97}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"        Person person \u003d new Person(name, phone, email, remark, tagList);","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":54,"juzzztinsoong":7}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.RemoveMeetingContactCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":82,"author":{"gitId":"juzzztinsoong"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"        case RemoveMeetingContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"            return new RemoveMeetingContactCommandParser().parse(arguments);","lastModifiedDate":"2023-10-09"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jason-raiin":4,"-":86,"juzzztinsoong":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":14,"juzzztinsoong":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":80,"juzzztinsoong":5}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":" * classes.","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"dd.MM.yyyy HHmm\");","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"     * and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"     *","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"     *                        unsigned integer).","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"     * Splits multiple {@code oneBasedIndexes} by whitespace and parses them into an","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"     * ArrayList of {@code Indexes} and returns it. Leading and trailing whitespaces","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"     * will be trimmed.","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"     *","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"     * @throws ParseException if any indexes are invalid (not non-zero","lastModifiedDate":"2023-10-09"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"     *                        unsigned integer).","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"    public static List\u003cIndex\u003e parseIndexes(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"        String[] indexStrings \u003d oneBasedIndexes.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-10-09"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"        // not elegant to use streams due to checked exception","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"        for (String indexString : indexStrings) {","lastModifiedDate":"2023-10-09"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"            indexes.add(parseIndex(indexString));","lastModifiedDate":"2023-10-09"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        return indexes;","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"     * Parses a {@code String location} into a {@code Location}.","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"     * Parses a {@code String start} into an {@code LocalDateTime}.","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"     * @throws ParseException if the given {@code start} is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"    public static LocalDateTime parseTime(String time) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"        String trimmedStart \u003d time.trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"            return LocalDateTime.parse(trimmedStart, FORMAT);","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"            throw new ParseException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":189,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":190,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":191,"author":{"gitId":"howenc"},"content":"     * Parses a {@code String attendee} into a {@code Attendee}.","lastModifiedDate":"2023-10-06"},{"lineNumber":192,"author":{"gitId":"howenc"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":194,"author":{"gitId":"howenc"},"content":"     * @throws ParseException if the given {@code attendee} is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":195,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"    public static Attendee parseAttendee(String attendee) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"        requireNonNull(attendee);","lastModifiedDate":"2023-10-06"},{"lineNumber":198,"author":{"gitId":"howenc"},"content":"        String trimmedAttendee \u003d attendee.trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"howenc"},"content":"        if (!Attendee.isValidAttendee(trimmedAttendee)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":200,"author":{"gitId":"howenc"},"content":"            throw new ParseException(Attendee.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":202,"author":{"gitId":"howenc"},"content":"        return new Attendee(trimmedAttendee);","lastModifiedDate":"2023-10-06"},{"lineNumber":203,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":204,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":205,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":206,"author":{"gitId":"howenc"},"content":"     * Parses {@code Collection\u003cString\u003e attendees} into a {@code Set\u003cAttendee\u003e}.","lastModifiedDate":"2023-10-06"},{"lineNumber":207,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":208,"author":{"gitId":"howenc"},"content":"    public static Set\u003cAttendee\u003e parseAttendees(Collection\u003cString\u003e attendees) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":209,"author":{"gitId":"howenc"},"content":"        requireNonNull(attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":210,"author":{"gitId":"howenc"},"content":"        final Set\u003cAttendee\u003e attendeeSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":211,"author":{"gitId":"howenc"},"content":"        for (String person : attendees) {","lastModifiedDate":"2023-10-06"},{"lineNumber":212,"author":{"gitId":"howenc"},"content":"            attendeeSet.add(parseAttendee(person));","lastModifiedDate":"2023-10-06"},{"lineNumber":213,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":214,"author":{"gitId":"howenc"},"content":"        return attendeeSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":215,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":217,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":218,"author":{"gitId":"howenc"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2023-09-23"},{"lineNumber":219,"author":{"gitId":"howenc"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-23"},{"lineNumber":220,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":221,"author":{"gitId":"howenc"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2023-09-23"},{"lineNumber":222,"author":{"gitId":"howenc"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-09-23"},{"lineNumber":223,"author":{"gitId":"howenc"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-09-23"},{"lineNumber":224,"author":{"gitId":"howenc"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-09-23"},{"lineNumber":225,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"howenc":86,"jason-raiin":29,"-":111}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"        Index index;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"        if (!argMultimap.getValue(PREFIX_REMARK).isPresent()","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"            Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"            return new RemarkCommand(index, remark);","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"juzzztinsoong":44}},{"path":"src/main/java/seedu/address/logic/parser/RemoveMeetingContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.RemoveMeetingContactCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":" * Parses input arguments and creates a new RemoveMeetingContactCommand object","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"public class RemoveMeetingContactCommandParser implements Parser\u003cRemoveMeetingContactCommand\u003e {","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"     * RemoveMeetingContactCommand and returns a RemoveMeetingContactCommand object","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"     * for execution.","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"     *","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"    public RemoveMeetingContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"        try {","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"            List\u003cIndex\u003e indexes \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"            if (indexes.size() !\u003d 2) {","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveMeetingContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"            }","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"            Index meetingIndex \u003d indexes.get(0);","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"            Index attendeeIndex \u003d indexes.get(1);","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"            return new RemoveMeetingContactCommand(meetingIndex, attendeeIndex);","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveMeetingContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"jason-raiin":40}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.UniqueMeetingList;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    private final UniqueMeetingList meetings;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"     * Returns true if a person with the same name as {@code name} exists in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    public boolean hasName(String name) {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        return persons.contains(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"     * Adds a meeting to the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"     * The meeting must not already exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"    public void addMeeting(Meeting m) {","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"        meetings.add(m);","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"     * Replaces the given meeting {@code meeting} in the list with {@code editedMeeting}.","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"     * The meeting identity of {@code editedMeeting} must be different than an existing meeting in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"        meetings.remove(key);","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"                .add(\"meetings\", meetings)","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"        return persons.equals(otherAddressBook.persons) \u0026\u0026 meetings.equals(otherAddressBook.meetings);","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"howenc"},"content":"        return Objects.hash(persons, meetings);","lastModifiedDate":"2023-10-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":61,"-":128}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"     * Deletes the given meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"     * The meeting must exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    void deleteMeeting(Meeting target);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"     * Adds the given meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"     * {@code meeting} must not already exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"     * Replaces the given meeting {@code target} with {@code editedMeeting}.","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"     * The meeting identity of {@code editedMeeting} must be different than an existing meeting in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"    /** Returns an unmodifiable view of the filtered Meeting list */","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"    boolean hasName(String attendeeName);","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"howenc":37,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.addressBook.getMeetingList());","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"    public boolean hasName(String name) {","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"        return addressBook.hasName(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        return addressBook.hasMeeting(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"        // Interesting, deleting a person does not update the filtered persons list","lastModifiedDate":"2023-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"    public void deleteMeeting(Meeting target) {","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"        addressBook.removeMeeting(target);","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"        // Interesting, deleting a meeting does not update the filtered persons list","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"        addressBook.addMeeting(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"        addressBook.setMeeting(target, editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"     * Returns an unmodifiable view of the list of {@code Meetings} backed by the internal list of","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"        return filteredMeetings;","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 filteredMeetings.equals(otherModelManager.filteredMeetings);","lastModifiedDate":"2023-10-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":50,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":2,"-":17}},{"path":"src/main/java/seedu/address/model/meeting/Attendee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":" * Represents a Person in the address book that will attend the meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAttendee(String)}","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"public class Attendee {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"            \"Attendees should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    /*","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"     * The first character of the title must not be a whitespace,","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    private final String attendeeName;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     * Constructs a {@code Attendee}.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"     * @param attendeeName A valid tag name.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    public Attendee(String attendeeName) {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        requireNonNull(attendeeName);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        checkArgument(isValidAttendee(attendeeName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        this.attendeeName \u003d attendeeName;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    public static boolean isValidAttendee(String test) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    public String getAttendeeName() {","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        return attendeeName;","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        return attendeeName.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof Attendee)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        Attendee otherAttendee \u003d (Attendee) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        return attendeeName.equals(otherAttendee.attendeeName);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        return attendeeName + \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":68}},{"path":"src/main/java/seedu/address/model/meeting/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":" * Represents a location that a meeting in the address book will take place at.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"public class Location {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Locations can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public final String location;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"     * Constructs the meeting location of a meeting in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public Location(String location) {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"     * Returns true if the given location is valid.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        return location;","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof Location)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        Location otherLocation \u003d (Location) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        return location.equals(otherLocation.location);","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        return location.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":60}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":" * Represents a Meeting in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":" * immutable.","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"public class Meeting {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    private final Title title;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    private final Location location;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    private final MeetingTime meetingTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"    private final Set\u003cAttendee\u003e attendees;","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public Meeting(Title title, Location location, LocalDateTime start, LocalDateTime end, Set\u003cAttendee\u003e attendees) {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        this.meetingTime \u003d new MeetingTime(start, end);","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"        this.attendees \u003d new LinkedHashSet\u003c\u003e(attendees);","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    public Title getTitle() {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        return title;","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        return location;","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        return meetingTime.getStart();","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        return meetingTime.getEnd();","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    public MeetingTime getMeetingTime() {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        return meetingTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"     * Returns an immutable attendee set, which throws","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    public Set\u003cAttendee\u003e getAttendees() {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        return Collections.unmodifiableSet(attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"     * Returns an attendee at the given {@code index}","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"    public Attendee getAttendee(Index index) {","lastModifiedDate":"2023-10-09"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        // TODO: catch index out of bounds","lastModifiedDate":"2023-10-09"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"        return new ArrayList\u003c\u003e(attendees).get(index.getZeroBased());","lastModifiedDate":"2023-10-09"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"     * Returns true if {@code otherMeeting} has the same identity as this meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"    public boolean isSameMeeting(Meeting otherMeeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        if (otherMeeting \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"        return otherMeeting !\u003d null","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 otherMeeting.getTitle().equals(getTitle())","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 otherMeeting.getLocation().equals(getLocation())","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 otherMeeting.getMeetingTime().equals(getMeetingTime());","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"     * Returns true if both meetings have the same title and data fields.","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"     * This defines a stronger notion of equality between two meetings.","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        return title.equals(otherMeeting.title)","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 location.equals(otherMeeting.location)","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 meetingTime.equals(otherMeeting.meetingTime)","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 attendees.equals(otherMeeting.attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"        return Objects.hash(title, location, meetingTime, attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"                .add(\"title\", title)","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"                .add(\"location\", location)","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"                .add(\"start\", meetingTime.getStart())","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"                .add(\"end\", meetingTime.getEnd())","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"                .add(\"attendees\", attendees)","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"                .toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":106,"jason-raiin":17}},{"path":"src/main/java/seedu/address/model/meeting/MeetingTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":" * Represents a scheduled time for a meeting in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"public class MeetingTime {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"MeetingTimes should be in LocalDateTime\"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"            + \" and start cannot be after end\";","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"     * Constructs the meeting time for a meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    public MeetingTime(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        requireNonNull(start);","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        requireNonNull(end);","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        return start;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        return end;","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public static boolean isValidMeetingTime(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        return start.isAfter(end) ? false : true;","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof MeetingTime)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        MeetingTime otherMeetingTime \u003d (MeetingTime) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        return start.equals(otherMeetingTime.start)","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 end.equals(otherMeetingTime.end);","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        return Objects.hash(start, end);","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"                .add(\"start\", start)","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"                .add(\"end\", end)","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"                .toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":72}},{"path":"src/main/java/seedu/address/model/meeting/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":" * Represents a Meeting\u0027s name in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"public class Title {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"            \"Titles can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    /*","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"     * The first character of the title must not be a whitespace,","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public final String meetingTitle;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"     * Constructs the meeting name/title of the meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public Title(String meetingTitle) {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        requireNonNull(meetingTitle);","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        checkArgument(isValidTitle(meetingTitle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        this.meetingTitle \u003d meetingTitle;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        return meetingTitle;","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof Title)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        Title otherTitle \u003d (Title) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        return meetingTitle.equals(otherTitle.meetingTitle);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        return meetingTitle.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":62}},{"path":"src/main/java/seedu/address/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":" * A meeting is considered unique by comparing using {@code Meeting#isSameMeeting(Meeting)}.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":" * As such, adding and updating of meetings uses Meeting#isSameMeeting(Meeting) for equality","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":" * so as to ensure that the meeting being added or updated is unique in terms of identity in","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":" * the UniqueMeetingList. However, the removal of a meeting uses Meeting#equals(Object) so","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":" * as to ensure that the meeting with exactly the same fields will be removed.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":" *","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":" *","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":" * @see Meeting#isSameMeeting(Meeting)","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"     * Returns true if the list contains an equivalent Meeting as the given argument.","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"     * The meeting must not already exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing person in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        if (!target.isSameMeeting(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"    public void setMeetings(UniqueMeetingList replacement) {","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"        if (!meetingsAreUnique(meetings)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof UniqueMeetingList)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList otherUniqueMeetingList \u003d (UniqueMeetingList) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"        return internalList.equals(otherUniqueMeetingList.internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"                if (meetings.get(i).isSameMeeting(meetings.get(j))) {","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"                    return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"        return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":151}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":" * identity).","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"        super(\"Operation would result in duplicate meetings\");","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":11}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"public class MeetingNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":6}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    public Person(Name name, Phone phone, Email email, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        requireAllNonNull(name, phone, email, remark, tags);","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"        return remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"juzzztinsoong"},"content":"                \u0026\u0026 remark.equals(otherPerson.remark)","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"juzzztinsoong"},"content":"        return Objects.hash(name, phone, email, remark, tags);","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"juzzztinsoong"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":108,"juzzztinsoong":9}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRemark(String)}","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"public class Remark {","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    public final String value;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"     * @param remark A valid address.","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"        value \u003d remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"        return value;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"        return value.equals(otherRemark.value);","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"juzzztinsoong":50}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"     * Returns true if the list contains a person with the same name as the given argument.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public boolean contains(String name) {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        return internalList.stream().anyMatch(person -\u003e person.getName().equals(new Name(name)));","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"howenc":8,"-":150}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.ParserUtil.FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"                        new Remark(\"\"),","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"                        new Remark(\"\"),","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"                        new Remark(\"\"),","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"                        new Remark(\"\"),","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"                        new Remark(\"\"),","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"                        new Remark(\"\"),","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    public static Meeting[] getSampleMeetings() {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        return new Meeting[] {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"            new Meeting(new Title(\"Test Meeting 1\"), new Location(\"Room 1\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"                    LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"                    LocalDateTime.parse(\"03.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"                    getAttendeeSet(\"Alex Yeoh\")),","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"            new Meeting(new Title(\"Test Meeting 2\"), new Location(\"Room 2\"),","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"                    LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"                    LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"                    getAttendeeSet()),","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        for (Meeting sampleMeeting : getSampleMeetings()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"            sampleAb.addMeeting(sampleMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"     * Returns an attendee set containing the list of strings given.","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"    public static Set\u003cAttendee\u003e getAttendeeSet(String... strings) {","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"                .map(Attendee::new)","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"howenc":36,"-":56}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAttendee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"class JsonAdaptedAttendee {","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    private final String attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"     * Constructs a {@code JsonAdaptedAttendee} with the given {@code attendee}.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    public JsonAdaptedAttendee(String attendee) {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"        this.attendee \u003d attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public JsonAdaptedAttendee(Attendee attendee) {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        this.attendee \u003d attendee.getAttendeeName();","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    @JsonValue","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    public String getAttendee() {","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        return attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code attendee} object.","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted attendee.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public Attendee toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        if (!Attendee.isValidAttendee(attendee)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(Attendee.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        return new Attendee(attendee);","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"class JsonAdaptedMeeting {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meeting\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    private final String title;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    private final String location;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    private final String start;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    private final String end;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    private final List\u003cJsonAdaptedAttendee\u003e attendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"title\") String title, @JsonProperty(\"location\") String location,","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"                              @JsonProperty(\"start\") String start, @JsonProperty(\"end\") String end,","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"                              @JsonProperty(\"attendees\") List\u003cJsonAdaptedAttendee\u003e attendees) {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        if (attendees !\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"            this.attendees.addAll(attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        title \u003d source.getTitle().meetingTitle;","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        location \u003d source.getLocation().location;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        start \u003d source.getStart().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        end \u003d source.getEnd().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"        attendees.addAll(source.getAttendees().stream()","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                .map(JsonAdaptedAttendee::new)","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"     * Converts this Jackson-friendly adapted meeting object into the model\u0027s {@code meeting} object.","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        final List\u003cAttendee\u003e meetingAttendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        for (JsonAdaptedAttendee person : attendees) {","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"            meetingAttendees.add(person.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"                    Title.class.getSimpleName()));","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        if (start \u003d\u003d null || end \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"                    LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"            if (!MeetingTime.isValidMeetingTime(LocalDateTime.parse(start), LocalDateTime.parse(end))) {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"                throw new IllegalValueException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"        final LocalDateTime modelStart \u003d LocalDateTime.parse(start);","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        final LocalDateTime modelEnd \u003d LocalDateTime.parse(end);","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"        final Set\u003cAttendee\u003e modelAttendees \u003d new HashSet\u003c\u003e(meetingAttendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        return new Meeting(modelTitle, modelLocation, modelStart, modelEnd, modelAttendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":111}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    private final String remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"        final Remark modelRemark \u003d (remark \u003d\u003d null) ? new Remark(\"\") : new Remark(remark);","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"juzzztinsoong"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelRemark, modelTags);","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":96,"juzzztinsoong":7}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"Meetings list contains duplicate meeting(s).\";","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_ATTENDEE_NOT_FOUND \u003d \"Meeting attendee is not found in Persons list\";","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"                                       @JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"            Set\u003cAttendee\u003e meetingAttendees \u003d meeting.getAttendees();","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"            for (Attendee attendee : meetingAttendees) {","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"                if (!addressBook.hasName(attendee.getAttendeeName())) {","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"                    throw new IllegalValueException(MESSAGE_ATTENDEE_NOT_FOUND);","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"            if (addressBook.hasMeeting(meeting)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"            addressBook.addMeeting(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"howenc":23,"-":59}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"    private Label remark;","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":57,"juzzztinsoong":2}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":35,"juzzztinsoong":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"juzzztinsoong"},"content":"                + EMAIL_DESC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":173,"juzzztinsoong":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"        public void deleteMeeting(Meeting target) {","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":187,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":188,"author":{"gitId":"howenc"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-10-06"},{"lineNumber":189,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":190,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":191,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":192,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"howenc"},"content":"        public boolean hasName(String attendeeName) {","lastModifiedDate":"2023-10-06"},{"lineNumber":194,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":195,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"howenc":36,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Likes to swim\";","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String VALID_REMARK_BOB \u003d \"\";","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":119,"juzzztinsoong":7}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", remark\u003d\"","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"                + editPersonDescriptor.getRemark().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":65,"juzzztinsoong":2}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"class RemarkCommandTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"    private Model model;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"        Remark remark \u003d new Remark(VALID_REMARK_AMY);","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(indexLastPerson, remark);","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"                lastPerson.getName(), lastPerson.getPhone(), lastPerson.getEmail(),","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"                remark, lastPerson.getTags());","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        CommandResult commandResult \u003d new CommandResult(String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"                Messages.format(editedPerson)));","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        assertCommandSuccess(remarkCommand, model, commandResult, expectedModel);","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"    void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"        Remark remark \u003d new Remark(VALID_REMARK_BOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(indexLastPerson, remark);","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"                lastPerson.getName(), lastPerson.getPhone(), lastPerson.getEmail(),","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"                remark, lastPerson.getTags());","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"        CommandResult commandResult \u003d new CommandResult(String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS,","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"                Messages.format(editedPerson)));","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"        assertCommandSuccess(remarkCommand, model, commandResult, expectedModel);","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"juzzztinsoong":65}},{"path":"src/test/java/seedu/address/logic/commands/RemoveMeetingContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.testutil.TypicalMeetings;","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"public class RemoveMeetingContactCommandTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"    public void execute_valid_success() {","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"        model.addMeeting(TypicalMeetings.MEETING1);","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcCommand \u003d new RemoveMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"        Meeting meeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"        Attendee attendeeToRemove \u003d meeting.getAttendee(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        Set\u003cAttendee\u003e expectedAttendees \u003d new LinkedHashSet\u003c\u003e(meeting.getAttendees());","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"        expectedAttendees.remove(attendeeToRemove);","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"        // No errors thrown","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"        String message \u003d assertDoesNotThrow(() -\u003e rmmcCommand.execute(model)).getFeedbackToUser();","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"        String expectedMessage \u003d String.format(RemoveMeetingContactCommand.MESSAGE_REMOVE_MEETING_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"                attendeeToRemove.getAttendeeName(), meeting.getTitle());","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        // Output message is correct","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(expectedMessage, message);","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"        Meeting updatedMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-09"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"        Set\u003cAttendee\u003e updatedAttendees \u003d updatedMeeting.getAttendees();","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"        // updated attendees set is correct","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(expectedAttendees, updatedAttendees);","lastModifiedDate":"2023-10-09"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"    public void execute_invalidMeetingIndex_throwsCommandException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcCommand \u003d new RemoveMeetingContactCommand(INDEX_SECOND_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        // throws error for invalid meeting index","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(CommandException.class, () -\u003e rmmcCommand.execute(model));","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"    public void execute_invalidAttendeeIndex_throwsCommandException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"        model.addMeeting(TypicalMeetings.MEETING1);","lastModifiedDate":"2023-10-09"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcCommand \u003d new RemoveMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"                INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-10-09"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"        // throws error for invalid attendee index","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(CommandException.class, () -\u003e rmmcCommand.execute(model));","lastModifiedDate":"2023-10-09"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"    public void equals() {","lastModifiedDate":"2023-10-09"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcFirstCommand \u003d new RemoveMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcSecondCommand \u003d new RemoveMeetingContactCommand(INDEX_SECOND_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"                INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-09"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(rmmcFirstCommand.equals(rmmcFirstCommand));","lastModifiedDate":"2023-10-09"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-09"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcFirstCommandCopy \u003d new RemoveMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(rmmcFirstCommand.equals(rmmcFirstCommandCopy));","lastModifiedDate":"2023-10-09"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-09"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(rmmcFirstCommand.equals(1));","lastModifiedDate":"2023-10-09"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-09"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(rmmcFirstCommand.equals(null));","lastModifiedDate":"2023-10-09"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":104,"author":{"gitId":"jason-raiin"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-09"},{"lineNumber":105,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(rmmcFirstCommand.equals(rmmcSecondCommand));","lastModifiedDate":"2023-10-09"},{"lineNumber":106,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":108,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":109,"author":{"gitId":"jason-raiin"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-09"},{"lineNumber":110,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcCommand \u003d new RemoveMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":111,"author":{"gitId":"jason-raiin"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":112,"author":{"gitId":"jason-raiin"},"content":"        String expected \u003d RemoveMeetingContactCommand.class.getCanonicalName() + \"{meetingIndex\u003d\" + INDEX_FIRST_MEETING","lastModifiedDate":"2023-10-09"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"                + \", \" + \"attendeeIndex\u003d\" + INDEX_FIRST_PERSON + \"}\";","lastModifiedDate":"2023-10-09"},{"lineNumber":114,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(expected, rmmcCommand.toString());","lastModifiedDate":"2023-10-09"},{"lineNumber":115,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"jason-raiin":116}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"                + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"juzzztinsoong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":121,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"juzzztinsoong"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":157,"juzzztinsoong":17}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.RemoveMeetingContactCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"                .parseCommand(DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"        String str \u003d EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(str);","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"        FindCommand command \u003d (FindCommand) parser","lastModifiedDate":"2023-10-09"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"                .parseCommand(FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"    public void parseCommand_rmmc() throws Exception {","lastModifiedDate":"2023-10-09"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-09"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"                RemoveMeetingContactCommand.COMMAND_WORD + \" 1 1\") instanceof RemoveMeetingContactCommand);","lastModifiedDate":"2023-10-09"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), (","lastModifiedDate":"2023-10-09"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"                ) -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jason-raiin":13,"-":93,"juzzztinsoong":3}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":103,"author":{"gitId":"juzzztinsoong"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"juzzztinsoong"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"juzzztinsoong"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"juzzztinsoong"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"juzzztinsoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"juzzztinsoong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"juzzztinsoong"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-04"},{"lineNumber":179,"author":{"gitId":"juzzztinsoong"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"juzzztinsoong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":185,"juzzztinsoong":10}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, (","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"                ) -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndexes_invalidInput_throwsParseException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndexes(\"10 10 w\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndexes_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, (","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"                ) -\u003e ParserUtil.parseIndexes(\"1 0 4\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndexes_validInput_success() throws Exception {","lastModifiedDate":"2023-10-09"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"        // Single index","lastModifiedDate":"2023-10-09"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"        List\u003cIndex\u003e singleIndexList \u003d List.of(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(singleIndexList, ParserUtil.parseIndexes(\"1\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"        // Multiple indexes","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"        List\u003cIndex\u003e multipleIndexList \u003d List.of(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON, INDEX_THIRD_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(multipleIndexList, ParserUtil.parseIndexes(\"1 2 3\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        // Different whitespaces","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(multipleIndexList, ParserUtil.parseIndexes(\" 1  2      3   \"));","lastModifiedDate":"2023-10-09"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jason-raiin":31,"-":170}},{"path":"src/test/java/seedu/address/logic/parser/RemoveMeetingContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.RemoveMeetingContactCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":" * variations","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":" * outside of the RemoveMeetingContactCommand code. For example, inputs \"1\" and","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":" * \"1 abc\" take","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":" * the","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":" * same path through the RemoveMeetingContactCommand, and therefore we test only","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":" * one of them.","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"public class RemoveMeetingContactCommandParserTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"    private RemoveMeetingContactCommandParser parser \u003d new RemoveMeetingContactCommandParser();","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"    public void parse_validArgs_returnsRemoveMeetingContactCommand() {","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"        assertParseSuccess(parser, \"1 1\", new RemoveMeetingContactCommand(INDEX_FIRST_MEETING, INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"        // invalid args","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"a 1\",","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveMeetingContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"        // too many args","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1 1 2\",","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveMeetingContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"        // too few args","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"2\",","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveMeetingContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"jason-raiin":47}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-09-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList()","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"                + \", meetings\u003d\" + addressBook.getMeetingList() + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"howenc":10,"-":104}},{"path":"src/test/java/seedu/address/model/meeting/AttendeeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"public class AttendeeTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Attendee(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    public void constructor_invalidAttendeeName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"        String invalidAttendeeName \u003d \"\";","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Attendee(invalidAttendeeName));","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    public void isValidAttendeeName() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        // null name","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e Attendee.isValidAttendee(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        assertFalse(Attendee.isValidAttendee(\"\")); // empty string","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        assertFalse(Attendee.isValidAttendee(\" \")); // spaces only","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        assertFalse(Attendee.isValidAttendee(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        assertFalse(Attendee.isValidAttendee(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        // valid name","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(Attendee.isValidAttendee(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        assertTrue(Attendee.isValidAttendee(\"12345\")); // numbers only","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        assertTrue(Attendee.isValidAttendee(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertTrue(Attendee.isValidAttendee(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        assertTrue(Attendee.isValidAttendee(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        Attendee attendee \u003d new Attendee(\"Valid Name\");","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        assertTrue(attendee.equals(new Attendee(\"Valid Name\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        assertTrue(attendee.equals(attendee));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        assertFalse(attendee.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        assertFalse(attendee.equals(5.0f));","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        assertFalse(attendee.equals(new Attendee(\"Other Valid Name\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":59}},{"path":"src/test/java/seedu/address/model/meeting/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"public class LocationTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    public void isValidLocation() {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        // null phone number","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        // invalid phone numbers","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"phone\")); // non-numeric","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        // valid phone numbers","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"911\")); // exactly 3 numbers","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"93121534\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        Location location \u003d new Location(\"999\");","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        assertTrue(location.equals(new Location(\"999\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        assertTrue(location.equals(location));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        assertFalse(location.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        assertFalse(location.equals(5.0f));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertFalse(location.equals(new Location(\"995\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":60}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"public class MeetingTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e meeting.getAttendees().remove(0));","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    public void isSameMeeting() {","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        assertTrue(MEETING1.isSameMeeting(MEETING1));","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.isSameMeeting(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        // same title, all other attributes different -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withLocation(\"Not a zoom call url\")","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"                .withStart(\"23.09.2023 1000\")","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"                .withEnd(\"23.09.2023 1000\")","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"                .withAttendees().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.isSameMeeting(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        // different title, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"Different Meeting Title\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.isSameMeeting(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        // title differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.isSameMeeting(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        // tittle has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING \").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.isSameMeeting(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        Meeting meeting1Copy \u003d new MeetingBuilder(MEETING1).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        assertTrue(MEETING1.equals(meeting1Copy));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertTrue(MEETING1.equals(MEETING1));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.equals(5));","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withLocation(\"Room 2\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withStart(\"20.09.2023 1100\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        assertFalse(ALICE.equals(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        AddressBookBuilder test \u003d new AddressBookBuilder();","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"        test.withPerson(ALICE);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withAttendees(\"Alice Pauline\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        String expected \u003d Meeting.class.getCanonicalName() + \"{title\u003d\" + MEETING1.getTitle()","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"                + \", location\u003d\" + MEETING1.getLocation() + \", start\u003d\" + MEETING1.getStart()","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"                + \", end\u003d\" + MEETING1.getEnd() + \", attendees\u003d\" + MEETING1.getAttendees() + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"        assertEquals(expected, MEETING1.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":92}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"public class MeetingTimeTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    public static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"dd.MM.yyyy HHmm\");","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingTime(null, null));","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingTime(LocalDateTime.parse(\"03.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"                null));","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingTime(null,","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"03.10.2023 1000\", FORMAT)));","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    public void isValidMeetingTime() {","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        // null","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e MeetingTime.isValidMeetingTime(null, null));","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        // invalid","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        assertFalse(MeetingTime.isValidMeetingTime(LocalDateTime.parse(\"03.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"02.10.2023 1000\", FORMAT))); // start is after end","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        // valid","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(MeetingTime.isValidMeetingTime(LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"03.10.2023 1000\", FORMAT))); // start before end","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        assertTrue(MeetingTime.isValidMeetingTime(LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"02.10.2023 1000\", FORMAT))); // start equal end","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        MeetingTime meetingTime \u003d new MeetingTime(LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"03.10.2023 1000\", FORMAT));","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        assertTrue(meetingTime.equals(new MeetingTime(LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"03.10.2023 1000\", FORMAT))));","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        assertTrue(meetingTime.equals(meetingTime));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        assertFalse(meetingTime.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        assertFalse(meetingTime.equals(5.0f));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertFalse(meetingTime.equals(new MeetingTime(LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"04.10.2023 1000\", FORMAT))));","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":61}},{"path":"src/test/java/seedu/address/model/meeting/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"public class TitleTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    public void isValidTitle() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        // null name","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        assertFalse(Title.isValidTitle(\" \")); // spaces only","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        // valid name","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"12345\")); // numbers only","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        Title title \u003d new Title(\"Valid Title\");","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        assertTrue(title.equals(new Title(\"Valid Title\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        assertTrue(title.equals(title));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        assertFalse(title.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        assertFalse(title.equals(5.0f));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertFalse(title.equals(new Title(\"Other Valid Name\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":60}},{"path":"src/test/java/seedu/address/model/meeting/UniqueMeetingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"public class UniqueMeetingListTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    private final UniqueMeetingList uniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public void contains_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.contains((Meeting) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        assertFalse(uniqueMeetingList.contains(MEETING1));","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public void contains_meetingInList_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        assertTrue(uniqueMeetingList.contains(MEETING1));","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    public void contains_meetingWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        AddressBookBuilder test \u003d new AddressBookBuilder();","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        test.withPerson(ALICE);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withAttendees(\"Alice Pauline\")","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        assertTrue(uniqueMeetingList.contains(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    public void add_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.add(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    public void add_duplicateMeeting_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.add(MEETING1));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    public void setMeeting_nullTargetMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeeting(null, MEETING1));","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    public void setMeeting_nullEditedMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING1, null));","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    public void setMeeting_targetMeetingNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        assertThrows(MeetingNotFoundException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING1, MEETING1));","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    public void setMeeting_editedMeetingIsSameMeeting_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.setMeeting(MEETING1, MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"        expectedUniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"    public void setMeeting_editedMeetingHasSameIdentity_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        AddressBookBuilder test \u003d new AddressBookBuilder();","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        test.withPerson(ALICE);","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withAttendees(\"Alice Pauline\")","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.setMeeting(MEETING1, editedMeeting1);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"        expectedUniqueMeetingList.add(editedMeeting1);","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"    public void setMeeting_editedMeetingHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\")","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.setMeeting(MEETING1, editedMeeting1);","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        expectedUniqueMeetingList.add(editedMeeting1);","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"    public void setMeeting_editedMeetingHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\")","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(editedMeeting1);","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING1, editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"    public void remove_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.remove(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"    public void remove_meetingDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"        assertThrows(MeetingNotFoundException.class, () -\u003e uniqueMeetingList.remove(MEETING1));","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"    public void remove_existingMeeting_removesPerson() {","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.remove(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingsList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingsList, uniqueMeetingList);","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"    public void setMeetings_nullUniqueMeetingList_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeetings((UniqueMeetingList) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"    public void setMeetings_uniqueMeetingList_replacesOwnListWithProvidedUniqueMeetingList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingsList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\")","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"        expectedUniqueMeetingsList.add(editedMeeting1);","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.setMeetings(expectedUniqueMeetingsList);","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingsList, uniqueMeetingList);","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"    public void setMeetings_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeetings((List\u003cMeeting\u003e) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"    public void setMeetings_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\")","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"        List\u003cMeeting\u003e meetingList \u003d Collections.singletonList(editedMeeting1);","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.setMeetings(meetingList);","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"        expectedUniqueMeetingList.add(editedMeeting1);","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"    public void setMeetings_listWithDuplicateMeetings_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"        List\u003cMeeting\u003e listWithDuplicateMeetings \u003d Arrays.asList(MEETING1, MEETING1);","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.setMeetings(listWithDuplicateMeetings));","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"                -\u003e uniqueMeetingList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"howenc"},"content":"        assertEquals(uniqueMeetingList.asUnmodifiableObservableList().toString(), uniqueMeetingList.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":186,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":186}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"                .withEmail(\"alice@email.com\").withRemark(\"Main Street\").build()));","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":84,"juzzztinsoong":1}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"juzzztinsoong"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", remark\u003d\" + ALICE.getRemark() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":92,"juzzztinsoong":2}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains((Person) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    public void contains_nullString_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains((String) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-09-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"howenc":8,"-":171}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedMeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.storage.JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"public class JsonAdaptedMeetingTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_TITLE \u003d \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_START \u003d \"99.99.9999 9999\";","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_END \u003d \"88.88.8888 8888\";","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_ATTENDEE \u003d \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    private static final String VALID_TITLE \u003d MEETING1.getTitle().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    private static final String VALID_LOCATION \u003d MEETING1.getLocation().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    private static final String VALID_START \u003d MEETING1.getStart().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    private static final String VALID_END \u003d MEETING1.getEnd().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    private static final Meeting EDITED_MEETING_1 \u003d new MeetingBuilder(MEETING1)","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"            .withAttendees(\"Alice Pauline\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    private static final List\u003cJsonAdaptedAttendee\u003e VALID_ATTENDEE \u003d EDITED_MEETING_1.getAttendees().stream()","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"            .map(JsonAdaptedAttendee::new)","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    public void toModelType_validMeetingDetails_returnsMeeting() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(EDITED_MEETING_1);","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        assertEquals(EDITED_MEETING_1, meeting.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"                new JsonAdaptedMeeting(INVALID_TITLE, VALID_LOCATION, VALID_START,","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"                        VALID_END, VALID_ATTENDEE);","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d Title.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(null, VALID_LOCATION, VALID_START,","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"                VALID_END, VALID_ATTENDEE);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, INVALID_LOCATION, VALID_START, VALID_END, VALID_ATTENDEE);","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, null, VALID_START,","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"                VALID_END, VALID_ATTENDEE);","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"    public void toModelType_invalidStart_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, INVALID_START, VALID_END, VALID_ATTENDEE);","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d MeetingTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    public void toModelType_nullStart_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, null,","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"                VALID_END, VALID_ATTENDEE);","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LocalDateTime.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"    public void toModelType_invalidEnd_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, VALID_START, INVALID_END, VALID_ATTENDEE);","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d MeetingTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"    public void toModelType_nullEnd_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, null,","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"                VALID_END, VALID_ATTENDEE);","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LocalDateTime.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"    public void toModelType_invalidAttendees_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"        List\u003cJsonAdaptedAttendee\u003e invalidAttendees \u003d new ArrayList\u003c\u003e(VALID_ATTENDEE);","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"        invalidAttendees.add(new JsonAdaptedAttendee(INVALID_ATTENDEE));","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, VALID_START, VALID_END, invalidAttendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":120}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_ATTENDEES \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"                        VALID_REMARK, VALID_ATTENDEES);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"                VALID_REMARK, VALID_ATTENDEES);","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_REMARK, VALID_ATTENDEES);","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2023-09-23"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"                VALID_REMARK, VALID_ATTENDEES);","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_REMARK, VALID_ATTENDEES);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-09-23"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"                VALID_REMARK, VALID_ATTENDEES);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_ATTENDEES);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_REMARK, invalidTags);","lastModifiedDate":"2023-09-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"howenc":14,"-":84}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"     * Adds a new {@code Meeting} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public AddressBookBuilder withMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        addressBook.addMeeting(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"    public EditPersonDescriptorBuilder withRemark(String address) {","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"        descriptor.setRemark(new Remark(address));","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":83,"juzzztinsoong":4}},{"path":"src/test/java/seedu/address/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static seedu.address.model.meeting.MeetingTimeTest.FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"public class MeetingBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public static final String DEFAULT_TITLE \u003d \"Test Meeting 1\";","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    public static final String DEFAULT_LOCATION \u003d \"Room 1\";","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    public static final LocalDateTime DEFAULT_START \u003d LocalDateTime.parse(\"02.10.2023 1000\", FORMAT);","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    public static final LocalDateTime DEFAULT_END \u003d LocalDateTime.parse(\"03.10.2023 1000\", FORMAT);","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    private Title title;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    private Location location;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    private Set\u003cAttendee\u003e attendees;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        this.location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        this.start \u003d DEFAULT_START;","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        this.end \u003d DEFAULT_END;","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder(Meeting personToCopy) {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        title \u003d personToCopy.getTitle();","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        location \u003d personToCopy.getLocation();","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        start \u003d personToCopy.getStart();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        end \u003d personToCopy.getEnd();","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        attendees \u003d new HashSet\u003c\u003e(personToCopy.getAttendees());","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"     * Sets the {@code Title} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder withTitle(String name) {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        this.title \u003d new Title(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"     * Parses the {@code attendees} into a {@code Set\u003cAttendee\u003e} and set it to the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder withAttendees(String ... attendees) {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        this.attendees \u003d SampleDataUtil.getAttendeeSet(attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"     * Sets the {@code start} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder withStart(String start) {","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        this.start \u003d LocalDateTime.parse(start, FORMAT);","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"     * Sets the {@code start} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder withEnd(String end) {","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"        this.end \u003d LocalDateTime.parse(end, FORMAT);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder withLocation(String location) {","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"    public Meeting build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"        return new Meeting(title, location, start, end, attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":94}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"     * Sets the {@code remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":94,"author":{"gitId":"juzzztinsoong"},"content":"        return new Person(name, phone, email, remark, tags);","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":88,"juzzztinsoong":9}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":59,"juzzztinsoong":3}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":" * A utility class containing a list of {@code Index} objects to be used in","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":" * tests.","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"    public static final Index INDEX_FIRST_MEETING \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"    public static final Index INDEX_SECOND_MEETING \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"    public static final Index INDEX_THIRD_MEETING \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    public static final Index INDEX_OUT_OF_BOUNDS \u003d Index.fromOneBased(1000);","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jason-raiin":8,"-":11}},{"path":"src/test/java/seedu/address/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":" * A utility class containing a list of {@code Meetings} objects to be used in","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":" * tests.","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"public class TypicalMeetings {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"    public static final Meeting MEETING1 \u003d new MeetingBuilder().withTitle(\"CS2103T meeting\")","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"            .withLocation(\"Zoom call url\")","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"            .withStart(\"20.09.2023 1000\").withEnd(\"20.09.2023 1200\")","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"            .withAttendees(TypicalPersons.getTypicalAttendees())","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"            .build();","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":11,"jason-raiin":4}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":" * A utility class containing a list of {@code Person} objects to be used in","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":" * tests.","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"            .withPhone(\"94351253\").withRemark(\"\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"            .withPhone(\"98765432\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"cornelia@example.com\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(VALID_EMAIL_AMY).withRemark(VALID_REMARK_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"            .withEmail(VALID_EMAIL_BOB).withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"    private TypicalPersons() {","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"     * Returns an {@code AddressBook} with all the typical persons and meetings.","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"    public static String[] getTypicalAttendees() {","lastModifiedDate":"2023-10-09"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"        List\u003cPerson\u003e typicalPersons \u003d getTypicalPersons();","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"        String[] typicalAttendees \u003d typicalPersons.stream().map(Person::getName).map(Name::toString)","lastModifiedDate":"2023-10-09"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"                .collect(Collectors.toList()).toArray(new String[0]);","lastModifiedDate":"2023-10-09"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"        return typicalAttendees;","lastModifiedDate":"2023-10-09"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jason-raiin":20,"-":54,"juzzztinsoong":10}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"* This is **a project that builds upon a sample project given to Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"* It is named `OutBook`.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"* The project is an ongoing software project for a desktop application (called OutBook) used for managing contact and meeting details.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"* Its purpose is to be a digital personal secretary which organise and keep track of meetings, as well as the people that the user is meeting with.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"* For the detailed documentation of this project, see the **[OutBook Product Website](https://ay2324s1-cs2103t-f12-4.github.io/tp/)**.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F12-4/tp/graph/badge.svg?token\u003dNR777ZD6BZ)](https://codecov.io/gh/AY2324S1-CS2103T-F12-4/tp)","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"howenc":9,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"    String jUnitLauncherVersion \u003d \u00271.10.0\u0027","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"    testImplementation group: \u0027org.junit.platform\u0027, name: \u0027junit-platform-launcher\u0027, version: jUnitLauncherVersion","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    archiveFileName \u003d \u0027OutBook.jar\u0027","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"howenc":1,"jason-raiin":2,"-":71,"qz1004":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"### Cheong Howen","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"\u003cimg src\u003d\"images/howenc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"[[github](https://github.com/howenc)]","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"[[portfolio](team/howenc.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"* Role: Project Lead","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"* Responsibilities:","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    * Organizes tasks and coordination between team members","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    * Ensures deliverables are done on time","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"### Huang Jia Can (Jason)","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"\u003cimg src\u003d\"images/jason-raiin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"[[github](http://github.com/jason-raiin)]","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"[[portfolio](team/jason-raiin.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"* Responsibilities: In charge of Logic component","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"### Hwang Qi Zhen","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"\u003cimg src\u003d\"images/qz1004.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"[[github](http://github.com/qz1004)]","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"[[portfolio](team/qz1004.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"* Responsibilities: In charge of Model component","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"### Justin Soong Yoong Kai","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"\u003cimg src\u003d\"images/juzzztinsoong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"[[github](http://github.com/juzzztinsoong)]","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"[[portfolio](team/juzzztinsoong.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"* Responsibilities: In charge of Storage component","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"### Linus Lee","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"\u003cimg src\u003d\"images/lomaply.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"[[github](http://github.com/LoMaply)]","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"[[portfolio](team/lomaply.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"* Responsibilities: In charge of UI component","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"howenc":4,"-":32,"qz1004":21,"LoMaply":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"title: OutBook Developer Guide","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"## Table of Contents","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"- [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"- [Design](#design)","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"  - [Architecture](#architecture)","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"  - [UI component](#ui-component)","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"  - [Logic component](#logic-component)","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"  - [Model component](#model-component)","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"  - [Storage component](#storage-component)","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"  - [Common classes](#common-classes)","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"  - [Edit Contacts and Meetings feature](#edit-contacts-and-meetings-feature)","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"  - [View Contacts and Meetings feature](#view-contacts-and-meetings-feature)","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"  - [Find meeting feature](#find-meeting-feature)","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"  - [Add attendee feature](#add-attendee-feature)","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"  - [Remove attendee feature](#remove-attendee-feature)","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"  - [Last Contacted Time feature](#last-contacted-time-feature)","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"  - [Mark meeting as complete feature](#mark-meeting-as-complete-feature)","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"  - [Contact Status feature](#contact-status-feature)","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"  - [Saving data](#saving-data)","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"- [Planned Enhancements](#planned-enhancements)","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"  - [\\[Proposed\\] Undo and redo feature](#proposed-undo-and-redo-feature)","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"  - [\\[Feature Flaw\\] View Commands](#feature-flaw-view-commands)","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"- [Effort](#effort)","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"- [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"  - [Product scope](#product-scope)","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"  - [User stories](#user-stories)","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"  - [Use cases](#use-cases)","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"  - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"  - [Glossary](#glossary)","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"- [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"  - [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"  - [Adding a person](#adding-a-person)","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"  - [Editing a person](#editing-a-person)","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"  - [Viewing a contact](#viewing-a-contact)","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"  - [Deleting a person](#deleting-a-person)","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"  - [Meeting Tests](#meeting-tests)","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"  - [Meeting Attendees](#meeting-attendees)","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"  - [Mark Meetings](#mark-meetings)","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"  - [Data Storage](#data-storage)","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"- This project has reused and adopted the structure of AB3.","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":":bulb: **Tip:** The `.puml` \u0026 `.uxf` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides (for `.puml`)](https://se-education.org/guides/tutorials/plantUml.html) or [_UMLet_ (for `.uxf`)](https://www.umlet.com) to learn how to create and edit diagrams.","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"jason-raiin"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"LoMaply"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"\u003cimg src\u003d\"images/UiClassDiagram.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"jason-raiin"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"jason-raiin"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"jason-raiin"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"jason-raiin"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"LoMaply"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"LoMaply"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"LoMaply"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"jason-raiin"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"jason-raiin"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-F12-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-11-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"90%\" /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"\u003cimg src\u003d\"images/Person\u0026MeetingClassDiagram.png\" width\u003d\"90%\" /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"howenc"},"content":"- stores the address book data i.e., all `Person` and `Meeting` objects (which are contained in a `UniquePersonList` and `UniqueMeetingList` object).","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"howenc"},"content":"- stores the currently \u0027selected\u0027 `Person` and `Meeting` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` and `ObservableList\u003cMeeting\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"jason-raiin"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"jason-raiin"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"howenc"},"content":"- The Tag is a factory class that keeps its own HashMap of the Tags it has created before, thus it ensures that every Tag is unique and can be referenced by all Person and Meetings.","lastModifiedDate":"2023-11-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-F12-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"howenc"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"jason-raiin"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"jason-raiin"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"jason-raiin"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"howenc"},"content":"### Edit Contacts and Meetings feature","lastModifiedDate":"2023-11-10"},{"lineNumber":219,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"LoMaply"},"content":"Both the edit contact command `editc` and edit meeting command `editm` are implemented quite similarly due to the similarities between the `Person` and `Meeting` classes.","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"LoMaply"},"content":"This section shall therefore only go in deep detail for the implementation of the `editm` command. However, the `editc` equivalent of certain commands used by `editm` will be detailed, such that the implementation of `editc` can be fully derived.","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"LoMaply"},"content":"The class diagrams for both edit commands differ from the other commands in that an additional `EditMeetingDescriptor` or `EditPersonDescriptor` class is used to create the commands. The diagram for `editm` is as seen below.","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"LoMaply"},"content":"![EditMeetingClassDiagram](images/edit/EditMeetingClassDiagram.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"LoMaply"},"content":"To start off, both `editc` and `editm` take in an index as their first argument, which refers to a `Person` in the displayed person list, or a `Meeting` in the displayed meeting list respectively.","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"LoMaply"},"content":"Next, both commands take in a variable number of optional arguments based on the arguments used by the `addc` and `addm` commands. This allows the user to input only the fields they wish to edit in the chosen `Person` or `Meeting` object, as opposed to having to type in every field.","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"LoMaply"},"content":"Using `editm 3 m/Friend meetup a/Mall` as an example, when input by the user, an instance of an `EditMeetingCommand` (`EditCommand` in the case of `editc` with its respective `Person` fields as arguments) is created as shown in the following Sequence Diagram.","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"LoMaply"},"content":"![CreateEditMeetingCommandSequenceDiagram](images/edit/CreateEditMeetingCommand-Create_EditMeetingCommand.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"LoMaply"},"content":"As seen above, before the `EditMeetingCommandParser` creates the `EditMeetingCommand` object, it first creates an instance of an `EditMeetingDescriptor` (`EditPersonDescriptor` in the case of `editc`). This descriptor stores the new information of the fields to be edited based on the user input. From our example, it would store the `Title: Friend meetup` and `Location: Mall`.","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"LoMaply"},"content":"Once the instance of `EditMeetingCommand` is created, it is executed by the `LogicManager`. During execution, the current `Meeting` object referenced by the input index (3 in our example) is obtained from the meeting list returned by `getFilteredMeetingList`.","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"LoMaply"},"content":"Next, a new instance of `Meeting` is created using the fields from the `EditMeetingDescriptor`. Any fields not present in the descriptor us obtained from the old `Meeting` object from the previous step, as these fields do not need to be edited. From our example, the `START`, `END`, `TAG` and `ATTENDEE_LIST` will be obtained from the current `Meeting` instance as the Descriptor only contains the `TITLE` and `LOCATION` fields.","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":244,"author":{"gitId":"LoMaply"},"content":"Finally, the old `Meeting` object is replaced with the new instance, and the `ModelManager` is updated. These steps are denoted in the Sequence Diagram below.","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"LoMaply"},"content":"![EditMeetingSequenceDiagram](images/edit/EditMeetingSequenceDiagram-Execute_EditMeetingCommand.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":247,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":248,"author":{"gitId":"LoMaply"},"content":"#### Design Considerations and Rationale","lastModifiedDate":"2023-11-01"},{"lineNumber":249,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":250,"author":{"gitId":"LoMaply"},"content":"1. `editm` allows the user to edit every field of `Meeting` apart from the attendee list.","lastModifiedDate":"2023-11-01"},{"lineNumber":251,"author":{"gitId":"LoMaply"},"content":"   - The commands `addmc` and `rmmc` are used to modify the attendee list of a meeting instead.","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"LoMaply"},"content":"   - This retains the identity of the edit commands as commands that modify field information, as opposed to `addmc` and `rmmc` which can be seen as commands that link multiple objects together.","lastModifiedDate":"2023-11-01"},{"lineNumber":253,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":255,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":256,"author":{"gitId":"howenc"},"content":"### View Contacts and Meetings feature","lastModifiedDate":"2023-11-10"},{"lineNumber":257,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"LoMaply"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"LoMaply"},"content":"Just like the Edit commands, the view contact command `viewc` and the view meeting command `viewm` are implemented in the exact same way due to the similarities between the `Person` and `Meeting` classes.","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"LoMaply"},"content":"As such, this section shall only detail the implementation of the `viewc` command. However, the implementation of `viewm` can be derived by replacing some `Person` related functions/classes/objects with its `Meeting` counterpart.","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"LoMaply"},"content":"`viewc` and `viewm` both take in an index as their only argument, which refers to a `Person` in the displayed person list, or a `Meeting` in the displayed meeting list respectively.","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"LoMaply"},"content":"Using `viewc 2` as an example, when input by the user, an instance of a `ViewContactCommand` (`ViewMeetingCommand` in the case of `viewm`) is created as shown in the following Sequence Diagram. This step does not differ from the way other commands have been shown to be created. The argument for our example would just be `2`, which would be stored as the `targetIndex` field of the `ViewContactCommand` object.","lastModifiedDate":"2023-11-01"},{"lineNumber":267,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"LoMaply"},"content":"![CreateViewContactCommandSequenceDiagram](images/view/CreateViewContactCommand-Create_ViewContactCommand.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"LoMaply"},"content":"Once the instance of `ViewContactCommand` is created, it is executed by the `LogicManager`. During execution, the command stores the contents of its `targetIndex` field in the `ModelManager` using its `setViewedPersonIndex` method as shown in the next Sequence Diagram. For `ViewMeetingCommand` it would use the `setViewedMeetingIndex` method instead.","lastModifiedDate":"2023-11-01"},{"lineNumber":271,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":272,"author":{"gitId":"LoMaply"},"content":"![StoreViewedItemsToModelDiagram](images/view/ViewCommandsSequenceDiagram-StoreViewedItemsToModel.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"LoMaply"},"content":"Once the indexes of the `Person` and `Meeting` objects to view (if any) are stored in `ModelManager`, their corresponding `Person` and `Meeting` objects (in this case the 2nd `Person` as displayed on the list) are obtained by the `MainWindow` as a `Pair` through the `getViewedItems` method of the `LogicManager` class. As such, both objects can then be forwarded to the `InfoDisplayPanel` using `setViewedModel`, which then displays detailed information of both objects. This process is denoted in the final Sequence Diagram below.","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"LoMaply"},"content":"![ForwardViewedPersonMeetingtoUiDiagram](images/view/UiViewItemsSequenceDiagram-ForwardViewedPerson\u0026MeetingToUi.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"qz1004"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":278,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":279,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":280,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":281,"author":{"gitId":"LoMaply"},"content":"#### Design Considerations and Rationale","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"LoMaply"},"content":"1. Passing viewed `Person` and `Meeting` from Model to Ui through Logic:","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"LoMaply"},"content":"   - `ViewContactCommand` and `ViewMeetingCommand` only have access to the `ModelManager` while `MainWindow` only has access to `LogicManager`.","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"LoMaply"},"content":"   - To prevent excessive and unnecessary coupling for the sake of two commands, it is deemed more worthwhile to use `LogicManager` as a proxy between `ModelManager` and `MainWindow`, especially since `LogicManager` already had access to `ModelManager`.","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"LoMaply"},"content":"2. Storing the viewed `Person` and `Meeting` as fields in `ModelManager`:","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"LoMaply"},"content":"   - The behaviour of `ModelManager` is not contradicted as it is already responsible for storing both the filtered lists of `Person` and `Meeting` objects that are displayed in the Ui.","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"LoMaply"},"content":"3. Storing the `Index` of the viewed `Person` and `Meeting` rather than a copy of the objects directly:","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"LoMaply"},"content":"   - Storing a copy of the objects was done initially but led to a display issue.","lastModifiedDate":"2023-10-25"},{"lineNumber":290,"author":{"gitId":"LoMaply"},"content":"   - When the fields of any currently viewed item are edited, the display does not update as the copy of the original viewed item does not get updated as well.","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"LoMaply"},"content":"   - Storing the `Index` fixes this issue as the `Person` and `Meeting` objects are only forwarded to the Ui after the execution of a command.","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"LoMaply"},"content":"4. As a continuation to point 3, this leads to a new issue with commands that can modify the display list length/order such as `listc`, `editc`, `findc`, `deletec`, `addc` and their meeting variants.","lastModifiedDate":"2023-11-02"},{"lineNumber":293,"author":{"gitId":"LoMaply"},"content":"   - Since the stored `Index` may now reference a different item, or even point out-of-bounds in the case of the display list being shortened, this implementation may potentially lead to unpredictable results for both view commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"LoMaply"},"content":"   - For the case of `addc`, `addm`, `listc`, `listm`, `editc` and `editm`, this is judged to not be an issue as the view commands still obey their definition of displaying the item at a specified list index.","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"LoMaply"},"content":"     - For both edit commands, it is also more important that they can display dynamic updates.","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"LoMaply"},"content":"   - For the case of `deletec`, `deletem`, `findc` and `findm`, the stored `Index` is set to null to prevent potential out-of-bounds error.","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":298,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":299,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":300,"author":{"gitId":"howenc"},"content":"### Find meeting feature","lastModifiedDate":"2023-10-25"},{"lineNumber":301,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":302,"author":{"gitId":"howenc"},"content":"#### Behaviour and Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"howenc"},"content":"The find meeting command is facilitated by `GeneralMeetingPredicate` that by itself is the combined predicate for all the meeting data fields. It is placed within the Model component and is only dependent on other predicate classes and `Meeting`.","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":306,"author":{"gitId":"howenc"},"content":"`findm` is supported by 5 sub-predicates that would search their respective fields.","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"howenc"},"content":"- m/TITLE_KEYWORDS  —  Finds meetings which `Title` contain any of the keywords given using `TitleContainsKeywordsPredicate`.","lastModifiedDate":"2023-10-25"},{"lineNumber":309,"author":{"gitId":"howenc"},"content":"- a/LOCATION_KEYWORDS  —  Finds meetings which `Location` contain any of the keywords given using `LocationContainsKeywordsPredicate`.","lastModifiedDate":"2023-10-25"},{"lineNumber":310,"author":{"gitId":"howenc"},"content":"- n/ATTENDEE_KEYWORDS  —  Finds meetings which set of `Attendee` contain any of the keywords given using `AttendeeContainsKeywordsPredicate`.","lastModifiedDate":"2023-10-25"},{"lineNumber":311,"author":{"gitId":"howenc"},"content":"- t/TAG_KEYWORDS  —  Finds meetings which set of `Tag` contain any of the keywords given using `TagContainsKeywordsPredicate`.","lastModifiedDate":"2023-10-25"},{"lineNumber":312,"author":{"gitId":"howenc"},"content":"- s/START e/END  —  Finds meetings that fall within the range of time given by START \u0026 END using `MeetingTimeContainsPredicate`. (Both START \u0026 END must come together)","lastModifiedDate":"2023-10-25"},{"lineNumber":313,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":314,"author":{"gitId":"howenc"},"content":"All of these fields are optional and typing `findm` alone will not impose any predicates, except MeetingTimeContainsPredicate which will give the largest `LocalDateTime` range possible.","lastModifiedDate":"2023-10-26"},{"lineNumber":315,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":316,"author":{"gitId":"howenc"},"content":"![FindMeetingClass](images/FindMeetingClass.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"howenc"},"content":"Given below is an example usage scenario and how the `findm` command behaves at each step.","lastModifiedDate":"2023-10-25"},{"lineNumber":319,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":320,"author":{"gitId":"howenc"},"content":"Step 1. The user executes `findm m/meeting` command to find all meetings that have the keyword `meeting` in their title. This results in the logic component calling `parse` from the `AddressBookParser` object to make a `FindMeetingCommandParser` object. This will parse the arguments available and create the `GeneralPredicateMeeting` object and FindMeetingCommand object.","lastModifiedDate":"2023-10-28"},{"lineNumber":321,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":322,"author":{"gitId":"howenc"},"content":"\u003cimg src \u003d \"images/FindMeetingSequence.png\" width \u003d \"100%\" /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":323,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":324,"author":{"gitId":"howenc"},"content":"Step 2. The `FindMeetingCommand` will be immediately executed and will call `setPredicate(GeneralMeetingPredicate)` from `Model`. The `GeneralMeetingPredicate` will be used on all meetings, meetings which pass all 5 predicates are shown in `MeetingSchedulePanel`. After which `FindMeetingCommand` and the predicate objects will no longer be referenced.","lastModifiedDate":"2023-10-28"},{"lineNumber":325,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":326,"author":{"gitId":"howenc"},"content":"The following diagrams show the entire sequence flow for `LogicManager#execute()` for FindMeetingCommand.","lastModifiedDate":"2023-10-25"},{"lineNumber":327,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":328,"author":{"gitId":"howenc"},"content":"\u003cimg src \u003d \"images/FindMeetingSequence2.png\" width \u003d \"100%\" /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":329,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":330,"author":{"gitId":"howenc"},"content":"**Find Contact is implemented in a similar manner.**","lastModifiedDate":"2023-11-10"},{"lineNumber":331,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":332,"author":{"gitId":"howenc"},"content":"#### Design Considerations and Rationale","lastModifiedDate":"2023-10-26"},{"lineNumber":333,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":334,"author":{"gitId":"howenc"},"content":"1. Given the amount of predicates `FindMeetingCommand` is supposed to use, every predicate needs to be combined in order to maintain good SLAP.","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"howenc"},"content":"   - `GeneralMeetingPredicate` is made with the user input KEYWORDS, if there are no inputs for the predicate must return true.","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"howenc"},"content":"   - If there are no inputs for s/START and e/END, `FindMeetingCommandParser` will give `MeetingTimeContainsPredicate` both `LocalDateTime.MAX` \u0026 `LocaLDateTime.MIN`","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"howenc"},"content":"2. The coupling between predicate classes and `Logic` needs to be minimal as `FindMeetingCommandParser` should only be dependent on `GeneralMeetingPredicate` and `MeetingTime`.","lastModifiedDate":"2023-10-26"},{"lineNumber":338,"author":{"gitId":"howenc"},"content":"   - `MeetingTime`is needed to check the validity of START and END in order for `parse()` to stop any invalid inputs, it cannot be removed.","lastModifiedDate":"2023-10-26"},{"lineNumber":339,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":340,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":341,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":342,"author":{"gitId":"qz1004"},"content":"### Add attendee feature","lastModifiedDate":"2023-10-25"},{"lineNumber":343,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":344,"author":{"gitId":"qz1004"},"content":"User can specify a Person to add as an Attendee to a specified Meeting.","lastModifiedDate":"2023-10-25"},{"lineNumber":345,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":346,"author":{"gitId":"qz1004"},"content":"To avoid storing an entire `JsonAdaptedPerson` object within the `JsonAdaptedMeeting` every time a `Person` is added to a `Meeting`,","lastModifiedDate":"2023-10-25"},{"lineNumber":347,"author":{"gitId":"qz1004"},"content":"an `Attendee` class is created to store a unique identifier for the `Person` added.","lastModifiedDate":"2023-11-12"},{"lineNumber":348,"author":{"gitId":"qz1004"},"content":"As every `Person` has a unique name in the current iteration of OutBook, it is used as the unique identifier.","lastModifiedDate":"2023-11-12"},{"lineNumber":349,"author":{"gitId":"qz1004"},"content":"`Attendee` is implemented in the following way:","lastModifiedDate":"2023-11-12"},{"lineNumber":350,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"qz1004"},"content":"- `Attendee(attendeeName)` -- Initialized with a String obtained from `Person.getName().toString()`","lastModifiedDate":"2023-10-25"},{"lineNumber":352,"author":{"gitId":"qz1004"},"content":"- `Attendee#getAttendeeName()` -- Returns a String representing the attendee\u0027s name","lastModifiedDate":"2023-10-25"},{"lineNumber":353,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":354,"author":{"gitId":"qz1004"},"content":"![AttendeeClassDiagram](images/AttendeeClassDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":355,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":356,"author":{"gitId":"qz1004"},"content":"The following sequence diagram shows how the add attendee operation works:","lastModifiedDate":"2023-10-25"},{"lineNumber":357,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":358,"author":{"gitId":"qz1004"},"content":"![AddAttendeeSequenceDiagram](images/AddAttendeeSequenceDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":359,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":360,"author":{"gitId":"qz1004"},"content":"A `Person` object can be obtained from a `Meeting`\u0027s list of attendees by searching through `UniquePersonList`","lastModifiedDate":"2023-11-12"},{"lineNumber":361,"author":{"gitId":"qz1004"},"content":"for a `Person` with a name matching `attendeeName`.","lastModifiedDate":"2023-10-25"},{"lineNumber":362,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":363,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":364,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":365,"author":{"gitId":"jason-raiin"},"content":"### Remove attendee feature","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":367,"author":{"gitId":"jason-raiin"},"content":"User can specify an Attendee to remove from a specified Meeting by specifying its index in the list of Attendees.","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"jason-raiin"},"content":"This is the main motivation behind using a LinkedHashSet for the implementation of the Attendee Set.","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":370,"author":{"gitId":"jason-raiin"},"content":"The following sequence diagram shows how the remove attendee operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":372,"author":{"gitId":"jason-raiin"},"content":"![RemoveAttendeeSequenceDiagram](images/RemoveAttendeeSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":374,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":375,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":376,"author":{"gitId":"jason-raiin"},"content":"### Last Contacted Time feature","lastModifiedDate":"2023-11-13"},{"lineNumber":377,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":378,"author":{"gitId":"howenc"},"content":"Keeping track of the user\u0027s last meeting with their contact is facilitated by the addition of a `LastContactedTime` object to `Person`.","lastModifiedDate":"2023-11-10"},{"lineNumber":379,"author":{"gitId":"howenc"},"content":"Thus, each instance of `Person` will contain an immutable `LastContactedTime` object that stores the user\u0027s last meeting with that contact.","lastModifiedDate":"2023-11-10"},{"lineNumber":380,"author":{"gitId":"howenc"},"content":"The following steps shows how `LastContactedTime` is implemented and utilized in the application.","lastModifiedDate":"2023-11-10"},{"lineNumber":381,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":382,"author":{"gitId":"howenc"},"content":"Step 1. The user inputs the `addc` command into the `CommandBox` input field, with the added field `l/[LAST_CONTACTED_TIME]`.","lastModifiedDate":"2023-11-10"},{"lineNumber":383,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":384,"author":{"gitId":"howenc"},"content":"The following diagram summarizes steps 2 to 6:","lastModifiedDate":"2023-11-10"},{"lineNumber":385,"author":{"gitId":"howenc"},"content":"\u003cimg src\u003d\"images/LastContactedTime1.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":386,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":387,"author":{"gitId":"howenc"},"content":"Step 2. Entering a correct command with the `Enter` key then calls `execute` on `LogicManager`.","lastModifiedDate":"2023-11-10"},{"lineNumber":388,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":389,"author":{"gitId":"howenc"},"content":"Step 3. `LogicManager` then calls `AddressBookParser#parseCommand(commandText)` on the `commandText` String, which recognizes that it is an `addc` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":390,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":391,"author":{"gitId":"howenc"},"content":"Step 4. `AddressBookParser` then calls `AddCommandParser#parse()` on the command arguments.","lastModifiedDate":"2023-11-10"},{"lineNumber":392,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":393,"author":{"gitId":"howenc"},"content":"Step 5. `AddCommandParser` then calls `ParserUtil#parseContactTime()` which parses the last contacted time and returns a `LocalDateTime` object called `lastContactedTime`.","lastModifiedDate":"2023-11-10"},{"lineNumber":394,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":395,"author":{"gitId":"howenc"},"content":"Step 6. The `lastContactedTime` object is then passed to the `Person` constructor, which creates a new `Person` that calls the `LastContactedTime` constructor with it.","lastModifiedDate":"2023-11-10"},{"lineNumber":396,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":397,"author":{"gitId":"howenc"},"content":"The following diagram summarizes steps 7 and 8:","lastModifiedDate":"2023-11-10"},{"lineNumber":398,"author":{"gitId":"howenc"},"content":"\u003cimg src\u003d\"images/LastContactedTime2.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":399,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":400,"author":{"gitId":"howenc"},"content":"Step 7. The completed `Person` is passed to an `AddCommand` constructor which return a new `AddCommand` that can be executed.","lastModifiedDate":"2023-11-10"},{"lineNumber":401,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":402,"author":{"gitId":"howenc"},"content":"Step 8. `LogicManager` then executes the `AddCommand` on the application model.","lastModifiedDate":"2023-11-10"},{"lineNumber":403,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":404,"author":{"gitId":"howenc"},"content":"Step 9. Further execution is carried out, which like before adds the `Person` object to the list of `Person`s in the `Model`, and updates the `Storage` with this new `Person`.","lastModifiedDate":"2023-11-10"},{"lineNumber":405,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":406,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":407,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":408,"author":{"gitId":"jason-raiin"},"content":"### Mark meeting as complete feature","lastModifiedDate":"2023-11-13"},{"lineNumber":409,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":410,"author":{"gitId":"jason-raiin"},"content":"A meeting can be marked as complete using the `mark` command. The command also updates the last contacted time of its attendees to the ending time of the meeting, if the meeting end time is after the attendees current last contacted time.","lastModifiedDate":"2023-11-13"},{"lineNumber":411,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":412,"author":{"gitId":"jason-raiin"},"content":"This is the overall sequence diagram of marking a meeting as complete.","lastModifiedDate":"2023-11-13"},{"lineNumber":413,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":414,"author":{"gitId":"jason-raiin"},"content":"\u003cimg src\u003d\"images/mark/Execute MarkMeetingCommand.png\" width\u003d1000/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":415,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":416,"author":{"gitId":"jason-raiin"},"content":"When a mark command is entered, it is first parsed by the respective `Parser`s to create a `MarkMeetingCommand` object.","lastModifiedDate":"2023-11-13"},{"lineNumber":417,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":418,"author":{"gitId":"jason-raiin"},"content":"\u003cimg src\u003d\"images/mark/CreateMarkMeetingCommand.png\" width\u003d1000 /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":419,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":420,"author":{"gitId":"jason-raiin"},"content":"When the command is executed, the meeting is marked as complete by creating a new `Meeting` with the same fields except for status, and this meeting is updated to the `Model`.","lastModifiedDate":"2023-11-13"},{"lineNumber":421,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":422,"author":{"gitId":"jason-raiin"},"content":"\u003cimg src\u003d\"images/mark/MarkMeeting.png\" width\u003d1000 /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":423,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":424,"author":{"gitId":"jason-raiin"},"content":"Following this, the last contacted time of all the attendees of the meeting are updated to the end time of the meeting.","lastModifiedDate":"2023-11-13"},{"lineNumber":425,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":426,"author":{"gitId":"jason-raiin"},"content":"\u003cimg src\u003d\"images/mark/Update Attendee LastContactedTime.png\" width\u003d1000 /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":427,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":428,"author":{"gitId":"jason-raiin"},"content":"Finally, a `CommandResult` is produced and returned to the `LogicManager`.","lastModifiedDate":"2023-11-13"},{"lineNumber":429,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":430,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":431,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":432,"author":{"gitId":"qz1004"},"content":"### Contact Status feature","lastModifiedDate":"2023-11-13"},{"lineNumber":433,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":434,"author":{"gitId":"qz1004"},"content":"Each instance of `Person` contains an immutable `Status` object that allows the user to specify which stage of the insurance sales process a contact is at, if applicable.","lastModifiedDate":"2023-11-12"},{"lineNumber":435,"author":{"gitId":"qz1004"},"content":"At the current iteration of OutBook, a status must be one of `NIL`, `Prospective`, `Active`, `Inactive`, `Renewal`, `Claimant` (case-insensitive).","lastModifiedDate":"2023-11-12"},{"lineNumber":436,"author":{"gitId":"qz1004"},"content":"This is tailored according to the responsibilities of an insurance agent, which include:","lastModifiedDate":"2023-11-12"},{"lineNumber":437,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":438,"author":{"gitId":"qz1004"},"content":"- Promoting relevant insurance policies to prospective clients","lastModifiedDate":"2023-11-12"},{"lineNumber":439,"author":{"gitId":"qz1004"},"content":"- Keeping active clients updated on their policies","lastModifiedDate":"2023-11-12"},{"lineNumber":440,"author":{"gitId":"qz1004"},"content":"- Finding out why inactive clients did not renew their policies","lastModifiedDate":"2023-11-12"},{"lineNumber":441,"author":{"gitId":"qz1004"},"content":"- Sending renewal reminders to clients whose policies are approaching expiry","lastModifiedDate":"2023-11-12"},{"lineNumber":442,"author":{"gitId":"qz1004"},"content":"- Filing and following up on claims on behalf of their clients","lastModifiedDate":"2023-11-12"},{"lineNumber":443,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":444,"author":{"gitId":"qz1004"},"content":"The list of valid statuses is stored as an `Enumeration` object for the following benefits:","lastModifiedDate":"2023-11-12"},{"lineNumber":445,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":446,"author":{"gitId":"qz1004"},"content":"- Readability: e.g. `StatusList.NIL` is self-explanatory and easier to understand than something like `StatusList[0]` if an index data structure were to be used.","lastModifiedDate":"2023-11-12"},{"lineNumber":447,"author":{"gitId":"qz1004"},"content":"- Maintainability: If the list of valid statuses changes or expands in the future, it\u0027s much easier to update an enumeration. This centralizes the changes in one place, making the code more maintainable compared to scattered string constants.","lastModifiedDate":"2023-11-12"},{"lineNumber":448,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":449,"author":{"gitId":"qz1004"},"content":"`Status` is implemented and utilized in a similar manner to `LastContactedTime`, as described [here](#last-contacted-time-feature).","lastModifiedDate":"2023-11-13"},{"lineNumber":450,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":451,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":452,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":453,"author":{"gitId":"jason-raiin"},"content":"### Saving data","lastModifiedDate":"2023-11-13"},{"lineNumber":454,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":455,"author":{"gitId":"jason-raiin"},"content":"- The address book is saved in a JSON file after every command execution. The default path for this file is `/data/outbook.json`, found in the same directly as the application JAR file.","lastModifiedDate":"2023-11-13"},{"lineNumber":456,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":457,"author":{"gitId":"jason-raiin"},"content":"- The JSON file should not be directly edited. Incorrectly editing the file will result in OutBook not being able to load the address book and data will be lost. If directly editing the file is deemed necessary, create a backup before doing so.","lastModifiedDate":"2023-11-13"},{"lineNumber":458,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":459,"author":{"gitId":"jason-raiin"},"content":"- Under normal operation through the application, the JSON file will not become corrupted. If for any reason the file does become corrupted, OutBook will not be able to load the data and will display a blank address book.","lastModifiedDate":"2023-11-13"},{"lineNumber":460,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":461,"author":{"gitId":"jason-raiin"},"content":"  - If data recovery is to be attempted, do not execute any commands. Exit the application. Try to edit the JSON file such that it adheres to the parameters for each field. If data recovery is successful, OutBook will load the address book on boot.","lastModifiedDate":"2023-11-13"},{"lineNumber":462,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":463,"author":{"gitId":"jason-raiin"},"content":"  - If not, the data will be lost. The address book has can only be restored by executing commands through the application.","lastModifiedDate":"2023-11-13"},{"lineNumber":464,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":465,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":466,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":467,"author":{"gitId":"howenc"},"content":"## **Planned Enhancements**","lastModifiedDate":"2023-11-10"},{"lineNumber":468,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":469,"author":{"gitId":"howenc"},"content":"### \\[Proposed\\] Undo and redo feature","lastModifiedDate":"2023-11-10"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"jason-raiin"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":476,"author":{"gitId":"jason-raiin"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":477,"author":{"gitId":"jason-raiin"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":488,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":489,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":533,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":534,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":537,"author":{"gitId":"qz1004"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":539,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"jason-raiin"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":544,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":545,"author":{"gitId":"jason-raiin"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2023-10-03"},{"lineNumber":546,"author":{"gitId":"jason-raiin"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"jason-raiin"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-10-03"},{"lineNumber":549,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"jason-raiin"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-10-03"},{"lineNumber":551,"author":{"gitId":"jason-raiin"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-10-03"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":555,"author":{"gitId":"LoMaply"},"content":"### \\[Feature Flaw\\] View Commands","lastModifiedDate":"2023-11-11"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":557,"author":{"gitId":"LoMaply"},"content":"As described in the implementation notes for `viewc` and `viewm` above, the currently displayed `Person` and `Meeting` objects will be cleared when certain commands such as `deletec` and `deletem` are used on a separate object, which is necessary due to the way the view commands are currently implemented. Additional details are in the implementation section referenced above.","lastModifiedDate":"2023-11-11"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":559,"author":{"gitId":"LoMaply"},"content":"We plan to remove the need to handle such edge cases by modifying the way both view commands are implemented. One potential method is as follows:","lastModifiedDate":"2023-11-11"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":561,"author":{"gitId":"LoMaply"},"content":"- Revert the implementation of `viewc` and `viewm` to the original method of storing a copy of the viewed object, rather than the viewed index.","lastModifiedDate":"2023-11-11"},{"lineNumber":562,"author":{"gitId":"LoMaply"},"content":"- Modify the behaviour of `editc`, `editm`, `deletec` and `deletem` such that when they are used on the original object currently being viewed, the stored copy will be edited/deleted accordingly.","lastModifiedDate":"2023-11-11"},{"lineNumber":563,"author":{"gitId":"LoMaply"},"content":"- This allows the currently viewed `Person` or `Meeting` object to persist regardless of command usage, and only be cleared when the object is deleted, or everything is cleared via the `clear` command.","lastModifiedDate":"2023-11-11"},{"lineNumber":564,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":565,"author":{"gitId":"howenc"},"content":"---","lastModifiedDate":"2023-11-10"},{"lineNumber":566,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":567,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"howenc"},"content":"## **Effort**","lastModifiedDate":"2023-11-10"},{"lineNumber":570,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":571,"author":{"gitId":"howenc"},"content":"### Effort in Model and Storage","lastModifiedDate":"2023-11-10"},{"lineNumber":572,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":573,"author":{"gitId":"howenc"},"content":"Compared to AB3, which only deals with 1 entity type, Person. OutBook deals with 2 entity types and allows significant interaction between them. This means that the model had to be extended and storage had to follow along with it. jackson does not allow storage of pointers, thus it became necessary to work around that using the unique fields on both Person and Meeting.","lastModifiedDate":"2023-11-10"},{"lineNumber":574,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":575,"author":{"gitId":"howenc"},"content":"### Effort in reducing coupling","lastModifiedDate":"2023-11-10"},{"lineNumber":576,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":577,"author":{"gitId":"juzzztinsoong"},"content":"Compared to AB3, where there were no interaction between entities. OutBook was designed for professionals to manage both their contacts and their meetings, this inherently means that there needs to be interaction between both entities. This interaction increases coupling and decreases cohesion. In order to combat this, many instances of facade, command and observer design patterns were used.","lastModifiedDate":"2023-11-12"},{"lineNumber":578,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":579,"author":{"gitId":"howenc"},"content":"### Effort in implementing many features","lastModifiedDate":"2023-11-10"},{"lineNumber":580,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":581,"author":{"gitId":"howenc"},"content":"OutBook needed to make managing contacts and meetings an efficient process, this meant that there needed to be many quality of life features to make the professional\u0027s life easier. Therefore, much effort was dedicated to making data easily retrievable by making almost every field searchable.","lastModifiedDate":"2023-11-10"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"howenc"},"content":"### Effort in managing interactions between entities","lastModifiedDate":"2023-11-10"},{"lineNumber":584,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":585,"author":{"gitId":"howenc"},"content":"OutBook required one meeting to interact with many other contacts and for one contact to interact with many other meetings. Because of the interactions between both classes, a change in 1 object must be reflected in everything that references the object while still being immutable. This required thorough testing and analysis to keep track of the interactions and account for them while we were adding more features.","lastModifiedDate":"2023-11-10"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":589,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"jason-raiin"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":592,"author":{"gitId":"jason-raiin"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":593,"author":{"gitId":"jason-raiin"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":594,"author":{"gitId":"jason-raiin"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":595,"author":{"gitId":"jason-raiin"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2023-10-03"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"jason-raiin"},"content":"- has many meetings to keep track of","lastModifiedDate":"2023-10-03"},{"lineNumber":606,"author":{"gitId":"jason-raiin"},"content":"- has a need to manage a significant number of contacts","lastModifiedDate":"2023-10-03"},{"lineNumber":607,"author":{"gitId":"jason-raiin"},"content":"- wants to organise meetings and contacts","lastModifiedDate":"2023-10-03"},{"lineNumber":608,"author":{"gitId":"jason-raiin"},"content":"- can type fast and is comfortable using CLI","lastModifiedDate":"2023-10-03"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"jason-raiin"},"content":"**Value proposition**: manage and organise contacts and meetings faster than a mouse/GUI driven app","lastModifiedDate":"2023-10-03"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":614,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"| Priority | As a …​                                   | I want to …​                    | So that I can…​                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"jason-raiin"},"content":"| -------- | ----------------------------------------- | ------------------------------- | ------------------------------------- |","lastModifiedDate":"2023-10-25"},{"lineNumber":620,"author":{"gitId":"jason-raiin"},"content":"| `[EPIC]` | agent who has meetings                    | have a meeting schedule         | keep track of them                    |","lastModifiedDate":"2023-10-25"},{"lineNumber":621,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | create new meetings             |                                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":622,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | delete meetings                 |                                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":623,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | view meetings                   |                                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":624,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | view a specific meeting         | see more details                      |","lastModifiedDate":"2023-10-25"},{"lineNumber":625,"author":{"gitId":"jason-raiin"},"content":"| `* *`    | agent                                     | edit a meeting                  | change its details                    |","lastModifiedDate":"2023-10-25"},{"lineNumber":626,"author":{"gitId":"jason-raiin"},"content":"| `* *`    | agent                                     | sort my meetings by date        | see which ones come first             |","lastModifiedDate":"2023-10-25"},{"lineNumber":627,"author":{"gitId":"jason-raiin"},"content":"| `*`      | agent                                     | mark meetings as complete       | know which meetings are done          |","lastModifiedDate":"2023-10-25"},{"lineNumber":628,"author":{"gitId":"jason-raiin"},"content":"| `[EPIC]` | agent who has clients                     | have an address book            | keep track of them                    |","lastModifiedDate":"2023-10-25"},{"lineNumber":629,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | create new contacts             |                                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":630,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | delete contacts                 |                                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":631,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | view contacts                   |                                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":632,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | view a specific contact         | see more details                      |","lastModifiedDate":"2023-10-25"},{"lineNumber":633,"author":{"gitId":"jason-raiin"},"content":"| `* *`    | agent                                     | edit a contact                  | change its details                    |","lastModifiedDate":"2023-10-25"},{"lineNumber":634,"author":{"gitId":"jason-raiin"},"content":"| `*`      | agent                                     | assign named tags to meetings   | organise meetings                     |","lastModifiedDate":"2023-10-25"},{"lineNumber":635,"author":{"gitId":"jason-raiin"},"content":"| `*`      | agent                                     | filter meetings by tags         | view related meetings together        |","lastModifiedDate":"2023-10-25"},{"lineNumber":636,"author":{"gitId":"jason-raiin"},"content":"| `[EPIC]` | agent who meets with clients              | schedule meetings with contacts | keep track of the client I am meeting |","lastModifiedDate":"2023-10-25"},{"lineNumber":637,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | add contacts to meetings        |                                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":638,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | remove contacts from meetings   |                                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":639,"author":{"gitId":"jason-raiin"},"content":"| `* * *`  | agent                                     | view contacts in meetings       |                                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":640,"author":{"gitId":"jason-raiin"},"content":"| `* *`    | agent                                     | mark meetings as complete       | know which meetings are still pending |","lastModifiedDate":"2023-11-02"},{"lineNumber":641,"author":{"gitId":"jason-raiin"},"content":"| `*`      | agent who wants to meet clients regularly | know the last contacted date    | when to touch base with a client      |","lastModifiedDate":"2023-10-25"},{"lineNumber":642,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":643,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2023-11-13"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"jason-raiin"},"content":"**Use case: Add a contact to a meeting**","lastModifiedDate":"2023-10-03"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"jason-raiin"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":650,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":651,"author":{"gitId":"jason-raiin"},"content":"1.  User requests to list meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":652,"author":{"gitId":"jason-raiin"},"content":"2.  OutBook shows a list of meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":653,"author":{"gitId":"jason-raiin"},"content":"3.  User requests to list contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":654,"author":{"gitId":"jason-raiin"},"content":"4.  OutBook shows a list of contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":655,"author":{"gitId":"jason-raiin"},"content":"5.  User requests to add a specific contact to a specific meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":656,"author":{"gitId":"jason-raiin"},"content":"6.  OutBook adds the contact to the meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":657,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":658,"author":{"gitId":"jason-raiin"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":659,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":660,"author":{"gitId":"jason-raiin"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":661,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":662,"author":{"gitId":"jason-raiin"},"content":"- 2a. The list of meetings is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":663,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":664,"author":{"gitId":"jason-raiin"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":665,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":666,"author":{"gitId":"jason-raiin"},"content":"- 4a. The list of contacts is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":667,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":668,"author":{"gitId":"jason-raiin"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":669,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":670,"author":{"gitId":"jason-raiin"},"content":"- 5a. The given meeting index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":671,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":672,"author":{"gitId":"jason-raiin"},"content":"  - 5a1. OutBook shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":673,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":674,"author":{"gitId":"jason-raiin"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":675,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":676,"author":{"gitId":"jason-raiin"},"content":"- 5b. The given contact index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":677,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":678,"author":{"gitId":"jason-raiin"},"content":"  - 5b1. OutBook shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":679,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":680,"author":{"gitId":"jason-raiin"},"content":"    Use case resumes at step 4.","lastModifiedDate":"2023-10-03"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":682,"author":{"gitId":"jason-raiin"},"content":"- 5c. The contact is already in the meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":683,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":684,"author":{"gitId":"jason-raiin"},"content":"  - 5a1. OutBook shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":685,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":686,"author":{"gitId":"jason-raiin"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":687,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":688,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":689,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":690,"author":{"gitId":"jason-raiin"},"content":"**Use case: Remove contact from a meeting**","lastModifiedDate":"2023-10-03"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"jason-raiin"},"content":"1.  User requests to list meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":695,"author":{"gitId":"jason-raiin"},"content":"2.  OutBook shows a list of meetings.","lastModifiedDate":"2023-10-03"},{"lineNumber":696,"author":{"gitId":"jason-raiin"},"content":"3.  User requests to view details of a specific meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":697,"author":{"gitId":"jason-raiin"},"content":"4.  OutBook shows the details of the meeting.","lastModifiedDate":"2023-10-25"},{"lineNumber":698,"author":{"gitId":"juzzztinsoong"},"content":"5.  User requests to remove a specific contact from the meeting.","lastModifiedDate":"2023-10-26"},{"lineNumber":699,"author":{"gitId":"juzzztinsoong"},"content":"6.  OutBook removes the contact from the meeting.","lastModifiedDate":"2023-10-26"},{"lineNumber":700,"author":{"gitId":"jason-raiin"},"content":"7.  User requests to remove a specific contact from the meeting.","lastModifiedDate":"2023-11-02"},{"lineNumber":701,"author":{"gitId":"jason-raiin"},"content":"8.  OutBook removes the contact from the meeting.","lastModifiedDate":"2023-11-02"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"jason-raiin"},"content":"- 2a. The list of meetings is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":708,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":709,"author":{"gitId":"jason-raiin"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":710,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":711,"author":{"gitId":"jason-raiin"},"content":"- 3a. The given meeting index is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":712,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":713,"author":{"gitId":"jason-raiin"},"content":"  - 3a1. OutBook shows an error message.","lastModifiedDate":"2023-10-25"},{"lineNumber":714,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":715,"author":{"gitId":"jason-raiin"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-25"},{"lineNumber":716,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":717,"author":{"gitId":"jason-raiin"},"content":"- 4a. There are no contacts in the meeting.","lastModifiedDate":"2023-10-25"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"jason-raiin"},"content":"- 5a. The given meeting index is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"jason-raiin"},"content":"  - 5a1. OutBook shows an error message.","lastModifiedDate":"2023-10-25"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"jason-raiin"},"content":"- 5b. The given contact index is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":728,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":729,"author":{"gitId":"jason-raiin"},"content":"  - 5b1. OutBook shows an error message.","lastModifiedDate":"2023-10-25"},{"lineNumber":730,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":731,"author":{"gitId":"jason-raiin"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2023-10-03"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":733,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":735,"author":{"gitId":"jason-raiin"},"content":"**Use case: Mark meeting as complete**","lastModifiedDate":"2023-10-25"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":737,"author":{"gitId":"jason-raiin"},"content":"**MSS**","lastModifiedDate":"2023-10-25"},{"lineNumber":738,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":739,"author":{"gitId":"jason-raiin"},"content":"1. User requests to mark a specific meeting as complete","lastModifiedDate":"2023-10-25"},{"lineNumber":740,"author":{"gitId":"jason-raiin"},"content":"2. OutBook marks the specific meeting as complete","lastModifiedDate":"2023-10-25"},{"lineNumber":741,"author":{"gitId":"jason-raiin"},"content":"3. OutBook updates the last contacted date of attendees to the meeting date","lastModifiedDate":"2023-10-25"},{"lineNumber":742,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":743,"author":{"gitId":"jason-raiin"},"content":"   Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":744,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":745,"author":{"gitId":"jason-raiin"},"content":"**Extensions**","lastModifiedDate":"2023-10-25"},{"lineNumber":746,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":747,"author":{"gitId":"jason-raiin"},"content":"- 1a. The given meeting index is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":748,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":749,"author":{"gitId":"jason-raiin"},"content":"  - 1a1. OutBook shows an error message.","lastModifiedDate":"2023-10-25"},{"lineNumber":750,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":751,"author":{"gitId":"jason-raiin"},"content":"    Use case resumes from the start.","lastModifiedDate":"2023-10-25"},{"lineNumber":752,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":753,"author":{"gitId":"jason-raiin"},"content":"- 1b. The given meeting is already marked complete.","lastModifiedDate":"2023-10-25"},{"lineNumber":754,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":755,"author":{"gitId":"jason-raiin"},"content":"  - 1b1. OutBook shows an error message.","lastModifiedDate":"2023-10-25"},{"lineNumber":756,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":757,"author":{"gitId":"jason-raiin"},"content":"    Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":758,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":759,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"juzzztinsoong"},"content":"**Performance**","lastModifiedDate":"2023-10-05"},{"lineNumber":764,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":765,"author":{"gitId":"juzzztinsoong"},"content":"1.  Should be able to respond to user input within 2 seconds under normal operating conditions.","lastModifiedDate":"2023-10-05"},{"lineNumber":766,"author":{"gitId":"juzzztinsoong"},"content":"2.  Should be able to handle a database of up to 1000 contacts and 500 meetings without a significant performance degradation.","lastModifiedDate":"2023-10-05"},{"lineNumber":767,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":768,"author":{"gitId":"juzzztinsoong"},"content":"**Reliability**","lastModifiedDate":"2023-10-05"},{"lineNumber":769,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":770,"author":{"gitId":"juzzztinsoong"},"content":"1.  Data integrity should be ensured under any usage conditions through automatic data backup.","lastModifiedDate":"2023-10-05"},{"lineNumber":771,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":772,"author":{"gitId":"juzzztinsoong"},"content":"**Usability**","lastModifiedDate":"2023-10-05"},{"lineNumber":773,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":774,"author":{"gitId":"juzzztinsoong"},"content":"1.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-05"},{"lineNumber":775,"author":{"gitId":"juzzztinsoong"},"content":"2.  Application GUI should be intuitive wherever possible, to reduce training for new users.","lastModifiedDate":"2023-10-05"},{"lineNumber":776,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":777,"author":{"gitId":"juzzztinsoong"},"content":"**Documentation**","lastModifiedDate":"2023-10-05"},{"lineNumber":778,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":779,"author":{"gitId":"juzzztinsoong"},"content":"1.  User documentation should include a comprehensive user manual.","lastModifiedDate":"2023-10-05"},{"lineNumber":780,"author":{"gitId":"juzzztinsoong"},"content":"2.  Developer documentation should cover the architecture, code structure, and guidelines for future development.","lastModifiedDate":"2023-10-05"},{"lineNumber":781,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":782,"author":{"gitId":"juzzztinsoong"},"content":"**Compatibility**","lastModifiedDate":"2023-10-05"},{"lineNumber":783,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":784,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":788,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"juzzztinsoong"},"content":"- **User Interface (UI)**: The point of interaction between a user and a software application, with both graphical and non-graphical elements.","lastModifiedDate":"2023-10-06"},{"lineNumber":791,"author":{"gitId":"juzzztinsoong"},"content":"- **Application Programming Interface (API)**: A set of rules and tools allowing different software applications to communicate and exchange information.","lastModifiedDate":"2023-10-06"},{"lineNumber":792,"author":{"gitId":"juzzztinsoong"},"content":"- **Command Line Interface (CLI)**: A text-based interface for interacting with a computer program or operating system, where users enter commands.","lastModifiedDate":"2023-10-06"},{"lineNumber":793,"author":{"gitId":"juzzztinsoong"},"content":"- **Graphical User Interface (GUI)**: A visual interface using graphical elements like windows, icons, and buttons for user interaction with a software application.","lastModifiedDate":"2023-10-06"},{"lineNumber":794,"author":{"gitId":"jason-raiin"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-10-03"},{"lineNumber":795,"author":{"gitId":"jason-raiin"},"content":"- **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2023-10-03"},{"lineNumber":796,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":799,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"jason-raiin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":806,"author":{"gitId":"howenc"},"content":":information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-11-10"},{"lineNumber":807,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"jason-raiin"},"content":"Initial launch","lastModifiedDate":"2023-11-13"},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"jason-raiin"},"content":"2. In your terminal, navigate to the folder.","lastModifiedDate":"2023-11-13"},{"lineNumber":817,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":818,"author":{"gitId":"jason-raiin"},"content":"3. Run the file with `java -jar OutBook.jar`.","lastModifiedDate":"2023-11-13"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"jason-raiin"},"content":"Saving window preferences","lastModifiedDate":"2023-11-13"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"jason-raiin"},"content":"1. Resize the window and/or move the window.","lastModifiedDate":"2023-11-13"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"jason-raiin"},"content":"2. Close the window.","lastModifiedDate":"2023-11-13"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"jason-raiin"},"content":"3. Re-launch the app by double-clicking the jar file. \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":827,"author":{"gitId":"-"},"content":"   Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"jason-raiin"},"content":"Exiting","lastModifiedDate":"2023-11-13"},{"lineNumber":830,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":831,"author":{"gitId":"jason-raiin"},"content":"1. Input command `exit`. \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":832,"author":{"gitId":"jason-raiin"},"content":"   Expected: OutBook closes and shutdown.","lastModifiedDate":"2023-11-13"},{"lineNumber":833,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":834,"author":{"gitId":"qz1004"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":835,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":836,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":837,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":838,"author":{"gitId":"howenc"},"content":"### Adding a person","lastModifiedDate":"2023-11-08"},{"lineNumber":839,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":840,"author":{"gitId":"jason-raiin"},"content":"Adding a person while all persons are being shown","lastModifiedDate":"2023-11-13"},{"lineNumber":841,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":842,"author":{"gitId":"howenc"},"content":"1. Prerequisites: List all persons using the `listc` command. Multiple persons in the list.","lastModifiedDate":"2023-11-08"},{"lineNumber":843,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":844,"author":{"gitId":"howenc"},"content":"2. Test case: `addc n/John Doe p/12345678 e/JohnDoe@gmail.com`\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":845,"author":{"gitId":"howenc"},"content":"   Expected: Contact John Doe is created wth phone number 12345678 and email JohnDoe@gmail.com. The contact should be the first in the list as it does not have a last contacted date. Details of the added contact shown in the status message.","lastModifiedDate":"2023-11-08"},{"lineNumber":846,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":847,"author":{"gitId":"jason-raiin"},"content":"3. Test case: `addc n/John Not Doe p/87654321 e/JohnNotDoe@gmail.com lc/10.10.2023 1000 s/Active t/tagOne` \u003cbr\u003e Expected: Details of the added contact shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":848,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":849,"author":{"gitId":"jason-raiin"},"content":"4. If you were to repeat 2 or 3 above, an error while be shown due to duplicate entries.","lastModifiedDate":"2023-11-13"},{"lineNumber":850,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":851,"author":{"gitId":"howenc"},"content":"5. Test case: `addc n/John Doe`\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":852,"author":{"gitId":"howenc"},"content":"   Expected: No person is added. Error details shown in the status message.","lastModifiedDate":"2023-11-08"},{"lineNumber":853,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":854,"author":{"gitId":"jason-raiin"},"content":"6. Test case: `addc p/12345678` \u003cbr\u003e Expected: Similar to 5.","lastModifiedDate":"2023-11-13"},{"lineNumber":855,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":856,"author":{"gitId":"jason-raiin"},"content":"7. Test case: `addc e/JohnDoe@gmail.com` \u003cbr\u003e Expected: Similar to 5.","lastModifiedDate":"2023-11-13"},{"lineNumber":857,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":858,"author":{"gitId":"howenc"},"content":"8. Other incorrect delete commands to try: `addc`, `addc 1` and any `addc` command that does not have `n/NAME`, `p/PHONE_NUMBER` \u0026 `e/EMAIL` \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":859,"author":{"gitId":"jason-raiin"},"content":"   Expected: Similar to 5.","lastModifiedDate":"2023-11-13"},{"lineNumber":860,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":861,"author":{"gitId":"jason-raiin"},"content":"Adding a person while not all persons are being shown.","lastModifiedDate":"2023-11-13"},{"lineNumber":862,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":863,"author":{"gitId":"howenc"},"content":"1.  Prerequisites: Filter the contact list by using the `findc` command. If you are using the default data given, input `findc n/Yu`. \u003cbr\u003e Expected: Only Bernice Yu is shown in the contact list.","lastModifiedDate":"2023-11-08"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":865,"author":{"gitId":"jason-raiin"},"content":"2.  Add a person using the `addc` command with correct parameters.","lastModifiedDate":"2023-11-13"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":867,"author":{"gitId":"jason-raiin"},"content":"3.  Adding a contact automatically shows all contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":869,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":870,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":871,"author":{"gitId":"howenc"},"content":"### Editing a person","lastModifiedDate":"2023-11-08"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":873,"author":{"gitId":"howenc"},"content":"1. Test case: `editc 1 n/John Doe p/12345678 e/JohnDoe@gmail.com`\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":874,"author":{"gitId":"howenc"},"content":"   Expected: The first person in the contact list is has its details replaced with the given arguments. Details of the added contact shown in the status message.","lastModifiedDate":"2023-11-08"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":876,"author":{"gitId":"howenc"},"content":"2. If you were to edit a contact so that it has the same name or phone number or email to any other contact, you will encounter a duplicate error","lastModifiedDate":"2023-11-08"},{"lineNumber":877,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":878,"author":{"gitId":"howenc"},"content":"3. Other incorrect delete commands to try: `editc` and `editc 1`, you will receive a required index error and a required field error.","lastModifiedDate":"2023-11-08"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":881,"author":{"gitId":"qz1004"},"content":"### Viewing a contact","lastModifiedDate":"2023-11-13"},{"lineNumber":882,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":883,"author":{"gitId":"qz1004"},"content":"View contact","lastModifiedDate":"2023-11-13"},{"lineNumber":884,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":885,"author":{"gitId":"qz1004"},"content":"1. Use `viewc 1` to view the first contact \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":886,"author":{"gitId":"qz1004"},"content":"   Expected: the first contact will have its details shown on the details panel.","lastModifiedDate":"2023-11-13"},{"lineNumber":887,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":888,"author":{"gitId":"qz1004"},"content":"View contact while contact is being edited","lastModifiedDate":"2023-11-13"},{"lineNumber":889,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":890,"author":{"gitId":"qz1004"},"content":"1. Use `viewc 1` to view the first contact \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":891,"author":{"gitId":"qz1004"},"content":"2. Edit the first contact to have a later last contacted date than the second contact. \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":892,"author":{"gitId":"qz1004"},"content":"   Expected: The second contact will be sorted to the top of the list, and the details of this contact will be displayed instead.","lastModifiedDate":"2023-11-13"},{"lineNumber":893,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":894,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":896,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"jason-raiin"},"content":"Deleting a person while all persons are being shown","lastModifiedDate":"2023-11-13"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"howenc"},"content":"1. Prerequisites: List all persons using the `listc` command. Multiple persons in the list.","lastModifiedDate":"2023-11-08"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"LoMaply"},"content":"2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":903,"author":{"gitId":"howenc"},"content":"   Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2023-11-08"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"LoMaply"},"content":"3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":906,"author":{"gitId":"howenc"},"content":"   Expected: No person is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-08"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"LoMaply"},"content":"4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":909,"author":{"gitId":"jason-raiin"},"content":"   Expected: Similar to 3.","lastModifiedDate":"2023-11-13"},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":911,"author":{"gitId":"jason-raiin"},"content":"Deleting a person while the list of persons is filtered.","lastModifiedDate":"2023-11-13"},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"howenc"},"content":"1. Prerequisites: Filter the contact list by using the `findc` command. If you are using the default data given, input `findc n/Yu`. \u003cbr\u003e Expected: Only Bernice Yu is shown in the contact list.","lastModifiedDate":"2023-11-08"},{"lineNumber":914,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":915,"author":{"gitId":"howenc"},"content":"2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":916,"author":{"gitId":"howenc"},"content":"   Expected: Bernice Yu is deleted from the list. Nothing should be shown in the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2023-11-08"},{"lineNumber":917,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":918,"author":{"gitId":"howenc"},"content":"3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":919,"author":{"gitId":"howenc"},"content":"   Expected: No person is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-08"},{"lineNumber":920,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":921,"author":{"gitId":"jason-raiin"},"content":"4. Other incorrect delete commands to try: `delete`, `deletec X` (where X is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":922,"author":{"gitId":"jason-raiin"},"content":"   Expected: Similar to 3.","lastModifiedDate":"2023-11-13"},{"lineNumber":923,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":924,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":925,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":926,"author":{"gitId":"howenc"},"content":"### Meeting Tests","lastModifiedDate":"2023-11-08"},{"lineNumber":927,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":928,"author":{"gitId":"howenc"},"content":"Repeat the contact test cases with meeting commands","lastModifiedDate":"2023-11-08"},{"lineNumber":929,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":930,"author":{"gitId":"jason-raiin"},"content":"1. Add Meeting commands \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":931,"author":{"gitId":"jason-raiin"},"content":"   `addm m/Test Meeting 1 a/Test Location 1 s/02.10.2023 1000 e/02.10.2023 1200`","lastModifiedDate":"2023-11-13"},{"lineNumber":932,"author":{"gitId":"jason-raiin"},"content":"2. Find Meeting commands \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":933,"author":{"gitId":"jason-raiin"},"content":"   `findm m/Meeting`","lastModifiedDate":"2023-11-13"},{"lineNumber":934,"author":{"gitId":"jason-raiin"},"content":"3. Edit Meeting commands \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":935,"author":{"gitId":"jason-raiin"},"content":"   `editm m/Changed Meeting Name`","lastModifiedDate":"2023-11-13"},{"lineNumber":936,"author":{"gitId":"jason-raiin"},"content":"4. Delete Meeting commands \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":937,"author":{"gitId":"jason-raiin"},"content":"   `deletem 1`","lastModifiedDate":"2023-11-13"},{"lineNumber":938,"author":{"gitId":"jason-raiin"},"content":"5. View Meeting commands \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":939,"author":{"gitId":"jason-raiin"},"content":"   `viewm 1`","lastModifiedDate":"2023-11-13"},{"lineNumber":940,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":941,"author":{"gitId":"howenc"},"content":"### Meeting Attendees","lastModifiedDate":"2023-11-08"},{"lineNumber":942,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":943,"author":{"gitId":"jason-raiin"},"content":"Add Meeting Attendee","lastModifiedDate":"2023-11-13"},{"lineNumber":944,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":945,"author":{"gitId":"howenc"},"content":"1. Use `addmc 1 2` \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":946,"author":{"gitId":"howenc"},"content":"   Expected: The second person in the current person list will be added to the first meeting in the current meeting list.","lastModifiedDate":"2023-11-08"},{"lineNumber":947,"author":{"gitId":"howenc"},"content":"2. Instead of using 1 or 2, use indexes that are more than the amount of meetings or persons. \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":948,"author":{"gitId":"howenc"},"content":"   Expected: An error will be shown which indicated the index which is out of bounds.","lastModifiedDate":"2023-11-08"},{"lineNumber":949,"author":{"gitId":"howenc"},"content":"3. Repeat 1 and 2 with filtered lists using `findc` and `findm`","lastModifiedDate":"2023-11-08"},{"lineNumber":950,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":951,"author":{"gitId":"jason-raiin"},"content":"Remove Meeting Attendee","lastModifiedDate":"2023-11-13"},{"lineNumber":952,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":953,"author":{"gitId":"howenc"},"content":"1. Prerequisite: There must be an attendee in the meeting you are looking at. To look at the attendees for a meeting, use `viewm` on the meeting. In this case we will look at the first meeting.","lastModifiedDate":"2023-11-08"},{"lineNumber":954,"author":{"gitId":"howenc"},"content":"2. The attendees will be listed with an index in the meeting. Use `rmmc 1 1`. \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":955,"author":{"gitId":"howenc"},"content":"   Expected: The meeting will have its first attendee removed.","lastModifiedDate":"2023-11-08"},{"lineNumber":956,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":957,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":958,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":959,"author":{"gitId":"howenc"},"content":"### Mark Meetings","lastModifiedDate":"2023-11-08"},{"lineNumber":960,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":961,"author":{"gitId":"jason-raiin"},"content":"Mark a Meeting as completed","lastModifiedDate":"2023-11-13"},{"lineNumber":962,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":963,"author":{"gitId":"howenc"},"content":"1. Use `mark 1` to mark the first meeting as completed \u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":964,"author":{"gitId":"howenc"},"content":"   Expected: Meeting will be shown as completed and the attendees that are in the meeting will have their last contacted updated to the end time of the meeting.","lastModifiedDate":"2023-11-08"},{"lineNumber":965,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":966,"author":{"gitId":"jason-raiin"},"content":"### Data Storage","lastModifiedDate":"2023-11-13"},{"lineNumber":967,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":968,"author":{"gitId":"jason-raiin"},"content":"No save file","lastModifiedDate":"2023-11-13"},{"lineNumber":969,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":970,"author":{"gitId":"jason-raiin"},"content":"1. Launch OutBook \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":971,"author":{"gitId":"jason-raiin"},"content":"   Expected: The default address book is loaded.","lastModifiedDate":"2023-11-13"},{"lineNumber":972,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":973,"author":{"gitId":"jason-raiin"},"content":"2. Execute a command \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":974,"author":{"gitId":"jason-raiin"},"content":"   Expected: A JSON file is created at the save location, by default `/data/outbook.json`","lastModifiedDate":"2023-11-13"},{"lineNumber":975,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":976,"author":{"gitId":"jason-raiin"},"content":"Save file present","lastModifiedDate":"2023-11-13"},{"lineNumber":977,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":978,"author":{"gitId":"jason-raiin"},"content":"1. Launch OutBook \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":979,"author":{"gitId":"jason-raiin"},"content":"   Expected: The saved address book is loaded.","lastModifiedDate":"2023-11-13"},{"lineNumber":980,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":981,"author":{"gitId":"jason-raiin"},"content":"2. Execute a command \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":982,"author":{"gitId":"jason-raiin"},"content":"   Expected: The JSON is updated according to the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":983,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":984,"author":{"gitId":"jason-raiin"},"content":"Save file present but corrupted","lastModifiedDate":"2023-11-13"},{"lineNumber":985,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":986,"author":{"gitId":"jason-raiin"},"content":"1. Launch OutBook \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":987,"author":{"gitId":"jason-raiin"},"content":"   Expected: A blank address book is loaded.","lastModifiedDate":"2023-11-13"},{"lineNumber":988,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":989,"author":{"gitId":"jason-raiin"},"content":"2. Execute a command \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":990,"author":{"gitId":"jason-raiin"},"content":"   Expected: The save file is overridden with the new address book.","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"howenc":220,"jason-raiin":282,"-":284,"juzzztinsoong":38,"qz1004":77,"LoMaply":89}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [OutBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"howenc":1,"-":53}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"title: OutBook User Guide","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"## About OutBook","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"OutBook is a desktop application designed for freelance insurance agents, enabling them to effectively organize and oversee their extensive contacts and meeting schedules. It is optimised for Command Line Interface (CLI) and aims to significantly reduce the time needed for organizational tasks.","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"This guide aims to help you explore its features and learn how to use them.","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"## Key Features","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"To help you simplify and streamline the process of organizing your contacts and meeting schedule, our application provides these easy-to-use and efficient features:","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"1. **Client Information Management**: Easily store, access and modify client details such as contact number, email and last contacted time. Add statuses, custom tags and remarks to organize your clients according to your preferences.","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"2. **Meeting Schedule and Information Management**: Keep track of where and when your meetings are, and who you are meeting, to ensure you will be prepared for every appointment.","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"Managing clients and a busy schedule has never been easier. With OutBook, all you need is a keyboard and a few seconds to type out simple commands!","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"# Table of Contents","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"- [Navigating OutBook](#navigating-outbook)","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"- [Features](#features)","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"  - [Contact Commands](#contact-commands)","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"    - [Contact Parameters](#contact-parameters)","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"    - [Adding a contact: `addc`](#adding-a-contact-addc)","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"    - [Listing all contacts: `listc`](#listing-all-contacts-listc)","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"    - [Deleting a contact: `deletec`](#deleting-a-contact-deletec)","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"    - [Editing a contact: `editc`](#editing-a-contact--editc)","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"    - [Viewing detailed contact information: `viewc`](#viewing-detailed-contact-information--viewc)","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"    - [Finding contacts: `findc`](#finding-contacts-findc)","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"  - [Meeting Commands](#meeting-commands)","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"    - [Meeting Parameters](#meeting-parameters)","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"    - [Adding a meeting: `addm`](#adding-a-meeting-addm)","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"    - [Listing all meetings: `listm`](#listing-all-meetings--listm)","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"    - [Deleting a meeting: `deletem`](#deleting-a-meeting--deletem)","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"    - [Editing a meeting: `editm`](#editing-a-meeting--editm)","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"    - [Viewing detailed meeting information: `viewm`](#viewing-detailed-meeting-information--viewm)","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"    - [Finding meetings: `findm`](#finding-meetings-findm)","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"    - [Adding contact to meeting: `addmc`](#adding-contact-to-meeting-addmc)","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    - [Removing contact from meeting: `rmmc`](#removing-contact-from-meeting-rmmc)","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"    - [Marking a meeting as complete : `mark`](#marking-a-meeting-as-complete--mark)","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"  - [Miscellaneous Commands](#miscellaneous-commands)","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"    - [Viewing help: `help`](#viewing-help--help)","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"    - [Clearing all entries: `clear`](#clearing-all-entries--clear)","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"    - [Exiting the program: `exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"    - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"- [Known issues](#known-issues)","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"# Quick start","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"2. Download the latest `OutBook.jar` [here](https://github.com/AY2324S1-CS2103T-F12-4/tp/releases).","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for OutBook.","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"4. Open a command terminal, navigate to the _home folder_ using `cd`, and use the `java -jar OutBook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app comes pre-loaded with some sample data.","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"\u003cbr\u003e![Ui](images/Ui.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"5. Type a command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"   - `listc` : Lists all contacts.","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"LoMaply"},"content":"   - `addc n/John Doe p/98765432 e/johnd@example.com lc/10.10.2023 1000` : Adds a contact named `John Doe` to OutBook.","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"   - `deletec 3` : Deletes the 3rd contact shown in the contact list.","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"   - `deletem 1` : Deletes the 1st meeting shown in the meeting list.","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"   - `clear` : Deletes all contacts and meetings.","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"   - `exit` : Exits the app.","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"6. You can refer to the [Features](#features) section below for details of each command. ","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"juzzztinsoong"},"content":"[Click here to return to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"juzzztinsoong"},"content":"___","lastModifiedDate":"2023-11-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"qz1004"},"content":"# Navigating OutBook","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"qz1004"},"content":"![User Interface for OutBook](images/UserInterface.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"qz1004"},"content":"| Name          | Function                                                                                                                                                                                                                                              |","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"qz1004"},"content":"|---------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"| Command Box   | Allows you to enter your commands here.                                                                                                                                                                                                               |","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"juzzztinsoong"},"content":"| Status Box    | Displays the results after a command is executed.                                                                                                                                                                                                     |","lastModifiedDate":"2023-11-11"},{"lineNumber":99,"author":{"gitId":"juzzztinsoong"},"content":"| Contacts List | Displays your contacts along with a summary of their details.                                                                                                                                                                                         |","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"juzzztinsoong"},"content":"| Meetings List | Displays meetings that are scheduled along with a summary of their details.                                                                                                                                                                           |","lastModifiedDate":"2023-11-11"},{"lineNumber":101,"author":{"gitId":"juzzztinsoong"},"content":"| Details List  | Displays all the fields of a contact and/or meeting in full detail, complete with labels. Use [viewc](#viewing-detailed-contact-information--viewc)/[viewm](#viewing-detailed-meeting-information--viewm) to specify the contact/meeting to display.  |","lastModifiedDate":"2023-11-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"juzzztinsoong"},"content":"[Click here to return to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"qz1004"},"content":"---","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"qz1004"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"LoMaply"},"content":"# Features","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"juzzztinsoong"},"content":"- Every word in uppercase represents a field you can supply.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":116,"author":{"gitId":"juzzztinsoong"},"content":"  e.g. in `addc n/NAME`, `NAME` is a parameter that can be substituted for `John Doe`, as in `addc n/John Doe`.","lastModifiedDate":"2023-11-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"juzzztinsoong"},"content":"- Fields contained in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":119,"author":{"gitId":"juzzztinsoong"},"content":"  e.g. when provided with the fields `n/NAME [t/TAG]`, you can submit `n/John Doe t/friend` if you want to mark this contact as a `friend`, or `n/John Doe` otherwise.","lastModifiedDate":"2023-11-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"juzzztinsoong"},"content":"- Fields with `…`​ after them can be submitted any number of times, including zero.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":122,"author":{"gitId":"juzzztinsoong"},"content":"  e.g. when provided with the field `[t/TAG]…​`, you can leave the field blank, or submit `t/friend`, `t/friend t/family`, etc.","lastModifiedDate":"2023-11-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"juzzztinsoong"},"content":"- You can submit fields in any order.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":125,"author":{"gitId":"juzzztinsoong"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, submitting in the format `p/PHONE_NUMBER n/NAME`, such as in `p/91472381 n/John Doe`, is also acceptable.","lastModifiedDate":"2023-11-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"juzzztinsoong"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines. This is to avoid deletion of space characters surrounding line-breaks when lengthy text is copied over to the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"qz1004"},"content":"## Contact Commands","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"qz1004"},"content":"### Contact Parameters","lastModifiedDate":"2023-11-12"},{"lineNumber":136,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"qz1004"},"content":"| Parameter             | Description                                                                                                                                                                                                       | Examples                                      |","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"LoMaply"},"content":"|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"LoMaply"},"content":"| `NAME`                | The name of the contact. \u003cbr/\u003e \u003cbr/\u003e It should only contain alphanumeric characters and spaces, and it should not be blank.                                                                                       | • `John Doe` \u003cbr\u003e • `Miguel-James Lee`        |","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"LoMaply"},"content":"| `PHONE`               | The phone number of the contact. \u003cbr/\u003e \u003cbr/\u003e It must contain only numbers, and be at least 3 digits long.                                                                                                         | • `999` \u003cbr\u003e • `91243253`                     |","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"LoMaply"},"content":"| `EMAIL`               | The email address of the contact. \u003cbr/\u003e \u003cbr/\u003e It must adhere to the format `[LOCAL-PART]@[SERVER].[DOMAIN]`.                                                                                                      | • `example@mail.com` \u003cbr\u003e • `john@hotmail.sg` |","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"LoMaply"},"content":"| `LAST_CONTACTED_TIME` | The last date and time you had a meeting with the contact. \u003cbr/\u003e \u003cbr/\u003e It must contain both date and time in the format `DD.MM.YYYY HHMM` or left blank.                                                          | • `29.10.2023 1000` \u003cbr\u003e • `05.01.2023 2200`  |","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"LoMaply"},"content":"| `STATUS`              | The status of the contact with regards to the insurance sales process. \u003cbr/\u003e \u003cbr/\u003e It must be one of `NIL, Prospective, Active, Inactive, Claimant, Renewal` (case-insensitive) or blank.                         | • `active` \u003cbr\u003e • `Prospective`               |","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"LoMaply"},"content":"| `REMARK`              | The remark you have about the contact, if any.                                                                                                                                                                    | • `has 4 cars` \u003cbr\u003e • `Loves coffee`          |","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"LoMaply"},"content":"| `TAG`                 | The tag you want to associate with the contact, if any. A contact can have more than 1 tag. \u003cbr/\u003e \u003cbr/\u003e It must be alphanumeric, i.e. special and non-alphanumeric characters (including spaces) are not allowed. | • `Friend` \u003cbr\u003e • `TermLife`                  |","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"LoMaply"},"content":"| `CONTACT_INDEX`       | The number shown beside each contact\u0027s name in the displayed contacts list. \u003cbr/\u003e \u003cbr/\u003e It must be a positive integer and not more than the total number of contacts.                                             | • `1`                                         |","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"LoMaply"},"content":"### Adding a contact: `addc`","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"LoMaply"},"content":"Adds a contact to OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"qz1004"},"content":"Format: `addc n/NAME p/PHONE e/EMAIL [lc/LAST_CONTACTED_TIME] [s/STATUS] [r/REMARK] [t/TAG]…​`","lastModifiedDate":"2023-11-12"},{"lineNumber":154,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"qz1004"},"content":"- Duplicate contacts are not allowed. Contacts are duplicates if they have the same `NAME`, `PHONE`, or `EMAIL`.","lastModifiedDate":"2023-11-12"},{"lineNumber":156,"author":{"gitId":"qz1004"},"content":"- `NAME`, `PHONE`, and `EMAIL` are compulsory fields.","lastModifiedDate":"2023-11-12"},{"lineNumber":157,"author":{"gitId":"qz1004"},"content":"- `LAST_CONTACTED_TIME`, `STATUS`, `REMARK` and `TAG` are optional fields:","lastModifiedDate":"2023-11-12"},{"lineNumber":158,"author":{"gitId":"qz1004"},"content":"    - If `LAST_CONTACTED_TIME` is not specified, it will be defaulted to the minimum datetime provided by Java (i.e. `LocalDateTime.MIN`) and displayed as `NA` in the contacts list.","lastModifiedDate":"2023-11-12"},{"lineNumber":159,"author":{"gitId":"qz1004"},"content":"    - If `STATUS` is not specified, it will be defaulted to `NIL`.","lastModifiedDate":"2023-11-12"},{"lineNumber":160,"author":{"gitId":"qz1004"},"content":"- This command may change the contact that is currently displayed in the details list via the `viewc` command, as detailed [here](#viewing-detailed-contact-information--viewc).","lastModifiedDate":"2023-11-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"You can put any number of tags (including 0) on a contact.","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-11"},{"lineNumber":170,"author":{"gitId":"juzzztinsoong"},"content":"- `addc n/John Doe p/98765432 e/johnd@example.com`","lastModifiedDate":"2023-11-11"},{"lineNumber":171,"author":{"gitId":"jason-raiin"},"content":"- `addc n/Betsy Crowe t/friend e/betsycrowe@example.com p/1234567 lc/01.01.2023 0100 t/Professor`","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"juzzztinsoong"},"content":"### Listing all contacts: `listc`","lastModifiedDate":"2023-11-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"juzzztinsoong"},"content":"Shows an unfiltered list of all contacts in OutBook in the contacts list. Contacts are sorted by their `LAST_CONTACTED_TIME`.","lastModifiedDate":"2023-11-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"LoMaply"},"content":"Format: `listc`","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"qz1004"},"content":"* This command may change the contact that is currently displayed in the details list via the `viewc` command, as detailed [here](#viewing-detailed-contact-information--viewc).","lastModifiedDate":"2023-11-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"juzzztinsoong"},"content":"### Deleting a contact: `deletec`","lastModifiedDate":"2023-11-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"howenc"},"content":"Deletes a contact from OutBook.","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"qz1004"},"content":"Format: `deletec CONTACT_INDEX`","lastModifiedDate":"2023-11-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"qz1004"},"content":"- Deletes the contact at the specified `CONTACT_INDEX`.","lastModifiedDate":"2023-11-12"},{"lineNumber":190,"author":{"gitId":"qz1004"},"content":"- This command clears the contact that is currently displayed in the details list via the `viewc` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"qz1004"},"content":"- `listc` followed by `delete 2` deletes the 2nd person in the unfiltered contacts list returned by [`listc`](#listing-all-contacts--listc).","lastModifiedDate":"2023-11-12"},{"lineNumber":194,"author":{"gitId":"qz1004"},"content":"- `findc Betsy` followed by `delete 1` deletes the 1st person in the filtered contacts list returned by [`findc`](#finding-contacts-findc).","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":198,"author":{"gitId":"LoMaply"},"content":"### Editing a contact : `editc`","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"LoMaply"},"content":"Edits an existing contact in OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"qz1004"},"content":"Format: `editc CONTACT_INDEX [n/NAME] [p/PHONE] [e/EMAIL] [lc/LAST_CONTACTED_TIME] [s/STATUS] [r/REMARK] [t/TAG]…​`","lastModifiedDate":"2023-11-12"},{"lineNumber":203,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"qz1004"},"content":"- Edits the contact at the specified `CONTACT_INDEX`. ","lastModifiedDate":"2023-11-12"},{"lineNumber":205,"author":{"gitId":"jason-raiin"},"content":"- All fields are optional, but at least one must be provided.","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"qz1004"},"content":"- Existing values in each specified field will be updated to the corresponding input values.","lastModifiedDate":"2023-11-12"},{"lineNumber":207,"author":{"gitId":"qz1004"},"content":"- When editing tags, the existing tags of the contact will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2023-11-12"},{"lineNumber":208,"author":{"gitId":"qz1004"},"content":"- You can remove all the contact\u0027s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2023-11-12"},{"lineNumber":209,"author":{"gitId":"qz1004"},"content":"- This command may change the contact that is currently displayed via the `viewc` command, as detailed [here](#viewing-detailed-contact-information--viewc).","lastModifiedDate":"2023-11-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"juzzztinsoong"},"content":"- `editc 1 p/91234567 e/johndoe@example.com` edits the phone number and email address of the 1st contact to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-11-11"},{"lineNumber":213,"author":{"gitId":"qz1004"},"content":"- `editc 2 n/Betsy Crower t/` edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-11-12"},{"lineNumber":214,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":215,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"howenc"},"content":"### Viewing detailed contact information : `viewc`","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"qz1004"},"content":"Displays detailed information of a contact in the details list.","lastModifiedDate":"2023-11-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"qz1004"},"content":"Format: `viewc CONTACT_INDEX`","lastModifiedDate":"2023-11-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"qz1004"},"content":"- Displays the `NAME`, `PHONE`, `EMAIL`, `LAST_CONTACTED_TIME`, `STATUS`, `REMARK` and `TAG` of the contact at the specified `CONTACT_INDEX`.","lastModifiedDate":"2023-11-12"},{"lineNumber":224,"author":{"gitId":"qz1004"},"content":"- As this command displays the contact at the specified `CONTACT_INDEX` in the contacts list, the contact displayed in the details list may change due to a modification in list order through the use of `addc`, `editc` or `listc` commands. This is intentional.","lastModifiedDate":"2023-11-12"},{"lineNumber":225,"author":{"gitId":"juzzztinsoong"},"content":"- The displayed contact is cleared from the details list when the `deletec` and `findc` commands are used.","lastModifiedDate":"2023-11-11"},{"lineNumber":226,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"qz1004"},"content":"- `viewc 3` displays detailed information related to the 3rd contact on the contacts list.","lastModifiedDate":"2023-11-12"},{"lineNumber":231,"author":{"gitId":"qz1004"},"content":"![result for \u0027viewContact\u0027](images/ViewContactResult.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":232,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":235,"author":{"gitId":"qz1004"},"content":"### Finding contacts: `findc`","lastModifiedDate":"2023-11-12"},{"lineNumber":236,"author":{"gitId":"qz1004"},"content":"Finds contact(s) that match the keywords specified for at least 1 of these fields: `NAME`, `PHONE`, `EMAIL`, `LAST_CONTACTED_TIME`, `STATUS`, `TAG`. The contacts list will be filtered to show only the results of this command. ","lastModifiedDate":"2023-11-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"LoMaply"},"content":"Format: `findc [n/KEYWORDS] [p/KEYWORDS] [e/KEYWORDS] [lc/DATETIME] [s/KEYWORDS] [t/KEYWORDS]`","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":240,"author":{"gitId":"qz1004"},"content":"* The search is case-insensitive, e.g `shop` will return `SHOP`.","lastModifiedDate":"2023-11-12"},{"lineNumber":241,"author":{"gitId":"qz1004"},"content":"* The order of the keywords does not matter, e.g. `Shop Meet` will return `Meet Shop`.","lastModifiedDate":"2023-11-12"},{"lineNumber":242,"author":{"gitId":"qz1004"},"content":"* For `NAME`, `STATUS` and `TAG`, only full words will be matched, e.g. `John` will return `John Lee` but not `Johnny`.","lastModifiedDate":"2023-11-12"},{"lineNumber":243,"author":{"gitId":"qz1004"},"content":"* For `EMAIL`, any email addresses that contains the sequence of characters specified in the inputs will be given as a result, e.g.  `_` will return `m_e@gmail.com`.","lastModifiedDate":"2023-11-12"},{"lineNumber":244,"author":{"gitId":"qz1004"},"content":"* For `PHONE`, any phone number that contains the sequence of digits specified in the inputs will be given as a result, e.g. `913` will return `90091300` but not `90103000`.","lastModifiedDate":"2023-11-12"},{"lineNumber":245,"author":{"gitId":"qz1004"},"content":"* For `LAST_CONTACTED_TIME`, the input must adhere to the `DD.MM.YYYY HHMM` format, e.g. 9th October 2023, 10.30am will be written as `09.10.2023 1030`.","lastModifiedDate":"2023-11-12"},{"lineNumber":246,"author":{"gitId":"qz1004"},"content":"* If only one field is provided, all contacts matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-11-12"},{"lineNumber":247,"author":{"gitId":"qz1004"},"content":"* If multiple fields are provided, only contacts matching at least one keyword in each field will be returned (i.e. `AND` search).","lastModifiedDate":"2023-11-12"},{"lineNumber":248,"author":{"gitId":"qz1004"},"content":"  - e.g. `n/John s/active` will return `Name: John Lee, Status: Active` but not `Name: John Doe, Status: Claimant`.","lastModifiedDate":"2023-11-12"},{"lineNumber":249,"author":{"gitId":"qz1004"},"content":"* This command clears the contact that is currently displayed in the details list via the `viewc` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"qz1004"},"content":"- `findc n/Alice` returns all contacts with a name that contains `alice`","lastModifiedDate":"2023-11-12"},{"lineNumber":255,"author":{"gitId":"qz1004"},"content":"- `findc p/51` returns all contacts with a phone number that contains `51`","lastModifiedDate":"2023-11-12"},{"lineNumber":256,"author":{"gitId":"qz1004"},"content":"- `findc e/_@GMAIL` returns all contacts with an email address that contains `alice_@gmail.com`","lastModifiedDate":"2023-11-12"},{"lineNumber":257,"author":{"gitId":"qz1004"},"content":"- `findc p/9 s/inactive claimant t/friend` returns contacts with a phone number that contains a `9`, a status of either `inactive` or `claimant`, and a `friend` tag","lastModifiedDate":"2023-11-12"},{"lineNumber":258,"author":{"gitId":"qz1004"},"content":"  ![result for \u0027findContact\u0027](images/findContactResult.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"qz1004"},"content":"## Meeting Commands","lastModifiedDate":"2023-11-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"juzzztinsoong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":265,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":266,"author":{"gitId":"juzzztinsoong"},"content":"**:information_source: Notes about meetings:**\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":267,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":268,"author":{"gitId":"juzzztinsoong"},"content":"- Meetings in OutBook are sorted by their start time.","lastModifiedDate":"2023-11-11"},{"lineNumber":269,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":270,"author":{"gitId":"qz1004"},"content":"- Meetings are allowed to overlap and multiple meetings can be occurring at the same time.","lastModifiedDate":"2023-11-12"},{"lineNumber":271,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":272,"author":{"gitId":"qz1004"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":273,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":274,"author":{"gitId":"qz1004"},"content":"### Meeting Parameters","lastModifiedDate":"2023-11-12"},{"lineNumber":275,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":276,"author":{"gitId":"qz1004"},"content":"| Parameter        | Description                                                                                                                                                                                                                                       | Examples                                            |","lastModifiedDate":"2023-11-12"},{"lineNumber":277,"author":{"gitId":"qz1004"},"content":"|------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":278,"author":{"gitId":"LoMaply"},"content":"| `TITLE`          | The title of the meeting. \u003cbr/\u003e \u003cbr/\u003e It can take any values, but should not be blank.                                                                                                                                                            | •  `1st Meeting with Alex` \u003cbr\u003e • `Quick-chat`      |","lastModifiedDate":"2023-11-13"},{"lineNumber":279,"author":{"gitId":"LoMaply"},"content":"| `LOCATION`       | The location of the meeting. \u003cbr/\u003e \u003cbr/\u003e It can take any values, but should not be blank.                                                                                                                                                         | • `Zoom` \u003cbr\u003e • `21 Lower Kent Ridge Rd, S(119077)` |","lastModifiedDate":"2023-11-13"},{"lineNumber":280,"author":{"gitId":"LoMaply"},"content":"| `START` / `END`  | The start/end times of the meeting. \u003cbr/\u003e \u003cbr/\u003e They must contain both date and time and adhere to the `DD.MM.YYYY HHMM` format. `START` must be equal or before `END`.                                                                           | • `29.10.2023 1000` \u003cbr\u003e • `05.01.2023 2200`        |","lastModifiedDate":"2023-11-13"},{"lineNumber":281,"author":{"gitId":"LoMaply"},"content":"| `TAG`            | The tag you want to associate with the meeting, if any. A meeting can have more than 1 tag. \u003cbr/\u003e \u003cbr/\u003e It must be alphanumeric, i.e. special and non-alphanumeric characters (including spaces) are not allowed.                                 | • `Casual` \u003cbr\u003e • `Remote`                          |","lastModifiedDate":"2023-11-13"},{"lineNumber":282,"author":{"gitId":"qz1004"},"content":"| `ATTENDEE_NAME`  | The name of the contact added to the meeting as an attendee via the [`addmc`](#adding-contact-to-meeting-addmc) command.                                                                                                                          | -                                                   |","lastModifiedDate":"2023-11-13"},{"lineNumber":283,"author":{"gitId":"LoMaply"},"content":"| `ATTENDEE_INDEX` | The number shown beside each attendee\u0027s name in the detailed view of the meeting (as described [here](#viewing-detailed-meeting-information--viewm)). \u003cbr/\u003e \u003cbr/\u003e It must be a positive integer and not more than the total number of attendees.  | • `2`                                               |","lastModifiedDate":"2023-11-13"},{"lineNumber":284,"author":{"gitId":"LoMaply"},"content":"| `MEETING_INDEX`  | The number shown beside each meeting\u0027s title in the displayed meetings list. \u003cbr/\u003e \u003cbr/\u003e It must be a positive integer and not more than the total number of meetings.                                                                            | • `1`                                               |","lastModifiedDate":"2023-11-13"},{"lineNumber":285,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":286,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":287,"author":{"gitId":"LoMaply"},"content":"### Adding a meeting: `addm`","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"LoMaply"},"content":"Adds a meeting to OutBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"howenc"},"content":"Format: `addm m/TITLE a/LOCATION s/START e/END [t/TAG]…​`","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"LoMaply"},"content":"* `TITLE`, `LOCATION`, `START` and `END` are compulsory fields. `TAG` is optional.","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"qz1004"},"content":"* This command may change the meeting that is currently displayed in the details list via the `viewm` command, as detailed [here](#viewing-detailed-meeting-information--viewm).","lastModifiedDate":"2023-11-12"},{"lineNumber":295,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":297,"author":{"gitId":"jason-raiin"},"content":"- `addm m/Lunch a/Cafeteria s/20.09.2023 1200 e/20.09.2023 1300`","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"jason-raiin"},"content":"- `addm m/CS2103T meeting a/Zoom call url s/20.09.2023 1000 e/20.09.2023 1200`","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":301,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":302,"author":{"gitId":"LoMaply"},"content":"### Listing all meetings : `listm`","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"juzzztinsoong"},"content":"Shows an unfiltered list of all meetings in OutBook in the meetings list. Meetings are sorted by their `START` time.","lastModifiedDate":"2023-11-11"},{"lineNumber":305,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"LoMaply"},"content":"Format: `listm`","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"qz1004"},"content":"* This command may change the meeting that is currently displayed in the details list via the `viewm` command, as detailed [here](#viewing-detailed-meeting-information--viewm).","lastModifiedDate":"2023-11-12"},{"lineNumber":309,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"LoMaply"},"content":"### Deleting a meeting : `deletem`","lastModifiedDate":"2023-10-03"},{"lineNumber":311,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"howenc"},"content":"Deletes a meeting from OutBook.","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"qz1004"},"content":"Format: `deletem MEETING_INDEX`","lastModifiedDate":"2023-11-12"},{"lineNumber":315,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"qz1004"},"content":"- Deletes the meeting at the specified `MEETING_INDEX`.","lastModifiedDate":"2023-11-12"},{"lineNumber":317,"author":{"gitId":"qz1004"},"content":"- This command clears the meeting that is currently displayed in the details list via the `viewm` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"qz1004"},"content":"- `listm` followed by `deletem 2` deletes the 2nd meeting in the unfiltered meetings list returned by [`listm`](#listing-all-meetings--listm).","lastModifiedDate":"2023-11-12"},{"lineNumber":321,"author":{"gitId":"qz1004"},"content":"- `findm m/Project` followed by `deletem 1` deletes the 1st meeting in the filtered meetings list returned by [`findm`](#finding-meetings-findm).","lastModifiedDate":"2023-11-13"},{"lineNumber":322,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":324,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":325,"author":{"gitId":"LoMaply"},"content":"### Editing a meeting : `editm`","lastModifiedDate":"2023-10-24"},{"lineNumber":326,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":327,"author":{"gitId":"LoMaply"},"content":"Edits an existing meeting in OutBook.","lastModifiedDate":"2023-10-24"},{"lineNumber":328,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":329,"author":{"gitId":"qz1004"},"content":"Format: `editm MEETING_INDEX [m/TITLE] [a/LOCATION] [s/START] [e/END] [t/TAG]…​`","lastModifiedDate":"2023-11-12"},{"lineNumber":330,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":331,"author":{"gitId":"qz1004"},"content":"- Edits the meeting at the specified `MEETING_INDEX`.","lastModifiedDate":"2023-11-12"},{"lineNumber":332,"author":{"gitId":"juzzztinsoong"},"content":"- All fields are optional, but at least one must be provided.","lastModifiedDate":"2023-11-11"},{"lineNumber":333,"author":{"gitId":"qz1004"},"content":"- Existing values in each specified field will be updated to the corresponding input values.","lastModifiedDate":"2023-11-12"},{"lineNumber":334,"author":{"gitId":"juzzztinsoong"},"content":"- When editing tags, the existing tags of the meeting will be removed, i.e. addition of tags is not cumulative.","lastModifiedDate":"2023-11-12"},{"lineNumber":335,"author":{"gitId":"juzzztinsoong"},"content":"  - You can therefore remove all of a meeting’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2023-11-11"},{"lineNumber":336,"author":{"gitId":"qz1004"},"content":"- This command may change the meeting that is currently displayed in the details list via the `viewm` command, as detailed [here](#viewing-detailed-meeting-information--viewm).","lastModifiedDate":"2023-11-12"},{"lineNumber":337,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":338,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-24"},{"lineNumber":339,"author":{"gitId":"juzzztinsoong"},"content":"- `editm 1 a/Hawker Centre s/15.09.2023 1500` edits the location and start of the 1st meeting to be `Hawker Centre` and `15.09.2023 1500` respectively.","lastModifiedDate":"2023-11-11"},{"lineNumber":340,"author":{"gitId":"qz1004"},"content":"- `editm 2 m/Zoom meeting t/` edits the title of the 2nd meeting to be `Zoom meeting` and clears all existing tags.","lastModifiedDate":"2023-11-12"},{"lineNumber":341,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":342,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":343,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":344,"author":{"gitId":"LoMaply"},"content":"### Viewing detailed meeting information : `viewm`","lastModifiedDate":"2023-10-03"},{"lineNumber":345,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"qz1004"},"content":"Displays detailed information of a meeting in the details list.","lastModifiedDate":"2023-11-12"},{"lineNumber":347,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"qz1004"},"content":"Format: `viewm MEETING_INDEX`","lastModifiedDate":"2023-11-12"},{"lineNumber":349,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":350,"author":{"gitId":"qz1004"},"content":"- Displays the `TITLE`, `LOCATION`, `START`, `END`, `TAG` and attendees of the meeting at the specified `INDEX`.","lastModifiedDate":"2023-11-12"},{"lineNumber":351,"author":{"gitId":"qz1004"},"content":"- As this command displays the contact at the specified `MEETING_INDEX` in the meetings list, the meeting displayed in the details list may change due to a modification in list order through the use of `addm`, `editm` and `listm` commands. This is intentional.","lastModifiedDate":"2023-11-12"},{"lineNumber":352,"author":{"gitId":"juzzztinsoong"},"content":"- The displayed meeting is cleared from the details list when the `deletem` and `findm` commands are used.","lastModifiedDate":"2023-11-11"},{"lineNumber":353,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":354,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":355,"author":{"gitId":"qz1004"},"content":"- `viewm 1` displays detailed information of the 1st meeting on the meetings list, including current attendees.","lastModifiedDate":"2023-11-12"},{"lineNumber":356,"author":{"gitId":"qz1004"},"content":"![result for \u0027viewMeeting\u0027](images/ViewMeetingResult.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":357,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":358,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":359,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":360,"author":{"gitId":"qz1004"},"content":"### Finding meetings: `findm`","lastModifiedDate":"2023-11-12"},{"lineNumber":361,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":362,"author":{"gitId":"qz1004"},"content":"Finds meetings with details matching the keywords you specified for at least 1 of these fields: `TITLE`, `LOCATION`, `ATTENDEE_NAME`, `TAG`; and falls within the `START` and `END` times given.","lastModifiedDate":"2023-11-12"},{"lineNumber":363,"author":{"gitId":"qz1004"},"content":"The meetings list will be filtered to show only the results of this command.","lastModifiedDate":"2023-11-12"},{"lineNumber":364,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":365,"author":{"gitId":"LoMaply"},"content":"Format: `findm [m/KEYWORDS] [a/KEYWORDS] [t/KEYWORDS] [n/ATTENDEE_NAME] [s/START e/END]`","lastModifiedDate":"2023-11-01"},{"lineNumber":366,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":367,"author":{"gitId":"qz1004"},"content":"- The search is case-insensitive. e.g `shop` will return `SHOP`.","lastModifiedDate":"2023-11-12"},{"lineNumber":368,"author":{"gitId":"qz1004"},"content":"- The order of the keywords does not matter. e.g. `Shop Meet` will return `Meet Shop`.","lastModifiedDate":"2023-11-12"},{"lineNumber":369,"author":{"gitId":"LoMaply"},"content":"- `TITLE`, `LOCATION`, `TAG` and `ATTENDEE_NAME` are searched, within the time frame given by `START` and `END`.","lastModifiedDate":"2023-11-03"},{"lineNumber":370,"author":{"gitId":"qz1004"},"content":"- Only full words will be matched e.g. `Meet` will return `Meet with John` but not `Meeting`.","lastModifiedDate":"2023-11-12"},{"lineNumber":371,"author":{"gitId":"qz1004"},"content":"- If only one field is provided, all meetings matching at least one keyword will be returned (i.e. `OR` search). ","lastModifiedDate":"2023-11-12"},{"lineNumber":372,"author":{"gitId":"juzzztinsoong"},"content":"  - e.g. `m/Shop Meet` will return `Meeting: Shop at mall`, `Meeting: Meet client`.","lastModifiedDate":"2023-11-11"},{"lineNumber":373,"author":{"gitId":"qz1004"},"content":"- If multiple fields are provided, only meetings matching at least one keyword in each field will be returned (i.e. `AND` search). ","lastModifiedDate":"2023-11-12"},{"lineNumber":374,"author":{"gitId":"juzzztinsoong"},"content":"  - e.g. `m/Shop Meet a/Mall` will return `Meeting: Shop at mall, Location: Mall` but not `Meeting: Meet client, Location: Park`.","lastModifiedDate":"2023-11-11"},{"lineNumber":375,"author":{"gitId":"qz1004"},"content":"- This command clears the meeting that is currently displayed in the details list via the `viewm` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":376,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":377,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":378,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":379,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":380,"author":{"gitId":"qz1004"},"content":"- `findm m/project` returns all meetings with a title that contains `project`.","lastModifiedDate":"2023-11-12"},{"lineNumber":381,"author":{"gitId":"qz1004"},"content":"- `findm m/zoom meeting` returns all meetings with a title that contains at least one of `zoom` or `meeting`.","lastModifiedDate":"2023-11-12"},{"lineNumber":382,"author":{"gitId":"LoMaply"},"content":"- `findm s/09.09.2023 0000 e/09.10.2023 0000` returns all meetings between 09.09.2023 0000 and 09.10.2023 0000.","lastModifiedDate":"2023-11-03"},{"lineNumber":383,"author":{"gitId":"LoMaply"},"content":"- `findm m/Meeting s/18.10.2023 0000 e/18.10.2023 2359 n/John` returns `Meeting with friends`, as it starts after 18.10.2023 0000 and ends before 18.10.2023 2359, and is attended by John.","lastModifiedDate":"2023-11-03"},{"lineNumber":384,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":385,"author":{"gitId":"howenc"},"content":"![result for \u0027findJohnMeeting\u0027](images/findJohnMeetingResult.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":386,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":387,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":388,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":389,"author":{"gitId":"qz1004"},"content":"### Adding contact to meeting: `addmc`","lastModifiedDate":"2023-11-12"},{"lineNumber":390,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":391,"author":{"gitId":"qz1004"},"content":"Adds a contact to a meeting as an attendee.","lastModifiedDate":"2023-10-25"},{"lineNumber":392,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":393,"author":{"gitId":"qz1004"},"content":"Format: `addmc MEETING_INDEX CONTACT_INDEX`","lastModifiedDate":"2023-10-25"},{"lineNumber":394,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":395,"author":{"gitId":"qz1004"},"content":"- Adds the contact at the specified `CONTACT_INDEX` to the meeting specified at `MEETING_INDEX`.","lastModifiedDate":"2023-11-12"},{"lineNumber":396,"author":{"gitId":"qz1004"},"content":"- The specified contact\u0027s name will be listed under \"Attendees\" in the detailed view of the specified meeting when [`viewm`](#viewing-detailed-meeting-information--viewm) is used.","lastModifiedDate":"2023-11-12"},{"lineNumber":397,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":398,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":399,"author":{"gitId":"qz1004"},"content":"- `addmc 3 1` adds the 1st contact in the contacts list to the 3rd meeting in the meetings list.","lastModifiedDate":"2023-11-12"},{"lineNumber":400,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":401,"author":{"gitId":"qz1004"},"content":"### Removing contact from meeting: `rmmc`","lastModifiedDate":"2023-11-12"},{"lineNumber":402,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":403,"author":{"gitId":"LoMaply"},"content":"Removes a contact from a meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":404,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":405,"author":{"gitId":"qz1004"},"content":"Format: `rmmc MEETING_INDEX ATTENDEE_INDEX`","lastModifiedDate":"2023-10-25"},{"lineNumber":406,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":407,"author":{"gitId":"jason-raiin"},"content":"- Removes a contact at the specified `ATTENDEE_INDEX` to the meeting at the specified `MEETING_INDEX`.","lastModifiedDate":"2023-11-02"},{"lineNumber":408,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":409,"author":{"gitId":"LoMaply"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":410,"author":{"gitId":"qz1004"},"content":"- `rmmc 3 2` removes the 2nd attendee from the 3rd meeting.","lastModifiedDate":"2023-11-12"},{"lineNumber":411,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":412,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":413,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":414,"author":{"gitId":"jason-raiin"},"content":"### Marking a meeting as complete : `mark`","lastModifiedDate":"2023-11-02"},{"lineNumber":415,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":416,"author":{"gitId":"qz1004"},"content":"Marks a meeting as complete.","lastModifiedDate":"2023-11-12"},{"lineNumber":417,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":418,"author":{"gitId":"qz1004"},"content":"Format: `mark MEETING_INDEX`","lastModifiedDate":"2023-11-12"},{"lineNumber":419,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":420,"author":{"gitId":"qz1004"},"content":"- Marks the meeting at the specified `MEETING_INDEX` as complete.","lastModifiedDate":"2023-11-12"},{"lineNumber":421,"author":{"gitId":"qz1004"},"content":"- All attendees of the meeting will have their `LAST_CONTACTED_TIME` field updated to the `END` time of the meeting","lastModifiedDate":"2023-11-12"},{"lineNumber":422,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":423,"author":{"gitId":"jason-raiin"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":424,"author":{"gitId":"qz1004"},"content":"- `listm` followed by `mark 2` marks the 2nd meeting in the unfiltered meetings list returned by [`listm`](#listing-all-meetings--listm).","lastModifiedDate":"2023-11-12"},{"lineNumber":425,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":426,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":427,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":428,"author":{"gitId":"qz1004"},"content":"## Miscellaneous Commands","lastModifiedDate":"2023-11-07"},{"lineNumber":429,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":430,"author":{"gitId":"juzzztinsoong"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-11-11"},{"lineNumber":431,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":432,"author":{"gitId":"juzzztinsoong"},"content":"Displays a message explaining how to access the help page.","lastModifiedDate":"2023-11-11"},{"lineNumber":433,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":434,"author":{"gitId":"juzzztinsoong"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":435,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":436,"author":{"gitId":"juzzztinsoong"},"content":"Format: `help`","lastModifiedDate":"2023-11-11"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":438,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"juzzztinsoong"},"content":"Clears all entries from the contacts, meetings and details list in OutBook, effectively wiping all data from OutBook.","lastModifiedDate":"2023-11-11"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"juzzztinsoong"},"content":"Closes and exits OutBook.","lastModifiedDate":"2023-11-11"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":451,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":452,"author":{"gitId":"howenc"},"content":"## Saving the data","lastModifiedDate":"2023-10-26"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"qz1004"},"content":"OutBook\u0027s data is saved in the hard disk automatically after any command that modifies the data. There is no need to save manually.","lastModifiedDate":"2023-11-12"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":458,"author":{"gitId":"qz1004"},"content":"OutBook\u0027s data is saved as a JSON file `[JAR file location]/data/outbook.json`. If you are an experienced user, you may attempt to update data directly by editing this data file.","lastModifiedDate":"2023-11-12"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":460,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":461,"author":{"gitId":"juzzztinsoong"},"content":"If your changes to the data file render its format invalid, OutBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to make a backup of the file before editing it.","lastModifiedDate":"2023-11-11"},{"lineNumber":462,"author":{"gitId":"-"},"content":"\u003c/div\u003e  ","lastModifiedDate":"2021-02-04"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":464,"author":{"gitId":"juzzztinsoong"},"content":"[Click here to return to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-11"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"juzzztinsoong"},"content":"| Action                          | Format, Example                                                                                                                                                                   |","lastModifiedDate":"2023-11-11"},{"lineNumber":471,"author":{"gitId":"qz1004"},"content":"|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-12"},{"lineNumber":472,"author":{"gitId":"qz1004"},"content":"| **Add contact**                 | `addc n/NAME p/PHONE e/EMAIL [lc/LAST_CONTACTED_TIME] [r/REMARK] [t/TAG]…​` \u003cbr\u003e e.g., `addc n/James Ho p/22224444 e/jamesho@example.com lc/09.09.2023 0000 t/friend t/colleague` |","lastModifiedDate":"2023-11-12"},{"lineNumber":473,"author":{"gitId":"howenc"},"content":"| **Add contact to meeting**      | `addmc MEETING_INDEX CONTACT_INDEX` \u003cbr\u003e e.g., `addmc 2 1`                                                                                                                        |","lastModifiedDate":"2023-10-25"},{"lineNumber":474,"author":{"gitId":"howenc"},"content":"| **Add meeting**                 | `addm m/TITLE a/LOCATION s/START e/END [t/TAG]…​` \u003cbr\u003e e.g., `addm m/Lunch a/Cafeteria s/20.09.2023 1200 e/20.09.2023 1300`                                                       |","lastModifiedDate":"2023-10-27"},{"lineNumber":475,"author":{"gitId":"LoMaply"},"content":"| **Clear**                       | `clear`                                                                                                                                                                           |","lastModifiedDate":"2023-10-03"},{"lineNumber":476,"author":{"gitId":"qz1004"},"content":"| **Delete contact**              | `deletec CONTACT_INDEX` \u003cbr\u003e e.g., `deletec 3`                                                                                                                                    |","lastModifiedDate":"2023-11-12"},{"lineNumber":477,"author":{"gitId":"qz1004"},"content":"| **Delete meeting**              | `deletem MEETING_INDEX` \u003cbr\u003e e.g., `deletem 3`                                                                                                                                    |","lastModifiedDate":"2023-11-12"},{"lineNumber":478,"author":{"gitId":"qz1004"},"content":"| **Edit contact**                | `editc CONTACT_INDEX [n/NAME] [p/PHONE] [e/EMAIL] [lc/LAST_CONTACTED_TIME] [r/REMARK] [t/TAG]…​`\u003cbr\u003e e.g.,`editc 2 n/James Lee e/jameslee@example.com`                            |","lastModifiedDate":"2023-11-12"},{"lineNumber":479,"author":{"gitId":"qz1004"},"content":"| **Edit meeting**                | `editm MEETING_INDEX [m/TITLE] [a/LOCATION] [s/START] [e/END] [t/TAG]…​`\u003cbr\u003e e.g.,`editm 1 a/Hawker Centre s/15.09.2023 1500`                                                     |","lastModifiedDate":"2023-11-12"},{"lineNumber":480,"author":{"gitId":"LoMaply"},"content":"| **Find contact**                | `findc [n/KEYWORDS] [p/KEYWORDS] [e/KEYWORDS] [lc/LAST_CONTACTED_TIME] [s/KEYWORDS] [t/KEYWORDS]` \u003cbr\u003e e.g., `findc n/James Jake s/active claimant`                               |","lastModifiedDate":"2023-11-01"},{"lineNumber":481,"author":{"gitId":"LoMaply"},"content":"| **Find meeting**                | `findm [m/KEYWORDS] [a/KEYWORDS] [t/KEYWORDS] [n/ATTENDEE_NAME] [s/START e/END]` \u003cbr\u003e e.g., `findm m/Zoom Meet s/09.09.2023 0000 e/09.10.2023 0000`                               |","lastModifiedDate":"2023-11-01"},{"lineNumber":482,"author":{"gitId":"LoMaply"},"content":"| **Help**                        | `help`                                                                                                                                                                            |","lastModifiedDate":"2023-10-03"},{"lineNumber":483,"author":{"gitId":"LoMaply"},"content":"| **List contacts**               | `listc`                                                                                                                                                                           |","lastModifiedDate":"2023-10-03"},{"lineNumber":484,"author":{"gitId":"LoMaply"},"content":"| **List meetings**               | `listm`                                                                                                                                                                           |","lastModifiedDate":"2023-10-03"},{"lineNumber":485,"author":{"gitId":"qz1004"},"content":"| **Mark meeting**                | `mark MEETING_INDEX` \u003cbr\u003e e.g., `mark 1 `                                                                                                                                         |","lastModifiedDate":"2023-11-12"},{"lineNumber":486,"author":{"gitId":"howenc"},"content":"| **Remove contact from meeting** | `rmmc MEETING_INDEX ATTENDEE_INDEX` \u003cbr\u003e e.g., `rmmc 2 2`                                                                                                                         |","lastModifiedDate":"2023-10-25"},{"lineNumber":487,"author":{"gitId":"qz1004"},"content":"| **View contact details**        | `viewc CONTACT_INDEX` \u003cbr\u003e e.g., `viewc 4`                                                                                                                                        |","lastModifiedDate":"2023-11-12"},{"lineNumber":488,"author":{"gitId":"qz1004"},"content":"| **View meeting details**        | `viewm MEETING_INDEX` \u003cbr\u003e e.g., `viewm 4`                                                                                                                                        |","lastModifiedDate":"2023-11-12"},{"lineNumber":489,"author":{"gitId":"howenc"},"content":"| **Exit**                        | `exit`                                                                                                                                                                            |","lastModifiedDate":"2023-10-27"},{"lineNumber":490,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":491,"author":{"gitId":"juzzztinsoong"},"content":"[Click here to return to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-11"},{"lineNumber":492,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":493,"author":{"gitId":"qz1004"},"content":"---","lastModifiedDate":"2023-11-07"},{"lineNumber":494,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":495,"author":{"gitId":"qz1004"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":497,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2023-11-07"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":499,"author":{"gitId":"juzzztinsoong"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":500,"author":{"gitId":"qz1004"},"content":"**A**: Follow these steps:","lastModifiedDate":"2023-11-07"},{"lineNumber":501,"author":{"gitId":"juzzztinsoong"},"content":"1. Install OutBook on the other computer following the same instructions as in the [Quick Start Guide](#quick-start). An empty data file will be created in the same folder as the application. ","lastModifiedDate":"2023-11-11"},{"lineNumber":502,"author":{"gitId":"juzzztinsoong"},"content":"2. Replace this empty data file with the file that contains the data from your previous OutBook installation.","lastModifiedDate":"2023-11-11"},{"lineNumber":503,"author":{"gitId":"qz1004"},"content":"3. Your transferred data should now be visible upon launching OutBook.","lastModifiedDate":"2023-11-07"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":505,"author":{"gitId":"juzzztinsoong"},"content":"[Click here to return to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-11"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":507,"author":{"gitId":"qz1004"},"content":"---","lastModifiedDate":"2023-11-07"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":509,"author":{"gitId":"qz1004"},"content":"## Known issues","lastModifiedDate":"2023-11-07"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":511,"author":{"gitId":"juzzztinsoong"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. You can solve this by deleting the `preferences.json` file created by the application, before running the application again.","lastModifiedDate":"2023-11-11"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":513,"author":{"gitId":"juzzztinsoong"},"content":"[Click here to return to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-11"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":515,"author":{"gitId":"qz1004"},"content":"---","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"howenc":46,"jason-raiin":17,"-":116,"qz1004":177,"juzzztinsoong":67,"LoMaply":92}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"qz1004"},"content":"    content: \"OutBook\";","lastModifiedDate":"2023-10-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"qz1004":1}},{"path":"docs/diagrams/AddAttendeeSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"participant \":AddMeetingContactCommandParser\" as AddMeetingContactCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"participant \"a:AddMeetingContactCommand\" as AddMeetingContactCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"endbox","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"participant \"m:Meeting\" as Meeting MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"[-\u003e LogicManager : execute(\"addmc 1 2\")","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addmc 1 2\")","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"create AddMeetingContactCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"AddressBookParser -\u003e AddMeetingContactCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"activate AddMeetingContactCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"AddMeetingContactCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"deactivate AddMeetingContactCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"AddressBookParser -\u003e AddMeetingContactCommandParser : parse(\"1 2\")","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"activate AddMeetingContactCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"create AddMeetingContactCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"AddMeetingContactCommandParser -\u003e AddMeetingContactCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"activate AddMeetingContactCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"AddMeetingContactCommand --\u003e AddMeetingContactCommandParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"deactivate AddMeetingContactCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"AddMeetingContactCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"deactivate AddMeetingContactCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"AddMeetingContactCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"destroy AddMeetingContactCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"LogicManager -\u003e AddMeetingContactCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"activate AddMeetingContactCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"create Meeting","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"AddMeetingContactCommand -\u003e Meeting : addAttendee(1, 2)","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"activate Meeting","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"Meeting --\u003e AddMeetingContactCommand : m","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"deactivate Meeting","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"AddMeetingContactCommand -\u003e Model : setMeeting(1, m)","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"activate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"Model --\u003e AddMeetingContactCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"deactivate Model","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"AddMeetingContactCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"CommandResult --\u003e AddMeetingContactCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"AddMeetingContactCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"qz1004"},"content":"deactivate AddMeetingContactCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"qz1004"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"qz1004"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"qz1004":78}},{"path":"docs/diagrams/AttendeeClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"    class Meeting","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"    class Person","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"    class Attendee","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"    class Name","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"Meeting *--\u003e \"0..* \"Attendee","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"Name .\u003e Attendee","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"qz1004":17}},{"path":"docs/diagrams/RemoveAttendeeSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"@startuml RemoveAttendeeSequenceDiagram","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"participant \":RemoveMeetingContactCommandParser\" as RemoveMeetingContactCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"participant \":RemoveMeetingContactCommand\" as RemoveMeetingContactCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"endbox","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"participant \"m:Meeting\" as Meeting MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"[-\u003e LogicManager : execute(\"rmmc 1 2\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"rmmc 1 2\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"create RemoveMeetingContactCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"AddressBookParser -\u003e RemoveMeetingContactCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"activate RemoveMeetingContactCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"RemoveMeetingContactCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"deactivate RemoveMeetingContactCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"AddressBookParser -\u003e RemoveMeetingContactCommandParser : parse(\"1 2\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"activate RemoveMeetingContactCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"create RemoveMeetingContactCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"RemoveMeetingContactCommandParser -\u003e RemoveMeetingContactCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"activate RemoveMeetingContactCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"RemoveMeetingContactCommand --\u003e RemoveMeetingContactCommandParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"deactivate RemoveMeetingContactCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"RemoveMeetingContactCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"deactivate RemoveMeetingContactCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"RemoveMeetingContactCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"destroy RemoveMeetingContactCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"LogicManager -\u003e RemoveMeetingContactCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"activate RemoveMeetingContactCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"create Meeting","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"RemoveMeetingContactCommand -\u003e Meeting : removeAttendee(1, 2)","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"activate Meeting","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"Meeting --\u003e RemoveMeetingContactCommand : m","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"deactivate Meeting","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"RemoveMeetingContactCommand -\u003e Model : setMeeting(1, m)","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"Model --\u003e RemoveMeetingContactCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"RemoveMeetingContactCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"CommandResult --\u003e RemoveMeetingContactCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"RemoveMeetingContactCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"deactivate RemoveMeetingContactCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jason-raiin":78}},{"path":"docs/diagrams/edit/CreateEditMeetingCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"title Create EditMeetingCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"Participant \":EditMeetingCommandParser\" as emcp LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"Participant \"editMeetingDescriptor:EditMeetingDescriptor\" as emd LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"Participant \"command:EditMeetingCommand\" as emc LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"activate logic","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"create emcp","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"abp -\u003e emcp ++: parse(arguments)","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"create emd","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"emcp -\u003e emd ++: EditMeetingDescriptor()","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"emd --\u003e emcp --:","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"create emc","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"emcp -\u003e emc ++: EditMeetingCommand(targetIndex, editMeetingDescriptor)","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"emc --\u003e emcp --: command","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"emcp --\u003e abp --: command","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"LoMaply":26}},{"path":"docs/diagrams/edit/EditMeetingClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"package Parser as ParserPackage {","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"Class EditMeetingCommandParser","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"package Command as CommandPackage {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"Class EditMeetingCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"Class EditMeetingDescriptor","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"Class Index","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"Class AddressBookParser","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"Class LogicManager","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"AddressBookParser .down.\u003e EditMeetingCommandParser : creates \u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"EditMeetingCommandParser ..\u003e EditMeetingCommand : creates \u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"EditMeetingCommand -down-\u003e\"1\" EditMeetingDescriptor","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"EditMeetingCommand -down-\u003e\"1\" Index","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"EditMeetingCommand -left-|\u003e Command","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"EditMeetingCommandParser .down.|\u003e Parser","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"EditMeetingCommandParser .left.\u003e EditMeetingDescriptor : creates \u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"EditMeetingCommandParser .down.\u003e Index : creates \u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"LogicManager .down.\u003e EditMeetingCommand : executes \u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"LoMaply":33}},{"path":"docs/diagrams/edit/EditMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"title Execute EditMeetingCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"Participant \"command:EditMeetingCommand\" as emc LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"end box","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"Participant \":ModelManager\" as model MODEL_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"Participant \"editedMeeting:Meeting\" as meet MODEL_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"end box","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"[-\u003elogic : execute","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"activate logic","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"ref over logic, emc: Create EditMeetingCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"logic -\u003e emc ++: execute(model)","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"emc -\u003e model ++: getFilteredMeetingList","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"model --\u003e emc --:","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"emc -\u003e emc ++:  createEditedMeeting","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"create meet","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"emc -\u003e meet ++: Meeting()","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"meet --\u003e emc --:","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"emc --\u003e emc --:","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"emc -\u003e model ++: setMeeting","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"model --\u003e emc --:","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"emc -\u003e model ++:updateFilteredMeetingList","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"model --\u003e emc --:","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"emc --\u003e logic --: CommandResult","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"[\u003c--logic","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"deactivate logic","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"LoMaply":36}},{"path":"docs/diagrams/mark/CreateMarkMeetingCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"@startuml CreateMarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"title Create MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"participant \":MarkMeetingCommandParser\" as MarkMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"participant \"command:MarkMeetingCommand\" as MarkMeetingCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"activate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"mark 1\")","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"create MarkMeetingCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"AddressBookParser -\u003e MarkMeetingCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"activate MarkMeetingCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"deactivate MarkMeetingCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"AddressBookParser -\u003e MarkMeetingCommandParser : parse(\"1\")","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"activate MarkMeetingCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"create MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommandParser -\u003e MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"activate MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand --\u003e MarkMeetingCommandParser : command","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"deactivate MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"deactivate MarkMeetingCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"destroy MarkMeetingCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"jason-raiin":41}},{"path":"docs/diagrams/mark/MarkMeetingCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"@startuml Execute MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"title Execute MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"participant \"command:MarkMeetingCommand\" as MarkMeetingCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"endbox","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"[-\u003e LogicManager : execute(\"mark 1\")","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"activate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"ref over LogicManager, MarkMeetingCommand : Create MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"LogicManager -\u003e MarkMeetingCommand : execute(model)","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"activate MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"ref over MarkMeetingCommand, Model : Mark Meeting","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"ref over MarkMeetingCommand, Model : Update Attendee LastContactedTime","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"create CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand -\u003e CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"activate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"CommandResult --\u003e MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"deactivate MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"jason-raiin":40}},{"path":"docs/diagrams/mark/MarkMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"@startuml MarkMeeting","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"title Mark Meeting","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"participant \"command:MarkMeetingCommand\" as MarkMeetingCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"endbox","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"participant \"markedMeeting:Meeting\" as Meeting MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"activate MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand -\u003e MarkMeetingCommand : markMeeting(meeting)","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"activate MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"create Meeting","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand -\u003e Meeting","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"activate Meeting","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"Meeting --\u003e MarkMeetingCommand : markedMeeting","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"deactivate Meeting","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand --\u003e MarkMeetingCommand : markedMeeting","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"deactivate MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand -\u003e Model : setMeeting(meeting, markedMeeting)","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"activate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"Model --\u003e MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"deactivate Model","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"jason-raiin":34}},{"path":"docs/diagrams/mark/UpdateAttendeeSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"@startuml Update Attendee LastContactedTime","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"title Update Attendee LastContactedTime","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"participant \"command:MarkMeetingCommand\" as MarkMeetingCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"endbox","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"participant \"updatedPerson:Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"activate MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"loop for each attendee","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand -\u003e Model : getPerson(attendee)","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"activate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"Model --\u003e MarkMeetingCommand : person","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"deactivate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand -\u003e MarkMeetingCommand : updateLastContactedTime(person, time)","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"activate MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"create Person","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand -\u003e Person","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"activate Person","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"Person -\u003e MarkMeetingCommand : updatedPerson","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"deactivate Person","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand --\u003e MarkMeetingCommand : updatedPerson","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"deactivate MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"MarkMeetingCommand -\u003e Model : setPerson(person, updatedPerson)","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"activate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"Model --\u003e MarkMeetingCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"deactivate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"end","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"jason-raiin":44}},{"path":"docs/diagrams/view/CreateViewContactCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"title Create ViewContactCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"Participant \":ViewContactCommandParser\" as vccp LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"Participant \"command:ViewContactCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"create vccp","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"abp -\u003e vccp ++: parse(arguments)","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"vccp -\u003e ec ++: ViewContactCommand(targetIndex)","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"ec --\u003e vccp --: command","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"vccp --\u003e abp --: command","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":13,"LoMaply":10}},{"path":"docs/diagrams/view/UiViewItemsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"title Forward Viewed Person \u0026 Meeting to Ui","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"Participant \"UiPart:MainWindow\" as window UI_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"Participant \":InfoDisplayPanel\" as info UI_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"Participant \":ModelManager\" as model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"[-\u003e window : executeCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"activate window","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"window -\u003e logic ++: execute(commandText)","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"ref over logic, model : Store viewed Items to Model","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"logic --\u003e window --:","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"window -\u003e logic ++: getViewedItems()","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"logic -\u003e model ++: getViewedItems()","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"model --\u003e logic --: Pair\u003cPerson, Meeting\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"logic --\u003e window --: Pair\u003cPerson, Meeting\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"window -\u003e info ++: setViewedModel(pair)","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"info --\u003e window --:","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"LoMaply":32}},{"path":"docs/diagrams/view/ViewCommandsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"title Store Viewed Items to Model","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"Participant \"command:ViewContactCommand\" as vcc LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"Participant \":ModelManager\" as model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"[-\u003elogic : execute","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"activate logic","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"ref over logic, vcc: Create ViewContactCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"logic -\u003e vcc ++: execute(model)","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"vcc -\u003e model ++: setViewedPersonIndex(targetIndex)","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"model --\u003e vcc --:","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"vcc --\u003e logic --: CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"[\u003c--logic","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"deactivate logic","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"LoMaply":26}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"title: OutBook","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F12-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-F12-4/tp)","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"**OutBook is a desktop application designed for freelance insurance agents, enabling them to effectively organize and oversee their extensive contacts and meeting schedules.** Users can link their contacts to their meetings, to keep track of the people attending these meetings.","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"* If you are interested in using OutBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"* If you are interested about developing OutBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"qz1004":5,"juzzztinsoong":1}},{"path":"docs/team/howenc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"title: Howen\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"### Project: OutBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"OutBook is a desktop data management application for freelance insurance agents to manage their numerous contacts and meeting schedule. Users can link their contacts to their meetings, to keep track of the personnel attending these meetings.","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"My contributions to the project are listed below.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"- **New Feature**: Add Meetings (Pull Request [#16](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/16))","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"  - What it does: Allows the user to add meetings into OutBook. This meeting allows the user to set the Meeting title, time, location and tags.","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"  - Highlights: This new feature is the foundation of half our other features as it is one of the base functions of our program.","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"  - Credits: It was built in a similar manner to add person to have similar structure.","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"- **New Feature**: Add UI to show meeting instances (Pull Request [#54](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/54))","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"  - What it does: Allows the user to see the meetings that are in OutBook. This will show the meeting title, time, location and tags that it has.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"- **New Feature**: Find Meetings (Pull Request [#70](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/70))","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"  - What it does: Allows the user to find meetings using all the different fields on the meeting, title, time, location, tags, attendees.","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"  - Justification: This feature enables the user to quickly find the meeting that they want instead of scrolling through the entire list of meetings, improving the quality of life and efficiency of our product.","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"  - Highlights: The design process proved quite hard as in order to maintain SLAP (Single Level of Abstraction Principle) many predicate classes had to be made which increase coupling and decreased cohesion. In order to maintain similar level of coupling as before, a general predicate class needed to be created to handle all other predicates.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"- **New Feature**: Made meetings to be sorted by start time (Pull Request [#83](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/83))","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"  - What it does: Meetings are sorted by start time","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"  - Justification: This feature would always put the earliest meeting the user has at the top of the list so that they do not have to search the entire list to find the meeting to prepare for next.","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"  - Highlights: The original implementation wanted to enable the user to specify the type of sort that they want, with the default being by start time. However, upon further dicussion with the team, this feature was reduced to sort by start time to keep things simple.","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dhowenc\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"- **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"  - Organising tasks and team meetings","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"  - Forking workflow","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    - Review and merge pull requests","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"  - Ensuring deliverables are done on time","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"  - Managed [releases](https://github.com/AY2324S1-CS2103T-F12-4/tp/releases) `v1.2`-`v1.3(final)` ","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"  - Configured the model and storage to support Meetings. (Pull Request [#42](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/42))","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    - What it does: This was the groundwork needed for the rest of our project to happen.","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    - Highlights: The saving of the Attendees using Jackson proved quite difficult. The original implementation wanted the Person to be saved within the meeting. However, this would not be feasible as it would take up too much space and have a non-unique instance of a Person. This was resolved by using a string to represent the Person, as there cannot be 2 persons with the same name.","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"  - User Guide:","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    - Added documentation for `editm`, `findm`","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"  - Developer Guide:","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    - Added implementation for `findm`","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"    - Updated diagram for UI, Model, Storage and Appendix: Instructions for Manual Testing","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"  - Updated README","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"- **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"- **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"  - Umlet for UML modeling","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"howenc":32,"jason-raiin":24,"LoMaply":3}},{"path":"docs/team/jason-raiin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"title: Jason\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"### Project: OutBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"OutBook is a desktop data management application for freelance insurance agents to manage their numerous contacts and meeting schedule. Users can link their contacts to their meetings, to keep track of the personnel attending these meetings.","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"My contributions to the project are listed below.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"- **New Feature**: Remove contact from meeting command (Pull Request [#51](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/51))","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"  - What it does: Allows the user to remove an Attendee from the meeting.","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"  - Justification: Basic functionality for meetings","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"- **New Feature**: Add `Tag`s to meetings (Pull Request [#63](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/63))","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"  - What it does: Meetings can have tags associated to them","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"  - Justification: Enables searching and filtering, similar to Persons","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"- **New Features**: Add `Status` field to meetings (Pull Request [#105](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/105))","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"  - What it does: Meetings can be marked as complete","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"  - Justification: Users want to see which meetings have already been done","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"- **New Feature**: Mark meeting command (Pull Request [#105](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/105))","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"  - What it does: Allows the user to mark a meeting as complete, and updates the last contacted time of all attendees","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"  - Justification: Automates the updating of last contacted time for attendees","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djason-raiin\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"- **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"  - Contributed issues and bugs","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"  - Reviewed PRs","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"  - Used `LinkedHashSet` for attendees instead of `HashSet` (Pull Request [#51](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/51))","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"    - Justification: Some commands require indexing of the Attendee set, so a `LinkedHashSet` is more appropriate to ensure that the indexing is consistent","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"  - Convert `Tag` to factory class (Pull Request [#64](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/64))","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"    - Justification: Eliminate duplicate objects to reduce memory usage","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"  - `ParseException`: Improved throwing, handling, and display of parsing exceptions (Pull Request [#155](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/155))","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"    - Justification: Allows the user to see the root cause when an error is encountered.","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"  - Duplicate contacts: added checks for duplicate emails and phones (Pull Request [#161](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/161))","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"    - Justification: Prevent duplicate entries","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"  - Email format: Improved Regex for email field (Pull Request [#161](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/161))","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"    - Justification: Narrowed the check to only accept common email formats.","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":" ","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"  - User Guide","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"    - `rmmc` command guide","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"    - `mark` command guide","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"    - Proofreading and copywriting","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"  - Developer Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"    - `rmmc` documentation and diagrams","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"    - `mark` documentation and diagrams","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"    - User profile","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"    - Value proposition","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"    - User stories","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"    - Use cases","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"- **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"  - Added util method `parseIndexes` (Pull Request [#51](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/51))","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"    - What it does: Parses multiple indexes in a command and checks that the correct number of index arguments are provided","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"    - Justification: `addmc` and `rmmc` commands take in multiple index arguments","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"  - Improved methods for `typicalMeetings` and `typicalAddressBook` (Pull Request [#105](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/105))","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"    - Justification: Increase ease of testing","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"  - Added `DateTimeUtil` for parsing and formatting dates (Pull Request [#161](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/161))","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"    - Justification: Abstract frequeuntly used parse and format methods into a common util","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"howenc":2,"jason-raiin":68,"LoMaply":1}},{"path":"docs/team/juzzztinsoong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"title: Justin\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"### Project: OutBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"OutBook is a desktop application designed for freelance insurance agents, enabling them to effectively organize and oversee their extensive contacts and meeting schedules. Users can link their contacts to their meetings, to keep track of the people attending these meetings.","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"My contributions to the project are listed below.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djuzzztinsoong\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"- **New Features**:","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"  - Added `LastContactedTime` field to Person (Pull Request [#90](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/90))","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    - What it does: Allows a user to add a Person\u0027s last contacted time when creating or editing a contact. This allows the user to keep track of uncontacted clients.","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"    - Justification: This allows for the completion of meetings to automatically update a Person\u0027s LastContactedTime field to the time of the meeting.","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    - Highlights: Implementation of this feature required extensive modification to the Model and Storage components, with many predicate classes having to be added to increase coupling and reduce cohesion within the app.","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"  - Implemented Delete Meetings Command: `deletem` (Pull Request [#58](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/58))","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    - Justification: There may be various reasons for a user to delete a meeting, such as cancellation.","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"- **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"  - Forking workflow","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    - Contributed issues","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    - Review and merge pull requests","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"  - Reviewing documentation","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"  - Added utility method `TitleContainsKeywordsPredicate`. (Pull Request [#58](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/58))","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    - What it does: Enables filtering of meetings by matching keywords to the meetings\u0027 title.","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"    - Justification: Lays the groundwork for the `findm` find meeting command, where users can use fields such as title, time, location, tags or attendees to search for a specific meeting.","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"  - Configured storage to use a different file to store user data. (Pull Request [#156](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/156))","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"  - User Guide","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    - Added documentation for `deletem`.","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"    - Updated documentation for the following features: `addc`, `editc` and `addm`.","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"    - Modifed large parts of documentation to ensure coherence and consistency with codebase.","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"  - Developer Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"    - Added implementation notes and diagram for `LastContactedTime` field","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"    - Non-functional Requirements","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"    - Glossary","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"## Contributions to the Developer Guide (Extracts):","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"- Added documentation for implementation of `LastContactedTime` object:","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"### Keeping track of last meeting with contact","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"Keeping track of the user\u0027s last meeting with their contact is facilitated by the addition of a `LastContactedTime` object to `Person`.","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"Thus, each instance of `Person` will contain an immutable `LastContactedTime` object that stores the user\u0027s last meeting with that contact.","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"The following steps shows how `LastContactedTime` is implemented and utilized in the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"Step 1. The user inputs the `addc` command into the `CommandBox` input field, with the added field `l/[LAST_CONTACTED_TIME]`.","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"The following diagram summarizes steps 2 to 6:","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"\u003cimg src\u003d\"../images/LastContactedTime1.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"Step 2. Entering a correct command with the `Enter` key then calls `execute` on `LogicManager`.","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"Step 3. `LogicManager` then calls `AddressBookParser#parseCommand(commandText)` on the `commandText` String, which recognizes that it is an `addc` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"Step 4. `AddressBookParser` then calls `AddCommandParser#parse()` on the command arguments.","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"Step 5. `AddCommandParser` then calls `ParserUtil#parseContactTime()` which parses the last contacted time and returns a `LocalDateTime` object called `lastContactedTime`.","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"juzzztinsoong"},"content":"Step 6. The `lastContactedTime` object is then passed to the `Person` constructor, which creates a new `Person` that calls the `LastContactedTime` constructor with it.","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"juzzztinsoong"},"content":"The following diagram summarizes steps 7 and 8:","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"juzzztinsoong"},"content":"\u003cimg src\u003d\"../images/LastContactedTime2.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"juzzztinsoong"},"content":"Step 7. The completed `Person` is passed to an `AddCommand` constructor which return a new `AddCommand` that can be executed.","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"juzzztinsoong"},"content":"Step 8. `LogicManager` then executes the `AddCommand` on the application model.","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"Step 9. Further execution is carried out, which like before adds the `Person` object to the list of `Person`s in the `Model`, and updates the `Storage` with this new `Person`.","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"juzzztinsoong"},"content":"#### Design Consideration: Updating last meeting with contact","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"juzzztinsoong"},"content":"Solution:","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"juzzztinsoong"},"content":"This is facilitated by the addition of the `MarkDoneCommand`. When a meeting is marked as done, the attendees of the meeting will be updated with their LastContactedTime field updated to the end time of the meeting.","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"juzzztinsoong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"juzzztinsoong"},"content":"---","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"juzzztinsoong"},"content":"- Added documentation for Non-Functional Requirements:","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"### Non-Functional Requirements","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"juzzztinsoong"},"content":"**Performance**","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"juzzztinsoong"},"content":"1.  Should be able to respond to user input within 2 seconds under normal operating conditions.","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"juzzztinsoong"},"content":"2.  Should be able to handle a database of up to 1000 contacts and 500 meetings without a significant performance degradation.","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"juzzztinsoong"},"content":"**Reliability**","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"juzzztinsoong"},"content":"1.  Data integrity should be ensured under any usage conditions through automatic data backup.","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"juzzztinsoong"},"content":"**Usability**","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"juzzztinsoong"},"content":"1.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"juzzztinsoong"},"content":"2.  Application GUI should be intuitive wherever possible, to reduce training for new users.","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"juzzztinsoong"},"content":"**Documentation**","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"juzzztinsoong"},"content":"1.  User documentation should include a comprehensive user manual.","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"juzzztinsoong"},"content":"2.  Developer documentation should cover the architecture, code structure, and guidelines for future development.","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"juzzztinsoong"},"content":"**Compatibility**","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"juzzztinsoong"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":122,"author":{"gitId":"juzzztinsoong"},"content":"---","lastModifiedDate":"2023-11-14"},{"lineNumber":123,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":124,"author":{"gitId":"juzzztinsoong"},"content":"- Added documentation for Glossary:","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"juzzztinsoong"},"content":"### Glossary","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"juzzztinsoong"},"content":"- **User Interface (UI)**: The point of interaction between a user and a software application, with both graphical and non-graphical elements.","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"juzzztinsoong"},"content":"- **Application Programming Interface (API)**: A set of rules and tools allowing different software applications to communicate and exchange information.","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"juzzztinsoong"},"content":"- **Command Line Interface (CLI)**: A text-based interface for interacting with a computer program or operating system, where users enter commands.","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"juzzztinsoong"},"content":"- **Graphical User Interface (GUI)**: A visual interface using graphical elements like windows, icons, and buttons for user interaction with a software application.","lastModifiedDate":"2023-11-12"},{"lineNumber":132,"author":{"gitId":"juzzztinsoong"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-11-12"},{"lineNumber":133,"author":{"gitId":"juzzztinsoong"},"content":"- **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2023-11-12"},{"lineNumber":134,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":135,"author":{"gitId":"juzzztinsoong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":136,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":137,"author":{"gitId":"juzzztinsoong"},"content":"## Contributions to the User Guide (Extracts):","lastModifiedDate":"2023-11-12"},{"lineNumber":138,"author":{"gitId":"juzzztinsoong"},"content":"- Added documentation for `deletem`:","lastModifiedDate":"2023-11-12"},{"lineNumber":139,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":140,"author":{"gitId":"juzzztinsoong"},"content":"### Deleting a meeting : `deletem`","lastModifiedDate":"2023-11-12"},{"lineNumber":141,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"juzzztinsoong"},"content":"Deletes a meeting from OutBook.","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":144,"author":{"gitId":"juzzztinsoong"},"content":"Format: `deletem INDEX`","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":146,"author":{"gitId":"juzzztinsoong"},"content":"- Deletes the meeting at the specified `INDEX`.","lastModifiedDate":"2023-11-12"},{"lineNumber":147,"author":{"gitId":"juzzztinsoong"},"content":"- The `INDEX` refers to the index number shown in the displayed meeting list.","lastModifiedDate":"2023-11-12"},{"lineNumber":148,"author":{"gitId":"juzzztinsoong"},"content":"- The `INDEX` **must be a positive integer** such as 1, 2, 3, …​","lastModifiedDate":"2023-11-12"},{"lineNumber":149,"author":{"gitId":"juzzztinsoong"},"content":"- This command clears the meeting that is currently displayed via the `viewm` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":150,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":151,"author":{"gitId":"juzzztinsoong"},"content":"Examples:","lastModifiedDate":"2023-11-12"},{"lineNumber":152,"author":{"gitId":"juzzztinsoong"},"content":"- `listm` followed by `deletem 2` deletes the 2nd meeting in the results of the `listm` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":153,"author":{"gitId":"juzzztinsoong"},"content":"- `findm m/Project` followed by `deletem 1` deletes the 1st meeting in the results of the `findm` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":154,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":155,"author":{"gitId":"juzzztinsoong"},"content":"---","lastModifiedDate":"2023-11-14"},{"lineNumber":156,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":157,"author":{"gitId":"juzzztinsoong"},"content":"- Rewrote notes about command format for greater readability:","lastModifiedDate":"2023-11-12"},{"lineNumber":158,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":159,"author":{"gitId":"juzzztinsoong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":160,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":161,"author":{"gitId":"juzzztinsoong"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":162,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":163,"author":{"gitId":"juzzztinsoong"},"content":"- Every word in uppercase represents a field you can supply.\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":164,"author":{"gitId":"juzzztinsoong"},"content":"  e.g. in `addc n/NAME`, `NAME` is a parameter that can be substituted for `John Doe`, as in `addc n/John Doe`.","lastModifiedDate":"2023-11-12"},{"lineNumber":165,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":166,"author":{"gitId":"juzzztinsoong"},"content":"- Fields contained in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":167,"author":{"gitId":"juzzztinsoong"},"content":"  e.g. when provided with the fields `n/NAME [t/TAG]`, you can submit `n/John Doe t/friend` if you want to mark this contact as a `friend`, or `n/John Doe` otherwise.","lastModifiedDate":"2023-11-12"},{"lineNumber":168,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"juzzztinsoong"},"content":"- Fields with `…`​ after them can be submitted any number of times, including zero.\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":170,"author":{"gitId":"juzzztinsoong"},"content":"  e.g. when provided with the field `[t/TAG]…​`, you can leave the field blank, or submit `t/friend`, `t/friend t/family`, etc.","lastModifiedDate":"2023-11-12"},{"lineNumber":171,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"juzzztinsoong"},"content":"- You can submit fields in any order.\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":173,"author":{"gitId":"juzzztinsoong"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, submitting in the format `p/PHONE_NUMBER n/NAME`, such as in `p/91472381 n/John Doe`, is also acceptable.","lastModifiedDate":"2023-11-12"},{"lineNumber":174,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"juzzztinsoong"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines. This is to avoid deletion of space characters surrounding line-breaks when lengthy text is copied over to the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":176,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":177,"author":{"gitId":"juzzztinsoong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"howenc":2,"jason-raiin":24,"juzzztinsoong":150,"LoMaply":1}},{"path":"docs/team/lomaply.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"title: Linus\u0027 Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"### Project: OutBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"OutBook is a desktop data management application for freelance insurance agents to manage their numerous contacts and meeting schedule. Users can link their contacts to their meetings, to keep track of the personnel attending these meetings.","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"My contributions to the project are listed below.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"- **New Feature**: View contact command (Pull Request [#53](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/53))","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"  - What it does: Allows the user to view all details of a contact.","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"  - Highlights:","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"    - This command required the first modification to the default GUI to make space for the viewed items display.","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"    - Finding a way to send the viewed contact from the Command to the UI without unnecessarily increasing coupling was quite tricky. This was achieved by having the command store the viewed contact in the Model, and having the UI access it via the Logic Manager.","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"  - Justification: This feature allows the user to see details of a contact, such as remarks, that may not be shown in the contact list due to space constraints.","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"- **New Feature**: View meeting command (Pull Request [#68](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/68))","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"  - What it does: Allows the user to view all details of a meeting, similar to View contact command.","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"  - Justification: This feature allows the user to see details of a meeting, such as the list of attendees, that may not be shown in the meeting list due to space constraints.","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"- **New Feature**: Edit meeting command (Pull Request [#80](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/80))","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"  - What it does: Allows the user to edit all meeting details apart from the list of attendees, which is separately handles by `addmc` and `rmmc`.","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"  - Highlights: While the implementation is quite similar to the existing edit contact command, some changes were required due to meetings having different data fields, with one of them (Attendees list) that should not be modifiable by this command.","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"  - Justification: This feature allows users to edit incorrect/outdated meeting information, instead of having to delete and create a new meeting.","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"  ","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dlomaply\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"- **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"  - Maintain Issue Tracker","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"  - Forking workflow","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"    - Review and merge pull requests","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"  - Split original UI (contact list) into 3 separate panes (Pull Request [#53](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/53))","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"    - Justification: Makes space for the Meeting Schedule and Display panel for the view commands.","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"  - Contact list automatically sorted by LastContactedTime (Pull Request [#99](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/99))","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"    - Justification: Ensures that Outbook users will easily stay in touch with their contacts by pushing contacts with the oldest LastContactedTime (with respect to the current date) to the top of the contact list.","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"  - User Guide","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"    - First draft of User Guide with initial plans for v1.2","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"    - Add section in User Guide for `viewm`, `viewc`, `editm`","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"    - General polishing and error checking","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"  - Developer Guide","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"    - Add Implementation notes on `viewm`, `viewc`, `editc` and `editm`","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"    - Add several Sequence \u0026 Class diagrams","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"- **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"- **Tools**:","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jason-raiin":25,"LoMaply":33}},{"path":"docs/team/qz1004.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"title: Qi Zhen\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"### Project: OutBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"OutBook is a desktop application designed for freelance insurance agents, enabling them to effectively organize and oversee their extensive contacts and meeting schedules. It is optimised for Command Line Interface (CLI) and aims to significantly reduce the time needed for organizational tasks.","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"My contributions to the project are listed below","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"- **New Feature**: Added a command (`addmc`) that allows user to add an attendee to a meeting. (Pull request [#55](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/55))","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"  - What it does: Allows the user to add a person as an attendee to a specified meeting","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"  - Justification: This feature allows the user to keep track of who will be attending each meeting, to ensure the user is aware of and addresses their needs.","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"- **New Feature**: Added the ability to add and edit the `Status` of a contact (Pull Request [#72](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/72))","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"  - What it does: Allows the user to specify which stage of the insurance sales process each of their contact is at, if applicable. A fixed list of available statuses tailored for insurance agents is provided.","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"  - Justification: Insurance agents typically have to address different issues depending on which stage of the sales process their client is at. Hence, the Status field is created to help users segment their contacts systematically and update each contact\u0027s status easily.","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dqz1004\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"- **Project management**:","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"  - Managed milestone `v1.1` on GitHub","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"  - Contributed issues","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"  - Reviewed and merged PRs","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"  - Updated site-wide settings","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"  - Enabled Gradle assertions","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"  - Improved `findc` to search for phone, email, last contacted time, status and tags in addition to name (Pull request [#93](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/93))","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"  - Modified `LastContactedTime` field such that it becomes optional (Pull request [#93](https://github.com/AY2324S1-CS2103T-F12-4/tp/pull/93))","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"  - User Guide:","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"    - Updated documentation for `addc`, `findc` and `addmc`","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"    - Added table of contents","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    - Added tables to summarise contact and meeting parameters","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"    - Documented the sections \u0027Key Features\u0027 and \u0027Navigating OutBook\u0027","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"    - General editing to ensure uniformity and coherence","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"  - Developer Guide:","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"    - Added implementation details of the `addmc` command","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"    - Added implementation details of the `Status` field for `Person`","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"howenc":2,"jason-raiin":15,"qz1004":27,"LoMaply":2}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"juzzztinsoong"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/outbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-11-06"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":398,"juzzztinsoong":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"        AppParameters appParameters \u003d AppParameters.parse(this.getParameters());","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":1,"-":183,"juzzztinsoong":1}},{"path":"src/main/java/seedu/address/commons/util/DateTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":" * Helper functions for handling LocalDateTime objects.","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"public class DateTimeUtil {","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd.MM.yyyy HHmm\");","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"    public static final DateTimeFormatter VERBOSE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy, HHmm\");","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"     * Returns a formatted string of the {@code dateTime} object.","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"    public static String format(LocalDateTime dateTime) {","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"        return dateTime.format(FORMATTER);","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"    /** */","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"    public static String verbose(LocalDateTime dateTime) {","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"        return dateTime.format(VERBOSE_FORMATTER);","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"     * Returns a parsed {@code LocalDateTime} object of {@code string}.","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"    public static LocalDateTime parse(String string) {","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"        return LocalDateTime.parse(string, FORMATTER);","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"jason-raiin":31}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"     * Returns true if {@code s} is an integer and false otherwise.","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"    public static boolean isNumeric(String s) {","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"            return true;","lastModifiedDate":"2023-11-05"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"            return false;","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jason-raiin":15,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    /** Returns an unmodifiable view of the filtered list of meetings */","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"     * Forwards viewed Person and Meeting to UI from Logic.","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"    Pair\u003cPerson, Meeting\u003e getViewedItems();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"howenc":3,"-":50,"LoMaply":7}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"LoMaply"},"content":"    public Pair\u003cPerson, Meeting\u003e getViewedItems() {","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"LoMaply"},"content":"        return model.getViewedItems();","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"howenc":7,"-":86,"LoMaply":6}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"    // success messages","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"    public static final String MESSAGE_PERSON_VIEWED_OVERVIEW \u003d \"Listing details for %s!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"    public static final String MESSAGE_MEETING_VIEWED_OVERVIEW \u003d \"Listing details for meeting: %s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_MEETINGS_LISTED_OVERVIEW \u003d \"%1$d meetings listed!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"    // command parsing error messages","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d \"Multiple values specified for the following \"","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"            + \"single-valued field(s): \";","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_INVALID_FIELDS \u003d \"Invalid parameters provided.\";","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"    // index parsing error messages","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_INVALID_INDEX_FORMAT \u003d \"Index must be a positive integer.\";","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_MISSING_INDEX \u003d \"Index is a required parameter.\";","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_TOO_MANY_INDEXES \u003d \"Too many index arguments provided.\";","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"    // index value error messages","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_INVALID_ATTENDEE_INDEX \u003d \"The attendee index provided is invalid!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        Set\u003cString\u003e duplicateFields \u003d Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"                .append(\"; Last Contacted Time: \")","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"                .append(person.getLastContactedTime())","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"                .append(person.getStatus())","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"                .append(person.getRemark())","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"    public static String format(Meeting meeting) {","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        builder.append(meeting.getTitle())","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"                .append(\"; Location: \")","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                .append(meeting.getLocation())","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"                .append(\"; Start: \")","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"                .append(meeting.getStart())","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"                .append(\"; End: \")","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"                .append(meeting.getEnd())","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"                .append(\"; Attendees: \");","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        meeting.getAttendees().forEach(builder::append);","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"        builder.append(\"; Completed: \")","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"                .append(meeting.getStatus());","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"howenc":18,"jason-raiin":22,"-":42,"juzzztinsoong":4,"qz1004":2,"LoMaply":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTTIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"    public static final String COMMAND_WORD \u003d \"addc\";","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"            + \"[\" + PREFIX_LASTTIME + \"LAST CONTACTED TIME] \"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"            + PREFIX_LASTTIME + \"02.10.2023 1000 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"howenc":1,"jason-raiin":1,"-":80,"juzzztinsoong":2,"qz1004":3,"LoMaply":2}},{"path":"src/main/java/seedu/address/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.Main;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":" * Adds a meeting to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    public static final String COMMAND_WORD \u003d \"addm\";","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a meeting to the address book. \"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"            + PREFIX_START + \"START \"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"            + PREFIX_END + \"END \"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"            + PREFIX_TITLE + \"Meeting with friends \"","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"            + PREFIX_LOCATION + \"Starbucks \"","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"            + PREFIX_START + \"18.10.2023 1200 \"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"            + PREFIX_END + \"18.10.2023 1400 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"            + PREFIX_TAG + \"work \"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"            + PREFIX_TAG + \"impt \";","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New meeting added: %1$s\";","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book\";","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_ATTENDEE_NOT_FOUND \u003d \"Meeting attendee is not found in Persons list\";","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    private final Meeting toAdd;","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    public AddMeetingCommand(Meeting meeting) {","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        toAdd \u003d meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        logger.info(\"Begin AddMeetingCommand execution\");","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        if (model.hasMeeting(toAdd)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        for (Attendee attendee : toAdd.getAttendees()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"            if (!model.hasName(attendee.getAttendeeName())) {","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"                throw new CommandException(MESSAGE_ATTENDEE_NOT_FOUND);","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        model.addMeeting(toAdd);","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof AddMeetingCommand)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        AddMeetingCommand otherAddMeetingCommand \u003d (AddMeetingCommand) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        return toAdd.equals(otherAddMeetingCommand.toAdd);","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"                .toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"howenc":90,"jason-raiin":6,"juzzztinsoong":1}},{"path":"src/main/java/seedu/address/logic/commands/AddMeetingContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":" * Adds a Person to the Attendee list of a Meeting","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"public class AddMeetingContactCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"    public static final String COMMAND_WORD \u003d \"addmc\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"    public static final int EXPECTED_INDEXES \u003d 2;","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"            + \": Adds the contact indicated by the contact index to the attendees list of the meeting \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"            + \"indicated by the meeting index.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"            + \"Parameters: MEETING_INDEX ATTENDEE_INDEX \\n\" + \"Example: \" + COMMAND_WORD + \" 1\" + \" 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"    public static final String MESSAGE_ADD_MEETING_CONTACT_SUCCESS \u003d \"Added Person (%1$s) to Meeting (%2$s)\";","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"    public static final String MESSAGE_DUPLICATE_ATTENDEE \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"            \"(%1$s) is already in the attendee list of this meeting (%2$s)\";","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"    private final Index meetingIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"    private final Index contactIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"     * Constructor for {@code AddMeetingContactCommand}","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    public AddMeetingContactCommand(Index meetingIndex, Index contactIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"        this.meetingIndex \u003d meetingIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"        this.contactIndex \u003d contactIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"        if (meetingIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"        Meeting meeting \u003d lastShownList.get(meetingIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"        List\u003cPerson\u003e contactList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"        if (contactIndex.getZeroBased() \u003e\u003d contactList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"        Person personToAdd \u003d contactList.get(contactIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"        Attendee attendeeToAdd \u003d new Attendee(personToAdd.getName().toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"        Set\u003cAttendee\u003e attendeeList \u003d meeting.getAttendees();","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"        if (attendeeList.contains(attendeeToAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_ATTENDEE,","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"                    attendeeToAdd.getAttendeeName(), meeting.getTitle()));","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"        Meeting updatedMeeting \u003d addAttendee(meeting, attendeeToAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"        model.setMeeting(meeting, updatedMeeting);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"qz1004"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_MEETING_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"                attendeeToAdd.getAttendeeName(), meeting.getTitle()));","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"     * Creates a new {@code Meeting} that has attendee list with the specified attendee added.","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"qz1004"},"content":"    static Meeting addAttendee(Meeting meeting, Attendee attendeeToAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"qz1004"},"content":"        Set\u003cAttendee\u003e updatedAttendees \u003d new LinkedHashSet\u003c\u003e(meeting.getAttendees());","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"qz1004"},"content":"        updatedAttendees.add(attendeeToAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"qz1004"},"content":"        Meeting updatedMeeting \u003d new Meeting(meeting.getTitle(), meeting.getLocation(), meeting.getStart(),","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"                meeting.getEnd(), updatedAttendees, meeting.getTags(), meeting.getStatus());","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"qz1004"},"content":"        return updatedMeeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"qz1004"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"qz1004"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"qz1004"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"qz1004"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"qz1004"},"content":"        if (!(other instanceof AddMeetingContactCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"qz1004"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"qz1004"},"content":"        AddMeetingContactCommand otherCommand \u003d (AddMeetingContactCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"qz1004"},"content":"        return meetingIndex.equals(otherCommand.meetingIndex)","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 contactIndex.equals(otherCommand.contactIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"qz1004"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"qz1004"},"content":"        return new ToStringBuilder(this).add(\"meetingIndex\", meetingIndex).add(\"contactIndex\", contactIndex)","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"qz1004"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jason-raiin":2,"qz1004":108}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"        model.setViewedMeetingIndex(null);","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"        model.setViewedPersonIndex(null);","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":23,"LoMaply":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"    public static final String COMMAND_WORD \u003d \"deletec\";","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"    public static final int EXPECTED_INDEXES \u003d 1;","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"        model.setViewedPersonIndex(null);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        model.deleteAttendee(personToDelete.getName().fullName);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"howenc":1,"jason-raiin":2,"-":68,"LoMaply":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":" * Deletes a meeting from the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String COMMAND_WORD \u003d \"deletem\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"    public static final int EXPECTED_INDEXES \u003d 1;","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String MESSAGE_DELETE_MEETING_SUCCESS \u003d \"Meeting deleted: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"            + \": Deletes the meeting identified by the index number used in the displayed meetings list.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    public DeleteMeetingCommand(Index targetIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"        model.setViewedMeetingIndex(null);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        Meeting meetingToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"        model.deleteMeeting(meetingToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEETING_SUCCESS, Messages.format(meetingToDelete)));","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"        if (!(other instanceof DeleteMeetingCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"        DeleteMeetingCommand otherDeleteMeetingCommand \u003d (DeleteMeetingCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"        return targetIndex.equals(otherDeleteMeetingCommand.targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jason-raiin":1,"juzzztinsoong":69,"LoMaply":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTTIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"    public static final String COMMAND_WORD \u003d \"editc\";","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"    public static final int EXPECTED_INDEXES \u003d 1;","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"            + \"[\" + PREFIX_LASTTIME + \"LAST CONTACTED TIME] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"        Model checkModel \u003d new ModelManager();","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"        checkModel.setAddressBook(model.getAddressBook());","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"        checkModel.deletePerson(personToEdit);","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"        if (checkModel.hasPerson(editedPerson)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"        model.updateAttendee(personToEdit.getName().fullName, editedPerson.getName().fullName);","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"juzzztinsoong"},"content":"    static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"juzzztinsoong"},"content":"        LocalDateTime updatedLastContactedTime \u003d editPersonDescriptor.getLastContactedTime()","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"juzzztinsoong"},"content":"                .orElse(personToEdit.getLastContactedTime());","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"qz1004"},"content":"        Status updatedStatus \u003d editPersonDescriptor.getStatus().orElse(personToEdit.getStatus());","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"juzzztinsoong"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"juzzztinsoong"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedLastContactedTime, updatedStatus,","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"juzzztinsoong"},"content":"                updatedRemark, updatedTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"juzzztinsoong"},"content":"        private LocalDateTime lastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"qz1004"},"content":"        private Status status;","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"juzzztinsoong"},"content":"        private Remark remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"juzzztinsoong"},"content":"            setLastContactedTime(toCopy.lastContactedTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"qz1004"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"juzzztinsoong"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"juzzztinsoong"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, lastContactedTime, status, remark, tags);","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"juzzztinsoong"},"content":"        public void setLastContactedTime(LocalDateTime lastContactedTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"juzzztinsoong"},"content":"            this.lastContactedTime \u003d lastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"juzzztinsoong"},"content":"        public Optional\u003cLocalDateTime\u003e getLastContactedTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"juzzztinsoong"},"content":"            return Optional.ofNullable(lastContactedTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"qz1004"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"qz1004"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"qz1004"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"qz1004"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"juzzztinsoong"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-10-02"},{"lineNumber":225,"author":{"gitId":"juzzztinsoong"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":228,"author":{"gitId":"juzzztinsoong"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-10-02"},{"lineNumber":229,"author":{"gitId":"juzzztinsoong"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-10-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":264,"author":{"gitId":"juzzztinsoong"},"content":"                    \u0026\u0026 Objects.equals(lastContactedTime, otherEditPersonDescriptor.lastContactedTime)","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"juzzztinsoong"},"content":"                    .add(\"lastContactedTime\", lastContactedTime)","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"qz1004"},"content":"                    .add(\"status\", status)","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"juzzztinsoong"},"content":"                    .add(\"remark\", remark)","lastModifiedDate":"2023-10-02"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"howenc":1,"jason-raiin":8,"-":225,"juzzztinsoong":30,"qz1004":17}},{"path":"src/main/java/seedu/address/logic/commands/EditMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.MeetingStatus;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":" * Edits the details (except attendees) of an existing meeting in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"public class EditMeetingCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"    public static final String COMMAND_WORD \u003d \"editm\";","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"    public static final int EXPECTED_INDEXES \u003d 1;","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the meeting identified \"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"            + \"by the index number used in the displayed meeting list. \"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"            + \"[\" + PREFIX_START + \"START] \"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"            + \"[\" + PREFIX_END + \"END] \"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"            + PREFIX_LOCATION + \"Mall \"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"            + PREFIX_START + \"18.09.2023 1000\";","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"    public static final String MESSAGE_EDIT_MEETING_SUCCESS \u003d \"Edited Meeting: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"    private final Index index;","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"LoMaply"},"content":"     * @param index of the meeting in the filtered meeting list to edit","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"     * @param editMeetingDescriptor details to edit the meeting with","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingCommand(Index index, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"LoMaply"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"LoMaply"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"LoMaply"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"LoMaply"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"LoMaply"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"LoMaply"},"content":"        Meeting meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"LoMaply"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meetingToEdit, editMeetingDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"LoMaply"},"content":"        if (!meetingToEdit.isSameMeeting(editedMeeting) \u0026\u0026 model.hasMeeting(editedMeeting)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"LoMaply"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"LoMaply"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"LoMaply"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"LoMaply"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEETING_SUCCESS, Messages.format(editedMeeting)));","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"LoMaply"},"content":"     * Creates and returns a {@code Meeting} with the details of {@code meetingToEdit}","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"LoMaply"},"content":"     * edited with {@code editMeetingDescriptor}.","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"LoMaply"},"content":"    static Meeting createEditedMeeting(Meeting meetingToEdit,","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"LoMaply"},"content":"                                       EditMeetingDescriptor editMeetingDescriptor) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"LoMaply"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"LoMaply"},"content":"        Title updatedTitle \u003d editMeetingDescriptor.getTitle().orElse(meetingToEdit.getTitle());","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"LoMaply"},"content":"        Location updatedLocation \u003d editMeetingDescriptor.getLocation().orElse(meetingToEdit.getLocation());","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"LoMaply"},"content":"        LocalDateTime updatedStart \u003d editMeetingDescriptor.getStart().orElse(meetingToEdit.getStart());","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"LoMaply"},"content":"        LocalDateTime updatedEnd \u003d editMeetingDescriptor.getEnd().orElse(meetingToEdit.getEnd());","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"LoMaply"},"content":"        Set\u003cAttendee\u003e attendees \u003d meetingToEdit.getAttendees();","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"LoMaply"},"content":"        Set\u003cTag\u003e updatedTags \u003d editMeetingDescriptor.getTags().orElse(meetingToEdit.getTags());","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"        MeetingStatus status \u003d meetingToEdit.getStatus();","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"LoMaply"},"content":"        if (!MeetingTime.isValidMeetingTime(updatedStart, updatedEnd)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"LoMaply"},"content":"            throw new CommandException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"        return new Meeting(updatedTitle, updatedLocation, updatedStart, updatedEnd, attendees, updatedTags, status);","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"LoMaply"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"LoMaply"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"LoMaply"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"LoMaply"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"LoMaply"},"content":"        if (!(other instanceof EditMeetingCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"LoMaply"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand otherEditMeetingCommand \u003d (EditMeetingCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"LoMaply"},"content":"        return index.equals(otherEditMeetingCommand.index)","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"LoMaply"},"content":"                \u0026\u0026 editMeetingDescriptor.equals(otherEditMeetingCommand.editMeetingDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"LoMaply"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"LoMaply"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"LoMaply"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"LoMaply"},"content":"                .add(\"editMeetingDescriptor\", editMeetingDescriptor)","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"LoMaply"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"LoMaply"},"content":"     * Stores the details to edit the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"LoMaply"},"content":"     * corresponding field value of the meeting.","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"LoMaply"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"LoMaply"},"content":"        private Title title;","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"LoMaply"},"content":"        private Location location;","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"LoMaply"},"content":"        private LocalDateTime start;","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"LoMaply"},"content":"        private LocalDateTime end;","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"LoMaply"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"LoMaply"},"content":"        public EditMeetingDescriptor() {}","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"LoMaply"},"content":"        /**","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"LoMaply"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"LoMaply"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"LoMaply"},"content":"         */","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"LoMaply"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"LoMaply"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"LoMaply"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"LoMaply"},"content":"            setStart(toCopy.start);","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"LoMaply"},"content":"            setEnd(toCopy.end);","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"LoMaply"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"LoMaply"},"content":"        /**","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"LoMaply"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"LoMaply"},"content":"         */","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"LoMaply"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"LoMaply"},"content":"            return CollectionUtil.isAnyNonNull(title, location, start, end, tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"LoMaply"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"LoMaply"},"content":"            this.title \u003d title;","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"LoMaply"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"LoMaply"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"LoMaply"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"LoMaply"},"content":"            this.location \u003d location;","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"LoMaply"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"LoMaply"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"LoMaply"},"content":"        public void setStart(LocalDateTime start) {","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"LoMaply"},"content":"            this.start \u003d start;","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"LoMaply"},"content":"        public Optional\u003cLocalDateTime\u003e getStart() {","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"LoMaply"},"content":"            return Optional.ofNullable(start);","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"LoMaply"},"content":"        public void setEnd(LocalDateTime end) {","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"LoMaply"},"content":"            this.end \u003d end;","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"LoMaply"},"content":"        public Optional\u003cLocalDateTime\u003e getEnd() {","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"LoMaply"},"content":"            return Optional.ofNullable(end);","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"LoMaply"},"content":"        /**","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"LoMaply"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"LoMaply"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"LoMaply"},"content":"         */","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"LoMaply"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"LoMaply"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"LoMaply"},"content":"        /**","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"LoMaply"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"LoMaply"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"LoMaply"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"LoMaply"},"content":"         */","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"LoMaply"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"LoMaply"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"LoMaply"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"LoMaply"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"LoMaply"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"LoMaply"},"content":"                return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"LoMaply"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"LoMaply"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"LoMaply"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"LoMaply"},"content":"                return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"LoMaply"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":231,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":232,"author":{"gitId":"LoMaply"},"content":"            EditMeetingDescriptor otherEditMeetingDescriptor \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":233,"author":{"gitId":"LoMaply"},"content":"            return Objects.equals(title, otherEditMeetingDescriptor.title)","lastModifiedDate":"2023-10-19"},{"lineNumber":234,"author":{"gitId":"LoMaply"},"content":"                    \u0026\u0026 Objects.equals(location, otherEditMeetingDescriptor.location)","lastModifiedDate":"2023-10-19"},{"lineNumber":235,"author":{"gitId":"LoMaply"},"content":"                    \u0026\u0026 Objects.equals(start, otherEditMeetingDescriptor.start)","lastModifiedDate":"2023-10-19"},{"lineNumber":236,"author":{"gitId":"LoMaply"},"content":"                    \u0026\u0026 Objects.equals(end, otherEditMeetingDescriptor.end)","lastModifiedDate":"2023-10-19"},{"lineNumber":237,"author":{"gitId":"LoMaply"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditMeetingDescriptor.tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":238,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":239,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":240,"author":{"gitId":"LoMaply"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":241,"author":{"gitId":"LoMaply"},"content":"        public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"LoMaply"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"LoMaply"},"content":"                    .add(\"title\", title)","lastModifiedDate":"2023-10-19"},{"lineNumber":244,"author":{"gitId":"LoMaply"},"content":"                    .add(\"location\", location)","lastModifiedDate":"2023-10-19"},{"lineNumber":245,"author":{"gitId":"LoMaply"},"content":"                    .add(\"start\", start)","lastModifiedDate":"2023-10-19"},{"lineNumber":246,"author":{"gitId":"LoMaply"},"content":"                    .add(\"end\", end)","lastModifiedDate":"2023-10-19"},{"lineNumber":247,"author":{"gitId":"LoMaply"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-19"},{"lineNumber":248,"author":{"gitId":"LoMaply"},"content":"                    .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":249,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":250,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":251,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jason-raiin":4,"LoMaply":247}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.GeneralPersonPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"    public static final String COMMAND_WORD \u003d \"findc\";","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"            + \": Finds all contacts whose specified fields (except remarks) contain any of \"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"            + \"Parameters: n/KEYWORDS p/KEYWORDS e/KEYWORDS l/LOCALDATETIME s/KEYWORDS t/KEYWORDS\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice l/10.10.2023 0900 s/Prospective t/Health\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"    private final GeneralPersonPredicate predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"     * @param predicate The predicate that will be used by the FindCommand object.","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"    public FindCommand(GeneralPersonPredicate predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"        model.setViewedPersonIndex(null);","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jason-raiin":1,"-":51,"qz1004":12,"LoMaply":1}},{"path":"src/main/java/seedu/address/logic/commands/FindMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import seedu.address.Main;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.GeneralMeetingPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":" * Finds and lists all meetings in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"public class FindMeetingCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public static final String COMMAND_WORD \u003d \"findm\";","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all meetings that contain at least 1 \"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"            + \"specified KEYWORD in all of the different fields, as well as stating the window of time they \"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"            + \"are specifying, and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"            + \"If no KEYWORD is specified for that field, the find will not be affected that field.\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"            + \"Parameters: m/KEYWORDS a/KEYWORDS n/KEYWORDS t/KEYWORDS s/LOCALDATETIME e/LOCALDATETIME\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"            + \"Example: \" + COMMAND_WORD + \" m/CS2103T Meeting s/01.09.2023 1000 e/30.09.2023 1200\";","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    private final GeneralMeetingPredicate predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"     * Constructs a FindMeetingCommand object.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"     * @param predicate The predicate that will be used by the FindMeetingCommand object.","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    public FindMeetingCommand(GeneralMeetingPredicate predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        logger.info(\"Begin FindMeetingCommand execution\");","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"        model.setViewedMeetingIndex(null);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        model.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"                String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, model.getFilteredMeetingList().size()));","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof FindMeetingCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand otherFindMeetingCommand \u003d (FindMeetingCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        return predicate.equals(otherFindMeetingCommand.predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"howenc":69,"jason-raiin":1,"LoMaply":2}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"    public static final String COMMAND_WORD \u003d \"listc\";","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jason-raiin":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/ListMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"public class ListMeetingCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    public static final String COMMAND_WORD \u003d \"listm\";","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all meetings\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"howenc":24}},{"path":"src/main/java/seedu/address/logic/commands/MarkMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.MeetingStatus;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":" * Marks a meeting as complete.","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"public class MarkMeetingCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"    public static final int EXPECTED_INDEXES \u003d 1;","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_MARK_MEETING_SUCCESS \u003d \"Meeting marked as complete: %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_MEETING_ALREADY_COMPLETE \u003d \"Meeting has already been marked as complete.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"            + \": Marks the meeting identified by the index number used in the displayed meetings list as complete.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\" + \"Example: \" + COMMAND_WORD + \"1\";","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"    public MarkMeetingCommand(Index targetIndex) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"        Meeting meetingToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"        Meeting updatedMeeting \u003d markMeeting(meetingToMark);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"        model.setMeeting(meetingToMark, updatedMeeting);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        Iterator\u003cAttendee\u003e attendeeIterator \u003d meetingToMark.getAttendees().iterator();","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        while (attendeeIterator.hasNext()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"            Attendee attendee \u003d attendeeIterator.next();","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"            Person person \u003d model.getPerson(attendee.getAttendeeName());","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"            Person updatedPerson \u003d updateLastContactedTime(person, meetingToMark.getEnd());","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"            model.setPerson(person, updatedPerson);","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_MEETING_SUCCESS, Messages.format(updatedMeeting)));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"    static Meeting markMeeting(Meeting meeting) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"        if (meeting.getStatus().isComplete) {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"            throw new CommandException(MESSAGE_MEETING_ALREADY_COMPLETE);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"        Meeting markedMeeting \u003d new Meeting(meeting.getTitle(), meeting.getLocation(), meeting.getStart(),","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"                meeting.getEnd(), meeting.getAttendees(), meeting.getTags(), new MeetingStatus(true));","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"        return markedMeeting;","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"    static Person updateLastContactedTime(Person person, LocalDateTime lastContactedTime) {","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"        if (lastContactedTime.isBefore(person.getLastContactedTime())) {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"            return person;","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        Person updatedPerson \u003d new Person(person.getName(), person.getPhone(), person.getEmail(), lastContactedTime,","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"                person.getStatus(), person.getRemark(), person.getTags());","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"        return updatedPerson;","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"        if (!(other instanceof MarkMeetingCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"        MarkMeetingCommand otherMarkMeetingCommand \u003d (MarkMeetingCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"        return targetIndex.equals(otherMarkMeetingCommand.targetIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jason-raiin"},"content":"        return new ToStringBuilder(this).add(\"targetIndex\", targetIndex).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jason-raiin":106}},{"path":"src/main/java/seedu/address/logic/commands/RemoveMeetingContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":" * Removes a Person from the Attendee list of a Meeting","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"public class RemoveMeetingContactCommand extends Command {","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"    public static final String COMMAND_WORD \u003d \"rmmc\";","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"    public static final int EXPECTED_INDEXES \u003d 2;","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"            + \": Removes the attendee indicated by the attendee index in the attendees list of the meeting \"","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"            + \"indicated by the meeting index.\\n\"","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"            + \"Parameters: MEETING_INDEX ATTENDEE_INDEX \\n\" + \"Example: \" + COMMAND_WORD + \" 1\" + \" 1\";","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_REMOVE_MEETING_CONTACT_SUCCESS \u003d \"Removed Person (%1$s) from Meeting (%2$s)\";","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"    private final Index meetingIndex;","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"    private final Index attendeeIndex;","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"     * Constructior for {@code RemoveMeetingContactCommand}","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"    public RemoveMeetingContactCommand(Index meetingIndex, Index attendeeIndex) {","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"        this.meetingIndex \u003d meetingIndex;","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"        this.attendeeIndex \u003d attendeeIndex;","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"        if (meetingIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"        Meeting meeting \u003d lastShownList.get(meetingIndex.getZeroBased());","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"        Set\u003cAttendee\u003e attendees \u003d meeting.getAttendees();","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"        if (attendeeIndex.getZeroBased() \u003e\u003d attendees.size()) {","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ATTENDEE_INDEX);","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"        Attendee attendeeToRemove \u003d meeting.getAttendee(attendeeIndex);","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"        Meeting updatedMeeting \u003d removeAttendee(meeting, attendeeToRemove);","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"        model.setMeeting(meeting, updatedMeeting);","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_MEETING_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-09"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"                attendeeToRemove.getAttendeeName(), meeting.getTitle()));","lastModifiedDate":"2023-10-09"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"     * Creates a new {@code Meeting} that has attendee list with the specified attendee removed.","lastModifiedDate":"2023-10-09"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"    static Meeting removeAttendee(Meeting meeting, Attendee attendeeToRemove) {","lastModifiedDate":"2023-10-09"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        Set\u003cAttendee\u003e updatedAttendees \u003d new LinkedHashSet\u003c\u003e(meeting.getAttendees());","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"        updatedAttendees.remove(attendeeToRemove);","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"        Meeting updatedMeeting \u003d new Meeting(meeting.getTitle(), meeting.getLocation(), meeting.getStart(),","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"                meeting.getEnd(), updatedAttendees, meeting.getTags(), meeting.getStatus());","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        return updatedMeeting;","lastModifiedDate":"2023-10-09"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-09"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-09"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"            return true;","lastModifiedDate":"2023-10-09"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"        if (!(other instanceof RemoveMeetingContactCommand)) {","lastModifiedDate":"2023-10-09"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"            return false;","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand otherRemoveCommand \u003d (RemoveMeetingContactCommand) other;","lastModifiedDate":"2023-10-09"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"        return meetingIndex.equals(otherRemoveCommand.meetingIndex)","lastModifiedDate":"2023-10-09"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"                \u0026\u0026 attendeeIndex.equals(otherRemoveCommand.attendeeIndex);","lastModifiedDate":"2023-10-09"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-09"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"    public String toString() {","lastModifiedDate":"2023-10-09"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"        return new ToStringBuilder(this).add(\"meetingIndex\", meetingIndex).add(\"attendeeIndex\", attendeeIndex)","lastModifiedDate":"2023-10-09"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"                .toString();","lastModifiedDate":"2023-10-09"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"jason-raiin":98}},{"path":"src/main/java/seedu/address/logic/commands/ViewContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":" * Views detailed information of person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"public class ViewContactCommand extends Command {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"    public static final String COMMAND_WORD \u003d \"viewc\";","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"    public static final int EXPECTED_INDEXES \u003d 1;","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Views detailed information of the person identified \"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"     * @param index of the person in the filtered person list to view detailed information","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"    public ViewContactCommand(Index index) {","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"        model.setViewedPersonIndex(targetIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_PERSON_VIEWED_OVERVIEW, personToView.getName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"        // instance handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"        if (!(other instanceof ViewContactCommand)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"        ViewContactCommand otherViewContactCommand \u003d (ViewContactCommand) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"LoMaply"},"content":"        return targetIndex.equals(otherViewContactCommand.targetIndex);","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"                .toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"jason-raiin":1,"LoMaply":71}},{"path":"src/main/java/seedu/address/logic/commands/ViewMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":" * Views detailed information of meeting identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"public class ViewMeetingCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"    public static final String COMMAND_WORD \u003d \"viewm\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"    public static final int EXPECTED_INDEXES \u003d 1;","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Views detailed information of the meeting identified \"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"            + \"by the index number used in the displayed meeting list.\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"     * @param index of the meeting in the filtered meeting list to view detailed information","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"    public ViewMeetingCommand(Index index) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"        Meeting meetingToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"        model.setViewedMeetingIndex(targetIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MEETING_VIEWED_OVERVIEW, meetingToView.getTitle()));","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"        // instance handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"        if (!(other instanceof ViewMeetingCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"        ViewMeetingCommand otherViewMeetingCommand \u003d (ViewMeetingCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"LoMaply"},"content":"        return targetIndex.equals(otherViewMeetingCommand.targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jason-raiin":1,"LoMaply":71}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTTIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"                    PREFIX_LASTTIME, PREFIX_STATUS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"                throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LASTTIME,","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"                    PREFIX_STATUS, PREFIX_REMARK);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"            LocalDateTime lastContactedTime \u003d ParserUtil","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"                    .parseContactTime(argMultimap.getValue(PREFIX_LASTTIME).orElse(\"\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"            Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).orElse(\"\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"            Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"            Person person \u003d new Person(name, phone, email, lastContactedTime, status, remark, tagList);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(AddCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jason-raiin":11,"-":50,"juzzztinsoong":8,"qz1004":4}},{"path":"src/main/java/seedu/address/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.Main;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.MeetingStatus;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    public AddMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"            logger.info(\"Begin AddMeetingCommand Parse\");","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_LOCATION, PREFIX_START,","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"                    PREFIX_END, PREFIX_TAG);","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_LOCATION, PREFIX_START, PREFIX_END)","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"                throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TITLE, PREFIX_LOCATION, PREFIX_START, PREFIX_END);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"            Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"            Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"            LocalDateTime start \u003d ParserUtil.parseMeetingTime(argMultimap.getValue(PREFIX_START).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"            LocalDateTime end \u003d ParserUtil.parseMeetingTime(argMultimap.getValue(PREFIX_END).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"            if (!MeetingTime.isValidMeetingTime(start, end)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"                throw new ParseException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"            Set\u003cAttendee\u003e attendeeList \u003d ParserUtil.parseAttendees(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"            MeetingStatus status \u003d new MeetingStatus(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"            Meeting meeting \u003d new Meeting(title, location, start, end, attendeeList, tagList, status);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"            return new AddMeetingCommand(meeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(AddMeetingCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"howenc":60,"jason-raiin":17,"juzzztinsoong":2}},{"path":"src/main/java/seedu/address/logic/parser/AddMeetingContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"import seedu.address.logic.commands.AddMeetingContactCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":" * Parses input arguments and creates a new AddMeetingContactCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"public class AddMeetingContactCommandParser implements Parser\u003cAddMeetingContactCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"     * AddMeetingContactCommand and returns a AddMeetingContactCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"     * for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"    public AddMeetingContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"        List\u003cIndex\u003e indexes;","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"            indexes \u003d ParserUtil.parseIndexes(args, AddMeetingContactCommand.EXPECTED_INDEXES);","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(AddMeetingContactCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"        Index meetingIndex \u003d indexes.get(0);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"        Index contactIndex \u003d indexes.get(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"        return new AddMeetingContactCommand(meetingIndex, contactIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jason-raiin":5,"qz1004":30}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.ParserUtil.verifyNoArgs;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"import seedu.address.logic.commands.AddMeetingContactCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.ListMeetingCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.MarkMeetingCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.RemoveMeetingContactCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.ViewContactCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"            verifyNoArgs(arguments);","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"            verifyNoArgs(arguments);","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        case ListMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"            verifyNoArgs(arguments);","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"            return new ListMeetingCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"            verifyNoArgs(arguments);","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"            verifyNoArgs(arguments);","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":99,"author":{"gitId":"LoMaply"},"content":"        case ViewContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"LoMaply"},"content":"            return new ViewContactCommandParser().parse(arguments);","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"LoMaply"},"content":"        case ViewMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"LoMaply"},"content":"            return new ViewMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"juzzztinsoong"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"juzzztinsoong"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"juzzztinsoong"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"juzzztinsoong"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"LoMaply"},"content":"        case EditMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"LoMaply"},"content":"            return new EditMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"jason-raiin"},"content":"        case RemoveMeetingContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-09"},{"lineNumber":115,"author":{"gitId":"jason-raiin"},"content":"            return new RemoveMeetingContactCommandParser().parse(arguments);","lastModifiedDate":"2023-10-09"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"qz1004"},"content":"        case AddMeetingContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"qz1004"},"content":"            return new AddMeetingContactCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"        case FindMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"            return new FindMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"jason-raiin"},"content":"        case MarkMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"jason-raiin"},"content":"            return new MarkMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"howenc":10,"jason-raiin":14,"-":85,"qz1004":4,"juzzztinsoong":7,"LoMaply":12}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public static final Prefix PREFIX_END \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"    public static final Prefix PREFIX_LASTTIME \u003d new Prefix(\"lc/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"howenc":4,"-":15,"qz1004":1,"LoMaply":3}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"        Index index;","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"            index \u003d ParserUtil.parseIndexes(args, DeleteCommand.EXPECTED_INDEXES).get(0);","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(DeleteCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jason-raiin":5,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":" * Parses input arguments and creates a new DeleteMeetingCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"        Index index;","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"            index \u003d ParserUtil.parseIndexes(args, DeleteMeetingCommand.EXPECTED_INDEXES).get(0);","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(DeleteMeetingCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"        return new DeleteMeetingCommand(index);","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jason-raiin":5,"juzzztinsoong":23}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTTIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"                    PREFIX_LASTTIME, PREFIX_STATUS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"            Index index \u003d ParserUtil.parseIndexes(argMultimap.getPreamble(), EditCommand.EXPECTED_INDEXES).get(0);","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_STATUS);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"            if (argMultimap.getValue(PREFIX_LASTTIME).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"                editPersonDescriptor.setLastContactedTime(ParserUtil.parseContactTime(","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"                        argMultimap.getValue(PREFIX_LASTTIME).get()));","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"            if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"                editPersonDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"            if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"                editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(EditCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jason-raiin":6,"-":72,"juzzztinsoong":8,"qz1004":4,"LoMaply":1}},{"path":"src/main/java/seedu/address/logic/parser/EditMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":" * Parses input arguments and creates a new EditMeetingCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"public class EditMeetingCommandParser implements Parser\u003cEditMeetingCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"     * EditMeetingCommand and returns an EditMeetingCommand object for execution.","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"            requireNonNull(args);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_LOCATION, PREFIX_START,","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"                    PREFIX_END, PREFIX_TAG);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"            Index index \u003d ParserUtil.parseIndexes(argMultimap.getPreamble(), EditMeetingCommand.EXPECTED_INDEXES)","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"                    .get(0);","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TITLE, PREFIX_LOCATION, PREFIX_START, PREFIX_END);","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"            EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"            if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"                editMeetingDescriptor.setTitle(ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get()));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"            if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"                editMeetingDescriptor","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"                        .setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"            if (argMultimap.getValue(PREFIX_START).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"                editMeetingDescriptor.setStart(ParserUtil.parseMeetingTime(argMultimap.getValue(PREFIX_START).get()));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"            if (argMultimap.getValue(PREFIX_END).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"                editMeetingDescriptor.setEnd(ParserUtil.parseMeetingTime(argMultimap.getValue(PREFIX_END).get()));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"            parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editMeetingDescriptor::setTags);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"            if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"LoMaply"},"content":"                throw new ParseException(EditMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"            return new EditMeetingCommand(index, editMeetingDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(EditMeetingCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"     * {@code tags} is non-empty. If {@code tags} contain only one element which is","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"     * an empty string, it will be parsed into a {@code Set\u003cTag\u003e} containing zero","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"     * tags.","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"LoMaply"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"LoMaply"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"LoMaply"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"LoMaply"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"LoMaply"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"LoMaply"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jason-raiin":15,"juzzztinsoong":2,"LoMaply":68}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTTIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"import seedu.address.Main;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.GeneralPersonPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.LastContactedTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"            logger.info(\"Begin FindCommand parse\");","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"            requireNonNull(args);","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"                    PREFIX_LASTTIME, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"            if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"                throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"                    PREFIX_LASTTIME, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"            logger.info(\"Begin creation of Meeting predicates\");","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"            String[] nameKeyWords \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"            String[] phoneValues \u003d argMultimap.getValue(PREFIX_PHONE).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"            String[] emailKeyWords \u003d argMultimap.getValue(PREFIX_EMAIL).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"            String[] statusKeyWords \u003d argMultimap.getValue(PREFIX_STATUS).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"            String[] tagKeyWords \u003d argMultimap.getValue(PREFIX_TAG).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"            LocalDateTime lastContacted \u003d LocalDateTime.MIN;","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"            if (argMultimap.getValue(PREFIX_LASTTIME).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"                lastContacted \u003d ParserUtil.parseContactTime(argMultimap.getValue(PREFIX_LASTTIME).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"                if (!LastContactedTime.isValidLastContactedTime(lastContacted)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"                    throw new ParseException(LastContactedTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"            GeneralPersonPredicate generalPersonPredicate \u003d new GeneralPersonPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"                    nameKeyWords,","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"                    phoneValues,","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"                    emailKeyWords,","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"                    lastContacted,","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"                    statusKeyWords,","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"                    tagKeyWords);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"            logger.info(\"All Person predicates created\");","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"            return new FindCommand(generalPersonPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(FindCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jason-raiin":7,"-":25,"qz1004":45}},{"path":"src/main/java/seedu/address/logic/parser/FindMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.Main;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.GeneralMeetingPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":" * Parses input arguments and creates a new FindMeetingCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"public class FindMeetingCommandParser implements Parser\u003cFindMeetingCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMeetingCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"     * and returns a FindMeetingCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    public FindMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"            logger.info(\"Begin FindMeetingCommand parse\");","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"            requireNonNull(args);","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_LOCATION, PREFIX_START,","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"                    PREFIX_END, PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"            if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"                throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TITLE, PREFIX_LOCATION, PREFIX_START,","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"                    PREFIX_END, PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"            logger.info(\"Begin creation of Meeting predicates\");","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"            String[] titleKeyWords \u003d argMultimap.getValue(PREFIX_TITLE).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"            String[] locationKeyWords \u003d argMultimap.getValue(PREFIX_LOCATION).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"            LocalDateTime start \u003d LocalDateTime.MIN;","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"            LocalDateTime end \u003d LocalDateTime.MAX;","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"            if (argMultimap.getValue(PREFIX_START).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_END).isEmpty()","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"                    || argMultimap.getValue(PREFIX_START).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_END).isPresent()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"                throw new ParseException(\"Please input both start and end times\");","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"            if (argMultimap.getValue(PREFIX_START).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_END).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"                start \u003d ParserUtil.parseMeetingTime(argMultimap.getValue(PREFIX_START).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                end \u003d ParserUtil.parseMeetingTime(argMultimap.getValue(PREFIX_END).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"                if (!MeetingTime.isValidMeetingTime(start, end) \u0026\u0026 start !\u003d null \u0026\u0026 end !\u003d null) {","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"                    throw new ParseException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"            String[] attendeeKeyWords \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"            String[] tagKeyWords \u003d argMultimap.getValue(PREFIX_TAG).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"            GeneralMeetingPredicate generalMeetingPredicate \u003d new GeneralMeetingPredicate(","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"                    titleKeyWords,","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"                    locationKeyWords,","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"                    start, end,","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"                    attendeeKeyWords,","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"                    tagKeyWords);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"            logger.info(\"All Meeting predicates created\");","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"            return new FindMeetingCommand(generalMeetingPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(FindMeetingCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"howenc":74,"jason-raiin":9}},{"path":"src/main/java/seedu/address/logic/parser/MarkMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.MarkMeetingCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":" * Parses input arguments and creates a new MarkMeetingCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"public class MarkMeetingCommandParser implements Parser\u003cMarkMeetingCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkMeetingCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"     * and returns a MarkMeetingCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"    public MarkMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"        Index index;","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"            index \u003d ParserUtil.parseIndexes(args, MarkMeetingCommand.EXPECTED_INDEXES).get(0);","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(MarkMeetingCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"        return new MarkMeetingCommand(index);","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jason-raiin":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_FIELDS;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_TOO_MANY_INDEXES;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.time.Month;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import java.time.Year;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.LastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":" * classes.","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"     * Checks if the arguments are empty.","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"     * @throws ParseException if arguments is not empty.","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"    public static void verifyNoArgs(String args) throws ParseException {","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(MESSAGE_INVALID_FIELDS);","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"     * and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"     *","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"     *                        unsigned integer).","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"        if (trimmedIndex.equals(\"\")) {","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(MESSAGE_MISSING_INDEX);","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_FORMAT);","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"     * Splits multiple {@code oneBasedIndexes} by whitespace and parses them into an","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"     * ArrayList of {@code Indexes} and returns it. Leading and trailing whitespaces","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"     * will be trimmed.","lastModifiedDate":"2023-10-09"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"     *","lastModifiedDate":"2023-10-09"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"     * @throws ParseException if any indexes are invalid (not non-zero unsigned integer)","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"     *                        or if there are too many indexes provided.","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"    public static List\u003cIndex\u003e parseIndexes(String oneBasedIndexes, int expectedIndexes) throws ParseException {","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"        assert expectedIndexes \u003e 0 : \"Expected indexes must be positive\";","lastModifiedDate":"2023-11-05"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"        String[] indexStrings \u003d oneBasedIndexes.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        for (String indexString : indexStrings) {","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"            if (indexes.size() \u003e\u003d expectedIndexes) { // check if size overflows","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"                if (StringUtil.isNumeric(indexString)) { // if it is another index, throw too many index exception","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"                    throw new ParseException(MESSAGE_TOO_MANY_INDEXES);","lastModifiedDate":"2023-11-05"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"                } else { // otherwise, throw invalid field exception","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"                    throw new ParseException(MESSAGE_INVALID_FIELDS);","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"                }","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"            indexes.add(parseIndex(indexString));","lastModifiedDate":"2023-10-09"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"        if (indexes.size() \u003c expectedIndexes) {","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(MESSAGE_MISSING_INDEX);","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"        return indexes;","lastModifiedDate":"2023-10-09"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"     * Parses a {@code String location} into a {@code Location}.","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"     * Parses a {@code String start} into an {@code LocalDateTime}.","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"     * @throws ParseException if the given {@code start} is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"juzzztinsoong"},"content":"    public static LocalDateTime parseContactTime(String time) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"juzzztinsoong"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"juzzztinsoong"},"content":"        String trimmedStart \u003d time.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":187,"author":{"gitId":"qz1004"},"content":"        //set last contacted to LocalDateTime.MIN if last contacted field is not specified","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"qz1004"},"content":"        if (trimmedStart.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"qz1004"},"content":"            return LocalDateTime.MIN;","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":192,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"jason-raiin"},"content":"            LocalDateTime preppedTime \u003d DateTimeUtil.parse(trimmedStart);","lastModifiedDate":"2023-11-06"},{"lineNumber":194,"author":{"gitId":"qz1004"},"content":"            if (!LastContactedTime.isValidLastContactedTime(preppedTime)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"qz1004"},"content":"                throw new ParseException(LastContactedTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"qz1004"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"            if (checkCorrectDay(preppedTime, time)) {","lastModifiedDate":"2023-11-06"},{"lineNumber":198,"author":{"gitId":"qz1004"},"content":"                return preppedTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"howenc"},"content":"            } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":200,"author":{"gitId":"howenc"},"content":"                throw new ParseException(preppedTime.getMonth().toString()","lastModifiedDate":"2023-11-06"},{"lineNumber":201,"author":{"gitId":"howenc"},"content":"                        + \" does not have \" + time.substring(0, 2) + \" days.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":202,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":203,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"juzzztinsoong"},"content":"            throw new ParseException(LastContactedTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"juzzztinsoong"},"content":"     * Parses a {@code String start} into an {@code LocalDateTime}.","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"juzzztinsoong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"juzzztinsoong"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"juzzztinsoong"},"content":"     * @throws ParseException if the given {@code start} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"juzzztinsoong"},"content":"    public static LocalDateTime parseMeetingTime(String time) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"howenc"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"howenc"},"content":"        String trimmedStart \u003d time.trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":217,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":218,"author":{"gitId":"jason-raiin"},"content":"            LocalDateTime result \u003d DateTimeUtil.parse(trimmedStart);","lastModifiedDate":"2023-11-08"},{"lineNumber":219,"author":{"gitId":"howenc"},"content":"            if (checkCorrectDay(result, time)) {","lastModifiedDate":"2023-11-06"},{"lineNumber":220,"author":{"gitId":"howenc"},"content":"                return result;","lastModifiedDate":"2023-11-06"},{"lineNumber":221,"author":{"gitId":"howenc"},"content":"            } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":222,"author":{"gitId":"howenc"},"content":"                throw new ParseException(result.getMonth().toString()","lastModifiedDate":"2023-11-06"},{"lineNumber":223,"author":{"gitId":"howenc"},"content":"                        + \"does not have \" + time.substring(0, 2) + \" days.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":224,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":225,"author":{"gitId":"howenc"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":226,"author":{"gitId":"howenc"},"content":"            throw new ParseException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":227,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":228,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":229,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":230,"author":{"gitId":"howenc"},"content":"    private static boolean checkCorrectDay(LocalDateTime localDateTime, String string) {","lastModifiedDate":"2023-11-06"},{"lineNumber":231,"author":{"gitId":"howenc"},"content":"        if (Year.isLeap(localDateTime.getYear())","lastModifiedDate":"2023-11-06"},{"lineNumber":232,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 (localDateTime.getMonth() \u003d\u003d Month.FEBRUARY \u0026\u0026 string.startsWith(\"29\"))) {","lastModifiedDate":"2023-11-06"},{"lineNumber":233,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-11-06"},{"lineNumber":234,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":235,"author":{"gitId":"howenc"},"content":"        Month thisMonth \u003d localDateTime.getMonth();","lastModifiedDate":"2023-11-06"},{"lineNumber":236,"author":{"gitId":"howenc"},"content":"        if (!has31Days(thisMonth) \u0026\u0026 string.startsWith(\"31\")) {","lastModifiedDate":"2023-11-06"},{"lineNumber":237,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-11-06"},{"lineNumber":238,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":239,"author":{"gitId":"howenc"},"content":"        return thisMonth !\u003d Month.FEBRUARY","lastModifiedDate":"2023-11-06"},{"lineNumber":240,"author":{"gitId":"howenc"},"content":"                || (!string.startsWith(\"29\") \u0026\u0026 !string.startsWith(\"30\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":241,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":242,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":243,"author":{"gitId":"howenc"},"content":"    private static boolean has31Days(Month month) {","lastModifiedDate":"2023-11-06"},{"lineNumber":244,"author":{"gitId":"howenc"},"content":"        requireNonNull(month);","lastModifiedDate":"2023-11-06"},{"lineNumber":245,"author":{"gitId":"howenc"},"content":"        switch (month) {","lastModifiedDate":"2023-11-06"},{"lineNumber":246,"author":{"gitId":"howenc"},"content":"        case FEBRUARY: case APRIL: case JUNE: case SEPTEMBER: case NOVEMBER:","lastModifiedDate":"2023-11-06"},{"lineNumber":247,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-11-06"},{"lineNumber":248,"author":{"gitId":"howenc"},"content":"        default:","lastModifiedDate":"2023-11-06"},{"lineNumber":249,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-11-06"},{"lineNumber":250,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":251,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":252,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"jason-raiin"},"content":"        return Tag.of(trimmedTag);","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":279,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":280,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":281,"author":{"gitId":"howenc"},"content":"     * Parses a {@code String attendee} into a {@code Attendee}.","lastModifiedDate":"2023-10-06"},{"lineNumber":282,"author":{"gitId":"howenc"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":283,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":284,"author":{"gitId":"howenc"},"content":"     * @throws ParseException if the given {@code attendee} is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":285,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":286,"author":{"gitId":"howenc"},"content":"    public static Attendee parseAttendee(String attendee) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":287,"author":{"gitId":"howenc"},"content":"        requireNonNull(attendee);","lastModifiedDate":"2023-10-06"},{"lineNumber":288,"author":{"gitId":"howenc"},"content":"        String trimmedAttendee \u003d attendee.trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":289,"author":{"gitId":"howenc"},"content":"        if (!Attendee.isValidAttendee(trimmedAttendee)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":290,"author":{"gitId":"howenc"},"content":"            throw new ParseException(Attendee.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":291,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":292,"author":{"gitId":"howenc"},"content":"        return new Attendee(trimmedAttendee);","lastModifiedDate":"2023-10-06"},{"lineNumber":293,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":294,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":295,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":296,"author":{"gitId":"howenc"},"content":"     * Parses {@code Collection\u003cString\u003e attendees} into a {@code Set\u003cAttendee\u003e}.","lastModifiedDate":"2023-10-06"},{"lineNumber":297,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":298,"author":{"gitId":"howenc"},"content":"    public static Set\u003cAttendee\u003e parseAttendees(Collection\u003cString\u003e attendees) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":299,"author":{"gitId":"howenc"},"content":"        requireNonNull(attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":300,"author":{"gitId":"howenc"},"content":"        final Set\u003cAttendee\u003e attendeeSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":301,"author":{"gitId":"howenc"},"content":"        for (String person : attendees) {","lastModifiedDate":"2023-10-06"},{"lineNumber":302,"author":{"gitId":"howenc"},"content":"            attendeeSet.add(parseAttendee(person));","lastModifiedDate":"2023-10-06"},{"lineNumber":303,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":304,"author":{"gitId":"howenc"},"content":"        return attendeeSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":305,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":306,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":307,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":308,"author":{"gitId":"howenc"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2023-09-23"},{"lineNumber":309,"author":{"gitId":"howenc"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-23"},{"lineNumber":310,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":311,"author":{"gitId":"howenc"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2023-09-23"},{"lineNumber":312,"author":{"gitId":"howenc"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-09-23"},{"lineNumber":313,"author":{"gitId":"howenc"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-09-23"},{"lineNumber":314,"author":{"gitId":"howenc"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-09-23"},{"lineNumber":315,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":316,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":317,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"qz1004"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"qz1004"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"qz1004"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":322,"author":{"gitId":"qz1004"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-10-18"},{"lineNumber":323,"author":{"gitId":"qz1004"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":324,"author":{"gitId":"qz1004"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":325,"author":{"gitId":"qz1004"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":326,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":327,"author":{"gitId":"qz1004"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2023-10-18"},{"lineNumber":328,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"howenc":117,"jason-raiin":63,"-":108,"juzzztinsoong":17,"qz1004":24}},{"path":"src/main/java/seedu/address/logic/parser/RemoveMeetingContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.RemoveMeetingContactCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":" * Parses input arguments and creates a new RemoveMeetingContactCommand object","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"public class RemoveMeetingContactCommandParser implements Parser\u003cRemoveMeetingContactCommand\u003e {","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"     * RemoveMeetingContactCommand and returns a RemoveMeetingContactCommand object","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"     * for execution.","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"     *","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"    public RemoveMeetingContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"        List\u003cIndex\u003e indexes;","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"        try {","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"            indexes \u003d ParserUtil.parseIndexes(args, RemoveMeetingContactCommand.EXPECTED_INDEXES);","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(RemoveMeetingContactCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"        Index meetingIndex \u003d indexes.get(0);","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"        Index attendeeIndex \u003d indexes.get(1);","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"        return new RemoveMeetingContactCommand(meetingIndex, attendeeIndex);","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"jason-raiin":34}},{"path":"src/main/java/seedu/address/logic/parser/ViewContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.ViewContactCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":" * Parses input arguments and creates a new ViewContactCommand object","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"public class ViewContactCommandParser implements Parser\u003cViewContactCommand\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewContactCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"     * and returns a ViewContactCommand object for execution.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"    public ViewContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"        Index index;","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"        try {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"            index \u003d ParserUtil.parseIndexes(args, ViewContactCommand.EXPECTED_INDEXES).get(0);","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(ViewContactCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"        return new ViewContactCommand(index);","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"jason-raiin":5,"LoMaply":22}},{"path":"src/main/java/seedu/address/logic/parser/ViewMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":" * Parses input arguments and creates a new ViewMeetingCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"public class ViewMeetingCommandParser implements Parser\u003cViewMeetingCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewMeetingCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"     * and returns a ViewMeetingCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"    public ViewMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"        Index index;","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"            index \u003d ParserUtil.parseIndexes(args, ViewMeetingCommand.EXPECTED_INDEXES).get(0);","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"            throw new ParseException(ViewMeetingCommand.MESSAGE_USAGE, pe);","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"        return new ViewMeetingCommand(index);","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jason-raiin":5,"LoMaply":22}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"    public String getMessage() {","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"        if (super.getCause() !\u003d null) {","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"            return super.getCause().getMessage() + \"\\n\" + super.getMessage();","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"        } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"            return super.getMessage();","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"jason-raiin":9,"-":17}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.UniqueMeetingList;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    private final UniqueMeetingList meetings;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"     * Returns true if a person with the same name as {@code name} exists in the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    public boolean hasName(String name) {","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        return persons.contains(name);","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"     * Adds a meeting to the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"     * The meeting must not already exist in the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"    public void addMeeting(Meeting m) {","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"        meetings.add(m);","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"     * Returns the person with the given name","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"jason-raiin"},"content":"     * or throws {@code IndexOutOfBoundsException} if it does not exist.","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"    public Person getPerson(String name) {","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"        return persons.getPerson(name);","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"     * Updates the given attendee {@code targetAttendee} with {@code editedAttendee} for all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"     * @param targetAttendee The Attendee name to be replaced from all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"     * @param editedAttendee The Attendee name to replace the {@code targetAttendee}.","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"    public void updateAttendee(String targetAttendee, String editedAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"        requireNonNull(targetAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"        requireNonNull(editedAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"        meetings.updateAttendee(targetAttendee, editedAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"     * Deletes the given attendee {@code targetAttendee} from all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"     * @param targetAttendee The attendee name to be deleted.","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"    public void deleteAttendee(String targetAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"        requireNonNull(targetAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"        meetings.deleteAttendee(targetAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"     * Replaces the given meeting {@code meeting} in the list with {@code editedMeeting}.","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"     * The meeting identity of {@code editedMeeting} must be different than an existing meeting in the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2023-10-02"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"        meetings.remove(key);","lastModifiedDate":"2023-10-02"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"howenc"},"content":"                .add(\"meetings\", meetings)","lastModifiedDate":"2023-10-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":195,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-02"},{"lineNumber":198,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":199,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"howenc"},"content":"        return persons.equals(otherAddressBook.persons) \u0026\u0026 meetings.equals(otherAddressBook.meetings);","lastModifiedDate":"2023-10-02"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"howenc"},"content":"        return Objects.hash(persons, meetings);","lastModifiedDate":"2023-10-02"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":220,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":85,"jason-raiin":8,"-":128}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"     * Creates a copy of the model.","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"    Model copy();","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"     * Deletes the given meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"     * The meeting must exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"    void deleteMeeting(Meeting target);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"     * Adds the given meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"     * {@code meeting} must not already exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"     * Returns the person with the given name.","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"     * A person with the given name must exist in the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"    Person getPerson(String name);","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"     * Updates the given attendee {@code targetAttendee} with {@code editedAttendee} for all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"     * @param targetAttendee The Attendee name to be replaced from all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"     * @param editedAttendee The Attendee name to replace the {@code targetAttendee}.","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"    void updateAttendee(String targetAttendee, String editedAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"     * Deletes the given attendee {@code targetAttendee} from all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"     * @param targetAttendee The attendee name to be deleted.","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"    void deleteAttendee(String targetAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"     * Replaces the given meeting {@code target} with {@code editedMeeting}.","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"     * The meeting identity of {@code editedMeeting} must be different than an existing meeting in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"    /** Returns an unmodifiable view of the filtered Meeting list */","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"    boolean hasName(String attendeeName);","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":151,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"LoMaply"},"content":"     * Set current viewed person index based on viewc command.","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"LoMaply"},"content":"    void setViewedPersonIndex(Index personIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"LoMaply"},"content":"     * Set current viewed meeting index based on viewm command.","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"LoMaply"},"content":"    void setViewedMeetingIndex(Index meetingIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"LoMaply"},"content":"     * Get current viewed person and meeting as a pair based on both view commands.","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"LoMaply"},"content":"    Pair\u003cPerson, Meeting\u003e getViewedItems();","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"howenc":52,"jason-raiin":10,"-":88,"LoMaply":17}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"    private Index viewedPersonIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"    private Index viewedMeetingIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.addressBook.getMeetingList());","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"    public Model copy() {","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"        Model copy \u003d new ModelManager();","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"        copy.setAddressBook(addressBook);","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        copy.setUserPrefs(userPrefs);","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        return copy;","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"    public boolean hasName(String name) {","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"        return addressBook.hasName(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"        return addressBook.hasMeeting(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"        // Interesting, deleting a person does not update the filtered persons list","lastModifiedDate":"2023-09-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"    public void deleteMeeting(Meeting target) {","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"        addressBook.removeMeeting(target);","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"        // Interesting, deleting a meeting does not update the filtered persons list","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"        addressBook.addMeeting(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"jason-raiin"},"content":"    public Person getPerson(String name) {","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"jason-raiin"},"content":"        return addressBook.getPerson(name);","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"    public void updateAttendee(String targetAttendee, String editedAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(targetAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(editedAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"        addressBook.updateAttendee(targetAttendee, editedAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"    public void deleteAttendee(String targetAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(targetAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"        addressBook.deleteAttendee(targetAttendee);","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"        addressBook.setMeeting(target, editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"LoMaply"},"content":"    public void setViewedPersonIndex(Index personIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"LoMaply"},"content":"        viewedPersonIndex \u003d personIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"LoMaply"},"content":"    public void setViewedMeetingIndex(Index meetingIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"LoMaply"},"content":"        viewedMeetingIndex \u003d meetingIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"LoMaply"},"content":"    public Pair\u003cPerson, Meeting\u003e getViewedItems() {","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"LoMaply"},"content":"        Person personToView \u003d viewedPersonIndex \u003d\u003d null","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"LoMaply"},"content":"                ? null","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"LoMaply"},"content":"                : getFilteredPersonList().get(viewedPersonIndex.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"LoMaply"},"content":"        Meeting meetingToView \u003d viewedMeetingIndex \u003d\u003d null","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"LoMaply"},"content":"                ? null","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"LoMaply"},"content":"                : getFilteredMeetingList().get(viewedMeetingIndex.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"LoMaply"},"content":"        return new Pair\u003c\u003e(personToView, meetingToView);","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":213,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":214,"author":{"gitId":"howenc"},"content":"     * Returns an unmodifiable view of the list of {@code Meetings} backed by the internal list of","lastModifiedDate":"2023-10-06"},{"lineNumber":215,"author":{"gitId":"howenc"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":217,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":218,"author":{"gitId":"howenc"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":219,"author":{"gitId":"howenc"},"content":"        return filteredMeetings;","lastModifiedDate":"2023-10-06"},{"lineNumber":220,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":221,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":228,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":229,"author":{"gitId":"howenc"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-10-06"},{"lineNumber":230,"author":{"gitId":"howenc"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-06"},{"lineNumber":231,"author":{"gitId":"howenc"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2023-10-06"},{"lineNumber":232,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":233,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":248,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-06"},{"lineNumber":249,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 filteredMeetings.equals(otherModelManager.filteredMeetings);","lastModifiedDate":"2023-10-06"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":65,"jason-raiin":13,"-":148,"LoMaply":25}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":2,"-":17}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"outbook.json\");","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":87,"juzzztinsoong":1}},{"path":"src/main/java/seedu/address/model/meeting/Attendee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":" * Represents a Person in the address book that will attend the meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAttendee(String)}","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"public class Attendee {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"            \"Attendees should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    /*","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"     * The first character of the title must not be a whitespace,","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    private final String attendeeName;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     * Constructs a {@code Attendee}.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"     * @param attendeeName A valid attendee name.","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    public Attendee(String attendeeName) {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        requireNonNull(attendeeName);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        checkArgument(isValidAttendee(attendeeName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        this.attendeeName \u003d attendeeName;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    public static boolean isValidAttendee(String test) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    public String getAttendeeName() {","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        return attendeeName;","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        return attendeeName.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof Attendee)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        Attendee otherAttendee \u003d (Attendee) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        return attendeeName.equals(otherAttendee.attendeeName);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        return attendeeName + \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":67,"qz1004":1}},{"path":"src/main/java/seedu/address/model/meeting/AttendeeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":" * Tests that a {@code Meetings}\u0027s {@code Attendee} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"public class AttendeeContainsKeywordsPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    public AttendeeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"                .anyMatch(keyword -\u003e keyword.isEmpty() || meeting.getAttendees().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"                        .anyMatch(attendee -\u003e StringUtil.containsWordIgnoreCase(attendee.getAttendeeName(), keyword)));","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof AttendeeContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        AttendeeContainsKeywordsPredicate otherAttendeeContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"                (AttendeeContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        return keywords.equals(otherAttendeeContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":46}},{"path":"src/main/java/seedu/address/model/meeting/GeneralMeetingPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":" * The predicate class that brings together of all the other predicate class for Meeting.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"public class GeneralMeetingPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    private final TitleContainsKeywordsPredicate titlePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    private final LocationContainsKeywordsPredicate locationPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    private final MeetingTimeContainsPredicate meetingTimePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    private final AttendeeContainsKeywordsPredicate attendeePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"    private final MeetingTagContainsKeywordsPredicate tagPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"     * Constructs a predicate class that fulfills all the argument predicates","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"     * @param titlePredicate A predicate that test a meeting\u0027s title.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"     * @param locationPredicate A predicate that test a meeting\u0027s location.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"     * @param meetingTimePredicate A predicate that test a meeting\u0027s time.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"     * @param attendeePredicate A predicate that test a meeting\u0027s attendees.","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"     * @param tagPredicate A predicate that test a meeting\u0027s tags.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public GeneralMeetingPredicate(TitleContainsKeywordsPredicate titlePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"                                             LocationContainsKeywordsPredicate locationPredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"                                             MeetingTimeContainsPredicate meetingTimePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"                                             AttendeeContainsKeywordsPredicate attendeePredicate,","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"                                             MeetingTagContainsKeywordsPredicate tagPredicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        this.titlePredicate \u003d titlePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        this.locationPredicate \u003d locationPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        this.meetingTimePredicate \u003d meetingTimePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        this.attendeePredicate \u003d attendeePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"     * Constructs a predicate class that fulfills all the argument predicates","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"     * @param titleKeyWords String array that will be used to construct TitleContainsKeywordsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"     * @param locationKeyWords String array that will be used to construct LocationContainsKeywordsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"     * @param start The start time of MeetingTimeContainsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"     * @param end the end time of MeetingTimeContainsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"     * @param attendeeKeyWords String array that will be used to construct AttendeeContainsKeywordsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"     * @param tagKeyWords String array that will be used to construct TagContainsKeywordsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    public GeneralMeetingPredicate(String[] titleKeyWords, String[] locationKeyWords, LocalDateTime start,","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"                                           LocalDateTime end, String[] attendeeKeyWords, String[] tagKeyWords) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        this.titlePredicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(titleKeyWords));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        this.locationPredicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(locationKeyWords));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        this.meetingTimePredicate \u003d new MeetingTimeContainsPredicate(start, end);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        this.attendeePredicate \u003d new AttendeeContainsKeywordsPredicate(Arrays.asList(attendeeKeyWords));","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"        this.tagPredicate \u003d new MeetingTagContainsKeywordsPredicate(Arrays.asList(tagKeyWords));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        return titlePredicate.test(meeting)","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 locationPredicate.test(meeting)","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 meetingTimePredicate.test(meeting)","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 attendeePredicate.test(meeting)","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 tagPredicate.test(meeting);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof GeneralMeetingPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate otherGeneralMeetingPredicate \u003d (GeneralMeetingPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        return titlePredicate.equals(otherGeneralMeetingPredicate.titlePredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 locationPredicate.equals(otherGeneralMeetingPredicate.locationPredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 meetingTimePredicate.equals(otherGeneralMeetingPredicate.meetingTimePredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 attendeePredicate.equals(otherGeneralMeetingPredicate.attendeePredicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 tagPredicate.equals(otherGeneralMeetingPredicate.tagPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":79,"qz1004":4}},{"path":"src/main/java/seedu/address/model/meeting/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":" * Represents a location that a meeting in the address book will take place at.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"public class Location {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Locations can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public final String location;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"     * Constructs the meeting location of a meeting in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public Location(String location) {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"     * Returns true if the given location is valid.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"     * Returns a truncated Email if it is more than 40 characters long.","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    public String shortLocation() {","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        if (this.location.length() \u003e 40) {","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"            return this.location.substring(0, 40) + \"...\";","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        return this.location;","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        return location;","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof Location)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        Location otherLocation \u003d (Location) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"        return location.equals(otherLocation.location);","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        return location.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":70}},{"path":"src/main/java/seedu/address/model/meeting/LocationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":" * Tests that a {@code Meetings}\u0027s {@code Title} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"public class LocationContainsKeywordsPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    public LocationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"                .anyMatch(keyword -\u003e keyword.isEmpty()","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"                        || StringUtil.containsWordIgnoreCase(meeting.getLocation().toString(), keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof LocationContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        LocationContainsKeywordsPredicate otherLocationContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"                (LocationContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        return keywords.equals(otherLocationContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":46}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.verbose;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":" * Represents a Meeting in the address book. Guarantees: details are present and","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":" * not null, field values are validated, immutable.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"public class Meeting {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    private final Title title;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    private final Location location;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    private final MeetingTime meetingTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"    private final Set\u003cAttendee\u003e attendees;","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"    private final MeetingStatus status;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"    public Meeting(Title title, Location location, LocalDateTime start, LocalDateTime end, Set\u003cAttendee\u003e attendees,","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"            Set\u003cTag\u003e tags, MeetingStatus status) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        this.meetingTime \u003d new MeetingTime(start, end);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"        this.attendees \u003d new LinkedHashSet\u003c\u003e(attendees);","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"        this.tags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    public Title getTitle() {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        return title;","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        return location;","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        return meetingTime.getStart();","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        return meetingTime.getEnd();","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    public MeetingTime getMeetingTime() {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        return meetingTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"    public MeetingStatus getStatus() {","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"        return status;","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    public boolean withinSpecifiedTime(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        return !meetingTime.getStart().isBefore(start) \u0026\u0026 !meetingTime.getEnd().isAfter(end);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"     * Returns an immutable attendee set, which throws","lastModifiedDate":"2023-10-09"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"     * {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    public Set\u003cAttendee\u003e getAttendees() {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        return Collections.unmodifiableSet(attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"     * Returns an attendee at the given {@code index}","lastModifiedDate":"2023-10-09"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"    public Attendee getAttendee(Index index) {","lastModifiedDate":"2023-10-09"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        return new ArrayList\u003c\u003e(attendees).get(index.getZeroBased());","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"     * Updates the given attendee {@code targetAttendee} with {@code editedAttendee} for all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"     * @param targetAttendee The Attendee name to be replaced from all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"     * @param editedAttendee The Attendee name to replace the {@code targetAttendee}.","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"    public void updateAttendee(String targetAttendee, String editedAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"        if (attendees.contains(new Attendee(targetAttendee))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"            attendees.remove(new Attendee(targetAttendee));","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"            attendees.add(new Attendee(editedAttendee));","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"     * Deletes the given attendee {@code targetAttendee} from all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"     * @param targetAttendee The attendee name to be deleted.","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"    public void deleteAttendee(String targetAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"        attendees.remove(new Attendee(targetAttendee));","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"jason-raiin"},"content":"     * {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"jason-raiin"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"jason-raiin"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"     * Returns true if {@code otherMeeting} has the same identity as this meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"    public boolean isSameMeeting(Meeting otherMeeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"        if (otherMeeting \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"jason-raiin"},"content":"        return otherMeeting !\u003d null \u0026\u0026 otherMeeting.getTitle().equals(getTitle())","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 otherMeeting.getLocation().equals(getLocation())","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"jason-raiin"},"content":"                \u0026\u0026 otherMeeting.getMeetingTime().equals(getMeetingTime()) \u0026\u0026 otherMeeting.getTags().equals(getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"jason-raiin"},"content":"     * Returns true if both meetings have the same title and data fields. This","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"jason-raiin"},"content":"     * defines a stronger notion of equality between two meetings.","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"jason-raiin"},"content":"        return title.equals(otherMeeting.title) \u0026\u0026 location.equals(otherMeeting.location)","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"jason-raiin"},"content":"                \u0026\u0026 meetingTime.equals(otherMeeting.meetingTime) \u0026\u0026 attendees.equals(otherMeeting.attendees)","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"jason-raiin"},"content":"                \u0026\u0026 tags.equals(otherMeeting.tags) \u0026\u0026 status.equals(otherMeeting.status);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"        return Objects.hash(title, location, meetingTime, attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"jason-raiin"},"content":"        return new ToStringBuilder(this).add(\"title\", title).add(\"location\", location)","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"jason-raiin"},"content":"                .add(\"start\", meetingTime.getStart()).add(\"end\", meetingTime.getEnd()).add(\"attendees\", attendees)","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"jason-raiin"},"content":"                .add(\"tags\", tags).add(\"status\", status).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"LoMaply"},"content":"     * Returns detailed information of Meeting for viewm command.","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"LoMaply"},"content":"    public String toDisplayString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"        AtomicInteger counter \u003d new AtomicInteger(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"LoMaply"},"content":"        String indexedAttendees \u003d attendees.stream()","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"LoMaply"},"content":"                .map(x -\u003e \"\\n\" + counter.getAndIncrement() + \". \" + x.getAttendeeName())","lastModifiedDate":"2023-11-07"},{"lineNumber":168,"author":{"gitId":"LoMaply"},"content":"                .reduce(\"\", (result, next) -\u003e result + next);","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"LoMaply"},"content":"        return String.format(\"Title: %s\\nLocation: %s\\nStart: %s\\nEnd: %s\\nAttendees: %s\\n\", title, location,","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"jason-raiin"},"content":"                verbose(meetingTime.getStart()), verbose(meetingTime.getEnd()),","lastModifiedDate":"2023-11-06"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"                indexedAttendees);","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":116,"jason-raiin":49,"LoMaply":9}},{"path":"src/main/java/seedu/address/model/meeting/MeetingStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":" * Contains a Boolean representing whether a meeting is completed.","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"public class MeetingStatus {","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status must be exactly \u0027true\u0027 or \u0027false\u0027\";","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"    public final Boolean isComplete;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"     * Constructs a {@code Status} field representing whether a meeting is complete.","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"    public MeetingStatus(Boolean isComplete) {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"        return isComplete.hashCode();","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"        if (!(other instanceof MeetingStatus)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"        MeetingStatus completed \u003d (MeetingStatus) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        return isComplete.equals(completed.isComplete);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"        return isComplete.toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jason-raiin":44}},{"path":"src/main/java/seedu/address/model/meeting/MeetingTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":" * Tests that a {@code Meeting}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"public class MeetingTagContainsKeywordsPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"    public MeetingTagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"                .anyMatch(keyword -\u003e keyword.isEmpty() || meeting.getTags().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"        if (!(other instanceof MeetingTagContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        MeetingTagContainsKeywordsPredicate otherTagContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"                (MeetingTagContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        return keywords.equals(otherTagContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":39,"qz1004":7}},{"path":"src/main/java/seedu/address/model/meeting/MeetingTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":" * Represents a scheduled time for a meeting in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"public class MeetingTime {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Meeting Time should have the format [dd.mm.yyyy HHmm] and Start\"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"            + \" cannot be after End\\neg. 18.09.2023 1500 represents 18 September 2023, 3PM\";","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"     * Constructs the meeting time for a meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public MeetingTime(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        requireNonNull(start);","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        requireNonNull(end);","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        return start;","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        return end;","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    public static boolean isValidMeetingTime(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"        return !start.isAfter(end) \u0026\u0026 start.isAfter(LocalDateTime.MIN) \u0026\u0026 end.isBefore(LocalDateTime.MAX);","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof MeetingTime)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        MeetingTime otherMeetingTime \u003d (MeetingTime) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        return start.equals(otherMeetingTime.start)","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 end.equals(otherMeetingTime.end);","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        return Objects.hash(start, end);","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"                .add(\"start\", start)","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"                .add(\"end\", end)","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"                .toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":68,"jason-raiin":2,"juzzztinsoong":1,"LoMaply":2}},{"path":"src/main/java/seedu/address/model/meeting/MeetingTimeContainsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.format;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":" * Tests that a {@code Meeting}\u0027s {@code MeetingTime} duration within the given start and end.","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"public class MeetingTimeContainsPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"     * Constructs a predicate with the given start and end times.","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"     * @param start start of the duration to be checked.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"     * @param end end of the duration to be checked.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    public MeetingTimeContainsPredicate(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"        format(this.start);","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"        format(this.end);","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        MeetingTime.isValidMeetingTime(start, end);","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        return meeting.withinSpecifiedTime(start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof MeetingTimeContainsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        MeetingTimeContainsPredicate otherMeetingTimeContainsPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"                (MeetingTimeContainsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        return this.start.equals(otherMeetingTimeContainsPredicate.start)","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"                \u0026\u0026 this.end.equals(otherMeetingTimeContainsPredicate.end);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        return new ToStringBuilder(this).add(\"start\", start).add(\"end\", end).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":52,"jason-raiin":3,"qz1004":1}},{"path":"src/main/java/seedu/address/model/meeting/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":" * Represents a Meeting\u0027s name in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"public class Title {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"            \"Titles can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    /*","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"     * The first character of the title must not be a whitespace,","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    public final String meetingTitle;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"     * Constructs the meeting name/title of the meeting.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public Title(String meetingTitle) {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        requireNonNull(meetingTitle);","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        checkArgument(isValidTitle(meetingTitle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        this.meetingTitle \u003d meetingTitle;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        return meetingTitle;","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof Title)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        Title otherTitle \u003d (Title) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        return meetingTitle.equals(otherTitle.meetingTitle);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        return meetingTitle.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":62}},{"path":"src/main/java/seedu/address/model/meeting/TitleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":" * Tests that a {@code Meetings}\u0027s {@code Title} matches any of the keywords given.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"public class TitleContainsKeywordsPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"    public TitleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"                .anyMatch(keyword -\u003e keyword.isEmpty()","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"                        || StringUtil.containsWordIgnoreCase(meeting.getTitle().toString(), keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"        if (!(other instanceof TitleContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"        TitleContainsKeywordsPredicate otherTitleContainsKeywordsPredicate \u003d (TitleContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"        return keywords.equals(otherTitleContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"howenc":2,"juzzztinsoong":43}},{"path":"src/main/java/seedu/address/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":" * A meeting is considered unique by comparing using {@code Meeting#isSameMeeting(Meeting)}.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":" * As such, adding and updating of meetings uses Meeting#isSameMeeting(Meeting) for equality","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":" * so as to ensure that the meeting being added or updated is unique in terms of identity in","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":" * the UniqueMeetingList. However, the removal of a meeting uses Meeting#equals(Object) so","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":" * as to ensure that the meeting with exactly the same fields will be removed.","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":" *","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":" *","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":" * @see Meeting#isSameMeeting(Meeting)","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    private final Comparator\u003cMeeting\u003e sortByTimeComparator \u003d Comparator.comparing(Meeting::getStart);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"     * Creates a UniqueMeetingList object that is sorted by start date.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    public UniqueMeetingList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        FXCollections.sort(internalList, sortByTimeComparator);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"     * Returns true if the list contains an equivalent Meeting as the given argument.","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"     * The meeting must not already exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"        FXCollections.sort(internalList, sortByTimeComparator);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing person in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        if (!target.isSameMeeting(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        FXCollections.sort(internalList, sortByTimeComparator);","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"     * Updates the given attendee {@code targetAttendee} with {@code editedAttendee} for all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"     * @param targetAttendee The Attendee name to be replaced from all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"     * @param editedAttendee The Attendee name to replace the {@code targetAttendee}.","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    public void updateAttendee(String targetAttendee, String editedAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"        internalList.forEach(meeting -\u003e meeting.updateAttendee(targetAttendee, editedAttendee));","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"     * Deletes the given attendee {@code targetAttendee} from all meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"     * @param targetAttendee The attendee name to be deleted.","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"    public void deleteAttendee(String targetAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"        internalList.forEach(meeting -\u003e meeting.deleteAttendee(targetAttendee));","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"        FXCollections.sort(internalList, sortByTimeComparator);","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"    public void setMeetings(UniqueMeetingList replacement) {","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"        FXCollections.sort(internalList, sortByTimeComparator);","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"        if (!meetingsAreUnique(meetings)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"        FXCollections.sort(internalList, sortByTimeComparator);","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"        if (!(other instanceof UniqueMeetingList)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList otherUniqueMeetingList \u003d (UniqueMeetingList) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"        return internalList.equals(otherUniqueMeetingList.internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2023-10-06"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"                if (meetings.get(i).isSameMeeting(meetings.get(j))) {","lastModifiedDate":"2023-10-06"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"                    return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"        return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":184}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":" * identity).","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"        super(\"Operation would result in duplicate meetings\");","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":11}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"public class MeetingNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":6}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format [LOCAL-PART]@[SERVER].[DOMAIN], \"","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"            + \"e.g. example@mail.com\";","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?![\\\\._-])(?!.*\\\\.\\\\.)[\\\\w-_+\\\\.]*(?!_)\\\\w@\"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"            + \"((?![\\\\.-])(?!.*[\\\\._-]$)[A-Za-z0-9-]*(?!_)\\\\w\\\\.)+[A-Za-z0-9]{2,4}$\";","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"     * Returns a truncated Email if it is more than 30 characters long.","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    public String shortEmail() {","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        if (this.value.length() \u003e 30) {","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"            return this.value.substring(0, 30) + \"...\";","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        return this.value;","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"        return value.toLowerCase().equals(otherEmail.value.toLowerCase());","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"howenc":10,"jason-raiin":6,"-":57}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"        String email \u003d person.getEmail().toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"        Boolean result \u003d false;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"            result |\u003d email.contains(keyword.toLowerCase());","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"        return result;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"        EmailContainsKeywordsPredicate otherEmailContainsKeywordsPredicate \u003d (EmailContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"        return keywords.equals(otherEmailContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"qz1004":47}},{"path":"src/main/java/seedu/address/model/person/GeneralPersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":" * The predicate class that brings together of all the other predicate class for Person.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"public class GeneralPersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"    private final PhoneContainsPredicate phonePredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"    private final EmailContainsKeywordsPredicate emailPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"    private final LastContactTimeContainsPredicate lastContactTimePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"    private final StatusContainsKeywordsPredicate statusPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"    private final PersonTagContainsKeywordsPredicate tagPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"     * Constructs a predicate class that fulfills all the argument predicates","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"     * @param namePredicate A predicate that test a person\u0027s name.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"     * @param phonePredicate A predicate that test a person\u0027s phone.","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"     * @param emailPredicate A predicate that test a person\u0027s email.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"     * @param lastContactTimePredicate A predicate that test a person\u0027s last contacted time.","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"     * @param statusPredicate A predicate that test a person\u0027s status.","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"     * @param tagPredicate A predicate that test a person\u0027s tags.","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"    public GeneralPersonPredicate(NameContainsKeywordsPredicate namePredicate,","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"                                   PhoneContainsPredicate phonePredicate,","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"                                   EmailContainsKeywordsPredicate emailPredicate,","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"                                   LastContactTimeContainsPredicate lastContactTimePredicate,","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"                                   StatusContainsKeywordsPredicate statusPredicate,","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"                                   PersonTagContainsKeywordsPredicate tagPredicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"        this.phonePredicate \u003d phonePredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"        this.emailPredicate \u003d emailPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"        this.lastContactTimePredicate \u003d lastContactTimePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        this.statusPredicate \u003d statusPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"     * Constructs a predicate class that fulfills all the argument predicates","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"     * @param nameKeyWords String array that will be used to construct NameContainsKeywordsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"     * @param phoneValues String array that will be used to construct PhoneContainsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"     * @param emailKeyWords String array that will be used to construct EmailContainsKeywordsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"     * @param lastContacted A predicate that wil be used to construct LastContactTimeContainsPredicate.","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"     * @param statusKeyWords String array that will be used to construct StatusContainsKeywordsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"     * @param tagKeyWords String array that will be used to construct PersonTagContainsKeywordsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"    public GeneralPersonPredicate(String[] nameKeyWords, String[] phoneValues, String[] emailKeyWords,","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"                                  LocalDateTime lastContacted, String[] statusKeyWords, String[] tagKeyWords) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"        this.namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(nameKeyWords));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"        this.phonePredicate \u003d new PhoneContainsPredicate(Arrays.asList(phoneValues));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"        this.emailPredicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(emailKeyWords));","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"        this.lastContactTimePredicate \u003d new LastContactTimeContainsPredicate(lastContacted);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"        this.statusPredicate \u003d new StatusContainsKeywordsPredicate(Arrays.asList(statusKeyWords));","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"        this.tagPredicate \u003d new PersonTagContainsKeywordsPredicate(Arrays.asList(tagKeyWords));","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"        return namePredicate.test(person)","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 phonePredicate.test(person)","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 emailPredicate.test(person)","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 lastContactTimePredicate.test(person)","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 statusPredicate.test(person)","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 tagPredicate.test(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"qz1004"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"qz1004"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"        if (!(other instanceof GeneralPersonPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"qz1004"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"qz1004"},"content":"        GeneralPersonPredicate otherGeneralPersonPredicate \u003d (GeneralPersonPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"qz1004"},"content":"        return namePredicate.equals(otherGeneralPersonPredicate.namePredicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 phonePredicate.equals(otherGeneralPersonPredicate.phonePredicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 emailPredicate.equals(otherGeneralPersonPredicate.emailPredicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 lastContactTimePredicate.equals(otherGeneralPersonPredicate.lastContactTimePredicate)","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 statusPredicate.equals(otherGeneralPersonPredicate.statusPredicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 tagPredicate.equals(otherGeneralPersonPredicate.tagPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"qz1004":89}},{"path":"src/main/java/seedu/address/model/person/LastContactTimeContainsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.format;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":" * Tests that a {@code Person}\u0027s {@code LastContactedTime} matches the given time.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"public class LastContactTimeContainsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"     * Constructs a predicate with the given time.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"     * @param time time to be checked.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"    public LastContactTimeContainsPredicate(LocalDateTime time) {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"        format(this.time);","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"        LastContactedTime.isValidLastContactedTime(time);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"        if (time.equals(LocalDateTime.MIN)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"        return person.getLastContactedTime().equals(time);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"        if (!(other instanceof LastContactTimeContainsPredicate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"        LastContactTimeContainsPredicate otherLastContactTimeContainsPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"                (LastContactTimeContainsPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"        return this.time.equals(otherLastContactTimeContainsPredicate.time);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"        return new ToStringBuilder(this).add(\"time\", time).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jason-raiin":2,"qz1004":52}},{"path":"src/main/java/seedu/address/model/person/LastContactedTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.verbose;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":" * Represents a Person\u0027s last contacted time for a meeting in the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":" * Guarantees: details are present and not null, field values are validated, mutable.","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"public class LastContactedTime {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"            \"Last Contacted Time should have the format [dd.mm.yyyy HHmm]\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"            + \"eg. 18.09.2023 1500 represents 18 September 2023, 3PM\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"    private LocalDateTime lastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"     * Constructs a {@code LastContactedTime}","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    public LastContactedTime(LocalDateTime lastContactedTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"        requireNonNull(lastContactedTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"        this.lastContactedTime \u003d lastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        return lastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"     * Returns true if a given LocalDateTime input is valid.","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"    public static boolean isValidLastContactedTime(LocalDateTime input) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"        return input.isEqual(LocalDateTime.MIN)","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"                || input.isAfter(LocalDateTime.MIN) \u0026\u0026 input.isBefore(LocalDateTime.MAX);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"        if (!(other instanceof LastContactedTime)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"        LastContactedTime otherLastContactedTime \u003d (LastContactedTime) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"        return lastContactedTime.equals(otherLastContactedTime.lastContactedTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"        return Objects.hash(lastContactedTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"    public String getDisplay() {","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"        if (lastContactedTime.equals(LocalDateTime.MIN)) {","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"            return \"NA\";","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        return verbose(lastContactedTime);","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"        return new ToStringBuilder(this).add(\"lastContactedTime\", lastContactedTime).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jason-raiin":10,"juzzztinsoong":63,"qz1004":2,"LoMaply":1}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"howenc":1,"-":66}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"                .anyMatch(keyword -\u003e keyword.isEmpty()","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"                        || StringUtil.containsWordIgnoreCase(person.getName().toString(), keyword));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":43,"qz1004":2}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    private final LastContactedTime lastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"    private final Status status;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"    public Person(Name name, Phone phone, Email email, LocalDateTime time, Status status, Remark remark,","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"            Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"        requireAllNonNull(name, phone, email, time, status, remark, tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"        this.lastContactedTime \u003d new LastContactedTime(time);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"        this.tags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"    public LocalDateTime getLastContactedTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"        return lastContactedTime.getTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"    public String getLastContactedDisplay() {","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"        return lastContactedTime.getDisplay();","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"        return remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"        return status;","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"     * Returns true if both persons have the same email, name or phone.","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"    public boolean isDuplicate(Person otherPerson) {","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"        if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"            return false;","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"        if (otherPerson.getName().equals(getName())) {","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"jason-raiin"},"content":"            return true;","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"        if (otherPerson.getPhone().equals(getPhone())) {","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"jason-raiin"},"content":"            return true;","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"jason-raiin"},"content":"        if (otherPerson.getEmail().equals(getEmail())) {","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"jason-raiin"},"content":"            return true;","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"jason-raiin"},"content":"        return false;","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"juzzztinsoong"},"content":"                \u0026\u0026 lastContactedTime.equals(otherPerson.lastContactedTime)","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"qz1004"},"content":"                \u0026\u0026 status.equals(otherPerson.status)","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"juzzztinsoong"},"content":"                \u0026\u0026 remark.equals(otherPerson.remark)","lastModifiedDate":"2023-10-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"juzzztinsoong"},"content":"        return Objects.hash(name, phone, email, lastContactedTime, status, remark, tags);","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"juzzztinsoong"},"content":"                .add(\"last contacted time\", lastContactedTime.getTime())","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"qz1004"},"content":"                .add(\"status\", status)","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"juzzztinsoong"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":163,"author":{"gitId":"LoMaply"},"content":"     * Returns detailed information of Person for viewc command.","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":165,"author":{"gitId":"LoMaply"},"content":"    public String toDisplayString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":166,"author":{"gitId":"LoMaply"},"content":"        return String.format(\"Name: %s\\nPhone: %s\\nEmail: %s\\nLast Meeting: %s\\nStatus: %s\\nRemark: %s\",","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"jason-raiin"},"content":"                name, phone, email, lastContactedTime.getDisplay(), status, remark);","lastModifiedDate":"2023-11-06"},{"lineNumber":168,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jason-raiin":30,"-":106,"juzzztinsoong":20,"qz1004":7,"LoMaply":6}},{"path":"src/main/java/seedu/address/model/person/PersonTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"public class PersonTagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"    public PersonTagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"                .anyMatch(keyword -\u003e keyword.isEmpty() || person.getTags().stream()","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"        if (!(other instanceof PersonTagContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        PersonTagContainsKeywordsPredicate otherTagContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"                (PersonTagContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        return keywords.equals(otherTagContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":37,"qz1004":9}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the values given.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"public class PhoneContainsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"    private final List\u003cString\u003e values;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"    public PhoneContainsPredicate(List\u003cString\u003e values) {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"        this.values \u003d values;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"        return values.stream()","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"                .anyMatch(value -\u003e value.isEmpty()","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"                        || person.getPhone().toString().contains(value));","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"        if (!(other instanceof PhoneContainsPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"        PhoneContainsPredicate otherPhoneContainsPredicate \u003d (PhoneContainsPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        return values.equals(otherPhoneContainsPredicate.values);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"        return new ToStringBuilder(this).add(\"values\", values).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"qz1004":44}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"public class Remark {","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"    public final String value;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"        value \u003d remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"        return value;","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        return value.equals(otherRemark.value);","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"juzzztinsoong":46,"qz1004":3}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":" * Represents a Person\u0027s status","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"*/","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"public class Status {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"     * Represents the available statuses that can be assigned to a Person.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"    protected enum StatusList {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"        nil,","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"        prospective,","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        active,","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        inactive,","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        claimant,","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"        renewal,","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"    public static final String DEFAULT_STATUS \u003d \"NIL\";","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"            \"Status should be 1 of { NIL, Prospective, Active, Inactive, Claimant, Renewal } or blank.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"            + \"Will be set to NIL by default if left blank.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"    public final String value;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"     * @param status A valid status.","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"    public Status(String status) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"        this.value \u003d (status \u003d\u003d null || status.isEmpty()) ? DEFAULT_STATUS : status;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"    public static boolean isValidStatus(String input) {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"        if (input \u003d\u003d null || input.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"        for (StatusList enumValue : StatusList.class.getEnumConstants()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"            if (enumValue.name().equals(input.toLowerCase(Locale.ROOT))) {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"                return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"        return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"        if (!(other instanceof Status)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"        Status otherStatus \u003d (Status) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"        return value.equals(otherStatus.value);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"qz1004"},"content":"        return value;","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":9,"qz1004":67,"LoMaply":1}},{"path":"src/main/java/seedu/address/model/person/StatusContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":" * Tests that a {@code Person}\u0027s {@code Status} duration within the given start and end.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"public class StatusContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"    public StatusContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"                .anyMatch(keyword -\u003e keyword.isEmpty()","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"                        || StringUtil.containsWordIgnoreCase(person.getStatus().toString(), keyword));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"        if (!(other instanceof StatusContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        StatusContainsKeywordsPredicate otherStatusContainsKeywordsPredicate \u003d (StatusContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"        return keywords.equals(otherStatusContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"qz1004":46}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"    private final Comparator\u003cPerson\u003e sortByLastContactComparator \u003d Comparator.comparing(Person::getLastContactedTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"     * Creates a UniquePersonList object that is sorted by last contact time.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"    public UniquePersonList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"        FXCollections.sort(internalList, sortByLastContactComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"        internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        return internalList.stream().anyMatch(toCheck::isDuplicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"     * Returns true if the list contains a person with the same name as the given argument.","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    public boolean contains(String name) {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        return internalList.stream().anyMatch(person -\u003e person.getName().equals(new Name(name)));","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"        FXCollections.sort(internalList, sortByLastContactComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"     * Returns the person with the given name","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"     * or throws {@code IndexOutOfBoundsException} if it does not exist.","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"    public Person getPerson(String fullName) {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        Name name \u003d new Name(fullName);","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"        List\u003cPerson\u003e filteredList \u003d internalList.filtered(person -\u003e person.getName().equals(name));","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        return filteredList.get(0);","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"        if (!target.isDuplicate(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"LoMaply"},"content":"        FXCollections.sort(internalList, sortByLastContactComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"LoMaply"},"content":"        FXCollections.sort(internalList, sortByLastContactComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"LoMaply"},"content":"        FXCollections.sort(internalList, sortByLastContactComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":134,"author":{"gitId":"LoMaply"},"content":"        FXCollections.sort(internalList, sortByLastContactComparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"howenc":6,"jason-raiin":15,"-":150,"LoMaply":16}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    /*","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"     * Hashmap for keeping track of unique tags","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"    private static final Map\u003cString, Tag\u003e TAGS \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"    private Tag(String tagName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"     * Factory method for creating {@code Tag},","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"    public static Tag of(String tagName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"        if (TAGS.containsKey(tagName)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"            return TAGS.get(tagName);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"        Tag newTag \u003d new Tag(tagName);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"        TAGS.put(tagName, newTag);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"        return newTag;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"     * Returns a truncated Tag if it is more than 20 characters long.","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    public String shortTagName() {","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        if (this.tagName.length() \u003e\u003d 20) {","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"            return this.tagName.substring(0, 20) + \"...\";","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        return this.tagName;","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"howenc":10,"jason-raiin":25,"-":61}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.MeetingStatus;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"                        DateTimeUtil.parse(\"02.10.2023 1000\"), new Status(\"\"), new Remark(\"\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"                        DateTimeUtil.parse(\"02.10.2023 1300\"), new Status(\"\"), new Remark(\"\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"                        DateTimeUtil.parse(\"02.10.2023 1500\"), new Status(\"\"), new Remark(\"\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"                        DateTimeUtil.parse(\"02.10.2023 1000\"), new Status(\"\"), new Remark(\"\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"                        getTagSet(\"colleagues\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"                        DateTimeUtil.parse(\"02.10.2023 1900\"), new Status(\"\"), new Remark(\"\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"                        DateTimeUtil.parse(\"12.10.2023 1000\"), new Status(\"\"), new Remark(\"\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    public static Meeting[] getSampleMeetings() {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        return new Meeting[] {","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"            new Meeting(new Title(\"Meeting with Alex\"), new Location(\"Starbucks\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"                    DateTimeUtil.parse(\"02.10.2023 1000\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"                    DateTimeUtil.parse(\"02.10.2023 1200\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"                    getAttendeeSet(\"Alex Yeoh\"), getTagSet(\"work\"), new MeetingStatus(false)),","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"            new Meeting(new Title(\"Meet with team\"), new Location(\"Office meeting room\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"                    DateTimeUtil.parse(\"02.10.2023 1000\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"                    DateTimeUtil.parse(\"03.10.2023 1200\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                    getAttendeeSet(\"Bernice Yu\", \"David Li\"), getTagSet(\"work\"), new MeetingStatus(false)),","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"        for (Meeting sampleMeeting : getSampleMeetings()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"            sampleAb.addMeeting(sampleMeeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"                .map(Tag::of)","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"     * Returns an attendee set containing the list of strings given.","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"    public static Set\u003cAttendee\u003e getAttendeeSet(String... strings) {","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"                .map(Attendee::new)","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"                .collect(Collectors.toCollection(LinkedHashSet::new));","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"howenc":26,"jason-raiin":11,"-":54,"qz1004":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAttendee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"class JsonAdaptedAttendee {","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    private final String attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"     * Constructs a {@code JsonAdaptedAttendee} with the given {@code attendee}.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    public JsonAdaptedAttendee(String attendee) {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"        this.attendee \u003d attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public JsonAdaptedAttendee(Attendee attendee) {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        this.attendee \u003d attendee.getAttendeeName();","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    @JsonValue","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    public String getAttendee() {","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        return attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code attendee} object.","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted attendee.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public Attendee toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        if (!Attendee.isValidAttendee(attendee)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(Attendee.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        return new Attendee(attendee);","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.MeetingStatus;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"class JsonAdaptedMeeting {","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meeting\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    private final String title;","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    private final String location;","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    private final String start;","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    private final String end;","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    private final List\u003cJsonAdaptedAttendee\u003e attendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"    private final String status;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"title\") String title, @JsonProperty(\"location\") String location,","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"                             @JsonProperty(\"start\") String start, @JsonProperty(\"end\") String end,","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"                             @JsonProperty(\"attendees\") List\u003cJsonAdaptedAttendee\u003e attendees,","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"status\") String status) {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        if (attendees !\u003d null) {","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"            this.attendees.addAll(attendees);","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"        title \u003d source.getTitle().meetingTitle;","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        location \u003d source.getLocation().location;","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        start \u003d source.getStart().toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        end \u003d source.getEnd().toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        attendees.addAll(source.getAttendees().stream()","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"                .map(JsonAdaptedAttendee::new)","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        status \u003d source.getStatus().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"     * Converts this Jackson-friendly adapted meeting object into the model\u0027s {@code meeting} object.","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        final List\u003cAttendee\u003e meetingAttendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        for (JsonAdaptedAttendee person : attendees) {","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"            meetingAttendees.add(person.toModelType());","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"        final Set\u003cAttendee\u003e modelAttendees \u003d new HashSet\u003c\u003e(meetingAttendees);","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"        final List\u003cTag\u003e meetingTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"            meetingTags.add(tag.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(meetingTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"                    Title.class.getSimpleName()));","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"        if (start \u003d\u003d null || end \u003d\u003d null) {","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-02"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"                    LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"            if (!MeetingTime.isValidMeetingTime(LocalDateTime.parse(start), LocalDateTime.parse(end))) {","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"                throw new IllegalValueException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-02"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"            throw new IllegalValueException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"        final LocalDateTime modelStart \u003d LocalDateTime.parse(start);","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"        final LocalDateTime modelEnd \u003d LocalDateTime.parse(end);","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"jason-raiin"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"jason-raiin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"jason-raiin"},"content":"                    MeetingStatus.class.getSimpleName()));","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"jason-raiin"},"content":"        if (!status.equals(Boolean.FALSE.toString()) \u0026\u0026 !status.equals(Boolean.TRUE.toString())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"jason-raiin"},"content":"            throw new IllegalValueException(MeetingStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"jason-raiin"},"content":"        final MeetingStatus modelStatus \u003d new MeetingStatus(Boolean.parseBoolean(status));","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"jason-raiin"},"content":"        return new Meeting(modelTitle, modelLocation, modelStart, modelEnd, modelAttendees, modelTags, modelStatus);","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"howenc":106,"jason-raiin":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.LastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"    private final String lastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"    private final String status;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"    private final String remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"lastContactedTime\") String lastContactedTime,","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"            @JsonProperty(\"status\") String status, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"        this.lastContactedTime \u003d lastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"        lastContactedTime \u003d source.getLastContactedTime().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"        status \u003d source.getStatus().value;","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"juzzztinsoong"},"content":"        if (lastContactedTime \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"juzzztinsoong"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"juzzztinsoong"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"juzzztinsoong"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"juzzztinsoong"},"content":"            if (!LastContactedTime.isValidLastContactedTime(LocalDateTime.parse(lastContactedTime))) {","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"juzzztinsoong"},"content":"                throw new IllegalValueException(LastContactedTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"juzzztinsoong"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"juzzztinsoong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"juzzztinsoong"},"content":"            throw new IllegalValueException(LastContactedTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"juzzztinsoong"},"content":"        final LocalDateTime modelLastContactedTime \u003d LocalDateTime.parse(lastContactedTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"qz1004"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"qz1004"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"qz1004"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"qz1004"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"juzzztinsoong"},"content":"        final Remark modelRemark \u003d (remark \u003d\u003d null) ? new Remark(\"\") : new Remark(remark);","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"juzzztinsoong"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelLastContactedTime, modelStatus, modelRemark,","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"juzzztinsoong"},"content":"                modelTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":98,"juzzztinsoong":27,"qz1004":9}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        return Tag.of(tagName);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jason-raiin":1,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"@JsonRootName(value \u003d \"outbook\")","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"Meetings list contains duplicate meeting(s).\";","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    public static final String MESSAGE_ATTENDEE_NOT_FOUND \u003d \"Meeting attendee is not found in Persons list\";","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"            @JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"            Set\u003cAttendee\u003e meetingAttendees \u003d meeting.getAttendees();","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"            for (Attendee attendee : meetingAttendees) {","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"                if (!addressBook.hasName(attendee.getAttendeeName())) {","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"                    throw new IllegalValueException(MESSAGE_ATTENDEE_NOT_FOUND);","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"                }","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"            if (addressBook.hasMeeting(meeting)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"            addressBook.addMeeting(meeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"howenc":23,"-":58,"juzzztinsoong":1}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-f12-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jason-raiin":1,"-":101}},{"path":"src/main/java/seedu/address/ui/InfoDisplayPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":" * Panel containing detailed information for person and meeting.","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"public class InfoDisplayPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"    private static final String FXML \u003d \"InfoDisplayPanel.fxml\";","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"    private Label personDisplay;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"    private FlowPane personTags;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"    private Label meetingDisplay;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"    private FlowPane meetingTags;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"     * Creates a text display with the given {@code person}.","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"    public InfoDisplayPanel() {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"        super(FXML);","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"    public void setViewedModel(Pair\u003cPerson, Meeting\u003e pair) {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"        Person person \u003d pair.getKey();","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"        Meeting meeting \u003d pair.getValue();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"        personTags.getChildren().clear();","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"        meetingTags.getChildren().clear();","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"        if (person !\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"            personDisplay.setText(person.toDisplayString());","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"            person.getTags().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"                    .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"                    .forEach(tag -\u003e personTags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"            personDisplay.setText(\"\");","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"        if (meeting !\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"            meetingDisplay.setText(meeting.toDisplayString());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"            meeting.getTags().stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"                    .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"                    .forEach(tag -\u003e meetingTags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"            meetingDisplay.setText(\"\");","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"LoMaply":58}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"    private MeetingSchedulePanel meetingSchedulePanel;","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"    private InfoDisplayPanel infoDisplayPanel;","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"    private StackPane meetingSchedulePanelPlaceholder;","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"    private StackPane infoDisplayPanelPlaceholder;","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"        meetingSchedulePanel \u003d new MeetingSchedulePanel(logic.getFilteredMeetingList());","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"LoMaply"},"content":"        meetingSchedulePanelPlaceholder.getChildren().add(meetingSchedulePanel.getRoot());","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"LoMaply"},"content":"        // Viewed Person/Meeting are forwarded here in executeCommand below","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"LoMaply"},"content":"        infoDisplayPanel \u003d new InfoDisplayPanel();","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"LoMaply"},"content":"        infoDisplayPanelPlaceholder.getChildren().add(infoDisplayPanel.getRoot());","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"LoMaply"},"content":"            // Insert Person/Meeting object into infoDisplay for view commands","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"LoMaply"},"content":"            infoDisplayPanel.setViewedModel(logic.getViewedItems());","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"howenc":1,"-":196,"LoMaply":17}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.verbose;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":" * An UI component that displays information of a {@code Meeting}.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    private static final String FXML \u003d \"MeetingScheduleCard.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    public final Meeting meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    private Label l;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"    private Label title;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    private Label id;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    private Label start;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    private Label end;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"    private Label status;","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"     * Creates a {@code MeetingCode} with the given {@code Meeting} and index to display.","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        title.setText(meeting.getTitle().meetingTitle);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        l.setText(meeting.getLocation().shortLocation());","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        LocalDateTime startTime \u003d meeting.getStart();","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"        LocalDateTime endTime \u003d meeting.getEnd();","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"        start.setText(\"Start: \" + verbose(startTime));","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"        end.setText(\"End: \" + verbose(endTime));","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"        meeting.getTags().stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.shortTagName())));","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"        if (meeting.getStatus().isComplete) {","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"            status.setText(\"COMPLETE\");","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"            status.setText(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"howenc":54,"jason-raiin":16,"LoMaply":1}},{"path":"src/main/java/seedu/address/ui/MeetingSchedulePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":" * Panel containing schedule of meetings.","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"public class MeetingSchedulePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"    private static final String FXML \u003d \"MeetingSchedulePanel.fxml\";","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    private ListView\u003cMeeting\u003e meetingScheduleView;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"     * Creates a {@code MeetingSchedulePanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    public MeetingSchedulePanel(ObservableList\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"        super(FXML);","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        meetingScheduleView.setItems(meetingList);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        meetingScheduleView.setCellFactory(listView -\u003e new MeetingScheduleViewCell());","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"        // Code to convert meetingList to a visual schedule","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    class MeetingScheduleViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"                setText(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"            } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"howenc":22,"LoMaply":20}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"    private Label status;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    private Label lastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        email.setText(person.getEmail().shortEmail());","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"        lastContactedTime.setText(\"Last contacted: \" + person.getLastContactedDisplay());","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"        status.setText(person.getStatus().value);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.shortTagName())));","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"howenc":2,"jason-raiin":1,"-":54,"qz1004":3,"juzzztinsoong":2}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"qz1004"},"content":".cell_status_label {","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"qz1004"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"qz1004"},"content":"    -fx-background-color: #70798c;","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"qz1004"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"qz1004"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"qz1004"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"qz1004"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"LoMaply"},"content":"#tags, #personTags, #meetingTags {","lastModifiedDate":"2023-10-24"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"LoMaply"},"content":"#tags .label, #personTags .label, #meetingTags .label {","lastModifiedDate":"2023-10-24"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":350,"qz1004":9,"LoMaply":2}},{"path":"src/main/resources/view/InfoDisplayPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"  \u003cGridPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"      \u003cRowConstraints percentHeight\u003d\"50\" /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"      \u003cRowConstraints percentHeight\u003d\"50\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"      \u003cScrollPane fx:id\u003d\"personScroll\" hbarPolicy\u003d\"NEVER\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent; -fx-border-width: 1px; -fx-padding: 0 5 0 0;\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"0\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"        \u003cVBox GridPane.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"          \u003cFlowPane fx:id\u003d\"personTags\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"          \u003cLabel fx:id\u003d\"personDisplay\" maxHeight\u003d\"-Infinity\" prefWidth\u003d\"${personScroll.width}\" style\u003d\"-fx-margin: 0 30 0 0\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"      \u003cScrollPane fx:id\u003d\"meetingScroll\" hbarPolicy\u003d\"NEVER\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent; -fx-border-width: 1px; -fx-padding: 0 5 0 0;\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"1\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"        \u003cVBox GridPane.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"          \u003cFlowPane fx:id\u003d\"meetingTags\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"          \u003cLabel fx:id\u003d\"meetingDisplay\" prefWidth\u003d\"${meetingScroll.width}\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"      \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"         \u003cColumnConstraints /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"      \u003c/columnConstraints\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"LoMaply":37}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"750\" onCloseRequest\u003d\"#handleExit\" title\u003d\"OutBook\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"        \u003cGridPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"          \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"            \u003cColumnConstraints percentWidth\u003d\"33\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"            \u003cColumnConstraints percentWidth\u003d\"34\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"            \u003cColumnConstraints percentWidth\u003d\"33\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"          \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"0\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"            \u003cVBox fx:id\u003d\"meetingSchedule\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"1\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"              \u003cStackPane fx:id\u003d\"meetingSchedulePanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"            \u003cVBox fx:id\u003d\"infoDisplay\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"2\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"LoMaply"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"LoMaply"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"LoMaply"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"LoMaply"},"content":"              \u003cStackPane fx:id\u003d\"infoDisplayPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"LoMaply"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"LoMaply"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"LoMaply"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"howenc":1,"-":51,"LoMaply":33}},{"path":"src/main/resources/view/MeetingScheduleCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"        \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_status_label\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"      \u003cLabel fx:id\u003d\"start\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$start\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"      \u003cLabel fx:id\u003d\"end\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$end\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"      \u003cLabel fx:id\u003d\"l\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$l\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"howenc":32,"jason-raiin":2,"LoMaply":3}},{"path":"src/main/resources/view/MeetingSchedulePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"\u003cVBox minWidth\u003d\"200.0\" prefWidth\u003d\"250.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"    \u003cListView fx:id\u003d\"meetingScheduleView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"howenc":2,"jason-raiin":1,"LoMaply":5}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        \u003cLabel fx:id\u003d\"status\" contentDisplay\u003d\"RIGHT\" styleClass\u003d\"cell_status_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"      \u003cLabel fx:id\u003d\"lastContactedTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$lastContactedTime\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":11,"-":24,"juzzztinsoong":1,"LoMaply":1}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"\u003cVBox minWidth\u003d\"200.0\" prefWidth\u003d\"210.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":1,"-":7}},{"path":"src/test/java/seedu/address/commons/util/DateTimeUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.FORMATTER;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.VERBOSE_FORMATTER;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.format;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.parse;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.verbose;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"public class DateTimeUtilTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    private String testString \u003d \"20.09.2023 1200\";","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"    private LocalDateTime testDateTime \u003d LocalDateTime.parse(\"20.09.2023 1200\", FORMATTER);","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"    private String testVerbose \u003d testDateTime.format(VERBOSE_FORMATTER);","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"    public void format_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(format(testDateTime), testString);","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"    public void verbose_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(verbose(testDateTime), testVerbose);","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"    public void parse_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(parse(testString), testDateTime);","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"    public void parse_badInput_throwsDateTimeParseException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(DateTimeParseException.class, ()-\u003eparse(\"\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"jason-raiin":42}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTTIME_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"outbook.json\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"        String deleteCommand \u003d \"deletec 9\";","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"juzzztinsoong"},"content":"                + EMAIL_DESC_AMY + LASTTIME_DESC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jason-raiin":1,"-":171,"juzzztinsoong":4}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jason-raiin":1,"-":47}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"    public void execute_personWithSameName_throwsCommandException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(ALICE);","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        Person person \u003d new PersonBuilder(BOB).withName(ALICE.getName().fullName).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        AddCommand addCommand \u003d new AddCommand(person);","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"    public void execute_personWithSameEmail_throwsCommandException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(ALICE);","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"        Person person \u003d new PersonBuilder(BOB).withEmail(ALICE.getEmail().value).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"        AddCommand addCommand \u003d new AddCommand(person);","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"    public void execute_personWithSamePhone_throwsCommandException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(ALICE);","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"        Person person \u003d new PersonBuilder(BOB).withPhone(ALICE.getPhone().value).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"        AddCommand addCommand \u003d new AddCommand(person);","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"        @Override","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"jason-raiin"},"content":"        public Model copy() {","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"jason-raiin"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"jason-raiin"},"content":"        public Person getPerson(String name) {","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":189,"author":{"gitId":"howenc"},"content":"        public void deleteMeeting(Meeting target) {","lastModifiedDate":"2023-10-06"},{"lineNumber":190,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":192,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"howenc"},"content":"        public void updateAttendee(String targetAttendee, String editedAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"howenc"},"content":"        public void deleteAttendee(String targetAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":208,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":209,"author":{"gitId":"howenc"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":210,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":212,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":219,"author":{"gitId":"howenc"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":220,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":222,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":228,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":229,"author":{"gitId":"howenc"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-10-06"},{"lineNumber":230,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":232,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":233,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":234,"author":{"gitId":"howenc"},"content":"        public boolean hasName(String attendeeName) {","lastModifiedDate":"2023-10-06"},{"lineNumber":235,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":237,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":238,"author":{"gitId":"LoMaply"},"content":"        @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":239,"author":{"gitId":"LoMaply"},"content":"        public void setViewedPersonIndex(Index person) {","lastModifiedDate":"2023-10-19"},{"lineNumber":240,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":242,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":243,"author":{"gitId":"LoMaply"},"content":"        @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":244,"author":{"gitId":"jason-raiin"},"content":"        public void setViewedMeetingIndex(Index meeting) {","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":247,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":248,"author":{"gitId":"LoMaply"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":249,"author":{"gitId":"LoMaply"},"content":"        public Pair\u003cPerson, Meeting\u003e getViewedItems() {","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"LoMaply"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":251,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"jason-raiin"},"content":"            return this.person.isDuplicate(person);","lastModifiedDate":"2023-11-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"howenc":40,"jason-raiin":44,"-":199,"LoMaply":13}},{"path":"src/test/java/seedu/address/logic/commands/AddMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"public class AddMeetingCommandTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    public void constructor_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMeetingCommand(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    public void execute_meetingAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        AddMeetingCommandTest.ModelStubAcceptingMeetingAdded modelStub \u003d","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"                new AddMeetingCommandTest.ModelStubAcceptingMeetingAdded();","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        CommandResult commandResult \u003d new AddMeetingCommand(validMeeting).execute(modelStub);","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        assertEquals(String.format(AddMeetingCommand.MESSAGE_SUCCESS, Messages.format(validMeeting)),","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        assertEquals(Arrays.asList(validMeeting), modelStub.meetingsAdded);","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    public void execute_duplicateMeeting_throwsCommandException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(validMeeting);","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        AddMeetingCommandTest.ModelStub modelStub \u003d new AddMeetingCommandTest.ModelStubWithMeeting(validMeeting);","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"                AddMeetingCommand.MESSAGE_DUPLICATE_MEETING, () -\u003e addMeetingCommand.execute(modelStub));","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        Meeting m1 \u003d new MeetingBuilder().withTitle(\"m1\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        Meeting m2 \u003d new MeetingBuilder().withTitle(\"m2\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"        AddMeetingCommand addm1Command \u003d new AddMeetingCommand(m1);","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        AddMeetingCommand addm2Command \u003d new AddMeetingCommand(m2);","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        assertTrue(addm1Command.equals(addm1Command));","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        AddMeetingCommand addm1CommandCopy \u003d new AddMeetingCommand(m1);","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        assertTrue(addm1Command.equals(addm1CommandCopy));","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        assertFalse(addm1Command.equals(1));","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        assertFalse(addm1Command.equals(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"        assertFalse(addm1Command.equals(addm2Command));","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(MEETING1);","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        String expected \u003d AddMeetingCommand.class.getCanonicalName() + \"{toAdd\u003d\" + MEETING1 + \"}\";","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        assertEquals(expected, addMeetingCommand.toString());","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"        @Override","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"        public Model copy() {","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"jason-raiin"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"jason-raiin"},"content":"        public Person getPerson(String name) {","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"        public void deleteMeeting(Meeting target) {","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"        public void updateAttendee(String targetAttendee, String editedAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"howenc"},"content":"        public void deleteAttendee(String targetAttendee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":190,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":191,"author":{"gitId":"howenc"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-04"},{"lineNumber":192,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":194,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":198,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":199,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":200,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":201,"author":{"gitId":"howenc"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":202,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":204,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":205,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":206,"author":{"gitId":"howenc"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-04"},{"lineNumber":207,"author":{"gitId":"howenc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":208,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":209,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":210,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":211,"author":{"gitId":"howenc"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-10-04"},{"lineNumber":212,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":214,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":215,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":216,"author":{"gitId":"howenc"},"content":"        public boolean hasName(String attendeeName) {","lastModifiedDate":"2023-10-04"},{"lineNumber":217,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":219,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"LoMaply"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"LoMaply"},"content":"        public void setViewedPersonIndex(Index person) {","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":226,"author":{"gitId":"LoMaply"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":227,"author":{"gitId":"jason-raiin"},"content":"        public void setViewedMeetingIndex(Index meeting) {","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"jason-raiin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"LoMaply"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":232,"author":{"gitId":"LoMaply"},"content":"        public Pair\u003cPerson, Meeting\u003e getViewedItems() {","lastModifiedDate":"2023-10-16"},{"lineNumber":233,"author":{"gitId":"LoMaply"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":234,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":236,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":237,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":238,"author":{"gitId":"howenc"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-04"},{"lineNumber":239,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":240,"author":{"gitId":"howenc"},"content":"    private class ModelStubWithMeeting extends ModelStub {","lastModifiedDate":"2023-10-04"},{"lineNumber":241,"author":{"gitId":"howenc"},"content":"        private final Meeting meeting;","lastModifiedDate":"2023-10-04"},{"lineNumber":242,"author":{"gitId":"howenc"},"content":"        ModelStubWithMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-04"},{"lineNumber":243,"author":{"gitId":"howenc"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-10-04"},{"lineNumber":244,"author":{"gitId":"howenc"},"content":"            this.meeting \u003d meeting;","lastModifiedDate":"2023-10-04"},{"lineNumber":245,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":246,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":247,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":248,"author":{"gitId":"howenc"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-04"},{"lineNumber":249,"author":{"gitId":"howenc"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-10-04"},{"lineNumber":250,"author":{"gitId":"howenc"},"content":"            return this.meeting.isSameMeeting(meeting);","lastModifiedDate":"2023-10-04"},{"lineNumber":251,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":252,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":253,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":254,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":255,"author":{"gitId":"howenc"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-10-04"},{"lineNumber":256,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":257,"author":{"gitId":"howenc"},"content":"    private class ModelStubAcceptingMeetingAdded extends ModelStub {","lastModifiedDate":"2023-10-04"},{"lineNumber":258,"author":{"gitId":"howenc"},"content":"        final ArrayList\u003cMeeting\u003e meetingsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-04"},{"lineNumber":259,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":260,"author":{"gitId":"howenc"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-04"},{"lineNumber":261,"author":{"gitId":"howenc"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-10-04"},{"lineNumber":262,"author":{"gitId":"howenc"},"content":"            return meetingsAdded.stream().anyMatch(meeting::isSameMeeting);","lastModifiedDate":"2023-10-04"},{"lineNumber":263,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":264,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":265,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":266,"author":{"gitId":"howenc"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-04"},{"lineNumber":267,"author":{"gitId":"howenc"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-10-04"},{"lineNumber":268,"author":{"gitId":"howenc"},"content":"            meetingsAdded.add(meeting);","lastModifiedDate":"2023-10-04"},{"lineNumber":269,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":270,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":271,"author":{"gitId":"howenc"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-04"},{"lineNumber":272,"author":{"gitId":"howenc"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-04"},{"lineNumber":273,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":274,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":275,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"howenc":242,"jason-raiin":19,"LoMaply":14}},{"path":"src/test/java/seedu/address/logic/commands/AddMeetingContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":" * {@code AddMeetingContactCommand}.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"public class AddMeetingContactCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"    public void execute_valid_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"        AddMeetingContactCommand addmcCommand \u003d new AddMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"        Meeting meeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"        Person personToAdd \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"        // No errors thrown","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"        String message \u003d assertDoesNotThrow(() -\u003e addmcCommand.execute(model)).getFeedbackToUser();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"        String expectedMessage \u003d String.format(AddMeetingContactCommand.MESSAGE_ADD_MEETING_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"                personToAdd.getName(), meeting.getTitle());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"        // Output message is correct","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"        assertEquals(expectedMessage, message);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"        Meeting updatedMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"        String[] expectedAttendees \u003d new String[] { personToAdd.getName().fullName };","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"        Meeting expectedMeeting \u003d new MeetingBuilder(meeting)","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"                .withAttendees(expectedAttendees)","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"                .build();","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"        // updated attendees set is correct","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"        assertEquals(expectedMeeting, updatedMeeting);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"    public void execute_invalidMeetingIndex_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"        AddMeetingContactCommand addmcCommand \u003d new AddMeetingContactCommand(INDEX_OUT_OF_BOUNDS,","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"        // throws error for invalid meeting index","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"        assertThrows(CommandException.class, () -\u003e addmcCommand.execute(model));","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"    public void execute_invalidContactIndex_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"        AddMeetingContactCommand addmcCommand \u003d new AddMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"qz1004"},"content":"                INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"qz1004"},"content":"        // throws error for invalid attendee index","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"qz1004"},"content":"        assertThrows(CommandException.class, () -\u003e addmcCommand.execute(model));","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"qz1004"},"content":"    public void execute_duplicateAttendee_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"qz1004"},"content":"        AddMeetingContactCommand addmcCommand \u003d new AddMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"qz1004"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        // does not throw the first time","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"        assertDoesNotThrow(() -\u003e addmcCommand.execute(model));","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"qz1004"},"content":"        // throws error for duplicate attendee","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"qz1004"},"content":"        assertThrows(CommandException.class, () -\u003e addmcCommand.execute(model));","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"qz1004"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"qz1004"},"content":"        AddMeetingContactCommand addmcFirstCommand \u003d new AddMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"qz1004"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"qz1004"},"content":"        AddMeetingContactCommand addmcSecondCommand \u003d new AddMeetingContactCommand(INDEX_SECOND_MEETING,","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"qz1004"},"content":"                INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"qz1004"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"qz1004"},"content":"        assertTrue(addmcFirstCommand.equals(addmcFirstCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"qz1004"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"qz1004"},"content":"        AddMeetingContactCommand addmcFirstCommandCopy \u003d new AddMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"qz1004"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"qz1004"},"content":"        assertTrue(addmcFirstCommand.equals(addmcFirstCommandCopy));","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"qz1004"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"qz1004"},"content":"        assertFalse(addmcFirstCommand.equals(1));","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"qz1004"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"qz1004"},"content":"        assertFalse(addmcFirstCommand.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"qz1004"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"qz1004"},"content":"        assertFalse(addmcFirstCommand.equals(addmcSecondCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"qz1004"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"qz1004"},"content":"        AddMeetingContactCommand addmcCommand \u003d new AddMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"qz1004"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"qz1004"},"content":"        String expected \u003d AddMeetingContactCommand.class.getCanonicalName() + \"{meetingIndex\u003d\" + INDEX_FIRST_MEETING","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"qz1004"},"content":"                + \", \" + \"contactIndex\u003d\" + INDEX_FIRST_PERSON + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"qz1004"},"content":"        assertEquals(expected, addmcCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jason-raiin":6,"qz1004":118}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jason-raiin":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTTIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.meeting.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    public static final String VALID_TITLE_MEETING1 \u003d \"CS2103T meeting\";","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"    public static final String VALID_TITLE_MEETING2 \u003d \"Lunch with coworkers\";","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public static final String VALID_LOCATION_MEETING1 \u003d \"Zoom call url\";","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"    public static final String VALID_LOCATION_MEETING2 \u003d \"Food court\";","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String VALID_LASTTIME_AMY \u003d \"20.09.2023 1100\";","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String VALID_LASTTIME_BOB \u003d \"20.09.2023 1200\";","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    public static final String VALID_START_MEETING1 \u003d \"20.09.2023 1000\";","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"    public static final String VALID_START_MEETING2 \u003d \"11.10.2023 0900\";","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"    public static final String VALID_STATUS_AMY \u003d \"\";","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    public static final String VALID_STATUS_BOB \u003d \"prospective\";","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Likes to swim\";","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    public static final String VALID_REMARK_BOB \u003d \"\";","lastModifiedDate":"2023-09-23"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    public static final String VALID_END_MEETING1 \u003d \"20.09.2023 1200\";","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"    public static final String VALID_END_MEETING2 \u003d \"11.10.2023 1300\";","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"    public static final String VALID_TAG_WORK \u003d \"work\";","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    public static final String VALID_ATTENDEE_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    public static final String VALID_ATTENDEE_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    public static final String TITLE_DESC_MEETING1 \u003d \" \" + PREFIX_TITLE + VALID_TITLE_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"    public static final String TITLE_DESC_MEETING2 \u003d \" \" + PREFIX_TITLE + VALID_TITLE_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"    public static final String LOCATION_DESC_MEETING1 \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String LASTTIME_DESC_AMY \u003d \" \" + PREFIX_LASTTIME + VALID_LASTTIME_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String LASTTIME_DESC_BOB \u003d \" \" + PREFIX_LASTTIME + VALID_LASTTIME_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"    public static final String START_DESC_MEETING1 \u003d \" \" + PREFIX_START + VALID_START_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + \"nil\";","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"    public static final String END_DESC_MEETING1 \u003d \" \" + PREFIX_END + VALID_END_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"LoMaply"},"content":"    public static final String END_DESC_MEETING2 \u003d \" \" + PREFIX_END + VALID_END_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"    public static final String TAG_DESC_WORK \u003d \" \" + PREFIX_TAG + VALID_TAG_WORK;","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"    public static final String ATTENDEE_DESC_ALICE \u003d \" \" + PREFIX_NAME + VALID_ATTENDEE_ALICE;","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"    public static final String ATTENDEE_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_ATTENDEE_BOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    public static final String INVALID_TITLE_DESC \u003d \" \" + PREFIX_TITLE + \" \"; // \" \" blank is not allowed in Titles","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION + \" \"; // blank is not allowed in Location","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String INVALID_LASTTIME_DESC \u003d \" \" + PREFIX_LASTTIME + \"20.21.2023\"; // wrong DateTime format","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"qz1004"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"Insured\"; // not in predefined status list","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"    public static final String INVALID_START_DESC \u003d \" \" + PREFIX_START + \"99.99.9999 9999\";","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"    public static final String INVALID_END_DESC \u003d \" \" + PREFIX_END + \"99.99.9999 9999\";","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"    public static final String INVALID_ATTENDEE_DESC \u003d INVALID_NAME_DESC;","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"juzzztinsoong"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withLastContactedTime(VALID_LASTTIME_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"juzzztinsoong"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withLastContactedTime(VALID_LASTTIME_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"LoMaply"},"content":"    public static final EditMeetingCommand.EditMeetingDescriptor DESC_MEET1;","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"LoMaply"},"content":"    public static final EditMeetingCommand.EditMeetingDescriptor DESC_MEET2;","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"LoMaply"},"content":"    static {","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"LoMaply"},"content":"        DESC_MEET1 \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_MEETING1)","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"LoMaply"},"content":"                .withLocation(VALID_LOCATION_MEETING1).withStart(VALID_START_MEETING1)","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"LoMaply"},"content":"                .withEnd(VALID_END_MEETING1).withTags(VALID_TAG_WORK).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"LoMaply"},"content":"        DESC_MEET2 \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_MEETING2)","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"LoMaply"},"content":"                .withLocation(VALID_LOCATION_MEETING2).withStart(VALID_START_MEETING2)","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"LoMaply"},"content":"                .withEnd(VALID_END_MEETING2).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"juzzztinsoong"},"content":"        List\u003cPerson\u003e expectedFilteredPersonList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"juzzztinsoong"},"content":"        List\u003cMeeting\u003e expectedFilteredMeetingList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredMeetingList());","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"juzzztinsoong"},"content":"        assertEquals(expectedFilteredPersonList, actualModel.getFilteredPersonList());","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"juzzztinsoong"},"content":"        assertEquals(expectedFilteredMeetingList, actualModel.getFilteredMeetingList());","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"juzzztinsoong"},"content":"     * Updates {@code model}\u0027s filtered list to show only the meeting at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"juzzztinsoong"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"juzzztinsoong"},"content":"    public static void showMeetingAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"juzzztinsoong"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredMeetingList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"juzzztinsoong"},"content":"        Meeting meeting \u003d model.getFilteredMeetingList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"juzzztinsoong"},"content":"        final String[] splitName \u003d meeting.getTitle().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"juzzztinsoong"},"content":"        model.updateFilteredMeetingList(new TitleContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"juzzztinsoong"},"content":"        assertEquals(1, model.getFilteredMeetingList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"howenc":28,"jason-raiin":2,"-":117,"juzzztinsoong":29,"qz1004":4,"LoMaply":18}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    public void deleteAttendees() {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder().withAttendees(firstPerson.getName().fullName).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        model.addMeeting(editedMeeting);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        Meeting editedMeetingTester \u003d new MeetingBuilder().withAttendees(firstPerson.getName().fullName).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        expectedModel.addMeeting(editedMeetingTester);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        expectedModel.deletePerson(firstPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        expectedModel.deleteAttendee(firstPerson.getName().fullName);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"                Messages.format(firstPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"howenc":21,"jason-raiin":1,"-":119}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":" * {@code DeleteMeetingCommand}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"public class DeleteMeetingCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"        Meeting meetingToDelete \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"        String expectedMessage \u003d String.format(DeleteMeetingCommand.MESSAGE_DELETE_MEETING_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"                Messages.format(meetingToDelete));","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"        expectedModel.deleteMeeting(meetingToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        assertCommandSuccess(deleteMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"juzzztinsoong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"        assertCommandFailure(deleteMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"juzzztinsoong"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"juzzztinsoong"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"        Meeting meetingToDelete \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"juzzztinsoong"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"        String expectedMessage \u003d String.format(DeleteMeetingCommand.MESSAGE_DELETE_MEETING_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"                Messages.format(meetingToDelete));","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"juzzztinsoong"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"juzzztinsoong"},"content":"        expectedModel.deleteMeeting(meetingToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"juzzztinsoong"},"content":"        showNoMeeting(expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"        assertCommandSuccess(deleteMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"        System.out.println(\"hi\");","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"juzzztinsoong"},"content":"        System.out.println(outOfBoundIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"        System.out.println(model.getAddressBook().getMeetingList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"juzzztinsoong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"juzzztinsoong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMeetingList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"juzzztinsoong"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"juzzztinsoong"},"content":"        assertCommandFailure(deleteMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"juzzztinsoong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"juzzztinsoong"},"content":"        DeleteMeetingCommand deleteFirstCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"juzzztinsoong"},"content":"        DeleteMeetingCommand deleteSecondCommand \u003d new DeleteMeetingCommand(INDEX_SECOND_MEETING);","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"juzzztinsoong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"juzzztinsoong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"juzzztinsoong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"juzzztinsoong"},"content":"        DeleteMeetingCommand deleteFirstCommandCopy \u003d new DeleteMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"juzzztinsoong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"juzzztinsoong"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"juzzztinsoong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"juzzztinsoong"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"juzzztinsoong"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"juzzztinsoong"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"juzzztinsoong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"juzzztinsoong"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"juzzztinsoong"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"juzzztinsoong"},"content":"        String expected \u003d DeleteMeetingCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"juzzztinsoong"},"content":"        assertEquals(expected, deleteMeetingCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"juzzztinsoong"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"juzzztinsoong"},"content":"    private void showNoMeeting(Model model) {","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"juzzztinsoong"},"content":"        model.updateFilteredMeetingList(p -\u003e false);","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"juzzztinsoong"},"content":"        assertTrue(model.getFilteredMeetingList().isEmpty());","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jason-raiin":1,"juzzztinsoong":122}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public void updateAttendees() {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withName(\"James\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"                new EditPersonDescriptorBuilder(editedPerson).build());","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder().withAttendees(firstPerson.getName().fullName).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        model.addMeeting(editedMeeting);","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        Meeting editedMeetingTester \u003d new MeetingBuilder().withAttendees(firstPerson.getName().fullName).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        expectedModel.addMeeting(editedMeetingTester);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        expectedModel.updateAttendee(firstPerson.getName().fullName, \"James\");","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(0)).build();","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"        Index indexFirstPerson \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(indexFirstPerson.getZeroBased());","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"        EditCommand editCommand \u003d new EditCommand(indexFirstPerson, descriptor);","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"howenc":36,"jason-raiin":1,"-":177}},{"path":"src/test/java/seedu/address/logic/commands/EditMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_MEET1;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_MEET2;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditMeetingCommand.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":" * Note that in all test cases, EditMeetingCommand should not modify the attendees list, that function is covered by","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":" * AddMeetingContactCommandTest and RemoveMeetingContactCommandTest","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"public class EditMeetingCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"        // Attendees field do not get edited by this command.","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder().withAttendees(TypicalPersons.getTypicalAttendeesSubset1()).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(editedMeeting).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_SECOND_MEETING, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"                Messages.format(editedMeeting));","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        expectedModel.setMeeting(model.getFilteredMeetingList().get(1), editedMeeting);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"LoMaply"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"        Index indexLastMeeting \u003d Index.fromOneBased(model.getFilteredMeetingList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"LoMaply"},"content":"        Meeting lastMeeting \u003d model.getFilteredMeetingList().get(indexLastMeeting.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"        MeetingBuilder meetingInList \u003d new MeetingBuilder(lastMeeting);","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"        Meeting editedMeeting \u003d meetingInList.withTitle(VALID_TITLE_MEETING1).withStart(VALID_START_MEETING1)","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"                .withEnd(VALID_END_MEETING1).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_MEETING1)","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"                .withStart(VALID_START_MEETING1).withEnd(VALID_END_MEETING1).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(indexLastMeeting, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"LoMaply"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"LoMaply"},"content":"                Messages.format(editedMeeting));","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"LoMaply"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"LoMaply"},"content":"        expectedModel.setMeeting(lastMeeting, editedMeeting);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"LoMaply"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"LoMaply"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"LoMaply"},"content":"                new EditMeetingDescriptor());","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"LoMaply"},"content":"        Meeting editedMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"LoMaply"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"LoMaply"},"content":"                Messages.format(editedMeeting));","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"LoMaply"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"LoMaply"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"LoMaply"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"LoMaply"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"LoMaply"},"content":"        Meeting meetingInFilteredList \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"LoMaply"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(meetingInFilteredList).withLocation(VALID_LOCATION_MEETING1).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"LoMaply"},"content":"                new EditMeetingDescriptorBuilder().withLocation(VALID_LOCATION_MEETING1).build());","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"LoMaply"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"LoMaply"},"content":"                Messages.format(editedMeeting));","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"LoMaply"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"LoMaply"},"content":"        expectedModel.setMeeting(model.getFilteredMeetingList().get(0), editedMeeting);","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"LoMaply"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"LoMaply"},"content":"    public void execute_duplicateMeetingUnfilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"LoMaply"},"content":"        Meeting firstMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(firstMeeting).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_SECOND_MEETING, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"LoMaply"},"content":"        assertCommandFailure(editMeetingCommand, model, EditMeetingCommand.MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"LoMaply"},"content":"    public void execute_duplicateMeetingFilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"LoMaply"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"LoMaply"},"content":"        // edit meeting in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"LoMaply"},"content":"        Meeting meetingInList \u003d model.getAddressBook().getMeetingList().get(INDEX_SECOND_MEETING.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"LoMaply"},"content":"                new EditMeetingDescriptorBuilder(meetingInList).build());","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"LoMaply"},"content":"        assertCommandFailure(editMeetingCommand, model, EditMeetingCommand.MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"LoMaply"},"content":"    public void execute_invalidMeetingIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"LoMaply"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_MEETING1).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"LoMaply"},"content":"        assertCommandFailure(editMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"LoMaply"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"LoMaply"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"LoMaply"},"content":"    public void execute_invalidMeetingIndexFilteredList_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"LoMaply"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"LoMaply"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"LoMaply"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"LoMaply"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMeetingList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"LoMaply"},"content":"                new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_MEETING1).build());","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"LoMaply"},"content":"        assertCommandFailure(editMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"LoMaply"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"LoMaply"},"content":"        final EditMeetingCommand standardCommand \u003d new EditMeetingCommand(INDEX_FIRST_MEETING, DESC_MEET1);","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"LoMaply"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor copyDescriptor \u003d new EditMeetingDescriptor(DESC_MEET1);","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand commandWithSameValues \u003d new EditMeetingCommand(INDEX_FIRST_MEETING, copyDescriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"LoMaply"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"LoMaply"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"LoMaply"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"LoMaply"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"LoMaply"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"LoMaply"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"LoMaply"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"LoMaply"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"LoMaply"},"content":"        assertFalse(standardCommand.equals(new EditMeetingCommand(INDEX_SECOND_MEETING, DESC_MEET1)));","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"LoMaply"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"LoMaply"},"content":"        assertFalse(standardCommand.equals(new EditMeetingCommand(INDEX_FIRST_MEETING, DESC_MEET2)));","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"LoMaply"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"LoMaply"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(index, editMeetingDescriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"LoMaply"},"content":"        String expected \u003d EditMeetingCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editMeetingDescriptor\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"LoMaply"},"content":"                + editMeetingDescriptor + \"}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"LoMaply"},"content":"        assertEquals(expected, editMeetingCommand.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jason-raiin":4,"LoMaply":191}},{"path":"src/test/java/seedu/address/logic/commands/EditMeetingDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_MEET1;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_MEET2;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"public class EditMeetingDescriptorTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor descriptorWithSameValues \u003d new EditMeetingDescriptor(DESC_MEET1);","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"        assertTrue(DESC_MEET1.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"        assertTrue(DESC_MEET1.equals(DESC_MEET1));","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"        assertFalse(DESC_MEET1.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"        assertFalse(DESC_MEET1.equals(5));","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"        assertFalse(DESC_MEET1.equals(DESC_MEET2));","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor editedMeet1 \u003d new EditMeetingDescriptorBuilder(DESC_MEET1).withTitle(VALID_TITLE_MEETING2)","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"                .build();","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"        assertFalse(DESC_MEET1.equals(editedMeet1));","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"        editedMeet1 \u003d new EditMeetingDescriptorBuilder(DESC_MEET1).withLocation(VALID_LOCATION_MEETING2).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"        assertFalse(DESC_MEET1.equals(editedMeet1));","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"        // different start time -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"        editedMeet1 \u003d new EditMeetingDescriptorBuilder(DESC_MEET1).withStart(VALID_START_MEETING2).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"        assertFalse(DESC_MEET1.equals(editedMeet1));","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"        // different end time -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"        editedMeet1 \u003d new EditMeetingDescriptorBuilder(DESC_MEET1).withEnd(VALID_END_MEETING2).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"        assertFalse(DESC_MEET1.equals(editedMeet1));","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"        // different tags -\u003e return false","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"        editedMeet1 \u003d new EditMeetingDescriptorBuilder(DESC_MEET1).withTitle(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"        assertFalse(DESC_MEET1.equals(editedMeet1));","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"LoMaply"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"LoMaply"},"content":"        String expected \u003d EditMeetingDescriptor.class.getCanonicalName() + \"{title\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"                + editMeetingDescriptor.getTitle().orElse(null) + \", location\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"                + editMeetingDescriptor.getLocation().orElse(null) + \", start\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"                + editMeetingDescriptor.getStart().orElse(null) + \", end\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"                + editMeetingDescriptor.getEnd().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"                + editMeetingDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"        assertEquals(expected, editMeetingDescriptor.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"LoMaply":71}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTTIME_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"        // different last contacted time -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"juzzztinsoong"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withLastContactedTime(VALID_LASTTIME_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", lastContactedTime\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"juzzztinsoong"},"content":"                + editPersonDescriptor.getLastContactedTime().orElse(null) + \", status\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"juzzztinsoong"},"content":"                + editPersonDescriptor.getStatus().orElse(null) + \", remark\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"juzzztinsoong"},"content":"                + editPersonDescriptor.getRemark().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":66,"juzzztinsoong":7}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.GeneralPersonPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.LastContactTimeContainsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.PersonTagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.PhoneContainsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"    private LocalDateTime emptyDateTime \u003d LocalDateTime.MIN;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"    private LocalDateTime lastContacted \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"            LocalDateTime.of(LocalDate.of(0001, 01, 01), LocalTime.of(00, 00));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"    private LocalDateTime lastContacted2 \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"            LocalDateTime.of(LocalDate.of(0001, 01, 30), LocalTime.of(12, 00));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"        GeneralPersonPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"                new GeneralPersonPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"                        new NameContainsKeywordsPredicate(Collections.singletonList(\"first\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"                        new PhoneContainsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"                        new EmailContainsKeywordsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"                        new LastContactTimeContainsPredicate(lastContacted),","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"                        new StatusContainsKeywordsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"                        new PersonTagContainsKeywordsPredicate(List.of(\"\"))","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"                );","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"        GeneralPersonPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"                new GeneralPersonPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"                        new NameContainsKeywordsPredicate(Collections.singletonList(\"second\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"                        new PhoneContainsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"                        new EmailContainsKeywordsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"                        new LastContactTimeContainsPredicate(lastContacted2),","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"                        new StatusContainsKeywordsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"                        new PersonTagContainsKeywordsPredicate(List.of(\"\"))","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"                );","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"qz1004"},"content":"    public void execute_zeroKeywords_allPersonFound() {","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"qz1004"},"content":"        int expectedNumber \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"qz1004"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, expectedNumber);","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"qz1004"},"content":"        GeneralPersonPredicate predicate \u003d preparePredicate(new String[]{\"\", \"\", \"\", \"\", \"\"}, emptyDateTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        assertEquals(Arrays.asList(BOB, ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, HOON),","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"qz1004"},"content":"                model.getFilteredPersonList());","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"qz1004"},"content":"    public void execute_oneNameKeyword_onePersonFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"qz1004"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"qz1004"},"content":"        GeneralPersonPredicate namePredicate \u003d preparePredicate(new String[]{\"ALICE\", \"\", \"\", \"\", \"\"}, emptyDateTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"qz1004"},"content":"        FindCommand findNameCommand \u003d new FindCommand(namePredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"qz1004"},"content":"        expectedModel.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"qz1004"},"content":"        assertCommandSuccess(findNameCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"qz1004"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"qz1004"},"content":"    public void execute_onePhoneKeyword_onePersonFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"qz1004"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"qz1004"},"content":"        GeneralPersonPredicate phonePredicate \u003d preparePredicate(new String[]{\"\", \"512\", \"\", \"\", \"\"}, emptyDateTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"qz1004"},"content":"        FindCommand findPhoneCommand \u003d new FindCommand(phonePredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"qz1004"},"content":"        expectedModel.updateFilteredPersonList(phonePredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"qz1004"},"content":"        assertCommandSuccess(findPhoneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"qz1004"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"qz1004"},"content":"    public void execute_oneLastContactKeyword_onePersonFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jason-raiin"},"content":"        LocalDateTime time \u003d DateTimeUtil.parse(\"20.10.2023 1100\");","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"qz1004"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"qz1004"},"content":"        GeneralPersonPredicate phonePredicate \u003d preparePredicate(new String[]{\"\", \"\", \"\", \"\", \"\"}, time);","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"qz1004"},"content":"        FindCommand findPhoneCommand \u003d new FindCommand(phonePredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"qz1004"},"content":"        expectedModel.updateFilteredPersonList(phonePredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"qz1004"},"content":"        assertCommandSuccess(findPhoneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"qz1004"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"qz1004"},"content":"    public void execute_oneKeyword_multiplePersonFound() {","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"qz1004"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"qz1004"},"content":"        GeneralPersonPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"qz1004"},"content":"                preparePredicate(new String[]{\"Alice Benson\", \"\", \"\", \"\", \"\"}, emptyDateTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"qz1004"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"qz1004"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"qz1004"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"qz1004"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":150,"author":{"gitId":"qz1004"},"content":"        GeneralPersonPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"qz1004"},"content":"                preparePredicate(new String[]{\"Kurz Elle Kunz\", \"\", \"\", \"\", \"\"}, emptyDateTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"qz1004"},"content":"        GeneralPersonPredicate predicate \u003d new GeneralPersonPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"qz1004"},"content":"                new NameContainsKeywordsPredicate(List.of(\"keyword\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"qz1004"},"content":"                new PhoneContainsPredicate(List.of(\"0\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"qz1004"},"content":"                new EmailContainsKeywordsPredicate(List.of(\"keyword\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"qz1004"},"content":"                new LastContactTimeContainsPredicate(lastContacted),","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"qz1004"},"content":"                new StatusContainsKeywordsPredicate(List.of(\"keyword\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"qz1004"},"content":"                new PersonTagContainsKeywordsPredicate(List.of(\"keyword\"))","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"qz1004"},"content":"        );","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":176,"author":{"gitId":"qz1004"},"content":"    private GeneralPersonPredicate preparePredicate(String[] userInput, LocalDateTime lastContacted) {","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"qz1004"},"content":"        return new GeneralPersonPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"qz1004"},"content":"                new NameContainsKeywordsPredicate(List.of(userInput[0].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"qz1004"},"content":"                new PhoneContainsPredicate(List.of(userInput[1].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"qz1004"},"content":"                new EmailContainsKeywordsPredicate(List.of(userInput[2].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"qz1004"},"content":"                new LastContactTimeContainsPredicate(lastContacted),","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"qz1004"},"content":"                new StatusContainsKeywordsPredicate(List.of(userInput[3].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"qz1004"},"content":"                new PersonTagContainsKeywordsPredicate(List.of(userInput[4].split(\"\\\\s+\")))","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"qz1004"},"content":"        );","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"howenc":2,"jason-raiin":3,"-":78,"qz1004":103}},{"path":"src/test/java/seedu/address/logic/commands/FindMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING2;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING3;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING4;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.AttendeeContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.GeneralMeetingPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.LocationContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.meeting.MeetingTagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.meeting.MeetingTimeContainsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":" * Contains integration tests (interaction with the Model) for {@code FindMeetingCommand}.","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"public class FindMeetingCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    private LocalDateTime start \u003d LocalDateTime.of(LocalDate.of(0001, 01, 01), LocalTime.of(00, 00));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"    private LocalDateTime startOn30 \u003d LocalDateTime.of(LocalDate.of(2023, 11, 30), LocalTime.of(10, 00));","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"    private LocalDateTime endOn30 \u003d LocalDateTime.of(LocalDate.of(2023, 11, 30), LocalTime.of(12, 00));","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    private LocalDateTime start2 \u003d LocalDateTime.of(LocalDate.of(0001, 01, 02), LocalTime.of(00, 00));","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    private LocalDateTime end \u003d LocalDateTime.of(LocalDate.of(9999, 12, 31), LocalTime.of(23, 59));","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"                new GeneralMeetingPredicate(new TitleContainsKeywordsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"                        new LocationContainsKeywordsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"                        new MeetingTimeContainsPredicate(start, end),","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"                        new AttendeeContainsKeywordsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"                        new MeetingTagContainsKeywordsPredicate(List.of(\"\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"                new GeneralMeetingPredicate(new TitleContainsKeywordsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"                        new LocationContainsKeywordsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"                        new MeetingTimeContainsPredicate(start2, end),","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"                        new AttendeeContainsKeywordsPredicate(List.of(\"\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"                        new MeetingTagContainsKeywordsPredicate(List.of(\"\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand filterFirstCommand \u003d new FindMeetingCommand(firstPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand filterSecondCommand \u003d new FindMeetingCommand(secondPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand filterFirstCommandCopy \u003d new FindMeetingCommand(firstPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"        // different predicates -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"    public void execute_zeroKeywords_allMeetingFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        int expectedNumber \u003d model.getFilteredMeetingList().size();","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, expectedNumber);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"                preparePredicate(new String[]{\"\", \"\", \"\", \"\"},","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"                        start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        assertEquals(Arrays.asList(MEETING1, MEETING2, MEETING3, MEETING4), model.getFilteredMeetingList());","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"    public void execute_titleAbcdeKeywords_oneMeetingFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"                preparePredicate(new String[]{\"ABCDE\", \"\", \"\", \"\"},","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"                        start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"        assertEquals(Arrays.asList(MEETING4), model.getFilteredMeetingList());","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"    public void execute_titleAbcdeCS2101Keywords_threeMeetingFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"                preparePredicate(new String[]{\"ABCDE CS2101\", \"\", \"\", \"\"},","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"                        start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"        assertEquals(Arrays.asList(MEETING2, MEETING3, MEETING4), model.getFilteredMeetingList());","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"    public void execute_multipleTitleAndLocationKeywords_oneMeetingFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"                preparePredicate(new String[]{\"ABCDE CS2101\", \"Zoom\", \"\", \"\"},","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"                        start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"        assertEquals(Arrays.asList(MEETING2), model.getFilteredMeetingList());","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"    public void execute_multipleTitleAndMultipleLocationKeywords_oneMeetingFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"                preparePredicate(new String[]{\"ABCDE CS2101\", \"Zoom com\", \"\", \"\"},","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"                        start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"        assertEquals(Arrays.asList(MEETING2, MEETING3, MEETING4), model.getFilteredMeetingList());","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"    public void execute_multipleTitleMultipleLocationAndMultipleAttendeeKeywords_twoMeetingFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"jason-raiin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"                preparePredicate(new String[]{\"ABCDE CS2101\", \"Zoom com\", \"Alice Benson\", \"\"},","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"                        start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(Arrays.asList(MEETING3, MEETING4), model.getFilteredMeetingList());","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"    public void execute_multipleTitleMultipleLocationMultipleAttendeeAndTagKeywords_oneMeetingFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"                preparePredicate(new String[]{\"ABCDE CS2101\", \"Zoom com\", \"Alice Benson\", \"work\"},","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"                        start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"        assertEquals(Arrays.asList(MEETING4), model.getFilteredMeetingList());","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"    public void execute_multipleTitleMultipleLocationMultipleAttendeeMultipleTagKeywords_oneMeetingFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"                preparePredicate(new String[]{\"ABCDE CS2101\", \"Zoom com\", \"Alice Benson\", \"work important\"},","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"                        start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"        assertEquals(Arrays.asList(MEETING4), model.getFilteredMeetingList());","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"    public void execute_titleLocationAttendeeTagTimeKeywords_oneMeetingFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"jason-raiin"},"content":"                preparePredicate(new String[]{\"ABCDE CS2101\", \"Zoom com\", \"\", \"work important\"},","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"                        startOn30, endOn30);","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"        expectedModel.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"howenc"},"content":"        assertEquals(Arrays.asList(MEETING4), model.getFilteredMeetingList());","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d new GeneralMeetingPredicate(","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"howenc"},"content":"                new TitleContainsKeywordsPredicate(List.of(\"Keywords\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"howenc"},"content":"                new LocationContainsKeywordsPredicate(List.of(\"Keywords\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"howenc"},"content":"                new MeetingTimeContainsPredicate(start, end),","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"howenc"},"content":"                new AttendeeContainsKeywordsPredicate(List.of(\"Keywords\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"qz1004"},"content":"                new MeetingTagContainsKeywordsPredicate(List.of(\"Keywords\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"howenc"},"content":"        FindMeetingCommand findMeetingCommand \u003d new FindMeetingCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"howenc"},"content":"        String expected \u003d FindMeetingCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"        assertEquals(expected, findMeetingCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"howenc"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"howenc"},"content":"    private GeneralMeetingPredicate preparePredicate(String[] userInput, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"howenc"},"content":"        return new GeneralMeetingPredicate(new TitleContainsKeywordsPredicate(List.of(userInput[0].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"howenc"},"content":"                        new LocationContainsKeywordsPredicate(List.of(userInput[1].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"howenc"},"content":"                        new MeetingTimeContainsPredicate(start, end),","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"howenc"},"content":"                        new AttendeeContainsKeywordsPredicate(List.of(userInput[2].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"qz1004"},"content":"                        new MeetingTagContainsKeywordsPredicate(List.of(userInput[3].split(\"\\\\s+\"))));","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":194,"jason-raiin":8,"qz1004":7}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jason-raiin":1,"-":38}},{"path":"src/test/java/seedu/address/logic/commands/ListMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"public class ListMeetingCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    private Model model;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(new ListMeetingCommand(), model, ListMeetingCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        assertCommandSuccess(new ListMeetingCommand(), model, ListMeetingCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":37,"jason-raiin":2}},{"path":"src/test/java/seedu/address/logic/commands/MarkMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":" * {@code MarkMeetingCommand}.","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"public class MarkMeetingCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"        Meeting meetingToMark \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"        MarkMeetingCommand markMeetingCommand \u003d new MarkMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"        Meeting markedMeeting \u003d new MeetingBuilder(meetingToMark).withStatus(true).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"        String expectedMessage \u003d String.format(MarkMeetingCommand.MESSAGE_MARK_MEETING_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"                Messages.format(markedMeeting));","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"        expectedModel.setMeeting(meetingToMark, markedMeeting);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"        assertCommandSuccess(markMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"        MarkMeetingCommand markMeetingCommand \u003d new MarkMeetingCommand(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"        assertCommandFailure(markMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"        Meeting meetingToMark \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        MarkMeetingCommand markMeetingCommand \u003d new MarkMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"        Meeting markedMeeting \u003d new MeetingBuilder(meetingToMark).withStatus(true).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"        expectedModel.setMeeting(meetingToMark, markedMeeting);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"        showMeetingAtIndex(expectedModel, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"        String expectedMessage \u003d String.format(MarkMeetingCommand.MESSAGE_MARK_MEETING_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"                Messages.format(markedMeeting));","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"        assertCommandSuccess(markMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"        System.out.println(\"hi\");","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"        System.out.println(outOfBoundIndex.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"        System.out.println(model.getAddressBook().getMeetingList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMeetingList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"        MarkMeetingCommand markMeetingCommand \u003d new MarkMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"        assertCommandFailure(markMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"    public void execute_updatesLastContactedTime_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"        Meeting meetingToMark \u003d model.getFilteredMeetingList().get(INDEX_SECOND_MEETING.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"        MarkMeetingCommand markMeetingCommand \u003d new MarkMeetingCommand(INDEX_SECOND_MEETING);","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"        Meeting markedMeeting \u003d new MeetingBuilder(meetingToMark).withStatus(true).build();","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"        String expectedMessage \u003d String.format(MarkMeetingCommand.MESSAGE_MARK_MEETING_SUCCESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"                Messages.format(markedMeeting));","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"jason-raiin"},"content":"        expectedModel.setMeeting(meetingToMark, markedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"jason-raiin"},"content":"        Iterator\u003cAttendee\u003e attendeeIterator \u003d meetingToMark.getAttendees().iterator();","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"        while (attendeeIterator.hasNext()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"jason-raiin"},"content":"            Attendee attendee \u003d attendeeIterator.next();","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"jason-raiin"},"content":"            Person person \u003d expectedModel.getPerson(attendee.getAttendeeName());","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"jason-raiin"},"content":"            Person expectedPerson \u003d new PersonBuilder(person)","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"jason-raiin"},"content":"                    .withLastContactedTime(DateTimeUtil.format(meetingToMark.getEnd())).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"jason-raiin"},"content":"            expectedModel.setPerson(person, expectedPerson);","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"jason-raiin"},"content":"        assertCommandSuccess(markMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"jason-raiin"},"content":"    public void updateLastContactedTime_doesNotUpdateForEarlierTime_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"jason-raiin"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"jason-raiin"},"content":"        Person updatedPerson \u003d MarkMeetingCommand.updateLastContactedTime(person, LocalDateTime.MIN);","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(person, updatedPerson);","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"jason-raiin"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jason-raiin"},"content":"        MarkMeetingCommand markFirstCommand \u003d new MarkMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"jason-raiin"},"content":"        MarkMeetingCommand markSecondCommand \u003d new MarkMeetingCommand(INDEX_SECOND_MEETING);","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"jason-raiin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"jason-raiin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"jason-raiin"},"content":"        MarkMeetingCommand markFirstCommandCopy \u003d new MarkMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"jason-raiin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"jason-raiin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"jason-raiin"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"jason-raiin"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"jason-raiin"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"jason-raiin"},"content":"        MarkMeetingCommand markMeetingCommand \u003d new MarkMeetingCommand(targetIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"jason-raiin"},"content":"        String expected \u003d MarkMeetingCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(expected, markMeetingCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jason-raiin":154}},{"path":"src/test/java/seedu/address/logic/commands/RemoveMeetingContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"public class RemoveMeetingContactCommandTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"    public void execute_valid_success() {","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcCommand \u003d new RemoveMeetingContactCommand(INDEX_SECOND_MEETING,","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"        Meeting meeting \u003d model.getFilteredMeetingList().get(INDEX_SECOND_MEETING.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"        Attendee attendeeToRemove \u003d meeting.getAttendee(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"        // No errors thrown","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        String message \u003d assertDoesNotThrow(() -\u003e rmmcCommand.execute(model)).getFeedbackToUser();","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"        String expectedMessage \u003d String.format(RemoveMeetingContactCommand.MESSAGE_REMOVE_MEETING_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"jason-raiin"},"content":"                attendeeToRemove.getAttendeeName(), meeting.getTitle());","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"        // Output message is correct","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(expectedMessage, message);","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"        Meeting updatedMeeting \u003d model.getFilteredMeetingList().get(INDEX_SECOND_MEETING.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        String[] expectedAttendees \u003d Arrays.copyOfRange(TypicalPersons.getTypicalAttendeesSubset1(), 1, 4);","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        Meeting expectedMeeting \u003d new MeetingBuilder(meeting)","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"            .withAttendees(expectedAttendees)","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"            .build();","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"        // updated attendees set is correct","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(expectedMeeting, updatedMeeting);","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"    public void execute_invalidMeetingIndex_throwsCommandException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcCommand \u003d new RemoveMeetingContactCommand(INDEX_OUT_OF_BOUNDS,","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"        // throws error for invalid meeting index","lastModifiedDate":"2023-10-09"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(CommandException.class, () -\u003e rmmcCommand.execute(model));","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"    public void execute_invalidAttendeeIndex_throwsCommandException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcCommand \u003d new RemoveMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"                INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-10-09"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"        // throws error for invalid attendee index","lastModifiedDate":"2023-10-09"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(CommandException.class, () -\u003e rmmcCommand.execute(model));","lastModifiedDate":"2023-10-09"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"    public void equals() {","lastModifiedDate":"2023-10-09"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcFirstCommand \u003d new RemoveMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcSecondCommand \u003d new RemoveMeetingContactCommand(INDEX_SECOND_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"                INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-09"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(rmmcFirstCommand.equals(rmmcFirstCommand));","lastModifiedDate":"2023-10-09"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-09"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcFirstCommandCopy \u003d new RemoveMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(rmmcFirstCommand.equals(rmmcFirstCommandCopy));","lastModifiedDate":"2023-10-09"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-09"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(rmmcFirstCommand.equals(1));","lastModifiedDate":"2023-10-09"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-09"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(rmmcFirstCommand.equals(null));","lastModifiedDate":"2023-10-09"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-09"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(rmmcFirstCommand.equals(rmmcSecondCommand));","lastModifiedDate":"2023-10-09"},{"lineNumber":104,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":105,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":106,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-09"},{"lineNumber":108,"author":{"gitId":"jason-raiin"},"content":"        RemoveMeetingContactCommand rmmcCommand \u003d new RemoveMeetingContactCommand(INDEX_FIRST_MEETING,","lastModifiedDate":"2023-10-09"},{"lineNumber":109,"author":{"gitId":"jason-raiin"},"content":"                INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":110,"author":{"gitId":"jason-raiin"},"content":"        String expected \u003d RemoveMeetingContactCommand.class.getCanonicalName() + \"{meetingIndex\u003d\" + INDEX_FIRST_MEETING","lastModifiedDate":"2023-10-09"},{"lineNumber":111,"author":{"gitId":"jason-raiin"},"content":"                + \", \" + \"attendeeIndex\u003d\" + INDEX_FIRST_PERSON + \"}\";","lastModifiedDate":"2023-10-09"},{"lineNumber":112,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(expected, rmmcCommand.toString());","lastModifiedDate":"2023-10-09"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":114,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"jason-raiin":114}},{"path":"src/test/java/seedu/address/logic/commands/ViewContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":" * {@code ViewContactCommand}.","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"public class ViewContactCommandTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"        ViewContactCommand viewContactCommand \u003d new ViewContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSON_VIEWED_OVERVIEW, personToView.getName());","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"        String expectedDisplayString \u003d String.format(","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"                \"Name: %s\\nPhone: %s\\nEmail: %s\\nLast Meeting: %s\\nStatus: %s\\nRemark: %s\",","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"                \"Bob Choo\", \"22222222\", \"bob@example.com\", \"20 September 2023, 1200\", \"prospective\", \"\");","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"        assertCommandSuccess(viewContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"        assertEquals(personToView.toDisplayString(), expectedDisplayString);","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"        ViewContactCommand viewContactCommand \u003d new ViewContactCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"        assertCommandFailure(viewContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"        ViewContactCommand viewContactCommand \u003d new ViewContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSON_VIEWED_OVERVIEW, personToView.getName());","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"juzzztinsoong"},"content":"        String expectedDisplayString \u003d String.format(","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"                \"Name: %s\\nPhone: %s\\nEmail: %s\\nLast Meeting: %s\\nStatus: %s\\nRemark: %s\",","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"                \"Bob Choo\", \"22222222\", \"bob@example.com\", \"20 September 2023, 1200\", \"prospective\", \"\");","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"        // Model displaying filtered list should not change","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"        assertCommandSuccess(viewContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"        assertEquals(personToView.toDisplayString(), expectedDisplayString);","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"LoMaply"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"LoMaply"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"LoMaply"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"LoMaply"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"LoMaply"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"LoMaply"},"content":"        ViewContactCommand viewContactCommand \u003d new ViewContactCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"LoMaply"},"content":"        assertCommandFailure(viewContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"LoMaply"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"LoMaply"},"content":"        ViewContactCommand viewContactFirstCommand \u003d new ViewContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"LoMaply"},"content":"        ViewContactCommand viewContactSecondCommand \u003d new ViewContactCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"LoMaply"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"LoMaply"},"content":"        assertTrue(viewContactFirstCommand.equals(viewContactFirstCommand));","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"LoMaply"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"LoMaply"},"content":"        ViewContactCommand viewContactFirstCommandCopy \u003d new ViewContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"LoMaply"},"content":"        assertTrue(viewContactFirstCommand.equals(viewContactFirstCommandCopy));","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"LoMaply"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"LoMaply"},"content":"        assertFalse(viewContactFirstCommand.equals(1));","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"LoMaply"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"LoMaply"},"content":"        assertFalse(viewContactFirstCommand.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"LoMaply"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"LoMaply"},"content":"        assertFalse(viewContactFirstCommand.equals(viewContactSecondCommand));","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":109,"author":{"gitId":"LoMaply"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-11"},{"lineNumber":110,"author":{"gitId":"LoMaply"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-11"},{"lineNumber":111,"author":{"gitId":"LoMaply"},"content":"        ViewContactCommand viewContactCommand \u003d new ViewContactCommand(targetIndex);","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"LoMaply"},"content":"        String expected \u003d ViewContactCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"LoMaply"},"content":"        assertEquals(expected, viewContactCommand.toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":114,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"howenc":2,"jason-raiin":1,"juzzztinsoong":2,"LoMaply":110}},{"path":"src/test/java/seedu/address/logic/commands/ViewMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":" * {@code ViewMeetingCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"public class ViewMeetingCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"        Meeting meetingToView \u003d model.getFilteredMeetingList().get(INDEX_SECOND_MEETING.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"        ViewMeetingCommand viewMeetingCommand \u003d new ViewMeetingCommand(INDEX_SECOND_MEETING);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MEETING_VIEWED_OVERVIEW, meetingToView.getTitle());","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"        String expectedDisplayString \u003d \"Title: CS2101 meeting\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"                + \"Location: Zoom call url\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"                + \"Start: 20 November 2023, 1000\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"                + \"End: 20 November 2023, 1200\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"                + \"Attendees: \\n1. Daniel Meier\\n2. Elle Meyer\"","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"                + \"\\n3. Fiona Kunz\\n4. George Best\\n\";","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"        assertCommandSuccess(viewMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(expectedDisplayString, meetingToView.toDisplayString());","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"        ViewMeetingCommand viewMeetingCommand \u003d new ViewMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"        assertCommandFailure(viewMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"        Meeting meetingToView \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"LoMaply"},"content":"        ViewMeetingCommand viewMeetingCommand \u003d new ViewMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"LoMaply"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MEETING_VIEWED_OVERVIEW, meetingToView.getTitle());","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"        String expectedDisplayString \u003d \"Title: CS2103T meeting\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"                + \"Location: Zoom call url\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"                + \"Start: 20 September 2023, 1000\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"                + \"End: 20 September 2023, 1200\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"                + \"Attendees: \\n\";","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"        // Model displaying filtered list should not change","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"LoMaply"},"content":"        showMeetingAtIndex(expectedModel, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"LoMaply"},"content":"        assertCommandSuccess(viewMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"LoMaply"},"content":"        assertEquals(meetingToView.toDisplayString(), expectedDisplayString);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"LoMaply"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"LoMaply"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"LoMaply"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"LoMaply"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"LoMaply"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMeetingList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"LoMaply"},"content":"        ViewMeetingCommand viewMeetingCommand \u003d new ViewMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"LoMaply"},"content":"        assertCommandFailure(viewMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"LoMaply"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"LoMaply"},"content":"        ViewMeetingCommand viewMeetingFirstCommand \u003d new ViewMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"LoMaply"},"content":"        ViewMeetingCommand viewMeetingSecondCommand \u003d new ViewMeetingCommand(INDEX_SECOND_MEETING);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"LoMaply"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"LoMaply"},"content":"        assertTrue(viewMeetingFirstCommand.equals(viewMeetingFirstCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"LoMaply"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"LoMaply"},"content":"        ViewMeetingCommand viewMeetingFirstCommandCopy \u003d new ViewMeetingCommand(INDEX_FIRST_MEETING);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"LoMaply"},"content":"        assertTrue(viewMeetingFirstCommand.equals(viewMeetingFirstCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"LoMaply"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"LoMaply"},"content":"        assertFalse(viewMeetingFirstCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"LoMaply"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"LoMaply"},"content":"        assertFalse(viewMeetingFirstCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"LoMaply"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"LoMaply"},"content":"        assertFalse(viewMeetingFirstCommand.equals(viewMeetingSecondCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"LoMaply"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"LoMaply"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"LoMaply"},"content":"        ViewMeetingCommand viewMeetingCommand \u003d new ViewMeetingCommand(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"LoMaply"},"content":"        String expected \u003d ViewMeetingCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"LoMaply"},"content":"        assertEquals(expected, viewMeetingCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jason-raiin":7,"LoMaply":113}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LASTTIME_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTTIME_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTTIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.LastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"                + LASTTIME_DESC_BOB + STATUS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LASTTIME_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LASTTIME_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"                + STATUS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-11-05"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_LASTTIME, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"                        PREFIX_STATUS) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"qz1004"},"content":"        // invalid status","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"qz1004"},"content":"        assertParseFailure(parser, INVALID_STATUS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STATUS) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"qz1004"},"content":"        // invalid status","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"qz1004"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_STATUS_DESC,","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STATUS) + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"qz1004"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"jason-raiin"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":134,"author":{"gitId":"jason-raiin"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LASTTIME_DESC_BOB + STATUS_DESC_BOB + REMARK_DESC_BOB,","lastModifiedDate":"2023-11-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-11-05"},{"lineNumber":136,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"qz1004"},"content":"        // no status","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"qz1004"},"content":"        Person expectedPerson2 \u003d new PersonBuilder(BOB).withStatus(\"\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LASTTIME_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"juzzztinsoong"},"content":"                + TAG_DESC_HUSBAND, new AddCommand(expectedPerson2));","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"jason-raiin"},"content":"        String expectedMessage \u003d MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + AddCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-11-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-11-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2023-11-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2023-11-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + LASTTIME_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"jason-raiin"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + LASTTIME_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"jason-raiin"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + LASTTIME_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"jason-raiin"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"juzzztinsoong"},"content":"        // invalid last contacted time","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_LASTTIME_DESC","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"jason-raiin"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-11-05"},{"lineNumber":177,"author":{"gitId":"jason-raiin"},"content":"                LastContactedTime.MESSAGE_CONSTRAINTS + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LASTTIME_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"jason-raiin"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"qz1004"},"content":"        // invalid status","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":185,"author":{"gitId":"jason-raiin"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LASTTIME_DESC_BOB + INVALID_STATUS_DESC","lastModifiedDate":"2023-11-05"},{"lineNumber":186,"author":{"gitId":"jason-raiin"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-11-05"},{"lineNumber":187,"author":{"gitId":"jason-raiin"},"content":"                Status.MESSAGE_CONSTRAINTS + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + LASTTIME_DESC_BOB,","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"jason-raiin"},"content":"                Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":195,"author":{"gitId":"jason-raiin"},"content":"                PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LASTTIME_DESC_BOB","lastModifiedDate":"2023-11-05"},{"lineNumber":196,"author":{"gitId":"jason-raiin"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-11-05"},{"lineNumber":197,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jason-raiin":37,"-":131,"juzzztinsoong":16,"qz1004":15}},{"path":"src/test/java/seedu/address/logic/parser/AddMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_DESC_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_DESC;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_DESC;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE_DESC;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_DESC_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_WORK;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WORK;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"public class AddMeetingCommandParserTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    private AddMeetingCommandParser parser \u003d new AddMeetingCommandParser();","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        Meeting expectedMeeting \u003d new MeetingBuilder(MEETING1).withAttendees().withTags().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TITLE_DESC_MEETING1 + LOCATION_DESC_MEETING1","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"                + START_DESC_MEETING1 + END_DESC_MEETING1, new AddMeetingCommand(expectedMeeting));","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"        Meeting expectedMeetingMultipleTags \u003d new MeetingBuilder(MEETING1).withAttendees().withTags(VALID_TAG_WORK)","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TITLE_DESC_MEETING1 + LOCATION_DESC_MEETING1","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"                + START_DESC_MEETING1 + END_DESC_MEETING1 + TAG_DESC_WORK,","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"                new AddMeetingCommand(expectedMeetingMultipleTags));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"        /*","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"         * // multiple attendees - all accepted Meeting expectedMeetingMultipleAttendees","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"         * \u003d new MeetingBuilder(MEETING1) .withAttendees(\"Alice Pauline\",","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"         * \"Bob Choo\").build(); assertParseSuccess(parser, TITLE_DESC_MEETING1 +","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"         * LOCATION_DESC_MEETING1 + START_DESC_MEETING1 + END_DESC_MEETING1 +","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"         * ATTENDEE_DESC_ALICE + ATTENDEE_DESC_BOB, new","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"         * AddMeetingCommand(expectedMeetingMultipleAttendees));","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"         */","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    public void parse_repeatedNonAttendeeValue_failure() {","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        String validExpectedMeetingString \u003d TITLE_DESC_MEETING1 + LOCATION_DESC_MEETING1 + START_DESC_MEETING1","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"                + END_DESC_MEETING1;","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        // multiple title","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, TITLE_DESC_MEETING1 + validExpectedMeetingString,","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TITLE) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        // multiple locations","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, LOCATION_DESC_MEETING1 + validExpectedMeetingString,","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"        // multiple starts","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, START_DESC_MEETING1 + validExpectedMeetingString,","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        // multiple endss","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, END_DESC_MEETING1 + validExpectedMeetingString,","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_END) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"                validExpectedMeetingString + LOCATION_DESC_MEETING1 + START_DESC_MEETING1 + END_DESC_MEETING1","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"                        + TITLE_DESC_MEETING1 + validExpectedMeetingString,","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TITLE, PREFIX_LOCATION, PREFIX_START, PREFIX_END)","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"                        + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"        // invalid title","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, INVALID_TITLE_DESC + validExpectedMeetingString,","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TITLE) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"        // invalid location","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, INVALID_LOCATION_DESC + validExpectedMeetingString,","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"        // invalid start","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, INVALID_START_DESC + validExpectedMeetingString,","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        // invalid end","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, INVALID_END_DESC + validExpectedMeetingString,","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_END) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"        // invalid title","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, validExpectedMeetingString + INVALID_TITLE_DESC,","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TITLE) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"        // invalid location","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, validExpectedMeetingString + INVALID_LOCATION_DESC,","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"        // invalid start","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, validExpectedMeetingString + INVALID_START_DESC,","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"        // invalid end","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, validExpectedMeetingString + INVALID_END_DESC,","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_END) + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"        // zero attendees","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"        Meeting expectedMeeting \u003d new MeetingBuilder(MEETING1).withAttendees().withTags().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"jason-raiin"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":136,"author":{"gitId":"jason-raiin"},"content":"                TITLE_DESC_MEETING1 + LOCATION_DESC_MEETING1 + START_DESC_MEETING1 + END_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":137,"author":{"gitId":"jason-raiin"},"content":"                new AddMeetingCommand(expectedMeeting));","lastModifiedDate":"2023-11-05"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"jason-raiin"},"content":"        String expectedMessage \u003d MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-11-05"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"        // missing title prefix","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":146,"author":{"gitId":"jason-raiin"},"content":"                VALID_TITLE_MEETING1 + LOCATION_DESC_MEETING1 + START_DESC_MEETING1 + END_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":147,"author":{"gitId":"jason-raiin"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-05"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"        // missing location prefix","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":151,"author":{"gitId":"jason-raiin"},"content":"                TITLE_DESC_MEETING1 + VALID_LOCATION_MEETING1 + START_DESC_MEETING1 + END_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":152,"author":{"gitId":"jason-raiin"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-05"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"        // missing start prefix","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":156,"author":{"gitId":"jason-raiin"},"content":"                TITLE_DESC_MEETING1 + LOCATION_DESC_MEETING1 + VALID_START_MEETING1 + END_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":157,"author":{"gitId":"jason-raiin"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-05"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"        // missing end prefix","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":161,"author":{"gitId":"jason-raiin"},"content":"                TITLE_DESC_MEETING1 + LOCATION_DESC_MEETING1 + START_DESC_MEETING1 + VALID_END_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":162,"author":{"gitId":"jason-raiin"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-05"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":166,"author":{"gitId":"jason-raiin"},"content":"                VALID_TITLE_MEETING1 + VALID_LOCATION_MEETING1 + VALID_START_MEETING1 + VALID_END_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":167,"author":{"gitId":"jason-raiin"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-05"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"        // invalid title","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":174,"author":{"gitId":"jason-raiin"},"content":"                INVALID_TITLE_DESC + LOCATION_DESC_MEETING1 + START_DESC_MEETING1 + END_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":175,"author":{"gitId":"jason-raiin"},"content":"                Title.MESSAGE_CONSTRAINTS + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"        // invalid location","lastModifiedDate":"2023-10-04"},{"lineNumber":178,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":179,"author":{"gitId":"jason-raiin"},"content":"                TITLE_DESC_MEETING1 + INVALID_LOCATION_DESC + START_DESC_MEETING1 + END_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":180,"author":{"gitId":"jason-raiin"},"content":"                Location.MESSAGE_CONSTRAINTS + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"        // invalid start","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":184,"author":{"gitId":"jason-raiin"},"content":"                TITLE_DESC_MEETING1 + LOCATION_DESC_MEETING1 + INVALID_START_DESC + END_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":185,"author":{"gitId":"jason-raiin"},"content":"                MeetingTime.MESSAGE_CONSTRAINTS + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":186,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":187,"author":{"gitId":"howenc"},"content":"        // invalid end","lastModifiedDate":"2023-10-04"},{"lineNumber":188,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-05"},{"lineNumber":189,"author":{"gitId":"jason-raiin"},"content":"                TITLE_DESC_MEETING1 + LOCATION_DESC_MEETING1 + START_DESC_MEETING1 + INVALID_END_DESC,","lastModifiedDate":"2023-11-05"},{"lineNumber":190,"author":{"gitId":"jason-raiin"},"content":"                MeetingTime.MESSAGE_CONSTRAINTS + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":191,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":192,"author":{"gitId":"howenc"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-04"},{"lineNumber":193,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, INVALID_TITLE_DESC + INVALID_LOCATION_DESC + START_DESC_MEETING1 + END_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":194,"author":{"gitId":"jason-raiin"},"content":"                Title.MESSAGE_CONSTRAINTS + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":195,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"howenc"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + TITLE_DESC_MEETING1 + LOCATION_DESC_MEETING1","lastModifiedDate":"2023-10-04"},{"lineNumber":198,"author":{"gitId":"jason-raiin"},"content":"                + START_DESC_MEETING1 + END_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":199,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":200,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":201,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"howenc":133,"jason-raiin":68}},{"path":"src/test/java/seedu/address/logic/parser/AddMeetingContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_TOO_MANY_INDEXES;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import seedu.address.logic.commands.AddMeetingContactCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":" * variations outside the AddMeetingContactCommand code. For example, inputs \"1\"","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":" * and \"1 abc\" take the same path through the AddMeetingContactCommand, and","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":" * therefore we test only one of them. The path variation for those two cases","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":" * occur inside the ParserUtil, and therefore should be covered by the","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":" * ParserUtilTest.","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"public class AddMeetingContactCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"    private AddMeetingContactCommandParser parser \u003d new AddMeetingContactCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"    public void parse_validArgs_returnsAddMeetingContactCommand() {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"        assertParseSuccess(parser, \"1 1\", new AddMeetingContactCommand(INDEX_FIRST_MEETING, INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        // invalid args","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"a 1\", MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + AddMeetingContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"        // too many args","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1 1 2\", MESSAGE_TOO_MANY_INDEXES + \"\\n\" + AddMeetingContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"        // too few args","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"2\", MESSAGE_MISSING_INDEX + \"\\n\" + AddMeetingContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jason-raiin":14,"qz1004":29}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_FIELDS;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.ListMeetingCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.MarkMeetingCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.RemoveMeetingContactCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.ViewContactCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.AttendeeContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.GeneralMeetingPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.LocationContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.meeting.MeetingTagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTimeContainsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.GeneralPersonPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.LastContactTimeContainsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.PersonTagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.PhoneContainsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    public void parseCommand_addm() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        AddMeetingCommand command \u003d (AddMeetingCommand) parser.parseCommand(MeetingUtil.getAddMeetingCommand(meeting));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        assertEquals(new AddMeetingCommand(meeting), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"    public void parseCommand_addc() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_FIELDS, (","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"                ) -\u003e parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"LoMaply"},"content":"    public void parseCommand_deletec() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser","lastModifiedDate":"2023-10-09"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"                .parseCommand(DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"LoMaply"},"content":"    public void parseCommand_editc() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"juzzztinsoong"},"content":"        String str \u003d EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"juzzztinsoong"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(str);","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"LoMaply"},"content":"    public void parseCommand_editm() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"LoMaply"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(meeting).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"LoMaply"},"content":"        String str \u003d EditMeetingCommand.COMMAND_WORD + \" \" + INDEX_FIRST_MEETING.getOneBased() + \" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"LoMaply"},"content":"                + MeetingUtil.getEditMeetingDescriptorDetails(descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand command \u003d (EditMeetingCommand) parser.parseCommand(str);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"LoMaply"},"content":"        assertEquals(new EditMeetingCommand(INDEX_FIRST_MEETING, descriptor), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_FIELDS, (","lastModifiedDate":"2023-11-06"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"                ) -\u003e parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"qz1004"},"content":"    public void parseCommand_findc() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"jason-raiin"},"content":"        LocalDateTime lastContacted \u003d DateTimeUtil.parse(\"20.09.2023 1000\");","lastModifiedDate":"2023-11-06"},{"lineNumber":123,"author":{"gitId":"jason-raiin"},"content":"        FindCommand command \u003d (FindCommand) parser","lastModifiedDate":"2023-10-09"},{"lineNumber":124,"author":{"gitId":"LoMaply"},"content":"                .parseCommand(FindCommand.COMMAND_WORD + \" n/Alice p/913 e/gmail lc/20.09.2023 1000 s/Active t/friend\");","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"qz1004"},"content":"        assertEquals(new FindCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"qz1004"},"content":"                preparePersonPredicate(new String[] { \"Alice\", \"913\", \"gmail\", \"Active\", \"friend\" }, lastContacted)),","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"qz1004"},"content":"                command);","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"qz1004"},"content":"    public void parseCommand_findm() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"jason-raiin"},"content":"        LocalDateTime start \u003d DateTimeUtil.parse(\"20.09.2023 1000\");","lastModifiedDate":"2023-11-06"},{"lineNumber":133,"author":{"gitId":"jason-raiin"},"content":"        LocalDateTime end \u003d DateTimeUtil.parse(\"20.09.2023 1200\");","lastModifiedDate":"2023-11-06"},{"lineNumber":134,"author":{"gitId":"jason-raiin"},"content":"        FindMeetingCommand command \u003d (FindMeetingCommand) parser.parseCommand(FindMeetingCommand.COMMAND_WORD","lastModifiedDate":"2023-11-06"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"                + \" m/CS2103T a/Zoom s/20.09.2023 1000 e/20.09.2023 1200 n/Alice Bob t/friend\");","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(","lastModifiedDate":"2023-11-06"},{"lineNumber":137,"author":{"gitId":"jason-raiin"},"content":"                new FindMeetingCommand(","lastModifiedDate":"2023-11-06"},{"lineNumber":138,"author":{"gitId":"qz1004"},"content":"                        prepareMeetingPredicate(new String[] { \"CS2103T\", \"Zoom\", \"Alice Bob\", \"friend\" }, start, end)),","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"                command);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_FIELDS, (","lastModifiedDate":"2023-11-06"},{"lineNumber":147,"author":{"gitId":"jason-raiin"},"content":"                ) -\u003e parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"LoMaply"},"content":"    public void parseCommand_listc() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":154,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_FIELDS, (","lastModifiedDate":"2023-11-06"},{"lineNumber":155,"author":{"gitId":"jason-raiin"},"content":"                ) -\u003e parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"    public void parseCommand_listm() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"        assertTrue(parser.parseCommand(ListMeetingCommand.COMMAND_WORD) instanceof ListMeetingCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":162,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_FIELDS, (","lastModifiedDate":"2023-11-06"},{"lineNumber":163,"author":{"gitId":"jason-raiin"},"content":"                ) -\u003e parser.parseCommand(ListMeetingCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":167,"author":{"gitId":"LoMaply"},"content":"    public void parseCommand_viewc() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":168,"author":{"gitId":"LoMaply"},"content":"        assertTrue(parser.parseCommand(ViewContactCommand.COMMAND_WORD + \" 3\") instanceof ViewContactCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"LoMaply"},"content":"    public void parseCommand_viewm() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"LoMaply"},"content":"        assertTrue(parser.parseCommand(ViewMeetingCommand.COMMAND_WORD + \" 3\") instanceof ViewMeetingCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":175,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":176,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":177,"author":{"gitId":"jason-raiin"},"content":"    public void parseCommand_rmmc() throws Exception {","lastModifiedDate":"2023-10-09"},{"lineNumber":178,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-09"},{"lineNumber":179,"author":{"gitId":"jason-raiin"},"content":"                RemoveMeetingContactCommand.COMMAND_WORD + \" 1 1\") instanceof RemoveMeetingContactCommand);","lastModifiedDate":"2023-10-09"},{"lineNumber":180,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":181,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":182,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"jason-raiin"},"content":"    public void parseCommand_mark() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(parser.parseCommand(MarkMeetingCommand.COMMAND_WORD + \" 1\") instanceof MarkMeetingCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + HelpCommand.MESSAGE_USAGE, (","lastModifiedDate":"2023-11-06"},{"lineNumber":190,"author":{"gitId":"jason-raiin"},"content":"                ) -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":197,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"qz1004"},"content":"     * Parses {@code userInput} into a {@code GeneralMeetingPredicate}.","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"jason-raiin"},"content":"    private GeneralMeetingPredicate prepareMeetingPredicate(String[] userInput, LocalDateTime start,","lastModifiedDate":"2023-11-06"},{"lineNumber":202,"author":{"gitId":"jason-raiin"},"content":"            LocalDateTime end) {","lastModifiedDate":"2023-11-06"},{"lineNumber":203,"author":{"gitId":"howenc"},"content":"        return new GeneralMeetingPredicate(new TitleContainsKeywordsPredicate(List.of(userInput[0].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"howenc"},"content":"                new LocationContainsKeywordsPredicate(List.of(userInput[1].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"howenc"},"content":"                new MeetingTimeContainsPredicate(start, end),","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"howenc"},"content":"                new AttendeeContainsKeywordsPredicate(List.of(userInput[2].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"qz1004"},"content":"                new MeetingTagContainsKeywordsPredicate(List.of(userInput[3].split(\"\\\\s+\"))));","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"qz1004"},"content":"     * Parses {@code userInput} into a {@code GeneralPersonPredicate}.","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"qz1004"},"content":"    private GeneralPersonPredicate preparePersonPredicate(String[] userInput, LocalDateTime lastContacted) {","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"jason-raiin"},"content":"        return new GeneralPersonPredicate(new NameContainsKeywordsPredicate(List.of(userInput[0].split(\"\\\\s+\"))),","lastModifiedDate":"2023-11-06"},{"lineNumber":215,"author":{"gitId":"qz1004"},"content":"                new PhoneContainsPredicate(List.of(userInput[1].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"qz1004"},"content":"                new EmailContainsKeywordsPredicate(List.of(userInput[2].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"qz1004"},"content":"                new LastContactTimeContainsPredicate(lastContacted),","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"qz1004"},"content":"                new StatusContainsKeywordsPredicate(List.of(userInput[3].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"jason-raiin"},"content":"                new PersonTagContainsKeywordsPredicate(List.of(userInput[4].split(\"\\\\s+\"))));","lastModifiedDate":"2023-11-06"},{"lineNumber":220,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"howenc":34,"jason-raiin":42,"-":85,"qz1004":26,"juzzztinsoong":3,"LoMaply":31}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":" * variations outside of the DeleteCommand code. For example, inputs \"1\" and \"1","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":" * abc\" take the same path through the DeleteCommand, and therefore we test only","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":" * one of them. The path variation for those two cases occur inside the","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":" * ParserUtil, and therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"        // incorrect index format","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        // missing index","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"\", MESSAGE_MISSING_INDEX + \"\\n\" + DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jason-raiin":12,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/DeleteMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":" * variations outside of the DeleteMeetingCommand code. For example, inputs \"1\"","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":" * and \"1 abc\" take the same path through the DeleteMeetingCommand, and","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":" * therefore we test only one of them. The path variation for those two cases","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":" * occur inside the ParserUtil, and therefore should be covered by the","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":" * ParserUtilTest.","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"public class DeleteMeetingCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    private DeleteMeetingCommandParser parser \u003d new DeleteMeetingCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseSuccess(parser, \"1\", new DeleteMeetingCommand(INDEX_FIRST_MEETING));","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"        // incorrect index format","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + DeleteMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"        // missing index","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"\", MESSAGE_MISSING_INDEX + \"\\n\" + DeleteMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jason-raiin":13,"juzzztinsoong":25}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_FIELDS;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTTIME_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTTIME_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"        // no index specified but field specific","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, NAME_DESC_AMY, MESSAGE_MISSING_INDEX + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"\", MESSAGE_MISSING_INDEX + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY,","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY,","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FIELDS + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FIELDS + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC,","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"                Name.MESSAGE_CONSTRAINTS + \"\\n\" + EditCommand.MESSAGE_USAGE); // invalid name","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC,","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"                Phone.MESSAGE_CONSTRAINTS + \"\\n\" + EditCommand.MESSAGE_USAGE); // invalid phone","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"                Email.MESSAGE_CONSTRAINTS + \"\\n\" + EditCommand.MESSAGE_USAGE); // invalid email","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STATUS_DESC,","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"                Status.MESSAGE_CONSTRAINTS + \"\\n\" + EditCommand.MESSAGE_USAGE); // invalid status","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC,","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"                Tag.MESSAGE_CONSTRAINTS + \"\\n\" + EditCommand.MESSAGE_USAGE); // invalid tag","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"                Phone.MESSAGE_CONSTRAINTS + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"jason-raiin"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code","lastModifiedDate":"2023-11-05"},{"lineNumber":105,"author":{"gitId":"jason-raiin"},"content":"        // Person} being edited,","lastModifiedDate":"2023-11-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"jason-raiin"},"content":"                Tag.MESSAGE_CONSTRAINTS + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-11-06"},{"lineNumber":110,"author":{"gitId":"jason-raiin"},"content":"                Tag.MESSAGE_CONSTRAINTS + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":111,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"jason-raiin"},"content":"                Tag.MESSAGE_CONSTRAINTS + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"                Name.MESSAGE_CONSTRAINTS + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"juzzztinsoong"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"juzzztinsoong"},"content":"                + LASTTIME_DESC_AMY + STATUS_DESC_AMY + REMARK_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"juzzztinsoong"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withLastContactedTime(VALID_LASTTIME_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"jason-raiin"},"content":"                .withStatus(VALID_STATUS_AMY).withRemark(REMARK_DESC_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"jason-raiin"},"content":"                .build();","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"juzzztinsoong"},"content":"        // last contacted time","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"juzzztinsoong"},"content":"        userInput \u003d targetIndex.getOneBased() + LASTTIME_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"juzzztinsoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withLastContactedTime(VALID_LASTTIME_AMY).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"juzzztinsoong"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"juzzztinsoong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"qz1004"},"content":"        // status","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"qz1004"},"content":"        userInput \u003d targetIndex.getOneBased() + STATUS_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"qz1004"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"qz1004"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"qz1004"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"qz1004"},"content":"        // remark","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"qz1004"},"content":"        userInput \u003d targetIndex.getOneBased() + REMARK_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"qz1004"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-11-06"},{"lineNumber":202,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE) + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-11-06"},{"lineNumber":208,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE) + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":210,"author":{"gitId":"LoMaply"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"jason-raiin"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY","lastModifiedDate":"2023-11-05"},{"lineNumber":212,"author":{"gitId":"jason-raiin"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-11-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-11-06"},{"lineNumber":215,"author":{"gitId":"jason-raiin"},"content":"                + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":218,"author":{"gitId":"jason-raiin"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC + INVALID_PHONE_DESC","lastModifiedDate":"2023-11-05"},{"lineNumber":219,"author":{"gitId":"jason-raiin"},"content":"                + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-11-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-11-06"},{"lineNumber":222,"author":{"gitId":"jason-raiin"},"content":"                + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jason-raiin":48,"-":159,"qz1004":15,"juzzztinsoong":12,"LoMaply":1}},{"path":"src/test/java/seedu/address/logic/parser/EditMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_FIELDS;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_DESC_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_DESC_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_DESC_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_WORK;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WORK;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"public class EditMeetingCommandParserTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"    private EditMeetingCommandParser parser \u003d new EditMeetingCommandParser();","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"        // no index specified","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, TITLE_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_MISSING_INDEX + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"        // no field specified","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"                EditMeetingCommand.MESSAGE_NOT_EDITED + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"LoMaply"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"\", MESSAGE_MISSING_INDEX + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"        // negative index","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"-5\" + TITLE_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"LoMaply"},"content":"        // zero index","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"0\" + TITLE_DESC_MEETING1,","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"LoMaply"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"general kenobi :)\",","lastModifiedDate":"2023-11-05"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"LoMaply"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1 i/ nonono\",","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_FIELDS + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"LoMaply"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"LoMaply"},"content":"        // invalid title","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC,","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"                Title.MESSAGE_CONSTRAINTS + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"LoMaply"},"content":"        // invalid location","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LOCATION_DESC,","lastModifiedDate":"2023-11-05"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"                Location.MESSAGE_CONSTRAINTS + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":94,"author":{"gitId":"LoMaply"},"content":"        // invalid meeting time","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"LoMaply"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_DESC + INVALID_END_DESC,","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"                MeetingTime.MESSAGE_CONSTRAINTS + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"LoMaply"},"content":"        // invalid tag","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC,","lastModifiedDate":"2023-11-05"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"                Tag.MESSAGE_CONSTRAINTS + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":100,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"LoMaply"},"content":"        // invalid title followed by valid location","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"LoMaply"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC + LOCATION_DESC_MEETING1,","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"                Title.MESSAGE_CONSTRAINTS + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":104,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"jason-raiin"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code","lastModifiedDate":"2023-11-05"},{"lineNumber":106,"author":{"gitId":"jason-raiin"},"content":"        // Meeting} being edited,","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"LoMaply"},"content":"        // parsing it together with a valid tag results in an error","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_WORK + TAG_EMPTY,","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"jason-raiin"},"content":"                Tag.MESSAGE_CONSTRAINTS + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":110,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_WORK,","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"jason-raiin"},"content":"                Tag.MESSAGE_CONSTRAINTS + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":112,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_WORK,","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"                Tag.MESSAGE_CONSTRAINTS + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"LoMaply"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"LoMaply"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC + INVALID_LOCATION_DESC + VALID_START_MEETING1,","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"                Title.MESSAGE_CONSTRAINTS + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"LoMaply"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"LoMaply"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"LoMaply"},"content":"        String userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_MEETING1 + END_DESC_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withLocation(VALID_LOCATION_MEETING1)","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"LoMaply"},"content":"                .withEnd(VALID_END_MEETING2).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"LoMaply"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"LoMaply"},"content":"        // title","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"LoMaply"},"content":"        Index targetIndex \u003d INDEX_THIRD_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"LoMaply"},"content":"        String userInput \u003d targetIndex.getOneBased() + TITLE_DESC_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_MEETING1).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"LoMaply"},"content":"        // location","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"LoMaply"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"LoMaply"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withLocation(VALID_LOCATION_MEETING1).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"LoMaply"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"LoMaply"},"content":"        // start","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"LoMaply"},"content":"        userInput \u003d targetIndex.getOneBased() + START_DESC_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"LoMaply"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withStart(VALID_START_MEETING1).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"LoMaply"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"LoMaply"},"content":"        // end","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"LoMaply"},"content":"        userInput \u003d targetIndex.getOneBased() + END_DESC_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"LoMaply"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withEnd(VALID_END_MEETING1).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"LoMaply"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"LoMaply"},"content":"        // tags","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"LoMaply"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_WORK;","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"LoMaply"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withTags(VALID_TAG_WORK).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"LoMaply"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"LoMaply"},"content":"    public void parse_multipleRepeatredFields_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"LoMaply"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"LoMaply"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"LoMaply"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_LOCATION_DESC + LOCATION_DESC_MEETING1;","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION) + \"\\n\"","lastModifiedDate":"2023-11-05"},{"lineNumber":173,"author":{"gitId":"jason-raiin"},"content":"                + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":174,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"LoMaply"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"LoMaply"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_MEETING1 + INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION) + \"\\n\"","lastModifiedDate":"2023-11-05"},{"lineNumber":179,"author":{"gitId":"jason-raiin"},"content":"                + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":180,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"LoMaply"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"LoMaply"},"content":"        userInput \u003d targetIndex.getOneBased() + TITLE_DESC_MEETING1 + TITLE_DESC_MEETING2 + LOCATION_DESC_MEETING1","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"LoMaply"},"content":"                + END_DESC_MEETING1 + END_DESC_MEETING2;","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TITLE, PREFIX_END)","lastModifiedDate":"2023-11-05"},{"lineNumber":186,"author":{"gitId":"jason-raiin"},"content":"                + \"\\n\" + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":187,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"LoMaply"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"LoMaply"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_LOCATION_DESC + INVALID_TITLE_DESC + INVALID_LOCATION_DESC","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"LoMaply"},"content":"                + INVALID_TITLE_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"LoMaply"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"jason-raiin"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TITLE, PREFIX_LOCATION) + \"\\n\"","lastModifiedDate":"2023-11-05"},{"lineNumber":194,"author":{"gitId":"jason-raiin"},"content":"                        + EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":195,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"LoMaply"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"LoMaply"},"content":"        Index targetIndex \u003d INDEX_SECOND_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"LoMaply"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"LoMaply"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"LoMaply"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jason-raiin":41,"LoMaply":166}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.GeneralPersonPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.LastContactTimeContainsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.PersonTagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.PhoneContainsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.StatusContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"    private LocalDateTime lastContacted \u003d LocalDateTime.MIN;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"    public void parse_nonEmptyPreambleArg_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"        assertParseFailure(parser, \" bobby n/Alice\",","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"    public void parse_validArgsName_returnsFindCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"                new FindCommand(preparePredicate(new String[]{\"Alice\", \"\", \"\", \"\", \"\"}, lastContacted));","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        assertParseSuccess(parser, \" n/Alice\", expectedFindCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    public void parse_validArgsPhone_returnsFindCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"                new FindCommand(preparePredicate(new String[]{\"\", \"51\", \"\", \"\", \"\"}, lastContacted));","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"        assertParseSuccess(parser, \" p/51\", expectedFindCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"    public void parse_validArgsEmail_returnsFindCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"                new FindCommand(preparePredicate(new String[]{\"\", \"\", \"gmail.com\", \"\", \"\"}, lastContacted));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"        assertParseSuccess(parser, \" e/gmail.com\", expectedFindCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"    public void parse_validArgsLastContacted_returnsFindCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"        LocalDateTime time \u003d DateTimeUtil.parse(\"20.09.2023 1000\");","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"                new FindCommand(preparePredicate(new String[]{\"\", \"\", \"\", \"\", \"\"}, time));","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, \" lc/20.09.2023 1000\", expectedFindCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"    public void parse_validArgsStatus_returnsFindCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"                new FindCommand(preparePredicate(new String[]{\"\", \"\", \"\", \"active\", \"\"}, lastContacted));","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"        assertParseSuccess(parser, \" s/active\", expectedFindCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"    public void parse_validArgsTag_returnsFindCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"qz1004"},"content":"                new FindCommand(preparePredicate(new String[]{\"\", \"\", \"\", \"\", \"friend important\"}, lastContacted));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"        assertParseSuccess(parser, \" t/friend important\", expectedFindCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"        LocalDateTime time \u003d DateTimeUtil.parse(\"20.09.2023 1000\");","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"qz1004"},"content":"                new FindCommand(preparePredicate(new String[]{\"Alice\", \"913\", \"gmail\", \"Active\", \"friend\"}, time));","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, \" n/Alice p/913 e/gmail lc/20.09.2023 1000 s/Active t/friend\", expectedFindCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"qz1004"},"content":"     * Parses {@code userInput} into a {@code GeneralPersonPredicate}.","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"qz1004"},"content":"    private GeneralPersonPredicate preparePredicate(String[] userInput, LocalDateTime lastContacted) {","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"qz1004"},"content":"        return new GeneralPersonPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"qz1004"},"content":"                new NameContainsKeywordsPredicate(List.of(userInput[0].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"qz1004"},"content":"                new PhoneContainsPredicate(List.of(userInput[1].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"qz1004"},"content":"                new EmailContainsKeywordsPredicate(List.of(userInput[2].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"qz1004"},"content":"                new LastContactTimeContainsPredicate(lastContacted),","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"qz1004"},"content":"                new StatusContainsKeywordsPredicate(List.of(userInput[3].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"qz1004"},"content":"                new PersonTagContainsKeywordsPredicate(List.of(userInput[4].split(\"\\\\s+\")))","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"qz1004"},"content":"        );","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jason-raiin":4,"-":26,"qz1004":66,"LoMaply":2}},{"path":"src/test/java/seedu/address/logic/parser/FindMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.AttendeeContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.GeneralMeetingPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.LocationContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.meeting.MeetingTagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTimeContainsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"public class FindMeetingCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    private FindMeetingCommandParser parser \u003d new FindMeetingCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    private LocalDateTime start \u003d LocalDateTime.MIN;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    private LocalDateTime end \u003d LocalDateTime.MAX;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    public void parse_nonEmptyPreambleArg_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, \" dfvuv m/CS2103T\",","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + FindMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public void parse_validArgsTitle_returnsFilterMeetingCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"        FindMeetingCommand expectedFindMeetingCommand \u003d new FindMeetingCommand(","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"                preparePredicate(new String[] { \"CS2103T\", \"\", \"\", \"\" }, start, end));","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        assertParseSuccess(parser, \" m/CS2103T\", expectedFindMeetingCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public void parse_validArgsLocation_returnsFilterMeetingCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"        FindMeetingCommand expectedFindMeetingCommand \u003d new FindMeetingCommand(","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"                preparePredicate(new String[] { \"\", \"Zoom\", \"\", \"\" }, start, end));","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        assertParseSuccess(parser, \" a/Zoom\", expectedFindMeetingCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    public void parse_validArgsTime_returnsFilterMeetingCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"        LocalDateTime start \u003d DateTimeUtil.parse(\"20.09.2023 1000\");","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"        LocalDateTime end \u003d DateTimeUtil.parse(\"20.09.2023 1200\");","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"        FindMeetingCommand expectedFindMeetingCommand \u003d new FindMeetingCommand(","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"                preparePredicate(new String[] { \"\", \"\", \"\", \"\" }, start, end));","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        assertParseSuccess(parser, \" s/20.09.2023 1000 e/20.09.2023 1200\", expectedFindMeetingCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    public void parse_validArgsAttendee_returnsFilterMeetingCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"        FindMeetingCommand expectedFindMeetingCommand \u003d new FindMeetingCommand(","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"                preparePredicate(new String[] { \"\", \"\", \"Alice Bob\", \"\" }, start, end));","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindMeetingCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    public void parse_validArgsTag_returnsFilterMeetingCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"        FindMeetingCommand expectedFindMeetingCommand \u003d new FindMeetingCommand(","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"                preparePredicate(new String[] { \"\", \"\", \"\", \"friend\" }, start, end));","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        assertParseSuccess(parser, \" t/friend\", expectedFindMeetingCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    public void parse_validArgs_returnsFilterMeetingCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"        LocalDateTime start \u003d DateTimeUtil.parse(\"20.09.2023 1000\");","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        LocalDateTime end \u003d DateTimeUtil.parse(\"20.09.2023 1200\");","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"        FindMeetingCommand expectedFindMeetingCommand \u003d new FindMeetingCommand(","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"                preparePredicate(new String[] { \"CS2103T\", \"Zoom\", \"Alice Bob\", \"friend\" }, start, end));","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        assertParseSuccess(parser, \" m/CS2103T a/Zoom s/20.09.2023 1000 e/20.09.2023 1200 n/Alice Bob t/friend\",","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                expectedFindMeetingCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"    public void parse_invalidArgsTime_throwsParseException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        // start before end","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, \" e/20.09.2023 1000 s/20.09.2023 1200\",","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"                MeetingTime.MESSAGE_CONSTRAINTS + \"\\n\" + FindMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"        // wrong start format","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \" s/2 e/20.09.2023 1000\",","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"                MeetingTime.MESSAGE_CONSTRAINTS + \"\\n\" + FindMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"        // wrong end format","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \" s/20.09.2023 1200 e/2\",","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"                MeetingTime.MESSAGE_CONSTRAINTS + \"\\n\" + FindMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"        // no end","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, \" s/20.09.2023 1200\",","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"                \"Please input both start and end times\" + \"\\n\" + FindMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"        // no start","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"        assertParseFailure(parser, \" e/20.09.2023 1000\",","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"                \"Please input both start and end times\" + \"\\n\" + FindMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"    private GeneralMeetingPredicate preparePredicate(String[] userInput, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        return new GeneralMeetingPredicate(new TitleContainsKeywordsPredicate(List.of(userInput[0].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"                new LocationContainsKeywordsPredicate(List.of(userInput[1].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"                new MeetingTimeContainsPredicate(start, end),","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"                new AttendeeContainsKeywordsPredicate(List.of(userInput[2].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"qz1004"},"content":"                new MeetingTagContainsKeywordsPredicate(List.of(userInput[3].split(\"\\\\s+\"))));","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":78,"jason-raiin":34,"qz1004":2}},{"path":"src/test/java/seedu/address/logic/parser/MarkMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.MarkMeetingCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":" * variations outside of the MarkMeetingCommand code. For example, inputs \"1\"","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":" * and \"1 abc\" take the same path through the MarkMeetingCommand, and therefore","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":" * we test only one of them. The path variation for those two cases occur inside","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":" * the ParserUtil, and therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"public class MarkMeetingCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"    private MarkMeetingCommandParser parser \u003d new MarkMeetingCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"        assertParseSuccess(parser, \"1\", new MarkMeetingCommand(INDEX_FIRST_MEETING));","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"        // incorrect index format","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + MarkMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"        // missing index","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_MISSING_INDEX + \"\\n\" + MarkMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jason-raiin":39}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_FIELDS;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_TOO_MANY_INDEXES;","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    private static final String VALID_TIME \u003d \"02.10.2023 1000\";","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_TIME_1 \u003d \"02.10.2023  1000\";","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_TIME_2 \u003d \"02.10.29999 1000\";","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_TIME_3 \u003d \"02.10.2023 10000\";","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_TIME_4 \u003d \"02.15.2023 1000\";","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_TIME_5 \u003d \"78.10.2023 1000\";","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_TIME_6 \u003d \"02.10.2023 5555\";","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"    public void verifyNoArgs_argsPresent_throwsParseException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_FIELDS, () -\u003e ParserUtil.verifyNoArgs(\"10 a\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"    public void verifyNoArgs_noArgs_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"        assertDoesNotThrow(() -\u003e ParserUtil.verifyNoArgs(\"\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX_FORMAT, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX_FORMAT, (","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"                ) -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndex_emptyInput_throwsParseException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_MISSING_INDEX, () -\u003e ParserUtil.parseIndex(\"\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndexes_invalidInput_throwsParseException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX_FORMAT, () -\u003e ParserUtil.parseIndexes(\"10 10 w\", 3));","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndexes_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX_FORMAT, () -\u003e ParserUtil.parseIndexes(\"1 0 4\", 3));","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndexes_tooFewArgs_throwsParseException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_MISSING_INDEX, () -\u003e ParserUtil.parseIndexes(\"10 10\", 3));","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndexes_tooManyNumericArgs_throwsParseException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_TOO_MANY_INDEXES, () -\u003e ParserUtil.parseIndexes(\"10 10\", 1));","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":105,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":106,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndexes_tooManyNonNumericArgs_throwsParseException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":108,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_FIELDS, () -\u003e ParserUtil.parseIndexes(\"10 w\", 1));","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":110,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":112,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndexes_nonPositiveExpectedIndexes_throwsAssertionError() {","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(AssertionError.class, () -\u003e ParserUtil.parseIndexes(\"\", 0));","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":115,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"    public void parseIndexes_validInput_success() throws Exception {","lastModifiedDate":"2023-10-09"},{"lineNumber":118,"author":{"gitId":"jason-raiin"},"content":"        // Single index","lastModifiedDate":"2023-10-09"},{"lineNumber":119,"author":{"gitId":"jason-raiin"},"content":"        List\u003cIndex\u003e singleIndexList \u003d List.of(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":120,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(singleIndexList, ParserUtil.parseIndexes(\"1\", 1));","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":122,"author":{"gitId":"jason-raiin"},"content":"        // Multiple indexes","lastModifiedDate":"2023-10-09"},{"lineNumber":123,"author":{"gitId":"jason-raiin"},"content":"        List\u003cIndex\u003e multipleIndexList \u003d List.of(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON, INDEX_THIRD_PERSON);","lastModifiedDate":"2023-10-09"},{"lineNumber":124,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(multipleIndexList, ParserUtil.parseIndexes(\"1 2 3\", 3));","lastModifiedDate":"2023-11-05"},{"lineNumber":125,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":126,"author":{"gitId":"jason-raiin"},"content":"        // Different whitespaces","lastModifiedDate":"2023-10-09"},{"lineNumber":127,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(multipleIndexList, ParserUtil.parseIndexes(\" 1  2      3   \", 3));","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":129,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"jason-raiin"},"content":"        Tag expectedTag \u003d Tag.of(VALID_TAG_1);","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"jason-raiin"},"content":"        Tag expectedTag \u003d Tag.of(VALID_TAG_1);","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"jason-raiin"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(Tag.of(VALID_TAG_1), Tag.of(VALID_TAG_2)));","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":245,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":246,"author":{"gitId":"howenc"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":247,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2023-11-07"},{"lineNumber":248,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":249,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":250,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":251,"author":{"gitId":"howenc"},"content":"    public void parseTime_invalidValue0_throwsParseException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":252,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactTime(\"29.02.2023 1000\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":253,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingTime(\"29.02.2023 1000\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":254,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":255,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":256,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":257,"author":{"gitId":"howenc"},"content":"    public void parseTime_invalidValue1_throwsParseException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":258,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactTime(\"30.02.2023 1000\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":259,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingTime(\"30.02.2023 1000\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":260,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":261,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":262,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":263,"author":{"gitId":"howenc"},"content":"    public void parseTime_invalidValue2_throwsParseException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":264,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactTime(\"31.02.2023 1000\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":265,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingTime(\"31.02.2023 1000\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":266,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":267,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":268,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":269,"author":{"gitId":"howenc"},"content":"    public void parseTime_invalidValue3_throwsParseException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":270,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactTime(\"31.04.2023 1000\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":271,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingTime(\"31.04.2023 1000\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":272,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":273,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":274,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":275,"author":{"gitId":"howenc"},"content":"    public void parseTime_invalidValue4_throwsParseException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":276,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactTime(INVALID_TIME_1));","lastModifiedDate":"2023-11-07"},{"lineNumber":277,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingTime(INVALID_TIME_2));","lastModifiedDate":"2023-11-07"},{"lineNumber":278,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactTime(INVALID_TIME_3));","lastModifiedDate":"2023-11-07"},{"lineNumber":279,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingTime(INVALID_TIME_4));","lastModifiedDate":"2023-11-07"},{"lineNumber":280,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactTime(INVALID_TIME_5));","lastModifiedDate":"2023-11-07"},{"lineNumber":281,"author":{"gitId":"howenc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingTime(INVALID_TIME_6));","lastModifiedDate":"2023-11-07"},{"lineNumber":282,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":283,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":284,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":285,"author":{"gitId":"howenc"},"content":"    public void parseTime_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":286,"author":{"gitId":"howenc"},"content":"        LocalDateTime expectedTime \u003d LocalDateTime.of(2023, 10, 2, 10, 00);","lastModifiedDate":"2023-11-07"},{"lineNumber":287,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedTime, ParserUtil.parseContactTime(VALID_TIME));","lastModifiedDate":"2023-11-07"},{"lineNumber":288,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedTime, ParserUtil.parseMeetingTime(VALID_TIME));","lastModifiedDate":"2023-11-07"},{"lineNumber":289,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":290,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"howenc":55,"jason-raiin":71,"-":165}},{"path":"src/test/java/seedu/address/logic/parser/RemoveMeetingContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_TOO_MANY_INDEXES;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.logic.commands.RemoveMeetingContactCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":" * variations outside of the RemoveMeetingContactCommand code. For example,","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":" * inputs \"1\" and \"1 abc\" take the same path through the","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":" * RemoveMeetingContactCommand, and therefore we test only one of them. The path","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":" * variation for those two cases occur inside the ParserUtil, and therefore","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":" * should be covered by the ParserUtilTest.","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"public class RemoveMeetingContactCommandParserTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"    private RemoveMeetingContactCommandParser parser \u003d new RemoveMeetingContactCommandParser();","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"    public void parse_validArgs_returnsRemoveMeetingContactCommand() {","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"        assertParseSuccess(parser, \"1 1\", new RemoveMeetingContactCommand(INDEX_FIRST_MEETING, INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        // invalid args","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"a 1\",","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + RemoveMeetingContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"        // too many args","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"1 1 2\",","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_TOO_MANY_INDEXES + \"\\n\" + RemoveMeetingContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"        // too few args","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"2\", MESSAGE_MISSING_INDEX + \"\\n\" + RemoveMeetingContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"jason-raiin":45}},{"path":"src/test/java/seedu/address/logic/parser/ViewContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.ViewContactCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":" * outside of the ViewContactCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":" * same path through the ViewContactCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"public class ViewContactCommandParserTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"    private ViewContactCommandParser parser \u003d new ViewContactCommandParser();","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"    public void parse_validArgs_returnsViewContactCommand() {","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, \"1\", new ViewContactCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"        // incorrect index format","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + ViewContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"        // missing index","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"                MESSAGE_MISSING_INDEX + \"\\n\" + ViewContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jason-raiin":9,"LoMaply":30}},{"path":"src/test/java/seedu/address/logic/parser/ViewMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INDEX_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":" * variations outside of the ViewMeetingCommand code. For example, inputs \"1\"","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":" * and \"1 abc\" take the same path through the ViewMeetingCommand, and therefore","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":" * we test only one of them. The path variation for those two cases occur inside","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":" * the ParserUtil, and therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"public class ViewMeetingCommandParserTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"    private ViewMeetingCommandParser parser \u003d new ViewMeetingCommandParser();","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"    public void parse_validArgs_returnsViewMeetingCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"        assertParseSuccess(parser, \"1\", new ViewMeetingCommand(INDEX_FIRST_MEETING));","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"        // incorrect index format","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_INDEX_FORMAT + \"\\n\" + ViewMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        // missing index","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"        assertParseFailure(parser, \"\", MESSAGE_MISSING_INDEX + \"\\n\" + ViewMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jason-raiin":12,"LoMaply":25}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"    public void getPerson_isInList_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(ALICE, addressBook.getPerson(ALICE.getName().fullName));","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"    public void getPerson_notFound_throwsPersonNotFoundException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e addressBook.getPerson(ALICE.getName().fullName));","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList()","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"                + \", meetings\u003d\" + addressBook.getMeetingList() + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"            return null;","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"howenc":10,"jason-raiin":13,"-":103}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"    public void copy() {","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(modelManager, modelManager.copy());","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"jason-raiin"},"content":"    public void getPerson_isInList_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(ALICE, modelManager.getPerson(ALICE.getName().fullName));","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"jason-raiin"},"content":"    public void getPerson_notFound_throwsPersonNotFoundException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e modelManager.getPerson(ALICE.getName().fullName));","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jason-raiin":17,"-":132}},{"path":"src/test/java/seedu/address/model/meeting/AttendeeContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"public class AttendeeContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"        AttendeeContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"                new AttendeeContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        AttendeeContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"                new AttendeeContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        AttendeeContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"                new AttendeeContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    public void test_locationContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        // One keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        AttendeeContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"                new AttendeeContainsKeywordsPredicate(Collections.singletonList(\"CS2103T\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(\"CS2103T\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        predicate \u003d new AttendeeContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"meeting\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(\"CS2103T meeting\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        predicate \u003d new AttendeeContainsKeywordsPredicate(Arrays.asList(\"CS2013T\", \"meeting\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(\"ABCDE meeting\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        predicate \u003d new AttendeeContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"meeting\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(\"cs2103t MEETING\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    public void test_locationDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        AttendeeContainsKeywordsPredicate predicate \u003d new AttendeeContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withAttendees(\"Alice\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        predicate \u003d new AttendeeContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withAttendees(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        // Keywords match others","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        predicate \u003d new AttendeeContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withAttendees(\"Alice\")","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        AttendeeContainsKeywordsPredicate predicate \u003d new AttendeeContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"        String expected \u003d AttendeeContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":89}},{"path":"src/test/java/seedu/address/model/meeting/AttendeeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"public class AttendeeTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Attendee(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    public void constructor_invalidAttendeeName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"        String invalidAttendeeName \u003d \"\";","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Attendee(invalidAttendeeName));","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    public void isValidAttendeeName() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        // null name","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e Attendee.isValidAttendee(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        assertFalse(Attendee.isValidAttendee(\"\")); // empty string","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        assertFalse(Attendee.isValidAttendee(\" \")); // spaces only","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        assertFalse(Attendee.isValidAttendee(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        assertFalse(Attendee.isValidAttendee(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        // valid name","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(Attendee.isValidAttendee(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        assertTrue(Attendee.isValidAttendee(\"12345\")); // numbers only","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        assertTrue(Attendee.isValidAttendee(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertTrue(Attendee.isValidAttendee(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        assertTrue(Attendee.isValidAttendee(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        Attendee attendee \u003d new Attendee(\"Valid Name\");","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        assertTrue(attendee.equals(new Attendee(\"Valid Name\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        assertTrue(attendee.equals(attendee));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        assertFalse(attendee.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        assertFalse(attendee.equals(5.0f));","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        assertFalse(attendee.equals(new Attendee(\"Other Valid Name\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":59}},{"path":"src/test/java/seedu/address/model/meeting/GeneralMeetingPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"public class GeneralMeetingPredicateTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    private LocalDateTime start \u003d LocalDateTime.of(LocalDate.of(0001, 01, 01), LocalTime.of(00, 00));","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    private LocalDateTime startOn30 \u003d LocalDateTime.of(LocalDate.of(2023, 9, 30), LocalTime.of(10, 00));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    private LocalDateTime endOn30 \u003d LocalDateTime.of(LocalDate.of(2023, 9, 30), LocalTime.of(12, 00));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    private LocalDateTime end \u003d LocalDateTime.of(LocalDate.of(9999, 12, 31), LocalTime.of(23, 59));","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate firstPredicate \u003d preparePredicate(new String[]{\"\", \"\", \"\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate secondPredicate \u003d preparePredicate(new String[]{\"CS2103T\", \"\", \"\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate firstPredicateCopy \u003d preparePredicate(new String[]{\"\", \"\", \"\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public void test_containsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"                preparePredicate(new String[]{\"CS2103T\", \"\", \"\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTitle(\"CS2103T\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"\", \"Zoom\", \"\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withLocation(\"Zoom call url\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"\", \"\", \"Alice\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withAttendees(\"Alice\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"\", \"\", \"\", \"friend\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"\", \"\", \"\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"                .withStart(\"20.09.2023 1000\")","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"                .withEnd(\"20.09.2023 1200\")","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"CS2103T\", \"Zoom\", \"Alice\", \"friend\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"                .withTitle(\"CS2103T\")","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"                .withLocation(\"Zoom call url\")","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"                .withAttendees(\"Alice\")","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"                .withTags(\"friend\")","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"                .withStart(\"20.09.2023 1000\")","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"                .withEnd(\"20.09.2023 1200\")","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"\", \"\", \"\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"                .withTitle(\"CS2103T\")","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"                .withLocation(\"Zoom call url\")","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                .withAttendees(\"Alice\")","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"                .withTags(\"friend\")","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"                .withStart(\"20.09.2023 1000\")","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"                .withEnd(\"20.09.2023 1200\")","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"cs2103t\", \"zOOM\", \"aLICE\", \"FRIEND\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"                .withTitle(\"CS2103T\")","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"                .withLocation(\"Zoom call url\")","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"                .withAttendees(\"Alice\")","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"                .withTags(\"friend\")","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"                .withStart(\"20.09.2023 1000\")","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"                .withEnd(\"20.09.2023 1200\")","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"    public void test_containsKeywords_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"        GeneralMeetingPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"                preparePredicate(new String[]{\"ABCDE\", \"\", \"\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTitle(\"CS2103T\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"\", \"Doom\", \"\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withLocation(\"Zoom call url\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"\", \"\", \"A\", \"\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withAttendees(\"Alice\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"\", \"\", \"\", \"f\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"\", \"\", \"\", \"\"}, startOn30, endOn30);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"                .withStart(\"20.09.2023 1000\")","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"                .withEnd(\"20.09.2023 1200\")","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"D\", \"Zoom\", \"Alice\", \"friend\"}, start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"                .withTitle(\"CS2103T\")","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"                .withLocation(\"Zoom call url\")","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"                .withAttendees(\"Alice\")","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"                .withTags(\"friend\")","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"                .withStart(\"20.09.2023 1000\")","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"                .withEnd(\"20.09.2023 1200\")","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"        predicate \u003d preparePredicate(new String[]{\"\", \"\", \"\", \"\"}, startOn30, endOn30);","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"                .withTitle(\"CS2103T\")","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"                .withLocation(\"Zoom call url\")","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"                .withAttendees(\"Alice\")","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"                .withTags(\"friend\")","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"                .withStart(\"20.09.2023 1000\")","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"                .withEnd(\"20.09.2023 1200\")","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"    private GeneralMeetingPredicate preparePredicate(String[] userInput, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"        return new GeneralMeetingPredicate(new TitleContainsKeywordsPredicate(List.of(userInput[0].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"                new LocationContainsKeywordsPredicate(List.of(userInput[1].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"                new MeetingTimeContainsPredicate(start, end),","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"                new AttendeeContainsKeywordsPredicate(List.of(userInput[2].split(\"\\\\s+\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"qz1004"},"content":"                new MeetingTagContainsKeywordsPredicate(List.of(userInput[3].split(\"\\\\s+\"))));","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":146,"qz1004":1}},{"path":"src/test/java/seedu/address/model/meeting/LocationContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"public class LocationContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"        LocationContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"                new LocationContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        LocationContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"                new LocationContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        LocationContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"                new LocationContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    public void test_locationContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        // One keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        LocationContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"                new LocationContainsKeywordsPredicate(Collections.singletonList(\"CS2103T\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withLocation(\"CS2103T\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"meeting\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withLocation(\"CS2103T meeting\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"CS2013T\", \"meeting\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withLocation(\"ABCDE meeting\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"meeting\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withLocation(\"cs2103t MEETING\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    public void test_locationDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        LocationContainsKeywordsPredicate predicate \u003d new LocationContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withLocation(\"Alice\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withLocation(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        // Keywords match others","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withLocation(\"Alice\")","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        LocationContainsKeywordsPredicate predicate \u003d new LocationContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"        String expected \u003d LocationContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":89}},{"path":"src/test/java/seedu/address/model/meeting/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"public class LocationTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    public void isValidLocation() {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        // null phone number","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        // invalid phone numbers","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"phone\")); // non-numeric","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        // valid phone numbers","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"911\")); // exactly 3 numbers","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"93121534\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        assertTrue(Location.isValidLocation(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        Location location \u003d new Location(\"999\");","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        assertTrue(location.equals(new Location(\"999\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        assertTrue(location.equals(location));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        assertFalse(location.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        assertFalse(location.equals(5.0f));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertFalse(location.equals(new Location(\"995\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":60}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"public class MeetingTagContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"        MeetingTagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"                new MeetingTagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"        MeetingTagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"                new MeetingTagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"        MeetingTagContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"                new MeetingTagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    public void test_locationContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        // One keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"        MeetingTagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"                new MeetingTagContainsKeywordsPredicate(Collections.singletonList(\"CS2103T\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTags(\"CS2103T\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new MeetingTagContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"meeting\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTags(\"CS2103T\", \"meeting\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new MeetingTagContainsKeywordsPredicate(Arrays.asList(\"CS2013T\", \"meeting\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTags(\"ABCDE\", \"meeting\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new MeetingTagContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"meeting\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTags(\"cs2103t\", \"MEETING\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    public void test_locationDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"        MeetingTagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"                new MeetingTagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTags(\"Alice\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new MeetingTagContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTags(\"Alice\", \"Bob\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        // Keywords match others","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"        predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"qz1004"},"content":"                new MeetingTagContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTags(\"Alice\")","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"qz1004"},"content":"        MeetingTagContainsKeywordsPredicate predicate \u003d new MeetingTagContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"qz1004"},"content":"        String expected \u003d MeetingTagContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":72,"qz1004":19}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"public class MeetingTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e meeting.getAttendees().remove(0));","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    public void isSameMeeting() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        assertTrue(MEETING1.isSameMeeting(MEETING1));","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.isSameMeeting(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        // same title, all other attributes different -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withLocation(\"Not a zoom call url\")","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"                .withStart(\"23.09.2023 1000\").withEnd(\"23.09.2023 1000\").withAttendees().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.isSameMeeting(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        // different title, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"Different Meeting Title\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.isSameMeeting(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        // title differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.isSameMeeting(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        // tittle has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING \").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.isSameMeeting(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        Meeting meeting1Copy \u003d new MeetingBuilder(MEETING1).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        assertTrue(MEETING1.equals(meeting1Copy));","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        assertTrue(MEETING1.equals(MEETING1));","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.equals(5));","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withLocation(\"Room 2\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withStart(\"20.09.2023 1100\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        // different attendees -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withAttendees(\"Alice Pauline\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTags(\"other\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"        String expected \u003d Meeting.class.getCanonicalName() + \"{title\u003d\" + MEETING1.getTitle() + \", location\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"                + MEETING1.getLocation() + \", start\u003d\" + MEETING1.getStart() + \", end\u003d\" + MEETING1.getEnd()","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"                + \", attendees\u003d\" + MEETING1.getAttendees() + \", tags\u003d\" + MEETING1.getTags() + \", status\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"                + MEETING1.getStatus() + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"        assertEquals(expected, MEETING1.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":80,"jason-raiin":11}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTimeContainsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.format;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"public class MeetingTimeContainsPredicateTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    private LocalDateTime start \u003d LocalDateTime.of(LocalDate.of(0001, 01, 01), LocalTime.of(00, 00));","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    private LocalDateTime startOn30 \u003d LocalDateTime.of(LocalDate.of(2023, 9, 30), LocalTime.of(10, 00));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"    private LocalDateTime endOn30 \u003d LocalDateTime.of(LocalDate.of(2023, 9, 30), LocalTime.of(12, 00));","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    private LocalDateTime end \u003d LocalDateTime.of(LocalDate.of(9999, 12, 31), LocalTime.of(23, 59));","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        MeetingTimeContainsPredicate firstPredicate \u003d new MeetingTimeContainsPredicate(start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        MeetingTimeContainsPredicate secondPredicate \u003d new MeetingTimeContainsPredicate(startOn30, endOn30);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        MeetingTimeContainsPredicate firstPredicateCopy \u003d new MeetingTimeContainsPredicate(start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    public void test_meetingTimeWithinKeywords_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        MeetingTimeContainsPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"                new MeetingTimeContainsPredicate(start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"                .withStart(format(startOn30)).withEnd(format(endOn30)).build()));","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        predicate \u003d new MeetingTimeContainsPredicate(start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"                .withStart(format(start)).withEnd(format(end)).build()));","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    public void test_meetingTimeOutOfKeywords_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"        MeetingTimeContainsPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"            new MeetingTimeContainsPredicate(startOn30, endOn30);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"                .withStart(format(start)).withEnd(format(end)).build()));","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        MeetingTimeContainsPredicate predicate \u003d new MeetingTimeContainsPredicate(start, end);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"        String expected \u003d MeetingTimeContainsPredicate.class.getCanonicalName()","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"                + \"{start\u003d\" + start + \", end\u003d\" + end + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":69,"jason-raiin":4}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"public class MeetingTimeTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    public static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"dd.MM.yyyy HHmm\");","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingTime(null, null));","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingTime(LocalDateTime.parse(\"03.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"                null));","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingTime(null,","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"03.10.2023 1000\", FORMAT)));","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"    public void isValidMeetingTime_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"        // false","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        assertFalse(MeetingTime.isValidMeetingTime(LocalDateTime.parse(\"03.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"02.10.2023 1000\", FORMAT))); // start is after end","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"        // true","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        assertTrue(MeetingTime.isValidMeetingTime(LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"03.10.2023 1000\", FORMAT))); // start before end","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        assertTrue(MeetingTime.isValidMeetingTime(LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"02.10.2023 1000\", FORMAT))); // start equal end","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"        MeetingTime meetingTime \u003d new MeetingTime(LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"03.10.2023 1000\", FORMAT));","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        assertTrue(meetingTime.equals(new MeetingTime(LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"03.10.2023 1000\", FORMAT))));","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        assertTrue(meetingTime.equals(meetingTime));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        assertFalse(meetingTime.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        assertFalse(meetingTime.equals(5.0f));","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        assertFalse(meetingTime.equals(new MeetingTime(LocalDateTime.parse(\"02.10.2023 1000\", FORMAT),","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"                LocalDateTime.parse(\"04.10.2023 1000\", FORMAT))));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":55,"jason-raiin":5}},{"path":"src/test/java/seedu/address/model/meeting/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"public class StatusTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"        MeetingStatus status \u003d new MeetingStatus(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(Boolean.FALSE, status.isComplete);","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"        MeetingStatus status \u003d new MeetingStatus(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(status.equals(new MeetingStatus(false)));","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(status.equals(status));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(status.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(status.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jason-raiin"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(status.equals(new MeetingStatus(true)));","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jason-raiin":36}},{"path":"src/test/java/seedu/address/model/meeting/TitleContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"public class TitleContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"        TitleContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"                new TitleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        TitleContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"                new TitleContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        TitleContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"                new TitleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    public void test_titleContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        // One keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        TitleContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"CS2103T\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTitle(\"CS2103T\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"meeting\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTitle(\"CS2103T meeting\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"CS2013T\", \"meeting\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTitle(\"ABCDE meeting\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"meeting\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTitle(\"cs2103t MEETING\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    public void test_titleDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        TitleContainsKeywordsPredicate predicate \u003d new TitleContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTitle(\"Alice\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTitle(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        // Keywords match others","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTitle(\"Alice\").withLocation(\"12345\")","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"                .build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        TitleContainsKeywordsPredicate predicate \u003d new TitleContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"        String expected \u003d TitleContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":89}},{"path":"src/test/java/seedu/address/model/meeting/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"public class TitleTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    public void isValidTitle() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"        // null name","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"        assertFalse(Title.isValidTitle(\" \")); // spaces only","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        // valid name","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"12345\")); // numbers only","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"        assertTrue(Title.isValidTitle(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        Title title \u003d new Title(\"Valid Title\");","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"        assertTrue(title.equals(new Title(\"Valid Title\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        assertTrue(title.equals(title));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        assertFalse(title.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"        assertFalse(title.equals(5.0f));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertFalse(title.equals(new Title(\"Other Valid Name\")));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":60}},{"path":"src/test/java/seedu/address/model/meeting/UniqueMeetingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"public class UniqueMeetingListTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"    private final UniqueMeetingList uniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public void contains_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.contains((Meeting) null));","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        assertFalse(uniqueMeetingList.contains(MEETING1));","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public void contains_meetingInList_returnsTrue() {","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        assertTrue(uniqueMeetingList.contains(MEETING1));","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"    public void contains_meetingWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"        AddressBookBuilder test \u003d new AddressBookBuilder();","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        test.withPerson(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withAttendees(\"Alice Pauline\")","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"        assertTrue(uniqueMeetingList.contains(editedMeeting1));","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"howenc"},"content":"    public void add_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.add(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"    public void add_duplicateMeeting_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.add(MEETING1));","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"    public void setMeeting_nullTargetMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeeting(null, MEETING1));","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"    public void setMeeting_nullEditedMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING1, null));","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"    public void setMeeting_targetMeetingNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"        assertThrows(MeetingNotFoundException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING1, MEETING1));","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    public void setMeeting_editedMeetingIsSameMeeting_success() {","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.setMeeting(MEETING1, MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"        expectedUniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"    public void setMeeting_editedMeetingHasSameIdentity_success() {","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"        AddressBookBuilder test \u003d new AddressBookBuilder();","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"        test.withPerson(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withAttendees(\"Alice Pauline\")","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.setMeeting(MEETING1, editedMeeting1);","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"        expectedUniqueMeetingList.add(editedMeeting1);","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"    public void setMeeting_editedMeetingHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\")","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.setMeeting(MEETING1, editedMeeting1);","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"        expectedUniqueMeetingList.add(editedMeeting1);","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"    public void setMeeting_editedMeetingHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\")","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(editedMeeting1);","lastModifiedDate":"2023-10-02"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.setMeeting(MEETING1, editedMeeting1));","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"    public void remove_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.remove(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"    public void remove_meetingDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"howenc"},"content":"        assertThrows(MeetingNotFoundException.class, () -\u003e uniqueMeetingList.remove(MEETING1));","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"howenc"},"content":"    public void remove_existingMeeting_removesPerson() {","lastModifiedDate":"2023-10-02"},{"lineNumber":130,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.remove(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingsList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-02"},{"lineNumber":133,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingsList, uniqueMeetingList);","lastModifiedDate":"2023-10-02"},{"lineNumber":134,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"howenc"},"content":"    public void setMeetings_nullUniqueMeetingList_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeetings((UniqueMeetingList) null));","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":140,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":142,"author":{"gitId":"howenc"},"content":"    public void setMeetings_uniqueMeetingList_replacesOwnListWithProvidedUniqueMeetingList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingsList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-02"},{"lineNumber":145,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\")","lastModifiedDate":"2023-10-02"},{"lineNumber":146,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-02"},{"lineNumber":147,"author":{"gitId":"howenc"},"content":"        expectedUniqueMeetingsList.add(editedMeeting1);","lastModifiedDate":"2023-10-02"},{"lineNumber":148,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.setMeetings(expectedUniqueMeetingsList);","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingsList, uniqueMeetingList);","lastModifiedDate":"2023-10-02"},{"lineNumber":150,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":151,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":152,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"howenc"},"content":"    public void setMeetings_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":154,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setMeetings((List\u003cMeeting\u003e) null));","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"howenc"},"content":"    public void setMeetings_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.add(MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"howenc"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withTitle(\"CS2103T MEETING\")","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"howenc"},"content":"                .build();","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"howenc"},"content":"        List\u003cMeeting\u003e meetingList \u003d Collections.singletonList(editedMeeting1);","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"howenc"},"content":"        uniqueMeetingList.setMeetings(meetingList);","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"howenc"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2023-10-02"},{"lineNumber":165,"author":{"gitId":"howenc"},"content":"        expectedUniqueMeetingList.add(editedMeeting1);","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"howenc"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2023-10-02"},{"lineNumber":167,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":168,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"howenc"},"content":"    public void setMeetings_listWithDuplicateMeetings_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":171,"author":{"gitId":"howenc"},"content":"        List\u003cMeeting\u003e listWithDuplicateMeetings \u003d Arrays.asList(MEETING1, MEETING1);","lastModifiedDate":"2023-10-02"},{"lineNumber":172,"author":{"gitId":"howenc"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e uniqueMeetingList.setMeetings(listWithDuplicateMeetings));","lastModifiedDate":"2023-10-02"},{"lineNumber":173,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":175,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"howenc"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":177,"author":{"gitId":"howenc"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-02"},{"lineNumber":178,"author":{"gitId":"howenc"},"content":"                -\u003e uniqueMeetingList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-02"},{"lineNumber":179,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":180,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":181,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":182,"author":{"gitId":"howenc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-02"},{"lineNumber":183,"author":{"gitId":"howenc"},"content":"        assertEquals(uniqueMeetingList.asUnmodifiableObservableList().toString(), uniqueMeetingList.toString());","lastModifiedDate":"2023-10-02"},{"lineNumber":184,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":185,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"howenc":185}},{"path":"src/test/java/seedu/address/model/person/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"        // One keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"        EmailContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"gmail\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"bob@gmail.com\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"bob@gmail.com\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"        // Special characters","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"_\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice_bob@gmail.com\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"qz1004"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"qz1004"},"content":"        // Keywords match name and phone, but does not match email","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\", \"alice@hotmail.com\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"qz1004"},"content":"                .withEmail(\"alicce@email.com\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"qz1004"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"qz1004"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"qz1004"},"content":"        String expected \u003d EmailContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"qz1004"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"qz1004":90}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example-.com\")); // server name starts ends with hyphen","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.-com\")); // top-level domain starts with hyphen","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"        Email email \u003d new Email(\"valid@email.com\");","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(email.equals(new Email(\"valid@email.com\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"        // same letters different caps -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(email.equals(new Email(\"Valid@Email.Com\")));","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email.com\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jason-raiin":7,"-":83}},{"path":"src/test/java/seedu/address/model/person/LastContactTimeContainsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.parse;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"public class LastContactTimeContainsPredicateTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"    private LocalDateTime time1 \u003d parse(\"10.09.2023 1000\");","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"    private LocalDateTime time2 \u003d parse(\"11.09.2023 1000\");","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"        LastContactTimeContainsPredicate firstPredicate \u003d new LastContactTimeContainsPredicate(time1);","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"        LastContactTimeContainsPredicate secondPredicate \u003d new LastContactTimeContainsPredicate(time2);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"        LastContactTimeContainsPredicate firstPredicateCopy \u003d new LastContactTimeContainsPredicate(time1);","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    public void test_lastContactTimeMatches_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"        LastContactTimeContainsPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"                new LastContactTimeContainsPredicate(time1);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"                .withLastContactedTime(\"10.09.2023 1000\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"    public void test_lastContactTimeDoesNotMatch_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"        LastContactTimeContainsPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"                new LastContactTimeContainsPredicate(time2);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"                .withLastContactedTime(\"10.09.2023 1000\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"        LastContactTimeContainsPredicate predicate \u003d new LastContactTimeContainsPredicate(time1);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"        String expected \u003d LastContactTimeContainsPredicate.class.getCanonicalName()","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"                + \"{time\u003d\" + time1 + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jason-raiin":3,"qz1004":61}},{"path":"src/test/java/seedu/address/model/person/LastContactedTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"juzzztinsoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.verbose;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"juzzztinsoong"},"content":"public class LastContactedTimeTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"    private LocalDateTime lastContactedTime \u003d DateTimeUtil.parse(\"02.10.2023 1000\");","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    private LastContactedTime lastContactedTimeObject \u003d new LastContactedTime(lastContactedTime);","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"juzzztinsoong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"juzzztinsoong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LastContactedTime(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    public void isValidLastContactedTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"        // default value","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"        assertTrue(LastContactedTime.isValidLastContactedTime(LocalDateTime.MIN));","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"juzzztinsoong"},"content":"        // valid","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(LastContactedTime.isValidLastContactedTime(lastContactedTime));","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"juzzztinsoong"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(lastContactedTimeObject.equals(new LastContactedTime(lastContactedTime)));","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(lastContactedTimeObject.equals(lastContactedTimeObject));","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(lastContactedTimeObject.equals(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(lastContactedTimeObject.equals(5.0f));","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(lastContactedTimeObject.equals(new LastContactedTime(lastContactedTime.minusHours(1))));","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"    public void getDisplay() {","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        // non default value","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(lastContactedTimeObject.getDisplay(), verbose(lastContactedTime));","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"        // default value","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(new LastContactedTime(LocalDateTime.MIN).getDisplay(), \"NA\");","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jason-raiin":21,"juzzztinsoong":37,"qz1004":2}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"                .withEmail(\"alice@email.com\").withRemark(\"Main Street\").build()));","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":84,"juzzztinsoong":1}},{"path":"src/test/java/seedu/address/model/person/PersonTagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"public class PersonTagContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"        PersonTagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"                new PersonTagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"        PersonTagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"                new PersonTagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"        PersonTagContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"                new PersonTagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"    public void test_personTagContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"        // One keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"        PersonTagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"                new PersonTagContainsKeywordsPredicate(Collections.singletonList(\"VIP\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"VIP\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new PersonTagContainsKeywordsPredicate(Arrays.asList(\"VIP\", \"Family\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"VIP\", \"Family\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new PersonTagContainsKeywordsPredicate(Arrays.asList(\"VIP\", \"Family\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Friend\", \"VIP\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new PersonTagContainsKeywordsPredicate(Arrays.asList(\"vip\", \"Family\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"VIP\", \"family\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"    public void test_personTagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"        PersonTagContainsKeywordsPredicate predicate \u003d new PersonTagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"VIP\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new PersonTagContainsKeywordsPredicate(Arrays.asList(\"Friend\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"VIP\", \"Family\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"qz1004"},"content":"        // Keywords match others","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new PersonTagContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"qz1004"},"content":"                Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\", \"Renewal\", \"Friend\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"qz1004"},"content":"                .withEmail(\"alice@email.com\").withStatus(\"Renewal\").withTags(\"Family\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"qz1004"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"qz1004"},"content":"        PersonTagContainsKeywordsPredicate predicate \u003d new PersonTagContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"qz1004"},"content":"        String expected \u003d PersonTagContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"qz1004"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"qz1004":89}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"juzzztinsoong"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"    public void isDuplicate() {","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(ALICE.isDuplicate(ALICE));","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"        assertFalse(ALICE.isDuplicate(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"        // same name -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"jason-raiin"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(ALICE.isDuplicate(editedAlice));","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"        // same email -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(ALICE.isDuplicate(editedAlice));","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"        // same phone -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        assertTrue(ALICE.isDuplicate(editedAlice));","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"        assertFalse((ALICE.isDuplicate(BOB)));","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"juzzztinsoong"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", last contacted time\u003d\" + ALICE.getLastContactedTime() + \", status\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"juzzztinsoong"},"content":"                + ALICE.getStatus() + \", remark\u003d\" + ALICE.getRemark() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jason-raiin":27,"-":92,"juzzztinsoong":3}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"public class PhoneContainsPredicateTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e firstPredicateValueList \u003d Collections.singletonList(\"0\");","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e secondPredicateValueList \u003d Arrays.asList(\"1\", \"9\");","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"        PhoneContainsPredicate firstPredicate \u003d new PhoneContainsPredicate(firstPredicateValueList);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"        PhoneContainsPredicate secondPredicate \u003d new PhoneContainsPredicate(secondPredicateValueList);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"        PhoneContainsPredicate firstPredicateCopy \u003d new PhoneContainsPredicate(firstPredicateValueList);","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"    public void test_phoneContainsValues_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"        // One keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"        PhoneContainsPredicate predicate \u003d new PhoneContainsPredicate(Collections.singletonList(\"01\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"90199029\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new PhoneContainsPredicate(Arrays.asList(\"01\", \"02\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"90199029\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new PhoneContainsPredicate(Arrays.asList(\"29\", \"55\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"90199029\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"    public void test_phoneDoesNotContainValues_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"        PhoneContainsPredicate predicate \u003d new PhoneContainsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"90199029\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new PhoneContainsPredicate(Arrays.asList(\"9o19\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"90199029\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"        // Keywords match name and email, but does not match phone","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new PhoneContainsPredicate(Arrays.asList(\"Alice\", \"123456\", \"alice@email.com\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e values \u003d List.of(\"123\", \"456\");","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"qz1004"},"content":"        PhoneContainsPredicate predicate \u003d new PhoneContainsPredicate(values);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"        String expected \u003d PhoneContainsPredicate.class.getCanonicalName() + \"{values\u003d\" + values + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"qz1004"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"qz1004":80}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"public class RemarkTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"        Remark remark \u003d new Remark(\"remark_test\");","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"        // same values -\u003e return true","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"        assertTrue(remark.equals(new Remark(\"remark_test\")));","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"        // different types -\u003e return false","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"        assertFalse(remark.equals(0.4));","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"        assertFalse(remark.equals(new Remark(\"other_remark_that_is_different\")));","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"LoMaply":35}},{"path":"src/test/java/seedu/address/model/person/StatusContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"public class StatusContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"        StatusContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"                new StatusContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"        StatusContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"                new StatusContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"        StatusContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"qz1004"},"content":"                new StatusContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"    public void test_statusContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"        // One keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"        StatusContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"                new StatusContainsKeywordsPredicate(Collections.singletonList(\"Active\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withStatus(\"Active\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new StatusContainsKeywordsPredicate(Arrays.asList(\"Active\", \"Prospective\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withStatus(\"Active\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new StatusContainsKeywordsPredicate(Arrays.asList(\"inAcTive\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"        assertTrue(predicate.test(new PersonBuilder().withStatus(\"Inactive\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"qz1004"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"qz1004"},"content":"        StatusContainsKeywordsPredicate predicate \u003d new StatusContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withStatus(\"\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"qz1004"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new StatusContainsKeywordsPredicate(Arrays.asList(\"Actve\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withStatus(\"Active\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"qz1004"},"content":"        // Keywords match name, phone and email, but does not match status","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"qz1004"},"content":"        predicate \u003d new StatusContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\", \"Claimant\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"qz1004"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"qz1004"},"content":"                .withEmail(\"alice@email.com\").withStatus(\"Renewal\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"qz1004"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"qz1004"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"qz1004"},"content":"        StatusContainsKeywordsPredicate predicate \u003d new StatusContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"qz1004"},"content":"        String expected \u003d StatusContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"qz1004"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"qz1004":84}},{"path":"src/test/java/seedu/address/model/person/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qz1004"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"qz1004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"qz1004"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"qz1004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"qz1004"},"content":"public class StatusTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"        String invalidStatus \u003d \"Prospecting\";","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"qz1004"},"content":"    public void isValidStatus() {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"qz1004"},"content":"        // null status","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"        assertDoesNotThrow(() -\u003e Status.isValidStatus(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"qz1004"},"content":"        // blank status","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"qz1004"},"content":"        assertTrue(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"qz1004"},"content":"        assertFalse(Status.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"        // invalid parts","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"qz1004"},"content":"        assertFalse(Status.isValidStatus(\"Insured\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"qz1004"},"content":"        // valid status","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"        assertTrue(Status.isValidStatus(\"active\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"qz1004"},"content":"        assertTrue(Status.isValidStatus(\"\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"        assertTrue(Status.isValidStatus(\"Prospective\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"        assertTrue(Status.isValidStatus(\"Active\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"qz1004"},"content":"        assertTrue(Status.isValidStatus(\"Inactive\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"qz1004"},"content":"        assertTrue(Status.isValidStatus(\"Renewal\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"qz1004"},"content":"        assertTrue(Status.isValidStatus(\"Claimant\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"qz1004"},"content":"        assertTrue(Status.isValidStatus(\"NIL\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"qz1004"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"qz1004"},"content":"        Status status \u003d new Status(\"Active\");","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"qz1004"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"        assertTrue(status.equals(new Status(\"Active\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"qz1004"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"qz1004"},"content":"        assertTrue(status.equals(status));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"qz1004"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"qz1004"},"content":"        assertFalse(status.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"qz1004"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"qz1004"},"content":"        assertFalse(status.equals(5.0f));","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"qz1004"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"qz1004"},"content":"        assertFalse(status.equals(new Status(\"Inactive\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"qz1004"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"howenc":1,"qz1004":60}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains((Person) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    public void contains_nullString_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains((String) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"    public void add_duplicateName_throwsDuplicatePersonException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"        Person personWithSameName \u003d new PersonBuilder(BOB).withName(ALICE.getName().fullName).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(personWithSameName));","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"    public void add_duplicateEmail_throwsDuplicatePersonException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"        Person personWithSameEmail \u003d new PersonBuilder(BOB).withEmail(ALICE.getEmail().value).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(personWithSameEmail));","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"    public void add_duplicatePhone_throwsDuplicatePersonException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"        Person personWithSamePhone \u003d new PersonBuilder(BOB).withPhone(ALICE.getPhone().value).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(personWithSamePhone));","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"    public void getPerson_isInList_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(ALICE, uniquePersonList.getPerson(ALICE.getName().fullName));","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"    public void getPerson_notFound_throwsPersonNotFoundException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.getPerson(ALICE.getName().fullName));","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"howenc"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-09-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"howenc":8,"jason-raiin":32,"-":171}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":"    public void factory_sameValue_sameInstance() {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"        // same string returns same object","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"        boolean equal \u003d Tag.of(\"tag\") \u003d\u003d Tag.of(\"tag\");","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(true, equal);","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"    public void factory_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.of(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"    public void factory_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Tag.of(invalidTagName));","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"jason-raiin":11,"-":22}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedMeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.storage.JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"public class JsonAdaptedMeetingTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_TITLE \u003d \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_START \u003d \"99.99.9999 9999\";","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_END \u003d \"88.88.8888 8888\";","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"    private static final String INVALID_ATTENDEE \u003d \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"    private static final String INVALID_STATUS \u003d \"untrue\";","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    private static final String VALID_TITLE \u003d MEETING1.getTitle().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    private static final String VALID_LOCATION \u003d MEETING1.getLocation().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    private static final String VALID_START \u003d MEETING1.getStart().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    private static final String VALID_END \u003d MEETING1.getEnd().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"    private static final String VALID_STATUS \u003d MEETING1.getStatus().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"    private static final Meeting EDITED_MEETING_1 \u003d new MeetingBuilder(MEETING1).withAttendees(\"Alice Pauline\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    private static final List\u003cJsonAdaptedAttendee\u003e VALID_ATTENDEE \u003d EDITED_MEETING_1.getAttendees().stream()","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"jason-raiin"},"content":"            .map(JsonAdaptedAttendee::new).collect(Collectors.toList());","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d MEETING1.getTags().stream().map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"    public void toModelType_validMeetingDetails_returnsMeeting() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(MEETING1);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"        assertEquals(MEETING1, meeting.toModelType());","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(INVALID_TITLE, VALID_LOCATION, VALID_START, VALID_END,","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"                VALID_ATTENDEE, VALID_TAGS, \"false\");","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d Title.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"howenc"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(null, VALID_LOCATION, VALID_START, VALID_END,","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"                VALID_ATTENDEE, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, INVALID_LOCATION, VALID_START, VALID_END,","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"                VALID_ATTENDEE, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, null, VALID_START, VALID_END, VALID_ATTENDEE,","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"                VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"howenc"},"content":"    public void toModelType_invalidStart_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, INVALID_START, VALID_END,","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"                VALID_ATTENDEE, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d MeetingTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"    public void toModelType_nullStart_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, null, VALID_END,","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"                VALID_ATTENDEE, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LocalDateTime.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"    public void toModelType_invalidEnd_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, VALID_START, INVALID_END,","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"                VALID_ATTENDEE, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d MeetingTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"    public void toModelType_nullEnd_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, null, VALID_END,","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"jason-raiin"},"content":"                VALID_ATTENDEE, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LocalDateTime.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"howenc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"howenc"},"content":"    public void toModelType_invalidAttendees_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"howenc"},"content":"        List\u003cJsonAdaptedAttendee\u003e invalidAttendees \u003d new ArrayList\u003c\u003e(VALID_ATTENDEE);","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"howenc"},"content":"        invalidAttendees.add(new JsonAdaptedAttendee(INVALID_ATTENDEE));","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, VALID_START, VALID_END,","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"jason-raiin"},"content":"                invalidAttendees, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"        assertThrows(IllegalValueException.class, meeting::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"jason-raiin"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"jason-raiin"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"jason-raiin"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"qz1004"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, VALID_START, VALID_END,","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"jason-raiin"},"content":"                VALID_ATTENDEE, invalidTags, VALID_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"jason-raiin"},"content":"        assertThrows(IllegalValueException.class, meeting::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"jason-raiin"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"jason-raiin"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"jason-raiin"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_TITLE, VALID_LOCATION, VALID_START, VALID_END,","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"jason-raiin"},"content":"                VALID_ATTENDEE, VALID_TAGS, INVALID_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"qz1004"},"content":"        assertThrows(IllegalValueException.class, meeting::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":96,"jason-raiin":40,"qz1004":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.LastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"    private static final String INVALID_LASTTIME \u003d \"02.10.2023 1000\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"qz1004"},"content":"    private static final String INVALID_STATUS \u003d \"Pr0spective\";","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"    private static final String VALID_LASTTIME \u003d BENSON.getLastContactedTime().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"qz1004"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"juzzztinsoong"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LASTTIME, VALID_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jason-raiin"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_LASTTIME, VALID_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"juzzztinsoong"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_LASTTIME, VALID_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"juzzztinsoong"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_LASTTIME, VALID_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jason-raiin"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"juzzztinsoong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_LASTTIME, VALID_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"juzzztinsoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_LASTTIME, VALID_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"juzzztinsoong"},"content":"    public void toModelType_invalidLastContactedTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"juzzztinsoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_LASTTIME,","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"juzzztinsoong"},"content":"                VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"juzzztinsoong"},"content":"        String expectedMessage \u003d LastContactedTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"juzzztinsoong"},"content":"    public void toModelType_nullLastContactedTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"juzzztinsoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null , VALID_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"juzzztinsoong"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"juzzztinsoong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LocalDateTime.class.getSimpleName());","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"qz1004"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"qz1004"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"qz1004"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"juzzztinsoong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LASTTIME, INVALID_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"juzzztinsoong"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"qz1004"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"juzzztinsoong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LASTTIME, VALID_STATUS, VALID_REMARK,","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"juzzztinsoong"},"content":"                        invalidTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"howenc":1,"jason-raiin":4,"-":93,"juzzztinsoong":24,"qz1004":8}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"jason-raiin"},"content":"        AddressBook original \u003d getTypicalPersonsAddressBook();","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        original.removePerson(HOON);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"howenc":3,"jason-raiin":2,"-":108}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"        AddressBook typicalPersonsAddressBook \u003d getTypicalPersonsAddressBook();","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jason-raiin":2,"-":45}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"outbook.json\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"juzzztinsoong":1}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"// import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"// import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"// import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"jason-raiin"},"content":"    // @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jason-raiin"},"content":"    // public void addressBookReadSave() throws Exception {","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jason-raiin"},"content":"    //     /*","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"    //      * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"    //      * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"    //      * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"    //      */","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"    //     AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"    //     storageManager.saveAddressBook(original);","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"    //     ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"    //     assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jason-raiin"},"content":"    // }","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jason-raiin":15,"-":53}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"     * Adds a new {@code Meeting} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"    public AddressBookBuilder withMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        addressBook.addMeeting(meeting);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"howenc":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/EditMeetingDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.parse;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":" * A utility class to help with building EditMeetingDescriptor objects.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"public class EditMeetingDescriptorBuilder {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"    private EditMeetingDescriptor descriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingDescriptorBuilder() {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingDescriptorBuilder(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"        this.descriptor \u003d new EditMeetingDescriptor(descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"     * Returns an {@code EditMeetingDescriptor} with fields containing {@code meeting}\u0027s details","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingDescriptorBuilder(Meeting meeting) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"        descriptor.setTitle(meeting.getTitle());","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"        descriptor.setLocation(meeting.getLocation());","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"        descriptor.setStart(meeting.getStart());","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"        descriptor.setEnd(meeting.getEnd());","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"        descriptor.setTags(meeting.getTags());","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"     * Sets the {@code Title} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"        descriptor.setTitle(new Title(title));","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"     * Sets the {@code Location} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"        descriptor.setLocation(new Location(location));","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"     * Parses the {@code Start} into a {@code LocalDateTime} and set it to the","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"     * {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingDescriptorBuilder withStart(String start) {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"        descriptor.setStart(parse(start));","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"     * Parses the {@code End} into a {@code LocalDateTime} and set it to the","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"     * {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingDescriptorBuilder withEnd(String end) {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"jason-raiin"},"content":"        descriptor.setEnd(parse(end));","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"LoMaply"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"LoMaply"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"LoMaply"},"content":"     * that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"LoMaply"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::of).collect(Collectors.toSet());","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"LoMaply"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"LoMaply"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"LoMaply"},"content":"    public EditMeetingDescriptor build() {","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"LoMaply"},"content":"        return descriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jason-raiin":3,"LoMaply":86}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.parse;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"        descriptor.setLastContactedTime(person.getLastContactedTime());","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"juzzztinsoong"},"content":"     * Sets the {@code LastContactedTime} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"juzzztinsoong"},"content":"     * building.","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"juzzztinsoong"},"content":"    public EditPersonDescriptorBuilder withLastContactedTime(String lastContactedTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"        descriptor.setLastContactedTime(parse(lastContactedTime));","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"juzzztinsoong"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"qz1004"},"content":"     * Sets the {@code Status} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"qz1004"},"content":"    public EditPersonDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"qz1004"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"qz1004"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"juzzztinsoong"},"content":"    public EditPersonDescriptorBuilder withRemark(String address) {","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"juzzztinsoong"},"content":"        descriptor.setRemark(new Remark(address));","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"jason-raiin"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::of).collect(Collectors.toSet());","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jason-raiin":3,"-":82,"juzzztinsoong":14,"qz1004":9}},{"path":"src/test/java/seedu/address/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"howenc"},"content":"import static seedu.address.model.meeting.MeetingTimeTest.FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Attendee;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Location;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.MeetingStatus;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"public class MeetingBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    public static final String DEFAULT_TITLE \u003d \"Test Meeting 1\";","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"    public static final String DEFAULT_LOCATION \u003d \"Room 1\";","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"    public static final LocalDateTime DEFAULT_START \u003d LocalDateTime.parse(\"02.10.2023 1000\", FORMAT);","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    public static final LocalDateTime DEFAULT_END \u003d LocalDateTime.parse(\"03.10.2023 1000\", FORMAT);","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":"    public static final Boolean DEFAULT_STATUS \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"    private Title title;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    private Location location;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    private Set\u003cAttendee\u003e attendees;","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"    private MeetingStatus status;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"jason-raiin"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jason-raiin"},"content":"        start \u003d DEFAULT_START;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jason-raiin"},"content":"        end \u003d DEFAULT_END;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        attendees \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jason-raiin"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jason-raiin"},"content":"        status \u003d new MeetingStatus(DEFAULT_STATUS);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"jason-raiin"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        title \u003d meetingToCopy.getTitle();","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jason-raiin"},"content":"        location \u003d meetingToCopy.getLocation();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"        start \u003d meetingToCopy.getStart();","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"        end \u003d meetingToCopy.getEnd();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jason-raiin"},"content":"        attendees \u003d new LinkedHashSet\u003c\u003e(meetingToCopy.getAttendees());","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jason-raiin"},"content":"        tags \u003d new HashSet\u003c\u003e(meetingToCopy.getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jason-raiin"},"content":"        status \u003d meetingToCopy.getStatus();","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"howenc"},"content":"     * Sets the {@code Title} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder withTitle(String name) {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        this.title \u003d new Title(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"howenc"},"content":"     * Parses the {@code attendees} into a {@code Set\u003cAttendee\u003e} and set it to the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder withAttendees(String ... attendees) {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"howenc"},"content":"        this.attendees \u003d SampleDataUtil.getAttendeeSet(attendees);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"jason-raiin"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"jason-raiin"},"content":"    public MeetingBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"jason-raiin"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"howenc"},"content":"     * Sets the {@code start} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder withStart(String start) {","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"howenc"},"content":"        this.start \u003d LocalDateTime.parse(start, FORMAT);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"jason-raiin"},"content":"     * Sets the {@code end} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder withEnd(String end) {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"howenc"},"content":"        this.end \u003d LocalDateTime.parse(end, FORMAT);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"jason-raiin"},"content":"     * Sets the {@code Location} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"howenc"},"content":"    public MeetingBuilder withLocation(String location) {","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"howenc"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"howenc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"jason-raiin"},"content":"     * Sets the {@code Status} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"jason-raiin"},"content":"    public MeetingBuilder withStatus(Boolean status) {","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"jason-raiin"},"content":"        this.status \u003d new MeetingStatus(status);","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"jason-raiin"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"howenc"},"content":"    public Meeting build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"jason-raiin"},"content":"        return new Meeting(title, location, start, end, attendees, tags, status);","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":79,"jason-raiin":41,"LoMaply":2}},{"path":"src/test/java/seedu/address/testutil/MeetingUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.format;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"howenc"},"content":" * A utility class for Meeting.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"howenc"},"content":"public class MeetingUtil {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"howenc"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"    public static String getAddMeetingCommand(Meeting meeting) {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        return AddMeetingCommand.COMMAND_WORD + \" \" + getMeetingDetails(meeting);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"howenc"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"howenc"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"howenc"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    public static String getMeetingDetails(Meeting meeting) {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"howenc"},"content":"        sb.append(PREFIX_TITLE + meeting.getTitle().meetingTitle + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"howenc"},"content":"        sb.append(PREFIX_LOCATION + meeting.getLocation().location + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jason-raiin"},"content":"        sb.append(PREFIX_START + format(meeting.getStart()) + \" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"        sb.append(PREFIX_END + format(meeting.getEnd()) + \" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"        meeting.getAttendees().stream().forEach(","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"howenc"},"content":"                s -\u003e sb.append(PREFIX_NAME + s.getAttendeeName() + \" \")","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"howenc"},"content":"        );","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"howenc"},"content":"        meeting.getTags().stream().forEach(","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"howenc"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        );","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"howenc"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"     * Returns the part of command string for the given {@code EditMeetingDescriptor}\u0027s details.","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"    public static String getEditMeetingDescriptorDetails(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"        descriptor.getTitle().ifPresent(title -\u003e sb.append(PREFIX_TITLE).append(title.meetingTitle).append(\" \"));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"        descriptor.getLocation().ifPresent(location -\u003e sb.append(PREFIX_LOCATION).append(location.location)","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"                .append(\" \"));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jason-raiin"},"content":"        descriptor.getStart().ifPresent(start -\u003e sb.append(PREFIX_START).append(format(start)).append(\" \"));","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"jason-raiin"},"content":"        descriptor.getEnd().ifPresent(end -\u003e sb.append(PREFIX_END).append(format(end)).append(\" \"));","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"LoMaply"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"LoMaply"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"howenc":40,"jason-raiin":5,"LoMaply":23}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.parse;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"juzzztinsoong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"qz1004"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String DEFAULT_LASTTIME \u003d \"02.10.2023 1000\";","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"qz1004"},"content":"    public static final String DEFAULT_STATUS \u003d \"\";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"    private LocalDateTime lastContactedTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"qz1004"},"content":"    private Status status;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"jason-raiin"},"content":"        lastContactedTime \u003d parse(DEFAULT_LASTTIME);","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"qz1004"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"juzzztinsoong"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"        lastContactedTime \u003d personToCopy.getLastContactedTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"qz1004"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"juzzztinsoong"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"qz1004"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"juzzztinsoong"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"juzzztinsoong"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"juzzztinsoong"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"juzzztinsoong"},"content":"     * Sets the {@code LastContactedTime} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"juzzztinsoong"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"juzzztinsoong"},"content":"    public PersonBuilder withLastContactedTime(String lastContactedTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"jason-raiin"},"content":"        this.lastContactedTime \u003d parse(lastContactedTime);","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"juzzztinsoong"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"qz1004"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"qz1004"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"qz1004"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"qz1004"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"qz1004"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"qz1004"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"qz1004"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"qz1004"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":121,"author":{"gitId":"juzzztinsoong"},"content":"        return new Person(name, phone, email, lastContactedTime, status, remark, tags);","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jason-raiin":3,"-":87,"juzzztinsoong":20,"qz1004":14}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import static seedu.address.commons.util.DateTimeUtil.format;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTTIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"jason-raiin"},"content":"        sb.append(PREFIX_LASTTIME + format(person.getLastContactedTime()) + \" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"jason-raiin"},"content":"        descriptor.getLastContactedTime().ifPresent(time -\u003e sb.append(PREFIX_LASTTIME).append(format(time))","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"                .append(\" \"));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jason-raiin":3,"-":59,"juzzztinsoong":5}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jason-raiin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jason-raiin"},"content":" * A utility class containing a list of {@code AddressBook} objects to be used in","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jason-raiin"},"content":" * tests.","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"jason-raiin"},"content":"    private TypicalAddressBook() {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"     * Returns an {@code AddressBook} with all the typical persons and meetings.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"jason-raiin"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"jason-raiin"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"jason-raiin"},"content":"        for (Person person : TypicalPersons.getTypicalPersons()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"jason-raiin"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"howenc"},"content":"        for (Meeting meeting : TypicalMeetings.getTypicalMeetings()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"howenc"},"content":"            ab.addMeeting(meeting);","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"howenc"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"        return ab;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"jason-raiin"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"howenc":4,"jason-raiin":27}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"jason-raiin"},"content":" * A utility class containing a list of {@code Index} objects to be used in","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"jason-raiin"},"content":" * tests.","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"jason-raiin"},"content":"    public static final Index INDEX_FIRST_MEETING \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"jason-raiin"},"content":"    public static final Index INDEX_SECOND_MEETING \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"jason-raiin"},"content":"    public static final Index INDEX_THIRD_MEETING \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"jason-raiin"},"content":"    public static final Index INDEX_OUT_OF_BOUNDS \u003d Index.fromOneBased(1000);","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jason-raiin":6,"-":11}},{"path":"src/test/java/seedu/address/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howenc"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"howenc"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"howenc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"jason-raiin"},"content":" * A utility class containing a list of {@code Meetings} objects to be used in","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"jason-raiin"},"content":" * tests.","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"howenc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"howenc"},"content":"public class TypicalMeetings {","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"howenc"},"content":"    public static final Meeting MEETING1 \u003d new MeetingBuilder().withTitle(\"CS2103T meeting\")","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"howenc"},"content":"            .withLocation(\"Zoom call url\")","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"howenc"},"content":"            .withStart(\"20.09.2023 1000\").withEnd(\"20.09.2023 1200\")","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"howenc"},"content":"            .withTags(\"work\", \"important\")","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"howenc"},"content":"            .withAttendees()","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"jason-raiin"},"content":"            .build();","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"qz1004"},"content":"    public static final Meeting MEETING2 \u003d new MeetingBuilder().withTitle(\"CS2101 meeting\")","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"qz1004"},"content":"            .withLocation(\"Zoom call url\")","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"            .withStart(\"20.11.2023 1000\").withEnd(\"20.11.2023 1200\")","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jason-raiin"},"content":"            .withAttendees(TypicalPersons.getTypicalAttendeesSubset1())","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"juzzztinsoong"},"content":"            .build();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"juzzztinsoong"},"content":"    public static final Meeting MEETING3 \u003d new MeetingBuilder().withTitle(\"CS2101 meeting\")","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"juzzztinsoong"},"content":"            .withLocation(\"com 3\")","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"jason-raiin"},"content":"            .withStart(\"20.11.2023 1000\").withEnd(\"20.11.2023 1200\")","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jason-raiin"},"content":"            .withAttendees(TypicalPersons.getTypicalAttendeesSubset2())","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"juzzztinsoong"},"content":"            .build();","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"howenc"},"content":"    public static final Meeting MEETING4 \u003d new MeetingBuilder().withTitle(\"ABCDE meeting\")","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"howenc"},"content":"            .withLocation(\"com 3\")","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jason-raiin"},"content":"            .withStart(\"30.11.2023 1000\").withEnd(\"30.11.2023 1200\")","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jason-raiin"},"content":"            .withAttendees(TypicalPersons.getTypicalAttendeesAll())","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"howenc"},"content":"            .withTags(\"work\", \"important\")","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"howenc"},"content":"            .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"howenc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jason-raiin"},"content":"    private TypicalMeetings() {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jason-raiin"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"juzzztinsoong"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"howenc"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING1, MEETING2, MEETING3, MEETING4));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"howenc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"howenc":19,"jason-raiin":11,"juzzztinsoong":14,"qz1004":2}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTTIME_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTTIME_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"juzzztinsoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"qz1004"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"jason-raiin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"jason-raiin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"jason-raiin"},"content":" * A utility class containing a list of {@code Person} objects to be used in","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"jason-raiin"},"content":" * tests.","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"jason-raiin"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"juzzztinsoong"},"content":"            .withLastContactedTime(\"20.10.2023 1100\").withPhone(\"94351253\").withRemark(\"\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jason-raiin"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"juzzztinsoong"},"content":"            .withLastContactedTime(\"20.10.2023 1200\").withPhone(\"98765432\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"heinz@example.com\").withLastContactedTime(\"20.10.2023 1300\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"cornelia@example.com\").withLastContactedTime(\"20.10.2023 1400\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"werner@example.com\").withLastContactedTime(\"20.10.2023 1500\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"lydia@example.com\").withLastContactedTime(\"20.10.2023 1600\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"anna@example.com\").withLastContactedTime(\"20.10.2023 1700\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"stefan@example.com\").withLastContactedTime(\"20.10.2023 1800\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(\"hans@example.com\").withLastContactedTime(\"20.10.2023 1900\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(VALID_EMAIL_AMY).withLastContactedTime(VALID_LASTTIME_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"juzzztinsoong"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"juzzztinsoong"},"content":"            .withEmail(VALID_EMAIL_BOB).withLastContactedTime(VALID_LASTTIME_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"juzzztinsoong"},"content":"            .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"jason-raiin"},"content":"    private TypicalPersons() {","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"jason-raiin"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"jason-raiin"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"howenc"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, HOON, BOB));","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"jason-raiin"},"content":"     * Returns an {@code AddressBook} with all the typical persons only.","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"jason-raiin"},"content":"    public static AddressBook getTypicalPersonsAddressBook() {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"jason-raiin"},"content":"        for (Person person : TypicalPersons.getTypicalPersons()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"jason-raiin"},"content":"    public static String[] getTypicalAttendeesAll() {","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"howenc"},"content":"        List\u003cPerson\u003e typicalPersons \u003d TypicalPersons.getTypicalPersons();","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"jason-raiin"},"content":"        String[] typicalAttendees \u003d typicalPersons.stream().map(Person::getName).map(Name::toString)","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"jason-raiin"},"content":"                .collect(Collectors.toList()).toArray(String[]::new);","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"jason-raiin"},"content":"        return typicalAttendees;","lastModifiedDate":"2023-10-09"},{"lineNumber":88,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":89,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"jason-raiin"},"content":"    public static String[] getTypicalAttendeesSubset1() {","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"jason-raiin"},"content":"        return Arrays.copyOfRange(getTypicalAttendeesAll(), 3, 7);","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"jason-raiin"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"jason-raiin"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jason-raiin"},"content":"    public static String[] getTypicalAttendeesSubset2() {","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"jason-raiin"},"content":"        return Arrays.copyOfRange(getTypicalAttendeesAll(), 1, 4);","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"howenc":2,"jason-raiin":27,"-":50,"juzzztinsoong":17,"qz1004":1}}]
